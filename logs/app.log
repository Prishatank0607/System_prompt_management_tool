2025-08-30 00:19:27,761 - alembic.runtime.migration - INFO - Context impl SQLiteImpl.
2025-08-30 00:19:27,761 - alembic.runtime.migration - INFO - Will assume non-transactional DDL.
2025-08-30 00:19:27,766 - alembic.autogenerate.compare - INFO - Detected removed index 'ix_users_email' on 'users'
2025-08-30 00:19:27,767 - alembic.autogenerate.compare - INFO - Detected removed index 'ix_users_id' on 'users'
2025-08-30 00:19:27,767 - alembic.autogenerate.compare - INFO - Detected removed table 'users'
2025-08-30 00:19:27,768 - alembic.autogenerate.compare - INFO - Detected removed index 'ix_prompt_history_id' on 'prompt_history'
2025-08-30 00:19:27,768 - alembic.autogenerate.compare - INFO - Detected removed index 'ix_prompt_history_prompt_id' on 'prompt_history'
2025-08-30 00:19:27,768 - alembic.autogenerate.compare - INFO - Detected removed table 'prompt_history'
2025-08-30 00:19:27,770 - alembic.autogenerate.compare - INFO - Detected removed index 'ix_prompts_created_at' on 'prompts'
2025-08-30 00:19:27,770 - alembic.autogenerate.compare - INFO - Detected removed index 'ix_prompts_id' on 'prompts'
2025-08-30 00:19:27,770 - alembic.autogenerate.compare - INFO - Detected removed index 'ix_prompts_is_active' on 'prompts'
2025-08-30 00:19:27,770 - alembic.autogenerate.compare - INFO - Detected removed index 'ix_prompts_name' on 'prompts'
2025-08-30 00:19:27,770 - alembic.autogenerate.compare - INFO - Detected removed index 'ix_prompts_status' on 'prompts'
2025-08-30 00:19:27,770 - alembic.autogenerate.compare - INFO - Detected removed index 'ix_prompts_version' on 'prompts'
2025-08-30 00:19:27,770 - alembic.autogenerate.compare - INFO - Detected removed table 'prompts'
2025-08-30 00:19:45,936 - alembic.runtime.migration - INFO - Context impl SQLiteImpl.
2025-08-30 00:19:45,936 - alembic.runtime.migration - INFO - Will assume non-transactional DDL.
2025-08-30 00:19:45,937 - alembic.runtime.migration - INFO - Running upgrade  -> 62784de296ff, Sync database schema with models
2025-08-30 23:22:16,310 - alembic.runtime.migration - INFO - Context impl SQLiteImpl.
2025-08-30 23:22:16,311 - alembic.runtime.migration - INFO - Will assume non-transactional DDL.
2025-08-30 23:22:16,315 - alembic.autogenerate.compare - INFO - Detected removed index 'ix_prompts_id' on 'prompts'
2025-08-30 23:22:16,315 - alembic.autogenerate.compare - INFO - Detected removed index 'ix_prompts_name' on 'prompts'
2025-08-30 23:22:16,316 - alembic.autogenerate.compare - INFO - Detected removed table 'prompts'
2025-08-30 23:22:16,318 - alembic.autogenerate.compare - INFO - Detected removed index 'ix_prompt_history_id' on 'prompt_history'
2025-08-30 23:22:16,318 - alembic.autogenerate.compare - INFO - Detected removed table 'prompt_history'
2025-08-30 23:22:16,320 - alembic.autogenerate.compare - INFO - Detected removed index 'ix_users_email' on 'users'
2025-08-30 23:22:16,320 - alembic.autogenerate.compare - INFO - Detected removed index 'ix_users_id' on 'users'
2025-08-30 23:22:16,320 - alembic.autogenerate.compare - INFO - Detected removed table 'users'
2025-08-30 23:22:25,155 - alembic.runtime.migration - INFO - Context impl SQLiteImpl.
2025-08-30 23:22:25,155 - alembic.runtime.migration - INFO - Will assume non-transactional DDL.
2025-08-30 23:22:25,157 - alembic.runtime.migration - INFO - Running upgrade 62784de296ff -> 28b054ea513b, Add is_active column to prompts table
2025-09-01 00:39:55,153 - app.database - INFO - Creating new database session
2025-09-01 00:39:55,154 - app.database - INFO - Yielding database session
2025-09-01 00:39:55,154 - app.database - INFO - Closing database session
2025-09-01 00:39:55,154 - app.database - INFO - Database session closed
2025-09-02 20:34:26,021 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-02 20:34:26,021 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-02 20:34:26,021 - prompt_manager.app.main - INFO - Database URL: sqlite:///./prompts.db
2025-09-02 20:35:04,758 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-02 20:35:04,760 - prompt_manager.app.database - INFO - Creating new database session
2025-09-02 20:35:04,761 - prompt_manager.app.database - INFO - Yielding database session
2025-09-02 20:35:04,762 - prompt_manager.app.database - ERROR - Error in database session: name 'User' is not defined
2025-09-02 20:35:04,762 - prompt_manager.app.database - INFO - Closing database session
2025-09-02 20:35:04,765 - prompt_manager.app.database - INFO - Database session closed
2025-09-02 20:35:04,765 - prompt_manager.app.main - ERROR - Unhandled exception: name 'User' is not defined
Request: POST http://localhost:8000/api/v1/auth/token
Client: 127.0.0.1
Traceback (most recent call last):
  File "/Applications/anaconda3/lib/python3.11/site-packages/anyio/streams/memory.py", line 98, in receive
    return self.receive_nowait()
           ^^^^^^^^^^^^^^^^^^^^^
  File "/Applications/anaconda3/lib/python3.11/site-packages/anyio/streams/memory.py", line 93, in receive_nowait
    raise WouldBlock
anyio.WouldBlock

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/base.py", line 78, in call_next
    message = await recv_stream.receive()
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Applications/anaconda3/lib/python3.11/site-packages/anyio/streams/memory.py", line 118, in receive
    raise EndOfStream
anyio.EndOfStream

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/errors.py", line 162, in __call__
    await self.app(scope, receive, _send)
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/base.py", line 108, in __call__
    response = await self.dispatch_func(request, call_next)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/prisha/Desktop/Coding/system prompt/prompt_manager/app/main.py", line 177, in log_requests
    response = await call_next(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/base.py", line 84, in call_next
    raise app_exc
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/base.py", line 70, in coro
    await self.app(scope, receive_or_disconnect, send_no_error)
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/cors.py", line 83, in __call__
    await self.app(scope, receive, send)
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/exceptions.py", line 79, in __call__
    raise exc
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/exceptions.py", line 68, in __call__
    await self.app(scope, receive, sender)
  File "/Applications/anaconda3/lib/python3.11/site-packages/fastapi/middleware/asyncexitstack.py", line 20, in __call__
    raise e
  File "/Applications/anaconda3/lib/python3.11/site-packages/fastapi/middleware/asyncexitstack.py", line 17, in __call__
    await self.app(scope, receive, send)
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/routing.py", line 718, in __call__
    await route.handle(scope, receive, send)
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/routing.py", line 276, in handle
    await self.app(scope, receive, send)
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/routing.py", line 66, in app
    response = await func(request)
               ^^^^^^^^^^^^^^^^^^^
  File "/Applications/anaconda3/lib/python3.11/site-packages/fastapi/routing.py", line 274, in app
    raw_response = await run_endpoint_function(
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Applications/anaconda3/lib/python3.11/site-packages/fastapi/routing.py", line 191, in run_endpoint_function
    return await dependant.call(**values)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/prisha/Desktop/Coding/system prompt/prompt_manager/app/api/v1/endpoints/auth.py", line 112, in login_for_access_token
    user = db.query(User).filter(User.email == form_data.username).first()
                    ^^^^
NameError: name 'User' is not defined
2025-09-02 20:35:14,519 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-02 20:35:15,484 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-02 20:35:15,484 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-02 20:35:15,484 - prompt_manager.app.main - INFO - Database URL: sqlite:///./prompts.db
2025-09-02 20:35:53,537 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-02 20:35:53,539 - prompt_manager.app.database - INFO - Creating new database session
2025-09-02 20:35:53,539 - prompt_manager.app.database - INFO - Yielding database session
2025-09-02 20:35:53,539 - prompt_manager.app.database - ERROR - Error in database session: name 'User' is not defined
2025-09-02 20:35:53,539 - prompt_manager.app.database - INFO - Closing database session
2025-09-02 20:35:53,539 - prompt_manager.app.database - INFO - Database session closed
2025-09-02 20:35:53,540 - prompt_manager.app.main - ERROR - Unhandled exception: name 'User' is not defined
Request: POST http://localhost:8000/api/v1/auth/token
Client: 127.0.0.1
Traceback (most recent call last):
  File "/Applications/anaconda3/lib/python3.11/site-packages/anyio/streams/memory.py", line 98, in receive
    return self.receive_nowait()
           ^^^^^^^^^^^^^^^^^^^^^
  File "/Applications/anaconda3/lib/python3.11/site-packages/anyio/streams/memory.py", line 93, in receive_nowait
    raise WouldBlock
anyio.WouldBlock

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/base.py", line 78, in call_next
    message = await recv_stream.receive()
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Applications/anaconda3/lib/python3.11/site-packages/anyio/streams/memory.py", line 118, in receive
    raise EndOfStream
anyio.EndOfStream

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/errors.py", line 162, in __call__
    await self.app(scope, receive, _send)
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/base.py", line 108, in __call__
    response = await self.dispatch_func(request, call_next)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/prisha/Desktop/Coding/system prompt/prompt_manager/app/main.py", line 177, in log_requests
    response = await call_next(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/base.py", line 84, in call_next
    raise app_exc
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/base.py", line 70, in coro
    await self.app(scope, receive_or_disconnect, send_no_error)
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/cors.py", line 83, in __call__
    await self.app(scope, receive, send)
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/exceptions.py", line 79, in __call__
    raise exc
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/exceptions.py", line 68, in __call__
    await self.app(scope, receive, sender)
  File "/Applications/anaconda3/lib/python3.11/site-packages/fastapi/middleware/asyncexitstack.py", line 20, in __call__
    raise e
  File "/Applications/anaconda3/lib/python3.11/site-packages/fastapi/middleware/asyncexitstack.py", line 17, in __call__
    await self.app(scope, receive, send)
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/routing.py", line 718, in __call__
    await route.handle(scope, receive, send)
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/routing.py", line 276, in handle
    await self.app(scope, receive, send)
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/routing.py", line 66, in app
    response = await func(request)
               ^^^^^^^^^^^^^^^^^^^
  File "/Applications/anaconda3/lib/python3.11/site-packages/fastapi/routing.py", line 274, in app
    raw_response = await run_endpoint_function(
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Applications/anaconda3/lib/python3.11/site-packages/fastapi/routing.py", line 191, in run_endpoint_function
    return await dependant.call(**values)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/prisha/Desktop/Coding/system prompt/prompt_manager/app/api/v1/endpoints/auth.py", line 112, in login_for_access_token
    user = db.query(User).filter(User.email == form_data.username).first()
                    ^^^^
NameError: name 'User' is not defined
2025-09-02 20:36:28,948 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 20:36:28,954 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 6.27ms
2025-09-02 20:36:42,176 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 20:36:42,179 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 3.4ms
2025-09-02 20:36:42,187 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-02 20:36:42,190 - prompt_manager.app.database - INFO - Creating new database session
2025-09-02 20:36:42,191 - prompt_manager.app.database - INFO - Yielding database session
2025-09-02 20:36:42,193 - prompt_manager.app.database - ERROR - Error in database session: name 'User' is not defined
2025-09-02 20:36:42,194 - prompt_manager.app.database - INFO - Closing database session
2025-09-02 20:36:42,194 - prompt_manager.app.database - INFO - Database session closed
2025-09-02 20:36:42,195 - prompt_manager.app.main - ERROR - Unhandled exception: name 'User' is not defined
Request: POST http://localhost:8000/api/v1/auth/token
Client: 127.0.0.1
Traceback (most recent call last):
  File "/Applications/anaconda3/lib/python3.11/site-packages/anyio/streams/memory.py", line 98, in receive
    return self.receive_nowait()
           ^^^^^^^^^^^^^^^^^^^^^
  File "/Applications/anaconda3/lib/python3.11/site-packages/anyio/streams/memory.py", line 93, in receive_nowait
    raise WouldBlock
anyio.WouldBlock

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/base.py", line 78, in call_next
    message = await recv_stream.receive()
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Applications/anaconda3/lib/python3.11/site-packages/anyio/streams/memory.py", line 118, in receive
    raise EndOfStream
anyio.EndOfStream

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/errors.py", line 162, in __call__
    await self.app(scope, receive, _send)
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/base.py", line 108, in __call__
    response = await self.dispatch_func(request, call_next)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/prisha/Desktop/Coding/system prompt/prompt_manager/app/main.py", line 177, in log_requests
    response = await call_next(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/base.py", line 84, in call_next
    raise app_exc
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/base.py", line 70, in coro
    await self.app(scope, receive_or_disconnect, send_no_error)
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/cors.py", line 83, in __call__
    await self.app(scope, receive, send)
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/exceptions.py", line 79, in __call__
    raise exc
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/exceptions.py", line 68, in __call__
    await self.app(scope, receive, sender)
  File "/Applications/anaconda3/lib/python3.11/site-packages/fastapi/middleware/asyncexitstack.py", line 20, in __call__
    raise e
  File "/Applications/anaconda3/lib/python3.11/site-packages/fastapi/middleware/asyncexitstack.py", line 17, in __call__
    await self.app(scope, receive, send)
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/routing.py", line 718, in __call__
    await route.handle(scope, receive, send)
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/routing.py", line 276, in handle
    await self.app(scope, receive, send)
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/routing.py", line 66, in app
    response = await func(request)
               ^^^^^^^^^^^^^^^^^^^
  File "/Applications/anaconda3/lib/python3.11/site-packages/fastapi/routing.py", line 274, in app
    raw_response = await run_endpoint_function(
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Applications/anaconda3/lib/python3.11/site-packages/fastapi/routing.py", line 191, in run_endpoint_function
    return await dependant.call(**values)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/prisha/Desktop/Coding/system prompt/prompt_manager/app/api/v1/endpoints/auth.py", line 112, in login_for_access_token
    user = db.query(User).filter(User.email == form_data.username).first()
                    ^^^^
NameError: name 'User' is not defined
2025-09-02 20:36:51,792 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 20:36:51,793 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.0ms
2025-09-02 20:36:53,140 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 20:36:53,141 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.23ms
2025-09-02 20:37:03,395 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 20:37:03,397 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.63ms
2025-09-02 20:37:03,402 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-02 20:37:03,404 - prompt_manager.app.database - INFO - Creating new database session
2025-09-02 20:37:03,405 - prompt_manager.app.database - INFO - Yielding database session
2025-09-02 20:37:03,406 - prompt_manager.app.database - ERROR - Error in database session: name 'User' is not defined
2025-09-02 20:37:03,406 - prompt_manager.app.database - INFO - Closing database session
2025-09-02 20:37:03,406 - prompt_manager.app.database - INFO - Database session closed
2025-09-02 20:37:03,407 - prompt_manager.app.main - ERROR - Unhandled exception: name 'User' is not defined
Request: POST http://localhost:8000/api/v1/auth/token
Client: 127.0.0.1
Traceback (most recent call last):
  File "/Applications/anaconda3/lib/python3.11/site-packages/anyio/streams/memory.py", line 98, in receive
    return self.receive_nowait()
           ^^^^^^^^^^^^^^^^^^^^^
  File "/Applications/anaconda3/lib/python3.11/site-packages/anyio/streams/memory.py", line 93, in receive_nowait
    raise WouldBlock
anyio.WouldBlock

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/base.py", line 78, in call_next
    message = await recv_stream.receive()
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Applications/anaconda3/lib/python3.11/site-packages/anyio/streams/memory.py", line 118, in receive
    raise EndOfStream
anyio.EndOfStream

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/errors.py", line 162, in __call__
    await self.app(scope, receive, _send)
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/base.py", line 108, in __call__
    response = await self.dispatch_func(request, call_next)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/prisha/Desktop/Coding/system prompt/prompt_manager/app/main.py", line 177, in log_requests
    response = await call_next(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/base.py", line 84, in call_next
    raise app_exc
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/base.py", line 70, in coro
    await self.app(scope, receive_or_disconnect, send_no_error)
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/cors.py", line 83, in __call__
    await self.app(scope, receive, send)
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/exceptions.py", line 79, in __call__
    raise exc
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/exceptions.py", line 68, in __call__
    await self.app(scope, receive, sender)
  File "/Applications/anaconda3/lib/python3.11/site-packages/fastapi/middleware/asyncexitstack.py", line 20, in __call__
    raise e
  File "/Applications/anaconda3/lib/python3.11/site-packages/fastapi/middleware/asyncexitstack.py", line 17, in __call__
    await self.app(scope, receive, send)
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/routing.py", line 718, in __call__
    await route.handle(scope, receive, send)
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/routing.py", line 276, in handle
    await self.app(scope, receive, send)
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/routing.py", line 66, in app
    response = await func(request)
               ^^^^^^^^^^^^^^^^^^^
  File "/Applications/anaconda3/lib/python3.11/site-packages/fastapi/routing.py", line 274, in app
    raw_response = await run_endpoint_function(
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Applications/anaconda3/lib/python3.11/site-packages/fastapi/routing.py", line 191, in run_endpoint_function
    return await dependant.call(**values)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/prisha/Desktop/Coding/system prompt/prompt_manager/app/api/v1/endpoints/auth.py", line 112, in login_for_access_token
    user = db.query(User).filter(User.email == form_data.username).first()
                    ^^^^
NameError: name 'User' is not defined
2025-09-02 20:38:30,381 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-02 20:38:31,423 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-02 20:38:31,423 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-02 20:38:31,423 - prompt_manager.app.main - INFO - Database URL: sqlite:///./prompts.db
2025-09-02 20:38:37,282 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-02 20:38:38,066 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-02 20:38:38,066 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-02 20:38:38,066 - prompt_manager.app.main - INFO - Database URL: sqlite:///./prompts.db
2025-09-02 20:38:44,731 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-02 20:38:45,523 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-02 20:38:45,523 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-02 20:38:45,523 - prompt_manager.app.main - INFO - Database URL: sqlite:///./prompts.db
2025-09-02 20:39:06,872 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-02 20:39:06,873 - prompt_manager.app.database - INFO - Creating new database session
2025-09-02 20:39:06,873 - prompt_manager.app.database - INFO - Yielding database session
2025-09-02 20:39:06,881 - prompt_manager.app.database - ERROR - Error in database session: 
2025-09-02 20:39:06,881 - prompt_manager.app.database - INFO - Closing database session
2025-09-02 20:39:06,881 - prompt_manager.app.database - INFO - Database session closed
2025-09-02 20:39:06,881 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 401 Time: 9.7ms
2025-09-02 20:39:17,833 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/register
2025-09-02 20:39:17,834 - prompt_manager.app.database - INFO - Creating new database session
2025-09-02 20:39:17,834 - prompt_manager.app.database - INFO - Yielding database session
2025-09-02 20:39:17,835 - prompt_manager.app.database - ERROR - Error in database session: [{'type': 'value_error', 'loc': ('body', 'email'), 'msg': 'value is not a valid email address: An email address must have an @-sign.', 'input': 'admin', 'ctx': {'reason': 'An email address must have an @-sign.'}}]
2025-09-02 20:39:17,835 - prompt_manager.app.database - INFO - Closing database session
2025-09-02 20:39:17,835 - prompt_manager.app.database - INFO - Database session closed
2025-09-02 20:39:17,835 - prompt_manager.app.main - ERROR - Validation error for request: POST http://localhost:8000/api/v1/auth/register
2025-09-02 20:39:17,835 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/register Status: 422 Time: 2.49ms
2025-09-02 20:39:27,054 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/register
2025-09-02 20:39:27,055 - prompt_manager.app.database - INFO - Creating new database session
2025-09-02 20:39:27,055 - prompt_manager.app.database - INFO - Yielding database session
2025-09-02 20:39:27,394 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/register Status: 201 Time: 339.67ms
2025-09-02 20:39:27,394 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-02 20:39:27,394 - prompt_manager.app.database - INFO - Closing database session
2025-09-02 20:39:27,395 - prompt_manager.app.database - INFO - Database session closed
2025-09-02 20:39:38,918 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-02 20:39:38,919 - prompt_manager.app.database - INFO - Creating new database session
2025-09-02 20:39:38,919 - prompt_manager.app.database - INFO - Yielding database session
2025-09-02 20:39:39,174 - prompt_manager.app.api.v1.endpoints.auth - INFO - Created access token for user: admin@example.com
2025-09-02 20:39:39,175 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 200 Time: 257.51ms
2025-09-02 20:39:39,176 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-02 20:39:39,176 - prompt_manager.app.database - INFO - Closing database session
2025-09-02 20:39:39,176 - prompt_manager.app.database - INFO - Database session closed
2025-09-02 20:39:53,913 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/1/test-persona
2025-09-02 20:39:53,917 - prompt_manager.app.database - INFO - Creating new database session
2025-09-02 20:39:53,917 - prompt_manager.app.database - INFO - Yielding database session
2025-09-02 20:39:53,917 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-02 20:39:53,917 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-02 20:39:53,917 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-02 20:39:53,917 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-02 20:39:53,917 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-02 20:39:53,918 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-02 20:39:53,918 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 15:09:39+00:00 (UTC)
2025-09-02 20:39:53,918 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-02 20:39:53,918 - prompt_manager.app.core.security - INFO - Looking up user with email: admin@example.com
2025-09-02 20:39:53,921 - prompt_manager.app.core.security - INFO - Found user: admin@example.com (ID: 1)
2025-09-02 20:39:53,922 - prompt_manager.app.api.v1.api - INFO - Testing persona for prompt ID 1 (user: admin@example.com)
2025-09-02 20:39:53,928 - prompt_manager.app.database - ERROR - Error in database session: 
2025-09-02 20:39:53,929 - prompt_manager.app.database - INFO - Closing database session
2025-09-02 20:39:53,929 - prompt_manager.app.database - INFO - Database session closed
2025-09-02 20:39:53,929 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/1/test-persona Status: 404 Time: 16.69ms
2025-09-02 20:40:10,991 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts
2025-09-02 20:40:10,992 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts Status: 307 Time: 1.46ms
2025-09-02 20:40:22,802 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/1/test-persona
2025-09-02 20:40:22,805 - prompt_manager.app.database - INFO - Creating new database session
2025-09-02 20:40:22,805 - prompt_manager.app.database - INFO - Yielding database session
2025-09-02 20:40:22,806 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-02 20:40:22,807 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-02 20:40:22,808 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-02 20:40:22,809 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-02 20:40:22,809 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-02 20:40:22,812 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-02 20:40:22,812 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 15:09:39+00:00 (UTC)
2025-09-02 20:40:22,812 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-02 20:40:22,812 - prompt_manager.app.core.security - INFO - Looking up user with email: admin@example.com
2025-09-02 20:40:22,820 - prompt_manager.app.core.security - INFO - Found user: admin@example.com (ID: 1)
2025-09-02 20:40:22,821 - prompt_manager.app.api.v1.api - INFO - Testing persona for prompt ID 1 (user: admin@example.com)
2025-09-02 20:40:22,822 - prompt_manager.app.database - ERROR - Error in database session: 
2025-09-02 20:40:22,822 - prompt_manager.app.database - INFO - Closing database session
2025-09-02 20:40:22,823 - prompt_manager.app.database - INFO - Database session closed
2025-09-02 20:40:22,825 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/1/test-persona Status: 404 Time: 23.16ms
2025-09-02 20:40:36,151 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 20:40:36,155 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 3.96ms
2025-09-02 20:40:36,158 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-02 20:40:36,161 - prompt_manager.app.database - INFO - Creating new database session
2025-09-02 20:40:36,162 - prompt_manager.app.database - INFO - Yielding database session
2025-09-02 20:40:36,167 - prompt_manager.app.database - ERROR - Error in database session: 
2025-09-02 20:40:36,167 - prompt_manager.app.database - INFO - Closing database session
2025-09-02 20:40:36,168 - prompt_manager.app.database - INFO - Database session closed
2025-09-02 20:40:36,168 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 401 Time: 9.82ms
2025-09-02 20:40:37,314 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 20:40:37,314 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.43ms
2025-09-02 20:40:37,317 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-02 20:40:37,317 - prompt_manager.app.database - INFO - Creating new database session
2025-09-02 20:40:37,318 - prompt_manager.app.database - INFO - Yielding database session
2025-09-02 20:40:37,318 - prompt_manager.app.database - ERROR - Error in database session: 
2025-09-02 20:40:37,318 - prompt_manager.app.database - INFO - Closing database session
2025-09-02 20:40:37,318 - prompt_manager.app.database - INFO - Database session closed
2025-09-02 20:40:37,318 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 401 Time: 1.67ms
2025-09-02 20:40:37,578 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 20:40:37,579 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.67ms
2025-09-02 20:40:37,582 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-02 20:40:37,583 - prompt_manager.app.database - INFO - Creating new database session
2025-09-02 20:40:37,583 - prompt_manager.app.database - INFO - Yielding database session
2025-09-02 20:40:37,586 - prompt_manager.app.database - ERROR - Error in database session: 
2025-09-02 20:40:37,586 - prompt_manager.app.database - INFO - Closing database session
2025-09-02 20:40:37,586 - prompt_manager.app.database - INFO - Database session closed
2025-09-02 20:40:37,586 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 401 Time: 4.63ms
2025-09-02 20:41:07,985 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 20:41:07,988 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 2.4ms
2025-09-02 20:41:07,992 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/register
2025-09-02 20:41:07,995 - prompt_manager.app.database - INFO - Creating new database session
2025-09-02 20:41:07,995 - prompt_manager.app.database - INFO - Yielding database session
2025-09-02 20:41:08,266 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/register Status: 201 Time: 273.58ms
2025-09-02 20:41:08,266 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-02 20:41:08,266 - prompt_manager.app.database - INFO - Closing database session
2025-09-02 20:41:08,266 - prompt_manager.app.database - INFO - Database session closed
2025-09-02 20:41:14,449 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 20:41:14,450 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.0ms
2025-09-02 20:41:14,456 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-02 20:41:14,458 - prompt_manager.app.database - INFO - Creating new database session
2025-09-02 20:41:14,458 - prompt_manager.app.database - INFO - Yielding database session
2025-09-02 20:41:14,734 - prompt_manager.app.api.v1.endpoints.auth - INFO - Created access token for user: prishatank6@gmail.com
2025-09-02 20:41:14,735 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 200 Time: 279.31ms
2025-09-02 20:41:14,735 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-02 20:41:14,735 - prompt_manager.app.database - INFO - Closing database session
2025-09-02 20:41:14,735 - prompt_manager.app.database - INFO - Database session closed
2025-09-02 20:41:14,759 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 20:41:14,760 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.28ms
2025-09-02 20:41:16,933 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 20:41:16,934 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.78ms
2025-09-02 20:42:43,186 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 20:42:43,192 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 6.64ms
2025-09-02 20:42:43,198 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/
2025-09-02 20:42:43,202 - prompt_manager.app.database - INFO - Creating new database session
2025-09-02 20:42:43,202 - prompt_manager.app.database - INFO - Yielding database session
2025-09-02 20:42:43,202 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-02 20:42:43,202 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-02 20:42:43,202 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-02 20:42:43,202 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-02 20:42:43,202 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-02 20:42:43,205 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-02 20:42:43,205 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 15:11:14+00:00 (UTC)
2025-09-02 20:42:43,205 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-02 20:42:43,205 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-02 20:42:43,211 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-02 20:42:43,211 - prompt_manager.app.api.v1.api - INFO - Creating new prompt: Coding Assistant version 1.0.0
2025-09-02 20:42:43,221 - prompt_manager.app.api.v1.api - INFO - Successfully created prompt Coding Assistant v1.0.0 (ID: 1)
2025-09-02 20:42:43,222 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/ Status: 201 Time: 23.4ms
2025-09-02 20:42:43,222 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-02 20:42:43,222 - prompt_manager.app.database - INFO - Closing database session
2025-09-02 20:42:43,222 - prompt_manager.app.database - INFO - Database session closed
2025-09-02 20:43:06,554 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 20:43:06,556 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 2.0ms
2025-09-02 20:43:06,565 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/?skip=0&limit=10
2025-09-02 20:43:06,567 - prompt_manager.app.database - INFO - Creating new database session
2025-09-02 20:43:06,568 - prompt_manager.app.database - INFO - Yielding database session
2025-09-02 20:43:06,568 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-02 20:43:06,568 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-02 20:43:06,568 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-02 20:43:06,568 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-02 20:43:06,568 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-02 20:43:06,569 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-02 20:43:06,569 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 15:11:14+00:00 (UTC)
2025-09-02 20:43:06,569 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-02 20:43:06,569 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-02 20:43:06,570 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-02 20:43:06,571 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-02 20:43:06,578 - prompt_manager.app.api.v1.api - INFO - Found 1 prompts out of 1 total
2025-09-02 20:43:06,579 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/?skip=0&limit=10 Status: 200 Time: 14.02ms
2025-09-02 20:43:06,580 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-02 20:43:06,580 - prompt_manager.app.database - INFO - Closing database session
2025-09-02 20:43:06,580 - prompt_manager.app.database - INFO - Database session closed
2025-09-02 20:43:23,617 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 20:43:23,619 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 2.04ms
2025-09-02 20:43:23,674 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 20:43:23,675 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.46ms
2025-09-02 20:43:23,680 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/?query=coding+assistant
2025-09-02 20:43:23,681 - prompt_manager.app.database - INFO - Creating new database session
2025-09-02 20:43:23,681 - prompt_manager.app.database - INFO - Yielding database session
2025-09-02 20:43:23,681 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-02 20:43:23,681 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-02 20:43:23,681 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-02 20:43:23,681 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-02 20:43:23,681 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-02 20:43:23,681 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-02 20:43:23,682 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 15:11:14+00:00 (UTC)
2025-09-02 20:43:23,682 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-02 20:43:23,682 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-02 20:43:23,683 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-02 20:43:23,683 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=coding assistant, status=None, tag=None
2025-09-02 20:43:23,688 - prompt_manager.app.api.v1.api - INFO - Found 1 prompts out of 1 total
2025-09-02 20:43:23,689 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/?query=coding+assistant Status: 200 Time: 9.08ms
2025-09-02 20:43:23,689 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-02 20:43:23,689 - prompt_manager.app.database - INFO - Closing database session
2025-09-02 20:43:23,689 - prompt_manager.app.database - INFO - Database session closed
2025-09-02 20:43:30,500 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 20:43:30,501 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.08ms
2025-09-02 20:43:33,397 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 20:43:33,398 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.83ms
2025-09-02 20:43:34,792 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 20:43:34,792 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.36ms
2025-09-02 20:43:34,796 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/?tag=coding
2025-09-02 20:43:34,796 - prompt_manager.app.database - INFO - Creating new database session
2025-09-02 20:43:34,797 - prompt_manager.app.database - INFO - Yielding database session
2025-09-02 20:43:34,797 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-02 20:43:34,797 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-02 20:43:34,797 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-02 20:43:34,797 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-02 20:43:34,797 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-02 20:43:34,797 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-02 20:43:34,797 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 15:11:14+00:00 (UTC)
2025-09-02 20:43:34,797 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-02 20:43:34,797 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-02 20:43:34,798 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-02 20:43:34,798 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=coding
2025-09-02 20:43:34,801 - prompt_manager.app.api.v1.api - INFO - Found 1 prompts out of 1 total
2025-09-02 20:43:34,801 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/?tag=coding Status: 200 Time: 5.64ms
2025-09-02 20:43:34,802 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-02 20:43:34,802 - prompt_manager.app.database - INFO - Closing database session
2025-09-02 20:43:34,802 - prompt_manager.app.database - INFO - Database session closed
2025-09-02 20:43:37,170 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 20:43:37,171 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.85ms
2025-09-02 20:43:37,913 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 20:43:37,914 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.41ms
2025-09-02 20:43:37,918 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/?tag=coding&status=draft
2025-09-02 20:43:37,918 - prompt_manager.app.database - INFO - Creating new database session
2025-09-02 20:43:37,918 - prompt_manager.app.database - INFO - Yielding database session
2025-09-02 20:43:37,919 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-02 20:43:37,919 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-02 20:43:37,919 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-02 20:43:37,919 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-02 20:43:37,919 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-02 20:43:37,919 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-02 20:43:37,919 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 15:11:14+00:00 (UTC)
2025-09-02 20:43:37,919 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-02 20:43:37,919 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-02 20:43:37,920 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-02 20:43:37,920 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=PromptStatus.DRAFT, tag=coding
2025-09-02 20:43:37,922 - prompt_manager.app.api.v1.api - INFO - Found 1 prompts out of 1 total
2025-09-02 20:43:37,923 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/?tag=coding&status=draft Status: 200 Time: 4.91ms
2025-09-02 20:43:37,923 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-02 20:43:37,924 - prompt_manager.app.database - INFO - Closing database session
2025-09-02 20:43:37,924 - prompt_manager.app.database - INFO - Database session closed
2025-09-02 20:43:43,153 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 20:43:43,154 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.95ms
2025-09-02 20:43:43,164 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/1
2025-09-02 20:43:43,166 - prompt_manager.app.database - INFO - Creating new database session
2025-09-02 20:43:43,166 - prompt_manager.app.database - INFO - Yielding database session
2025-09-02 20:43:43,166 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-02 20:43:43,166 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-02 20:43:43,166 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-02 20:43:43,167 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-02 20:43:43,167 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-02 20:43:43,167 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-02 20:43:43,167 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 15:11:14+00:00 (UTC)
2025-09-02 20:43:43,168 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-02 20:43:43,168 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-02 20:43:43,169 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-02 20:43:43,170 - prompt_manager.app.api.v1.api - INFO - Retrieving prompt with ID: 1
2025-09-02 20:43:43,171 - prompt_manager.app.api.v1.api - INFO - Successfully retrieved prompt Coding Assistant v1.0.0 (ID: 1)
2025-09-02 20:43:43,171 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/1 Status: 200 Time: 7.47ms
2025-09-02 20:43:43,172 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-02 20:43:43,172 - prompt_manager.app.database - INFO - Closing database session
2025-09-02 20:43:43,172 - prompt_manager.app.database - INFO - Database session closed
2025-09-02 20:43:47,049 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 20:43:47,050 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.81ms
2025-09-02 20:43:47,100 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 20:43:47,101 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.79ms
2025-09-02 20:43:47,106 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/23
2025-09-02 20:43:47,107 - prompt_manager.app.database - INFO - Creating new database session
2025-09-02 20:43:47,107 - prompt_manager.app.database - INFO - Yielding database session
2025-09-02 20:43:47,107 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-02 20:43:47,107 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-02 20:43:47,107 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-02 20:43:47,107 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-02 20:43:47,107 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-02 20:43:47,107 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-02 20:43:47,107 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 15:11:14+00:00 (UTC)
2025-09-02 20:43:47,107 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-02 20:43:47,107 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-02 20:43:47,109 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-02 20:43:47,109 - prompt_manager.app.api.v1.api - INFO - Retrieving prompt with ID: 23
2025-09-02 20:43:47,110 - prompt_manager.app.api.v1.api - WARNING - Prompt with ID 23 not found
2025-09-02 20:43:47,110 - prompt_manager.app.database - ERROR - Error in database session: Prompt not found
2025-09-02 20:43:47,110 - prompt_manager.app.database - INFO - Closing database session
2025-09-02 20:43:47,110 - prompt_manager.app.database - INFO - Database session closed
2025-09-02 20:43:47,110 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/23 Status: 404 Time: 3.86ms
2025-09-02 20:43:50,610 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 20:43:50,611 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.28ms
2025-09-02 20:43:56,580 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 20:43:56,581 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.97ms
2025-09-02 20:43:59,633 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 20:43:59,634 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.42ms
2025-09-02 20:43:59,693 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 20:43:59,693 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.49ms
2025-09-02 20:43:59,699 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/name/coding assistant/version/1.0.0
2025-09-02 20:43:59,699 - prompt_manager.app.database - INFO - Creating new database session
2025-09-02 20:43:59,699 - prompt_manager.app.database - INFO - Yielding database session
2025-09-02 20:43:59,699 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-02 20:43:59,700 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-02 20:43:59,700 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-02 20:43:59,700 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-02 20:43:59,700 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-02 20:43:59,701 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-02 20:43:59,701 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 15:11:14+00:00 (UTC)
2025-09-02 20:43:59,701 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-02 20:43:59,701 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-02 20:43:59,702 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-02 20:43:59,702 - prompt_manager.app.api.v1.api - INFO - Retrieving prompt: coding assistant version 1.0.0
2025-09-02 20:43:59,702 - prompt_manager.app.api.v1.api - WARNING - Prompt 'coding assistant' version '1.0.0' not found
2025-09-02 20:43:59,703 - prompt_manager.app.database - ERROR - Error in database session: Prompt not found
2025-09-02 20:43:59,703 - prompt_manager.app.database - INFO - Closing database session
2025-09-02 20:43:59,703 - prompt_manager.app.database - INFO - Database session closed
2025-09-02 20:43:59,703 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/name/coding assistant/version/1.0.0 Status: 404 Time: 4.8ms
2025-09-02 20:44:09,050 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 20:44:09,052 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.64ms
2025-09-02 20:44:09,061 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/?skip=0&limit=10
2025-09-02 20:44:09,062 - prompt_manager.app.database - INFO - Creating new database session
2025-09-02 20:44:09,062 - prompt_manager.app.database - INFO - Yielding database session
2025-09-02 20:44:09,063 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-02 20:44:09,063 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-02 20:44:09,063 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-02 20:44:09,063 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-02 20:44:09,063 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-02 20:44:09,064 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-02 20:44:09,064 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 15:11:14+00:00 (UTC)
2025-09-02 20:44:09,064 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-02 20:44:09,065 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-02 20:44:09,067 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-02 20:44:09,067 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-02 20:44:09,069 - prompt_manager.app.api.v1.api - INFO - Found 1 prompts out of 1 total
2025-09-02 20:44:09,069 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/?skip=0&limit=10 Status: 200 Time: 8.76ms
2025-09-02 20:44:09,070 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-02 20:44:09,070 - prompt_manager.app.database - INFO - Closing database session
2025-09-02 20:44:09,070 - prompt_manager.app.database - INFO - Database session closed
2025-09-02 20:44:19,962 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 20:44:19,963 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.94ms
2025-09-02 20:44:19,974 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/name/coding assistant/version/1.0.0
2025-09-02 20:44:19,975 - prompt_manager.app.database - INFO - Creating new database session
2025-09-02 20:44:19,976 - prompt_manager.app.database - INFO - Yielding database session
2025-09-02 20:44:19,976 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-02 20:44:19,976 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-02 20:44:19,976 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-02 20:44:19,976 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-02 20:44:19,976 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-02 20:44:19,977 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-02 20:44:19,977 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 15:11:14+00:00 (UTC)
2025-09-02 20:44:19,977 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-02 20:44:19,977 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-02 20:44:19,978 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-02 20:44:19,979 - prompt_manager.app.api.v1.api - INFO - Retrieving prompt: coding assistant version 1.0.0
2025-09-02 20:44:19,979 - prompt_manager.app.api.v1.api - WARNING - Prompt 'coding assistant' version '1.0.0' not found
2025-09-02 20:44:19,980 - prompt_manager.app.database - ERROR - Error in database session: Prompt not found
2025-09-02 20:44:19,980 - prompt_manager.app.database - INFO - Closing database session
2025-09-02 20:44:19,980 - prompt_manager.app.database - INFO - Database session closed
2025-09-02 20:44:19,981 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/name/coding assistant/version/1.0.0 Status: 404 Time: 6.4ms
2025-09-02 20:44:36,930 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 20:44:36,931 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.86ms
2025-09-02 20:44:36,942 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/?tag=coding&status=draft
2025-09-02 20:44:36,944 - prompt_manager.app.database - INFO - Creating new database session
2025-09-02 20:44:36,945 - prompt_manager.app.database - INFO - Yielding database session
2025-09-02 20:44:36,945 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-02 20:44:36,945 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-02 20:44:36,945 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-02 20:44:36,945 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-02 20:44:36,945 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-02 20:44:36,946 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-02 20:44:36,946 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 15:11:14+00:00 (UTC)
2025-09-02 20:44:36,946 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-02 20:44:36,947 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-02 20:44:36,948 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-02 20:44:36,949 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=PromptStatus.DRAFT, tag=coding
2025-09-02 20:44:36,952 - prompt_manager.app.api.v1.api - INFO - Found 1 prompts out of 1 total
2025-09-02 20:44:36,952 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/?tag=coding&status=draft Status: 200 Time: 9.85ms
2025-09-02 20:44:36,953 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-02 20:44:36,953 - prompt_manager.app.database - INFO - Closing database session
2025-09-02 20:44:36,953 - prompt_manager.app.database - INFO - Database session closed
2025-09-02 20:44:46,112 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 20:44:46,117 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 20:44:46,118 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 5.38ms
2025-09-02 20:44:46,118 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.52ms
2025-09-02 20:44:46,180 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/name/Coding Assistant/version/1.0.0
2025-09-02 20:44:46,186 - prompt_manager.app.database - INFO - Creating new database session
2025-09-02 20:44:46,186 - prompt_manager.app.database - INFO - Yielding database session
2025-09-02 20:44:46,186 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-02 20:44:46,186 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-02 20:44:46,186 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-02 20:44:46,186 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-02 20:44:46,187 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-02 20:44:46,188 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-02 20:44:46,189 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 15:11:14+00:00 (UTC)
2025-09-02 20:44:46,189 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-02 20:44:46,189 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-02 20:44:46,190 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-02 20:44:46,190 - prompt_manager.app.api.v1.api - INFO - Retrieving prompt: Coding Assistant version 1.0.0
2025-09-02 20:44:46,191 - prompt_manager.app.api.v1.api - INFO - Successfully retrieved prompt Coding Assistant v1.0.0
2025-09-02 20:44:46,191 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/name/Coding Assistant/version/1.0.0 Status: 200 Time: 10.48ms
2025-09-02 20:44:46,191 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-02 20:44:46,191 - prompt_manager.app.database - INFO - Closing database session
2025-09-02 20:44:46,191 - prompt_manager.app.database - INFO - Database session closed
2025-09-02 20:45:01,639 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 20:45:01,640 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.23ms
2025-09-02 20:45:13,142 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 20:45:13,143 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.78ms
2025-09-02 20:45:13,178 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 20:45:13,179 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.47ms
2025-09-02 20:45:13,183 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/name/Coding Assistant/live
2025-09-02 20:45:13,184 - prompt_manager.app.database - INFO - Creating new database session
2025-09-02 20:45:13,184 - prompt_manager.app.database - INFO - Yielding database session
2025-09-02 20:45:13,184 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-02 20:45:13,184 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-02 20:45:13,184 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-02 20:45:13,184 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-02 20:45:13,184 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-02 20:45:13,184 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-02 20:45:13,184 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 15:11:14+00:00 (UTC)
2025-09-02 20:45:13,185 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-02 20:45:13,185 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-02 20:45:13,185 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-02 20:45:13,185 - prompt_manager.app.api.v1.api - INFO - Retrieving live version of prompt: Coding Assistant
2025-09-02 20:45:13,188 - prompt_manager.app.api.v1.api - WARNING - No live version found for prompt: Coding Assistant
2025-09-02 20:45:13,188 - prompt_manager.app.database - ERROR - Error in database session: Prompt not found
2025-09-02 20:45:13,188 - prompt_manager.app.database - INFO - Closing database session
2025-09-02 20:45:13,188 - prompt_manager.app.database - INFO - Database session closed
2025-09-02 20:45:13,189 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/name/Coding Assistant/live Status: 404 Time: 5.43ms
2025-09-02 20:45:20,003 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 20:45:20,004 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.12ms
2025-09-02 20:45:24,832 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 20:45:24,833 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.92ms
2025-09-02 20:45:24,886 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 20:45:24,886 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.42ms
2025-09-02 20:45:24,891 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/search/latest?name=Coding
2025-09-02 20:45:24,892 - prompt_manager.app.database - INFO - Creating new database session
2025-09-02 20:45:24,892 - prompt_manager.app.database - INFO - Yielding database session
2025-09-02 20:45:24,892 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-02 20:45:24,893 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-02 20:45:24,893 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-02 20:45:24,893 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-02 20:45:24,893 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-02 20:45:24,893 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-02 20:45:24,893 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 15:11:14+00:00 (UTC)
2025-09-02 20:45:24,893 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-02 20:45:24,893 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-02 20:45:24,894 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-02 20:45:24,894 - prompt_manager.app.api.v1.api - INFO - Getting latest prompt by criteria: name=Coding, tag=None, metadata_key=None, metadata_value=None
2025-09-02 20:45:24,895 - prompt_manager.app.api.v1.api - INFO - Found latest prompt: Coding Assistant v1.0.0 (ID: 1)
2025-09-02 20:45:24,895 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/search/latest?name=Coding Status: 200 Time: 4.1ms
2025-09-02 20:45:24,896 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-02 20:45:24,896 - prompt_manager.app.database - INFO - Closing database session
2025-09-02 20:45:24,896 - prompt_manager.app.database - INFO - Database session closed
2025-09-02 20:45:30,996 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 20:45:30,998 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.59ms
2025-09-02 20:45:31,009 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/1
2025-09-02 20:45:31,011 - prompt_manager.app.database - INFO - Creating new database session
2025-09-02 20:45:31,011 - prompt_manager.app.database - INFO - Yielding database session
2025-09-02 20:45:31,011 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-02 20:45:31,012 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-02 20:45:31,012 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-02 20:45:31,012 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-02 20:45:31,012 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-02 20:45:31,012 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-02 20:45:31,013 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 15:11:14+00:00 (UTC)
2025-09-02 20:45:31,013 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-02 20:45:31,013 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-02 20:45:31,014 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-02 20:45:31,015 - prompt_manager.app.api.v1.api - INFO - Retrieving prompt with ID: 1
2025-09-02 20:45:31,016 - prompt_manager.app.api.v1.api - INFO - Successfully retrieved prompt Coding Assistant v1.0.0 (ID: 1)
2025-09-02 20:45:31,016 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/1 Status: 200 Time: 7.16ms
2025-09-02 20:45:31,017 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-02 20:45:31,017 - prompt_manager.app.database - INFO - Closing database session
2025-09-02 20:45:31,017 - prompt_manager.app.database - INFO - Database session closed
2025-09-02 20:46:00,401 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 20:46:00,404 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 2.68ms
2025-09-02 20:46:00,462 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 20:46:00,463 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.47ms
2025-09-02 20:46:00,469 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/1/update-version
2025-09-02 20:46:00,470 - prompt_manager.app.database - INFO - Creating new database session
2025-09-02 20:46:00,470 - prompt_manager.app.database - INFO - Yielding database session
2025-09-02 20:46:00,470 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-02 20:46:00,470 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-02 20:46:00,470 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-02 20:46:00,470 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-02 20:46:00,470 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-02 20:46:00,471 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-02 20:46:00,471 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 15:11:14+00:00 (UTC)
2025-09-02 20:46:00,471 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-02 20:46:00,471 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-02 20:46:00,472 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-02 20:46:00,472 - prompt_manager.app.api.v1.api - INFO - Auto-updating prompt ID 1 (user: prishatank6@gmail.com)
2025-09-02 20:46:00,480 - prompt_manager.app.api.v1.api - INFO - Successfully auto-incremented version to '1.0.1' for prompt 'Coding Assistant'
2025-09-02 20:46:00,481 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/1/update-version Status: 200 Time: 12.32ms
2025-09-02 20:46:00,481 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-02 20:46:00,481 - prompt_manager.app.database - INFO - Closing database session
2025-09-02 20:46:00,481 - prompt_manager.app.database - INFO - Database session closed
2025-09-02 20:46:08,461 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 20:46:08,463 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.16ms
2025-09-02 20:46:08,477 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/1
2025-09-02 20:46:08,478 - prompt_manager.app.database - INFO - Creating new database session
2025-09-02 20:46:08,478 - prompt_manager.app.database - INFO - Yielding database session
2025-09-02 20:46:08,479 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-02 20:46:08,479 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-02 20:46:08,479 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-02 20:46:08,479 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-02 20:46:08,479 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-02 20:46:08,480 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-02 20:46:08,480 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 15:11:14+00:00 (UTC)
2025-09-02 20:46:08,480 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-02 20:46:08,480 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-02 20:46:08,481 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-02 20:46:08,482 - prompt_manager.app.api.v1.api - INFO - Retrieving prompt with ID: 1
2025-09-02 20:46:08,483 - prompt_manager.app.api.v1.api - INFO - Successfully retrieved prompt Coding Assistant v1.0.0 (ID: 1)
2025-09-02 20:46:08,484 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/1 Status: 200 Time: 7.08ms
2025-09-02 20:46:08,485 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-02 20:46:08,485 - prompt_manager.app.database - INFO - Closing database session
2025-09-02 20:46:08,485 - prompt_manager.app.database - INFO - Database session closed
2025-09-02 20:46:21,315 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 20:46:21,316 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.85ms
2025-09-02 20:46:21,364 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 20:46:21,365 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.41ms
2025-09-02 20:46:21,372 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/1/test-persona
2025-09-02 20:46:21,373 - prompt_manager.app.database - INFO - Creating new database session
2025-09-02 20:46:21,373 - prompt_manager.app.database - INFO - Yielding database session
2025-09-02 20:46:21,373 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-02 20:46:21,373 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-02 20:46:21,373 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-02 20:46:21,373 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-02 20:46:21,373 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-02 20:46:21,373 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-02 20:46:21,373 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 15:11:14+00:00 (UTC)
2025-09-02 20:46:21,373 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-02 20:46:21,373 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-02 20:46:21,374 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-02 20:46:21,374 - prompt_manager.app.api.v1.api - INFO - Testing persona for prompt ID 1 (user: prishatank6@gmail.com)
2025-09-02 20:46:22,509 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 400 Bad Request"
2025-09-02 20:46:22,510 - prompt_manager.app.api.v1.api - ERROR - GROQ API error: Error code: 400 - {'error': {'message': 'The model `llama3-8b-8192` has been decommissioned and is no longer supported. Please refer to https://console.groq.com/docs/deprecations for a recommendation on which model to use instead.', 'type': 'invalid_request_error', 'code': 'model_decommissioned'}}
2025-09-02 20:46:22,510 - prompt_manager.app.database - ERROR - Error in database session: 
2025-09-02 20:46:22,510 - prompt_manager.app.database - INFO - Closing database session
2025-09-02 20:46:22,510 - prompt_manager.app.database - INFO - Database session closed
2025-09-02 20:46:22,511 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/1/test-persona Status: 500 Time: 1138.44ms
2025-09-02 20:47:10,671 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-02 20:47:11,788 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-02 20:47:11,788 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-02 20:47:11,788 - prompt_manager.app.main - INFO - Database URL: sqlite:///./prompts.db
2025-09-02 20:47:17,042 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-02 20:47:17,991 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-02 20:47:17,991 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-02 20:47:17,991 - prompt_manager.app.main - INFO - Database URL: sqlite:///./prompts.db
2025-09-02 20:49:07,171 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 20:49:07,178 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 6.92ms
2025-09-02 20:49:07,195 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/1/test-persona
2025-09-02 20:49:07,199 - prompt_manager.app.database - INFO - Creating new database session
2025-09-02 20:49:07,199 - prompt_manager.app.database - INFO - Yielding database session
2025-09-02 20:49:07,199 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-02 20:49:07,199 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-02 20:49:07,199 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-02 20:49:07,199 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-02 20:49:07,199 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-02 20:49:07,203 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-02 20:49:07,203 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 15:11:14+00:00 (UTC)
2025-09-02 20:49:07,203 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-02 20:49:07,203 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-02 20:49:07,219 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-02 20:49:07,219 - prompt_manager.app.api.v1.api - INFO - Testing persona for prompt ID 1 (user: prishatank6@gmail.com)
2025-09-02 20:49:08,187 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-02 20:49:08,191 - prompt_manager.app.api.v1.api - INFO - Generated persona response for prompt 'Coding Assistant' with persona type 'dynamic_persona'
2025-09-02 20:49:08,192 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/1/test-persona Status: 200 Time: 996.76ms
2025-09-02 20:49:08,192 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-02 20:49:08,193 - prompt_manager.app.database - INFO - Closing database session
2025-09-02 20:49:08,193 - prompt_manager.app.database - INFO - Database session closed
2025-09-02 20:51:05,026 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 20:51:05,039 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 20:51:05,040 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 14.04ms
2025-09-02 20:51:05,041 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.86ms
2025-09-02 20:51:05,129 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/2
2025-09-02 20:51:05,130 - prompt_manager.app.database - INFO - Creating new database session
2025-09-02 20:51:05,130 - prompt_manager.app.database - INFO - Yielding database session
2025-09-02 20:51:05,130 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-02 20:51:05,130 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-02 20:51:05,130 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-02 20:51:05,130 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-02 20:51:05,130 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-02 20:51:05,131 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-02 20:51:05,131 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 15:11:14+00:00 (UTC)
2025-09-02 20:51:05,131 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-02 20:51:05,131 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-02 20:51:05,135 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-02 20:51:05,135 - prompt_manager.app.api.v1.api - INFO - Retrieving prompt with ID: 2
2025-09-02 20:51:05,136 - prompt_manager.app.api.v1.api - INFO - Successfully retrieved prompt Coding Assistant v1.0.1 (ID: 2)
2025-09-02 20:51:05,137 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/2 Status: 200 Time: 8.6ms
2025-09-02 20:51:05,138 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-02 20:51:05,138 - prompt_manager.app.database - INFO - Closing database session
2025-09-02 20:51:05,138 - prompt_manager.app.database - INFO - Database session closed
2025-09-02 20:51:08,297 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 20:51:08,298 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.85ms
2025-09-02 20:51:08,314 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/2/test-persona
2025-09-02 20:51:08,316 - prompt_manager.app.database - INFO - Creating new database session
2025-09-02 20:51:08,316 - prompt_manager.app.database - INFO - Yielding database session
2025-09-02 20:51:08,317 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-02 20:51:08,317 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-02 20:51:08,317 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-02 20:51:08,317 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-02 20:51:08,317 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-02 20:51:08,317 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-02 20:51:08,317 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 15:11:14+00:00 (UTC)
2025-09-02 20:51:08,318 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-02 20:51:08,318 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-02 20:51:08,319 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-02 20:51:08,319 - prompt_manager.app.api.v1.api - INFO - Testing persona for prompt ID 2 (user: prishatank6@gmail.com)
2025-09-02 20:51:09,626 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-02 20:51:09,635 - prompt_manager.app.api.v1.api - INFO - Generated persona response for prompt 'Coding Assistant' with persona type 'dynamic_persona'
2025-09-02 20:51:09,636 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/2/test-persona Status: 200 Time: 1321.71ms
2025-09-02 20:51:09,637 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-02 20:51:09,637 - prompt_manager.app.database - INFO - Closing database session
2025-09-02 20:51:09,637 - prompt_manager.app.database - INFO - Database session closed
2025-09-02 20:51:56,560 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 20:51:56,564 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 6.62ms
2025-09-02 20:52:06,239 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 20:52:06,242 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 2.85ms
2025-09-02 20:52:06,293 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 20:52:06,294 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.58ms
2025-09-02 20:52:06,297 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/name/Coding/versions?skip=0&limit=10
2025-09-02 20:52:06,301 - prompt_manager.app.database - INFO - Creating new database session
2025-09-02 20:52:06,302 - prompt_manager.app.database - INFO - Yielding database session
2025-09-02 20:52:06,302 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-02 20:52:06,302 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-02 20:52:06,302 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-02 20:52:06,302 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-02 20:52:06,302 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-02 20:52:06,304 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-02 20:52:06,304 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 15:11:14+00:00 (UTC)
2025-09-02 20:52:06,304 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-02 20:52:06,304 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-02 20:52:06,313 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-02 20:52:06,313 - prompt_manager.app.api.v1.api - INFO - Listing versions for prompt: Coding
2025-09-02 20:52:06,318 - prompt_manager.app.api.v1.api - WARNING - No versions found for prompt: Coding
2025-09-02 20:52:06,318 - prompt_manager.app.database - ERROR - Error in database session: Prompt not found
2025-09-02 20:52:06,318 - prompt_manager.app.database - INFO - Closing database session
2025-09-02 20:52:06,319 - prompt_manager.app.database - INFO - Database session closed
2025-09-02 20:52:06,319 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/name/Coding/versions?skip=0&limit=10 Status: 404 Time: 22.09ms
2025-09-02 20:52:08,465 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-02 20:52:09,583 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-02 20:52:09,583 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-02 20:52:09,583 - prompt_manager.app.main - INFO - Database URL: sqlite:///./prompts.db
2025-09-02 20:52:12,987 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 20:52:12,987 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.61ms
2025-09-02 20:52:12,991 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/name/Coding Assistant/versions?skip=0&limit=10
2025-09-02 20:52:12,992 - prompt_manager.app.database - INFO - Creating new database session
2025-09-02 20:52:12,992 - prompt_manager.app.database - INFO - Yielding database session
2025-09-02 20:52:12,992 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-02 20:52:12,992 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-02 20:52:12,992 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-02 20:52:12,992 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-02 20:52:12,992 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-02 20:52:12,993 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-02 20:52:12,993 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 15:11:14+00:00 (UTC)
2025-09-02 20:52:12,993 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-02 20:52:12,993 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-02 20:52:13,003 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-02 20:52:13,004 - prompt_manager.app.api.v1.api - INFO - Listing versions for prompt: Coding Assistant
2025-09-02 20:52:13,010 - prompt_manager.app.api.v1.api - INFO - Found 2 versions for prompt: Coding Assistant
2025-09-02 20:52:13,010 - prompt_manager.app.api.v1.api - ERROR - Error listing versions for Coding Assistant: name 'json' is not defined
Traceback (most recent call last):
  File "/Users/prisha/Desktop/Coding/system prompt/prompt_manager/app/api/v1/api.py", line 573, in list_prompt_versions
    content=json.dumps([v.dict() for v in versions], default=str),
            ^^^^
NameError: name 'json' is not defined
2025-09-02 20:52:13,010 - prompt_manager.app.database - ERROR - Error in database session: 
2025-09-02 20:52:13,010 - prompt_manager.app.database - INFO - Closing database session
2025-09-02 20:52:13,011 - prompt_manager.app.database - INFO - Database session closed
2025-09-02 20:52:13,011 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/name/Coding Assistant/versions?skip=0&limit=10 Status: 500 Time: 19.67ms
2025-09-02 20:52:14,647 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 20:52:14,648 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.92ms
2025-09-02 20:52:14,651 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/name/Coding Assistant/versions?skip=0&limit=10
2025-09-02 20:52:14,652 - prompt_manager.app.database - INFO - Creating new database session
2025-09-02 20:52:14,652 - prompt_manager.app.database - INFO - Yielding database session
2025-09-02 20:52:14,652 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-02 20:52:14,652 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-02 20:52:14,652 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-02 20:52:14,652 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-02 20:52:14,652 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-02 20:52:14,652 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-02 20:52:14,653 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 15:11:14+00:00 (UTC)
2025-09-02 20:52:14,653 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-02 20:52:14,653 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-02 20:52:14,654 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-02 20:52:14,654 - prompt_manager.app.api.v1.api - INFO - Listing versions for prompt: Coding Assistant
2025-09-02 20:52:14,656 - prompt_manager.app.api.v1.api - INFO - Found 2 versions for prompt: Coding Assistant
2025-09-02 20:52:14,656 - prompt_manager.app.api.v1.api - ERROR - Error listing versions for Coding Assistant: name 'json' is not defined
Traceback (most recent call last):
  File "/Users/prisha/Desktop/Coding/system prompt/prompt_manager/app/api/v1/api.py", line 573, in list_prompt_versions
    content=json.dumps([v.dict() for v in versions], default=str),
            ^^^^
NameError: name 'json' is not defined
2025-09-02 20:52:14,656 - prompt_manager.app.database - ERROR - Error in database session: 
2025-09-02 20:52:14,656 - prompt_manager.app.database - INFO - Closing database session
2025-09-02 20:52:14,656 - prompt_manager.app.database - INFO - Database session closed
2025-09-02 20:52:14,657 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/name/Coding Assistant/versions?skip=0&limit=10 Status: 500 Time: 6.06ms
2025-09-02 20:52:15,279 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 20:52:15,280 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.68ms
2025-09-02 20:52:15,285 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/name/Coding Assistant/versions?skip=0&limit=10
2025-09-02 20:52:15,287 - prompt_manager.app.database - INFO - Creating new database session
2025-09-02 20:52:15,287 - prompt_manager.app.database - INFO - Yielding database session
2025-09-02 20:52:15,287 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-02 20:52:15,287 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-02 20:52:15,287 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-02 20:52:15,288 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-02 20:52:15,288 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-02 20:52:15,288 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-02 20:52:15,289 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 15:11:14+00:00 (UTC)
2025-09-02 20:52:15,289 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-02 20:52:15,289 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-02 20:52:15,291 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-02 20:52:15,291 - prompt_manager.app.api.v1.api - INFO - Listing versions for prompt: Coding Assistant
2025-09-02 20:52:15,295 - prompt_manager.app.api.v1.api - INFO - Found 2 versions for prompt: Coding Assistant
2025-09-02 20:52:15,297 - prompt_manager.app.api.v1.api - ERROR - Error listing versions for Coding Assistant: name 'json' is not defined
Traceback (most recent call last):
  File "/Users/prisha/Desktop/Coding/system prompt/prompt_manager/app/api/v1/api.py", line 573, in list_prompt_versions
    content=json.dumps([v.dict() for v in versions], default=str),
            ^^^^
NameError: name 'json' is not defined
2025-09-02 20:52:15,298 - prompt_manager.app.database - ERROR - Error in database session: 
2025-09-02 20:52:15,298 - prompt_manager.app.database - INFO - Closing database session
2025-09-02 20:52:15,298 - prompt_manager.app.database - INFO - Database session closed
2025-09-02 20:52:15,300 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/name/Coding Assistant/versions?skip=0&limit=10 Status: 500 Time: 15.57ms
2025-09-02 20:52:15,842 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-02 20:52:16,651 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-02 20:52:16,651 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-02 20:52:16,651 - prompt_manager.app.main - INFO - Database URL: sqlite:///./prompts.db
2025-09-02 20:52:19,379 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 20:52:19,380 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.9ms
2025-09-02 20:52:19,386 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/name/Coding Assistant/versions?skip=0&limit=10
2025-09-02 20:52:19,390 - prompt_manager.app.database - INFO - Creating new database session
2025-09-02 20:52:19,390 - prompt_manager.app.database - INFO - Yielding database session
2025-09-02 20:52:19,390 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-02 20:52:19,390 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-02 20:52:19,390 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-02 20:52:19,390 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-02 20:52:19,390 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-02 20:52:19,391 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-02 20:52:19,392 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 15:11:14+00:00 (UTC)
2025-09-02 20:52:19,392 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-02 20:52:19,392 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-02 20:52:19,410 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-02 20:52:19,410 - prompt_manager.app.api.v1.api - INFO - Listing versions for prompt: Coding Assistant
2025-09-02 20:52:19,417 - prompt_manager.app.api.v1.api - INFO - Found 2 versions for prompt: Coding Assistant
2025-09-02 20:52:19,421 - prompt_manager.app.api.v1.api - ERROR - Error listing versions for Coding Assistant: name 'json' is not defined
Traceback (most recent call last):
  File "/Users/prisha/Desktop/Coding/system prompt/prompt_manager/app/api/v1/api.py", line 573, in list_prompt_versions
    content=json.dumps([v.dict() for v in versions], default=str),
            ^^^^
NameError: name 'json' is not defined
2025-09-02 20:52:19,421 - prompt_manager.app.database - ERROR - Error in database session: 
2025-09-02 20:52:19,421 - prompt_manager.app.database - INFO - Closing database session
2025-09-02 20:52:19,422 - prompt_manager.app.database - INFO - Database session closed
2025-09-02 20:52:19,422 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/name/Coding Assistant/versions?skip=0&limit=10 Status: 500 Time: 35.86ms
2025-09-02 20:52:38,725 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 20:52:38,729 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 5.1ms
2025-09-02 20:52:38,741 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/1/history?skip=0&limit=10
2025-09-02 20:52:38,745 - prompt_manager.app.database - INFO - Creating new database session
2025-09-02 20:52:38,745 - prompt_manager.app.database - INFO - Yielding database session
2025-09-02 20:52:38,745 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-02 20:52:38,746 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-02 20:52:38,746 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-02 20:52:38,746 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-02 20:52:38,746 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-02 20:52:38,747 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-02 20:52:38,748 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 15:11:14+00:00 (UTC)
2025-09-02 20:52:38,748 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-02 20:52:38,748 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-02 20:52:38,754 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-02 20:52:38,754 - prompt_manager.app.api.v1.api - INFO - Retrieving history for prompt ID: 1
2025-09-02 20:52:38,762 - prompt_manager.app.api.v1.api - INFO - Found 1 history items for prompt ID: 1
2025-09-02 20:52:38,762 - prompt_manager.app.api.v1.api - ERROR - Error retrieving history for prompt 1: name 'json' is not defined
Traceback (most recent call last):
  File "/Users/prisha/Desktop/Coding/system prompt/prompt_manager/app/api/v1/api.py", line 676, in get_prompt_history
    content=json.dumps([h.dict() for h in history_items], default=str),
            ^^^^
NameError: name 'json' is not defined
2025-09-02 20:52:38,763 - prompt_manager.app.database - ERROR - Error in database session: 
2025-09-02 20:52:38,763 - prompt_manager.app.database - INFO - Closing database session
2025-09-02 20:52:38,763 - prompt_manager.app.database - INFO - Database session closed
2025-09-02 20:52:38,764 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/1/history?skip=0&limit=10 Status: 500 Time: 22.74ms
2025-09-02 20:52:50,978 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 20:52:50,980 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.58ms
2025-09-02 20:52:58,601 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 20:52:58,603 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.37ms
2025-09-02 20:52:58,679 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 20:52:58,680 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.66ms
2025-09-02 20:52:58,685 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/name/Coding Assistant/version/1.0.1/activate
2025-09-02 20:52:58,686 - prompt_manager.app.database - INFO - Creating new database session
2025-09-02 20:52:58,686 - prompt_manager.app.database - INFO - Yielding database session
2025-09-02 20:52:58,686 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-02 20:52:58,686 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-02 20:52:58,686 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-02 20:52:58,686 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-02 20:52:58,686 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-02 20:52:58,686 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-02 20:52:58,686 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 15:11:14+00:00 (UTC)
2025-09-02 20:52:58,686 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-02 20:52:58,686 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-02 20:52:58,687 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-02 20:52:58,688 - prompt_manager.app.api.v1.api - INFO - Setting active version for prompt 'Coding Assistant' to version 1.0.1 (user: prishatank6@gmail.com)
2025-09-02 20:52:58,689 - prompt_manager.app.api.v1.api - INFO - Setting prompt 'Coding Assistant' version 1.0.1 as live version
2025-09-02 20:52:58,699 - prompt_manager.app.api.v1.api - INFO - Successfully set prompt 'Coding Assistant' version 1.0.1 as live version
2025-09-02 20:52:58,700 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/name/Coding Assistant/version/1.0.1/activate Status: 200 Time: 15.01ms
2025-09-02 20:52:58,700 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-02 20:52:58,700 - prompt_manager.app.database - INFO - Closing database session
2025-09-02 20:52:58,700 - prompt_manager.app.database - INFO - Database session closed
2025-09-02 20:53:16,459 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 20:53:16,460 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.74ms
2025-09-02 20:53:19,182 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 20:53:19,183 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.13ms
2025-09-02 20:53:19,193 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-02 20:53:19,195 - prompt_manager.app.database - INFO - Creating new database session
2025-09-02 20:53:19,196 - prompt_manager.app.database - INFO - Yielding database session
2025-09-02 20:53:19,196 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-02 20:53:19,196 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-02 20:53:19,196 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-02 20:53:19,197 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-02 20:53:19,197 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-02 20:53:19,198 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-02 20:53:19,198 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 15:11:14+00:00 (UTC)
2025-09-02 20:53:19,198 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-02 20:53:19,198 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-02 20:53:19,200 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-02 20:53:19,201 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-02 20:53:19,207 - prompt_manager.app.api.v1.api - INFO - Found 2 prompts out of 2 total
2025-09-02 20:53:19,208 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 14.69ms
2025-09-02 20:53:19,209 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-02 20:53:19,209 - prompt_manager.app.database - INFO - Closing database session
2025-09-02 20:53:19,209 - prompt_manager.app.database - INFO - Database session closed
2025-09-02 20:53:32,433 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 20:53:32,434 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.82ms
2025-09-02 20:53:34,847 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 20:53:34,848 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.78ms
2025-09-02 20:53:34,853 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/auth/me
2025-09-02 20:53:34,854 - prompt_manager.app.database - INFO - Creating new database session
2025-09-02 20:53:34,855 - prompt_manager.app.database - INFO - Yielding database session
2025-09-02 20:53:34,855 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-02 20:53:34,855 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-02 20:53:34,855 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-02 20:53:34,855 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-02 20:53:34,855 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-02 20:53:34,856 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-02 20:53:34,856 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 15:11:14+00:00 (UTC)
2025-09-02 20:53:34,856 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-02 20:53:34,856 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-02 20:53:34,857 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-02 20:53:34,857 - prompt_manager.app.api.v1.endpoints.auth - INFO - Current user: <prompt_manager.app.models.user.User object at 0x1064fc110>
2025-09-02 20:53:34,858 - prompt_manager.app.api.v1.endpoints.auth - INFO - Token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJwcmlzaGF0YW5rNkBnbWFpbC5jb20iLCJlbWFpbCI6InByaXNoYXRhbms2QGdtYWlsLmNvbSIsInVzZXJfaWQiOiIyIiwic2NvcGVzIjpbIm1lIl0sImV4cCI6MTc1NjkxMjI3NCwiaWF0IjoxNzU2ODI1ODc0LCJuYmYiOjE3NTY4MjU4NzQsImlzcyI6IlByb21wdCBNYW5hZ2VtZW50IFNlcnZpY2UiLCJhdWQiOiJQcm9tcHQgTWFuYWdlbWVudCBTZXJ2aWNlIn0.UqKRaGkAH1H3kCz5WgfH-r5iPZPt5QKznkzatqqqtKg
2025-09-02 20:53:34,869 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/auth/me Status: 200 Time: 15.76ms
2025-09-02 20:53:34,870 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-02 20:53:34,870 - prompt_manager.app.database - INFO - Closing database session
2025-09-02 20:53:34,870 - prompt_manager.app.database - INFO - Database session closed
2025-09-02 20:53:36,733 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 20:53:36,734 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.84ms
2025-09-02 20:53:37,864 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 20:53:37,865 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.11ms
2025-09-02 20:53:37,870 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 20:53:37,872 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.72ms
2025-09-02 20:53:39,514 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 20:53:39,514 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.74ms
2025-09-02 20:53:39,520 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api
2025-09-02 20:53:39,521 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api Status: 200 Time: 0.96ms
2025-09-02 20:53:43,713 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 20:53:43,713 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.57ms
2025-09-02 20:54:04,345 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 20:54:04,350 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 5.45ms
2025-09-02 20:54:10,835 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 20:54:10,836 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.8ms
2025-09-02 20:54:10,883 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 20:54:10,883 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.41ms
2025-09-02 20:54:10,889 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/2
2025-09-02 20:54:10,891 - prompt_manager.app.database - INFO - Creating new database session
2025-09-02 20:54:10,891 - prompt_manager.app.database - INFO - Yielding database session
2025-09-02 20:54:10,892 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-02 20:54:10,892 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-02 20:54:10,892 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-02 20:54:10,892 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-02 20:54:10,892 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-02 20:54:10,893 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-02 20:54:10,893 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 15:11:14+00:00 (UTC)
2025-09-02 20:54:10,893 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-02 20:54:10,893 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-02 20:54:10,898 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-02 20:54:10,898 - prompt_manager.app.api.v1.api - INFO - Retrieving prompt with ID: 2
2025-09-02 20:54:10,899 - prompt_manager.app.api.v1.api - INFO - Successfully retrieved prompt Coding Assistant v1.0.1 (ID: 2)
2025-09-02 20:54:10,900 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/2 Status: 200 Time: 10.18ms
2025-09-02 20:54:10,900 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-02 20:54:10,900 - prompt_manager.app.database - INFO - Closing database session
2025-09-02 20:54:10,900 - prompt_manager.app.database - INFO - Database session closed
2025-09-02 20:54:27,517 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 20:54:27,519 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.7ms
2025-09-02 20:54:27,571 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 20:54:27,571 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.43ms
2025-09-02 20:54:27,578 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/2/test-persona
2025-09-02 20:54:27,580 - prompt_manager.app.database - INFO - Creating new database session
2025-09-02 20:54:27,580 - prompt_manager.app.database - INFO - Yielding database session
2025-09-02 20:54:27,580 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-02 20:54:27,580 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-02 20:54:27,580 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-02 20:54:27,580 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-02 20:54:27,580 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-02 20:54:27,581 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-02 20:54:27,581 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 15:11:14+00:00 (UTC)
2025-09-02 20:54:27,581 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-02 20:54:27,581 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-02 20:54:27,581 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-02 20:54:27,582 - prompt_manager.app.api.v1.api - INFO - Testing persona for prompt ID 2 (user: prishatank6@gmail.com)
2025-09-02 20:54:28,781 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-02 20:54:28,785 - prompt_manager.app.api.v1.api - INFO - Generated persona response for prompt 'Coding Assistant' with persona type 'dynamic_persona'
2025-09-02 20:54:28,785 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/2/test-persona Status: 200 Time: 1206.97ms
2025-09-02 20:54:28,786 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-02 20:54:28,786 - prompt_manager.app.database - INFO - Closing database session
2025-09-02 20:54:28,787 - prompt_manager.app.database - INFO - Database session closed
2025-09-02 20:58:41,609 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-02 20:58:42,644 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-02 20:58:42,645 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-02 20:58:42,645 - prompt_manager.app.main - INFO - Database URL: sqlite:///./prompts.db
2025-09-02 20:58:48,503 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-02 20:58:49,254 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-02 20:58:49,254 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-02 20:58:49,255 - prompt_manager.app.main - INFO - Database URL: sqlite:///./prompts.db
2025-09-02 20:59:39,780 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-02 20:59:40,911 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-02 20:59:40,911 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-02 20:59:40,911 - prompt_manager.app.main - INFO - Database URL: sqlite:///./prompts.db
2025-09-02 21:00:19,909 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-02 21:00:20,903 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-02 21:00:20,903 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-02 21:00:20,903 - prompt_manager.app.main - INFO - Database URL: sqlite:///./prompts.db
2025-09-02 21:01:12,152 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-02 21:01:13,271 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-02 21:01:13,271 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-02 21:01:13,271 - prompt_manager.app.main - INFO - Database URL: sqlite:///./prompts.db
2025-09-02 21:02:16,671 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-02 21:02:17,492 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-02 21:02:17,492 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-02 21:02:17,492 - prompt_manager.app.main - INFO - Database URL: sqlite:///./prompts.db
2025-09-02 21:02:47,010 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-02 21:02:47,870 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-02 21:02:47,870 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-02 21:02:47,870 - prompt_manager.app.main - INFO - Database URL: sqlite:///./prompts.db
2025-09-02 21:02:57,858 - prompt_manager.app.main - INFO - Request: GET http://testserver/health
2025-09-02 21:02:57,860 - prompt_manager.app.main - INFO - Response: GET http://testserver/health Status: 200 Time: 1.11ms
2025-09-02 21:02:57,861 - httpx - INFO - HTTP Request: GET http://testserver/health "HTTP/1.1 200 OK"
2025-09-02 21:02:57,891 - prompt_manager.app.main - INFO - Request: POST http://testserver/register
2025-09-02 21:02:57,891 - prompt_manager.app.main - INFO - Response: POST http://testserver/register Status: 404 Time: 0.34ms
2025-09-02 21:02:57,892 - httpx - INFO - HTTP Request: POST http://testserver/register "HTTP/1.1 404 Not Found"
2025-09-02 21:02:57,895 - prompt_manager.app.main - INFO - Request: POST http://testserver/register
2025-09-02 21:02:57,896 - prompt_manager.app.main - INFO - Response: POST http://testserver/register Status: 404 Time: 0.31ms
2025-09-02 21:02:57,896 - httpx - INFO - HTTP Request: POST http://testserver/register "HTTP/1.1 404 Not Found"
2025-09-02 21:02:57,897 - prompt_manager.app.main - INFO - Request: POST http://testserver/token
2025-09-02 21:02:57,897 - prompt_manager.app.main - INFO - Response: POST http://testserver/token Status: 404 Time: 0.19ms
2025-09-02 21:02:57,898 - httpx - INFO - HTTP Request: POST http://testserver/token "HTTP/1.1 404 Not Found"
2025-09-02 21:02:57,902 - prompt_manager.app.main - INFO - Request: POST http://testserver/register
2025-09-02 21:02:57,903 - prompt_manager.app.main - INFO - Response: POST http://testserver/register Status: 404 Time: 0.32ms
2025-09-02 21:02:57,903 - httpx - INFO - HTTP Request: POST http://testserver/register "HTTP/1.1 404 Not Found"
2025-09-02 21:02:57,904 - prompt_manager.app.main - INFO - Request: POST http://testserver/token
2025-09-02 21:02:57,904 - prompt_manager.app.main - INFO - Response: POST http://testserver/token Status: 404 Time: 0.23ms
2025-09-02 21:02:57,905 - httpx - INFO - HTTP Request: POST http://testserver/token "HTTP/1.1 404 Not Found"
2025-09-02 21:02:57,910 - prompt_manager.app.main - INFO - Request: POST http://testserver/register
2025-09-02 21:02:57,910 - prompt_manager.app.main - INFO - Response: POST http://testserver/register Status: 404 Time: 0.3ms
2025-09-02 21:02:57,911 - httpx - INFO - HTTP Request: POST http://testserver/register "HTTP/1.1 404 Not Found"
2025-09-02 21:02:57,911 - prompt_manager.app.main - INFO - Request: POST http://testserver/token
2025-09-02 21:02:57,911 - prompt_manager.app.main - INFO - Response: POST http://testserver/token Status: 404 Time: 0.19ms
2025-09-02 21:02:57,912 - httpx - INFO - HTTP Request: POST http://testserver/token "HTTP/1.1 404 Not Found"
2025-09-02 21:02:57,917 - prompt_manager.app.main - INFO - Request: POST http://testserver/register
2025-09-02 21:02:57,917 - prompt_manager.app.main - INFO - Response: POST http://testserver/register Status: 404 Time: 0.34ms
2025-09-02 21:02:57,918 - httpx - INFO - HTTP Request: POST http://testserver/register "HTTP/1.1 404 Not Found"
2025-09-02 21:02:57,919 - prompt_manager.app.main - INFO - Request: POST http://testserver/token
2025-09-02 21:02:57,919 - prompt_manager.app.main - INFO - Response: POST http://testserver/token Status: 404 Time: 0.53ms
2025-09-02 21:02:57,920 - httpx - INFO - HTTP Request: POST http://testserver/token "HTTP/1.1 404 Not Found"
2025-09-02 21:02:57,926 - prompt_manager.app.main - INFO - Request: POST http://testserver/register
2025-09-02 21:02:57,926 - prompt_manager.app.main - INFO - Response: POST http://testserver/register Status: 404 Time: 0.29ms
2025-09-02 21:02:57,927 - httpx - INFO - HTTP Request: POST http://testserver/register "HTTP/1.1 404 Not Found"
2025-09-02 21:02:57,927 - prompt_manager.app.main - INFO - Request: POST http://testserver/token
2025-09-02 21:02:57,927 - prompt_manager.app.main - INFO - Response: POST http://testserver/token Status: 404 Time: 0.21ms
2025-09-02 21:02:57,928 - httpx - INFO - HTTP Request: POST http://testserver/token "HTTP/1.1 404 Not Found"
2025-09-02 21:02:57,932 - prompt_manager.app.main - INFO - Request: POST http://testserver/register
2025-09-02 21:02:57,932 - prompt_manager.app.main - INFO - Response: POST http://testserver/register Status: 404 Time: 0.49ms
2025-09-02 21:02:57,933 - httpx - INFO - HTTP Request: POST http://testserver/register "HTTP/1.1 404 Not Found"
2025-09-02 21:02:57,934 - prompt_manager.app.main - INFO - Request: POST http://testserver/token
2025-09-02 21:02:57,934 - prompt_manager.app.main - INFO - Response: POST http://testserver/token Status: 404 Time: 0.29ms
2025-09-02 21:02:57,935 - httpx - INFO - HTTP Request: POST http://testserver/token "HTTP/1.1 404 Not Found"
2025-09-02 21:02:57,942 - prompt_manager.app.main - INFO - Request: POST http://testserver/register
2025-09-02 21:02:57,942 - prompt_manager.app.main - INFO - Response: POST http://testserver/register Status: 404 Time: 0.29ms
2025-09-02 21:02:57,943 - httpx - INFO - HTTP Request: POST http://testserver/register "HTTP/1.1 404 Not Found"
2025-09-02 21:02:57,943 - prompt_manager.app.main - INFO - Request: POST http://testserver/token
2025-09-02 21:02:57,944 - prompt_manager.app.main - INFO - Response: POST http://testserver/token Status: 404 Time: 0.19ms
2025-09-02 21:02:57,944 - httpx - INFO - HTTP Request: POST http://testserver/token "HTTP/1.1 404 Not Found"
2025-09-02 21:04:00,568 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-02 21:04:01,494 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-02 21:04:01,494 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-02 21:04:01,494 - prompt_manager.app.main - INFO - Database URL: sqlite:///./prompts.db
2025-09-02 21:04:37,359 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-02 21:04:38,344 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-02 21:04:38,344 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-02 21:04:38,344 - prompt_manager.app.main - INFO - Database URL: sqlite:///./prompts.db
2025-09-02 21:04:59,045 - prompt_manager.app.main - INFO - Request: GET http://testserver/api/health
2025-09-02 21:04:59,046 - prompt_manager.app.main - INFO - Response: GET http://testserver/api/health Status: 404 Time: 0.6ms
2025-09-02 21:04:59,047 - httpx - INFO - HTTP Request: GET http://testserver/api/health "HTTP/1.1 404 Not Found"
2025-09-02 21:04:59,074 - prompt_manager.app.main - INFO - Request: POST http://testserver/register
2025-09-02 21:04:59,074 - prompt_manager.app.main - INFO - Response: POST http://testserver/register Status: 404 Time: 0.3ms
2025-09-02 21:04:59,075 - httpx - INFO - HTTP Request: POST http://testserver/register "HTTP/1.1 404 Not Found"
2025-09-02 21:04:59,079 - prompt_manager.app.main - INFO - Request: POST http://testserver/register
2025-09-02 21:04:59,079 - prompt_manager.app.main - INFO - Response: POST http://testserver/register Status: 404 Time: 0.37ms
2025-09-02 21:04:59,080 - httpx - INFO - HTTP Request: POST http://testserver/register "HTTP/1.1 404 Not Found"
2025-09-02 21:04:59,080 - prompt_manager.app.main - INFO - Request: POST http://testserver/token
2025-09-02 21:04:59,080 - prompt_manager.app.main - INFO - Response: POST http://testserver/token Status: 404 Time: 0.2ms
2025-09-02 21:04:59,081 - httpx - INFO - HTTP Request: POST http://testserver/token "HTTP/1.1 404 Not Found"
2025-09-02 21:04:59,087 - prompt_manager.app.main - INFO - Request: POST http://testserver/register
2025-09-02 21:04:59,087 - prompt_manager.app.main - INFO - Response: POST http://testserver/register Status: 404 Time: 0.32ms
2025-09-02 21:04:59,088 - httpx - INFO - HTTP Request: POST http://testserver/register "HTTP/1.1 404 Not Found"
2025-09-02 21:04:59,088 - prompt_manager.app.main - INFO - Request: POST http://testserver/token
2025-09-02 21:04:59,089 - prompt_manager.app.main - INFO - Response: POST http://testserver/token Status: 404 Time: 0.21ms
2025-09-02 21:04:59,089 - httpx - INFO - HTTP Request: POST http://testserver/token "HTTP/1.1 404 Not Found"
2025-09-02 21:04:59,094 - prompt_manager.app.main - INFO - Request: POST http://testserver/api/v1/register
2025-09-02 21:04:59,095 - prompt_manager.app.main - INFO - Response: POST http://testserver/api/v1/register Status: 404 Time: 0.29ms
2025-09-02 21:04:59,095 - httpx - INFO - HTTP Request: POST http://testserver/api/v1/register "HTTP/1.1 404 Not Found"
2025-09-02 21:04:59,096 - prompt_manager.app.main - INFO - Request: POST http://testserver/api/v1/token
2025-09-02 21:04:59,096 - prompt_manager.app.main - INFO - Response: POST http://testserver/api/v1/token Status: 404 Time: 0.2ms
2025-09-02 21:04:59,097 - httpx - INFO - HTTP Request: POST http://testserver/api/v1/token "HTTP/1.1 404 Not Found"
2025-09-02 21:04:59,103 - prompt_manager.app.main - INFO - Request: POST http://testserver/api/v1/register
2025-09-02 21:04:59,103 - prompt_manager.app.main - INFO - Response: POST http://testserver/api/v1/register Status: 404 Time: 0.31ms
2025-09-02 21:04:59,104 - httpx - INFO - HTTP Request: POST http://testserver/api/v1/register "HTTP/1.1 404 Not Found"
2025-09-02 21:04:59,104 - prompt_manager.app.main - INFO - Request: POST http://testserver/api/v1/token
2025-09-02 21:04:59,104 - prompt_manager.app.main - INFO - Response: POST http://testserver/api/v1/token Status: 404 Time: 0.28ms
2025-09-02 21:04:59,105 - httpx - INFO - HTTP Request: POST http://testserver/api/v1/token "HTTP/1.1 404 Not Found"
2025-09-02 21:04:59,110 - prompt_manager.app.main - INFO - Request: POST http://testserver/api/v1/register
2025-09-02 21:04:59,110 - prompt_manager.app.main - INFO - Response: POST http://testserver/api/v1/register Status: 404 Time: 0.24ms
2025-09-02 21:04:59,111 - httpx - INFO - HTTP Request: POST http://testserver/api/v1/register "HTTP/1.1 404 Not Found"
2025-09-02 21:04:59,111 - prompt_manager.app.main - INFO - Request: POST http://testserver/api/v1/token
2025-09-02 21:04:59,111 - prompt_manager.app.main - INFO - Response: POST http://testserver/api/v1/token Status: 404 Time: 0.19ms
2025-09-02 21:04:59,112 - httpx - INFO - HTTP Request: POST http://testserver/api/v1/token "HTTP/1.1 404 Not Found"
2025-09-02 21:04:59,117 - prompt_manager.app.main - INFO - Request: POST http://testserver/api/v1/register
2025-09-02 21:04:59,118 - prompt_manager.app.main - INFO - Response: POST http://testserver/api/v1/register Status: 404 Time: 0.4ms
2025-09-02 21:04:59,119 - httpx - INFO - HTTP Request: POST http://testserver/api/v1/register "HTTP/1.1 404 Not Found"
2025-09-02 21:04:59,119 - prompt_manager.app.main - INFO - Request: POST http://testserver/api/v1/token
2025-09-02 21:04:59,120 - prompt_manager.app.main - INFO - Response: POST http://testserver/api/v1/token Status: 404 Time: 0.26ms
2025-09-02 21:04:59,120 - httpx - INFO - HTTP Request: POST http://testserver/api/v1/token "HTTP/1.1 404 Not Found"
2025-09-02 21:04:59,125 - prompt_manager.app.main - INFO - Request: POST http://testserver/api/v1/register
2025-09-02 21:04:59,126 - prompt_manager.app.main - INFO - Response: POST http://testserver/api/v1/register Status: 404 Time: 0.28ms
2025-09-02 21:04:59,126 - httpx - INFO - HTTP Request: POST http://testserver/api/v1/register "HTTP/1.1 404 Not Found"
2025-09-02 21:04:59,128 - prompt_manager.app.main - INFO - Request: POST http://testserver/api/v1/token
2025-09-02 21:04:59,128 - prompt_manager.app.main - INFO - Response: POST http://testserver/api/v1/token Status: 404 Time: 0.18ms
2025-09-02 21:04:59,128 - httpx - INFO - HTTP Request: POST http://testserver/api/v1/token "HTTP/1.1 404 Not Found"
2025-09-02 21:55:25,900 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-02 21:55:27,034 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-02 21:55:27,035 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-02 21:55:27,035 - prompt_manager.app.main - INFO - Database URL: sqlite:///./prompts.db
2025-09-02 21:59:12,712 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-02 21:59:14,705 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-02 21:59:14,706 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-02 21:59:14,706 - prompt_manager.app.main - INFO - Database URL: sqlite:///./prompts.db
2025-09-02 22:01:37,467 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-02 22:01:38,609 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-02 22:01:38,609 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-02 22:01:38,609 - prompt_manager.app.main - INFO - Database URL: sqlite:///./prompts.db
2025-09-02 22:02:40,544 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-02 22:02:41,512 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-02 22:02:41,512 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-02 22:02:41,512 - prompt_manager.app.main - INFO - Database URL: sqlite:///./prompts.db
2025-09-02 22:03:03,447 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-02 22:03:04,289 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-02 22:03:04,289 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-02 22:03:04,290 - prompt_manager.app.main - INFO - Database URL: sqlite:///./prompts.db
2025-09-02 22:05:26,904 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 22:05:26,910 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 6.05ms
2025-09-02 22:07:56,741 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-02 22:07:56,741 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-02 22:07:56,741 - prompt_manager.app.main - INFO - Database URL: sqlite:///./prompts.db
2025-09-02 22:09:48,688 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 22:09:48,697 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 9.39ms
2025-09-02 22:09:48,703 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-02 22:09:48,705 - prompt_manager.app.database - INFO - Creating new database session
2025-09-02 22:09:48,705 - prompt_manager.app.database - INFO - Yielding database session
2025-09-02 22:09:49,039 - prompt_manager.app.api.v1.endpoints.auth - INFO - Created access token for user: prishatank6@gmail.com
2025-09-02 22:09:49,047 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 200 Time: 343.93ms
2025-09-02 22:09:49,048 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-02 22:09:49,048 - prompt_manager.app.database - INFO - Closing database session
2025-09-02 22:09:49,048 - prompt_manager.app.database - INFO - Database session closed
2025-09-02 22:09:49,116 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 22:09:49,116 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.36ms
2025-09-02 22:09:50,487 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 22:09:50,489 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.19ms
2025-09-02 22:09:50,494 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/auth/me
2025-09-02 22:09:50,495 - prompt_manager.app.database - INFO - Creating new database session
2025-09-02 22:09:50,496 - prompt_manager.app.database - INFO - Yielding database session
2025-09-02 22:09:50,496 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-02 22:09:50,496 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-02 22:09:50,496 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-02 22:09:50,496 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-02 22:09:50,497 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-02 22:09:50,497 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-02 22:09:50,497 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 16:39:49+00:00 (UTC)
2025-09-02 22:09:50,498 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-02 22:09:50,498 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-02 22:09:50,499 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-02 22:09:50,500 - prompt_manager.app.api.v1.endpoints.auth - INFO - Current user: <prompt_manager.app.models.user.User object at 0x111dda410>
2025-09-02 22:09:50,500 - prompt_manager.app.api.v1.endpoints.auth - INFO - Token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJwcmlzaGF0YW5rNkBnbWFpbC5jb20iLCJlbWFpbCI6InByaXNoYXRhbms2QGdtYWlsLmNvbSIsInVzZXJfaWQiOiIyIiwic2NvcGVzIjpbIm1lIl0sImV4cCI6MTc1NjkxNzU4OSwiaWF0IjoxNzU2ODMxMTg5LCJuYmYiOjE3NTY4MzExODksImlzcyI6IlByb21wdCBNYW5hZ2VtZW50IFNlcnZpY2UiLCJhdWQiOiJQcm9tcHQgTWFuYWdlbWVudCBTZXJ2aWNlIn0.3YpAbv6GysMmBtqWSXdbCvpaTMhKKnopGaa5yJzpbxM
2025-09-02 22:09:50,501 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/auth/me Status: 200 Time: 7.15ms
2025-09-02 22:09:50,502 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-02 22:09:50,502 - prompt_manager.app.database - INFO - Closing database session
2025-09-02 22:09:50,502 - prompt_manager.app.database - INFO - Database session closed
2025-09-02 22:09:52,154 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 22:09:52,155 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.15ms
2025-09-02 22:09:55,436 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 22:09:55,438 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.48ms
2025-09-02 22:09:55,451 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/1
2025-09-02 22:09:55,454 - prompt_manager.app.database - INFO - Creating new database session
2025-09-02 22:09:55,454 - prompt_manager.app.database - INFO - Yielding database session
2025-09-02 22:09:55,454 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-02 22:09:55,454 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-02 22:09:55,454 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-02 22:09:55,454 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-02 22:09:55,454 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-02 22:09:55,455 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-02 22:09:55,455 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 16:39:49+00:00 (UTC)
2025-09-02 22:09:55,456 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-02 22:09:55,456 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-02 22:09:55,462 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-02 22:09:55,463 - prompt_manager.app.api.v1.api - INFO - Retrieving prompt with ID: 1
2025-09-02 22:09:55,469 - prompt_manager.app.api.v1.api - INFO - Successfully retrieved prompt Coding Assistant v1.0.0 (ID: 1)
2025-09-02 22:09:55,470 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/1 Status: 200 Time: 19.01ms
2025-09-02 22:09:55,470 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-02 22:09:55,470 - prompt_manager.app.database - INFO - Closing database session
2025-09-02 22:09:55,471 - prompt_manager.app.database - INFO - Database session closed
2025-09-02 22:10:07,972 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 22:10:07,979 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 22:10:07,980 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 8.23ms
2025-09-02 22:10:07,983 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 3.84ms
2025-09-02 22:10:08,028 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/1/test-persona
2025-09-02 22:10:08,029 - prompt_manager.app.database - INFO - Creating new database session
2025-09-02 22:10:08,029 - prompt_manager.app.database - INFO - Yielding database session
2025-09-02 22:10:08,029 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-02 22:10:08,029 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-02 22:10:08,029 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-02 22:10:08,029 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-02 22:10:08,029 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-02 22:10:08,029 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-02 22:10:08,029 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 16:39:49+00:00 (UTC)
2025-09-02 22:10:08,029 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-02 22:10:08,029 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-02 22:10:08,030 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-02 22:10:08,030 - prompt_manager.app.api.v1.api - INFO - Testing persona for prompt ID 1 (user: prishatank6@gmail.com)
2025-09-02 22:10:09,422 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-02 22:10:09,432 - prompt_manager.app.api.v1.api - INFO - Generated persona response for prompt 'Coding Assistant' with persona type 'dynamic_persona'
2025-09-02 22:10:09,433 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/1/test-persona Status: 200 Time: 1405.63ms
2025-09-02 22:10:09,434 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-02 22:10:09,434 - prompt_manager.app.database - INFO - Closing database session
2025-09-02 22:10:09,435 - prompt_manager.app.database - INFO - Database session closed
2025-09-02 22:10:16,442 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 22:10:16,443 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.24ms
2025-09-02 22:10:16,459 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/1/test-persona
2025-09-02 22:10:16,461 - prompt_manager.app.database - INFO - Creating new database session
2025-09-02 22:10:16,461 - prompt_manager.app.database - INFO - Yielding database session
2025-09-02 22:10:16,461 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-02 22:10:16,461 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-02 22:10:16,462 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-02 22:10:16,462 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-02 22:10:16,462 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-02 22:10:16,462 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-02 22:10:16,463 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 16:39:49+00:00 (UTC)
2025-09-02 22:10:16,463 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-02 22:10:16,463 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-02 22:10:16,468 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-02 22:10:16,468 - prompt_manager.app.api.v1.api - INFO - Testing persona for prompt ID 1 (user: prishatank6@gmail.com)
2025-09-02 22:10:17,305 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-02 22:10:17,311 - prompt_manager.app.api.v1.api - INFO - Generated persona response for prompt 'Coding Assistant' with persona type 'dynamic_persona'
2025-09-02 22:10:17,312 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/1/test-persona Status: 200 Time: 853.06ms
2025-09-02 22:10:17,313 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-02 22:10:17,313 - prompt_manager.app.database - INFO - Closing database session
2025-09-02 22:10:17,314 - prompt_manager.app.database - INFO - Database session closed
2025-09-02 22:10:20,738 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 22:10:20,739 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.26ms
2025-09-02 22:10:27,418 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 22:10:27,419 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.0ms
2025-09-02 22:10:27,425 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1name/marketing/versions
2025-09-02 22:10:27,426 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1name/marketing/versions Status: 404 Time: 0.97ms
2025-09-02 22:10:42,039 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 22:10:42,041 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.6ms
2025-09-02 22:10:42,048 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1name/marketing/versions
2025-09-02 22:10:42,049 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1name/marketing/versions Status: 404 Time: 0.68ms
2025-09-02 22:10:42,100 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 22:10:42,100 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.73ms
2025-09-02 22:10:42,103 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1name/marketing/versions
2025-09-02 22:10:42,103 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1name/marketing/versions Status: 404 Time: 0.36ms
2025-09-02 22:10:42,107 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1name/coding assistant/history
2025-09-02 22:10:42,107 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1name/coding assistant/history Status: 404 Time: 0.34ms
2025-09-02 22:11:05,321 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-02 22:11:06,414 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-02 22:11:08,824 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-02 22:11:08,824 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-02 22:11:08,824 - prompt_manager.app.main - INFO - Database URL: sqlite:///./prompts.db
2025-09-02 22:11:09,026 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-02 22:11:10,101 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-02 22:11:10,101 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-02 22:11:10,101 - prompt_manager.app.main - INFO - Database URL: sqlite:///./prompts.db
2025-09-02 22:12:24,317 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 22:12:24,322 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 4.79ms
2025-09-02 22:12:39,667 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 22:12:39,669 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.53ms
2025-09-02 22:12:39,673 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-02 22:12:39,677 - prompt_manager.app.database - INFO - Creating new database session
2025-09-02 22:12:39,678 - prompt_manager.app.database - INFO - Yielding database session
2025-09-02 22:12:39,986 - prompt_manager.app.api.v1.endpoints.auth - INFO - Created access token for user: prishatank6@gmail.com
2025-09-02 22:12:39,996 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 200 Time: 323.89ms
2025-09-02 22:12:39,997 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-02 22:12:39,997 - prompt_manager.app.database - INFO - Closing database session
2025-09-02 22:12:39,997 - prompt_manager.app.database - INFO - Database session closed
2025-09-02 22:12:40,050 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 22:12:40,051 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.31ms
2025-09-02 22:12:41,738 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 22:12:41,738 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.76ms
2025-09-02 22:12:45,021 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 22:12:45,022 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.79ms
2025-09-02 22:12:45,036 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/1
2025-09-02 22:12:45,037 - prompt_manager.app.database - INFO - Creating new database session
2025-09-02 22:12:45,037 - prompt_manager.app.database - INFO - Yielding database session
2025-09-02 22:12:45,038 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-02 22:12:45,038 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-02 22:12:45,038 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-02 22:12:45,038 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-02 22:12:45,038 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-02 22:12:45,039 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-02 22:12:45,039 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 16:42:39+00:00 (UTC)
2025-09-02 22:12:45,040 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-02 22:12:45,040 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-02 22:12:45,042 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-02 22:12:45,043 - prompt_manager.app.api.v1.api - INFO - Retrieving prompt with ID: 1
2025-09-02 22:12:45,049 - prompt_manager.app.api.v1.api - INFO - Successfully retrieved prompt Coding Assistant v1.0.0 (ID: 1)
2025-09-02 22:12:45,050 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/1 Status: 200 Time: 14.51ms
2025-09-02 22:12:45,052 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-02 22:12:45,052 - prompt_manager.app.database - INFO - Closing database session
2025-09-02 22:12:45,052 - prompt_manager.app.database - INFO - Database session closed
2025-09-02 22:13:00,493 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 22:13:00,495 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.61ms
2025-09-02 22:13:00,548 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 22:13:00,548 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.51ms
2025-09-02 22:13:00,557 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/1/test-persona
2025-09-02 22:13:00,558 - prompt_manager.app.database - INFO - Creating new database session
2025-09-02 22:13:00,558 - prompt_manager.app.database - INFO - Yielding database session
2025-09-02 22:13:00,558 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-02 22:13:00,558 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-02 22:13:00,558 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-02 22:13:00,558 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-02 22:13:00,558 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-02 22:13:00,559 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-02 22:13:00,559 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 16:42:39+00:00 (UTC)
2025-09-02 22:13:00,559 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-02 22:13:00,559 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-02 22:13:00,561 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-02 22:13:00,561 - prompt_manager.app.api.v1.api - INFO - Testing persona for prompt ID 1 (user: prishatank6@gmail.com)
2025-09-02 22:13:01,885 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-02 22:13:01,895 - prompt_manager.app.api.v1.api - INFO - Generated persona response for prompt 'Coding Assistant' with persona type 'dynamic_persona'
2025-09-02 22:13:01,896 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/1/test-persona Status: 200 Time: 1339.25ms
2025-09-02 22:13:01,897 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-02 22:13:01,897 - prompt_manager.app.database - INFO - Closing database session
2025-09-02 22:13:01,898 - prompt_manager.app.database - INFO - Database session closed
2025-09-02 22:13:24,876 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 22:13:24,877 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.95ms
2025-09-02 22:13:33,139 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 22:13:33,141 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.38ms
2025-09-02 22:13:33,190 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 22:13:33,190 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.48ms
2025-09-02 22:13:33,193 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/name/coding assistant/versions?skip=0&limit=10
2025-09-02 22:13:33,195 - prompt_manager.app.database - INFO - Creating new database session
2025-09-02 22:13:33,195 - prompt_manager.app.database - INFO - Yielding database session
2025-09-02 22:13:33,195 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-02 22:13:33,195 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-02 22:13:33,195 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-02 22:13:33,195 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-02 22:13:33,195 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-02 22:13:33,197 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-02 22:13:33,197 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 16:42:39+00:00 (UTC)
2025-09-02 22:13:33,197 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-02 22:13:33,197 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-02 22:13:33,201 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-02 22:13:33,201 - prompt_manager.app.api.v1.api - INFO - Listing versions for prompt: coding assistant
2025-09-02 22:13:33,206 - prompt_manager.app.api.v1.api - WARNING - No versions found for prompt: coding assistant
2025-09-02 22:13:33,206 - prompt_manager.app.database - ERROR - Error in database session: Prompt not found
2025-09-02 22:13:33,206 - prompt_manager.app.database - INFO - Closing database session
2025-09-02 22:13:33,206 - prompt_manager.app.database - INFO - Database session closed
2025-09-02 22:13:33,207 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/name/coding assistant/versions?skip=0&limit=10 Status: 404 Time: 13.32ms
2025-09-02 22:13:41,072 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 22:13:41,074 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.27ms
2025-09-02 22:13:41,122 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 22:13:41,122 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.42ms
2025-09-02 22:13:41,125 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/name/Coding Assistant/versions?skip=0&limit=10
2025-09-02 22:13:41,126 - prompt_manager.app.database - INFO - Creating new database session
2025-09-02 22:13:41,126 - prompt_manager.app.database - INFO - Yielding database session
2025-09-02 22:13:41,126 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-02 22:13:41,126 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-02 22:13:41,126 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-02 22:13:41,126 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-02 22:13:41,126 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-02 22:13:41,126 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-02 22:13:41,126 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 16:42:39+00:00 (UTC)
2025-09-02 22:13:41,126 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-02 22:13:41,126 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-02 22:13:41,127 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-02 22:13:41,127 - prompt_manager.app.api.v1.api - INFO - Listing versions for prompt: Coding Assistant
2025-09-02 22:13:41,134 - prompt_manager.app.api.v1.api - INFO - Found 2 versions for prompt: Coding Assistant
2025-09-02 22:13:41,134 - prompt_manager.app.api.v1.api - ERROR - Error listing versions for Coding Assistant: name 'json' is not defined
Traceback (most recent call last):
  File "/Users/prisha/Desktop/Coding/system prompt/prompt_manager/app/api/v1/api.py", line 573, in list_prompt_versions
    content=json.dumps([v.dict() for v in versions], default=str),
            ^^^^
NameError: name 'json' is not defined
2025-09-02 22:13:41,137 - prompt_manager.app.database - ERROR - Error in database session: 
2025-09-02 22:13:41,137 - prompt_manager.app.database - INFO - Closing database session
2025-09-02 22:13:41,137 - prompt_manager.app.database - INFO - Database session closed
2025-09-02 22:13:41,137 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/name/Coding Assistant/versions?skip=0&limit=10 Status: 500 Time: 11.77ms
2025-09-02 22:13:43,421 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 22:13:43,422 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.8ms
2025-09-02 22:13:43,429 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/name/Coding Assistant/versions?skip=0&limit=10
2025-09-02 22:13:43,430 - prompt_manager.app.database - INFO - Creating new database session
2025-09-02 22:13:43,430 - prompt_manager.app.database - INFO - Yielding database session
2025-09-02 22:13:43,430 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-02 22:13:43,430 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-02 22:13:43,430 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-02 22:13:43,430 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-02 22:13:43,430 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-02 22:13:43,431 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-02 22:13:43,431 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 16:42:39+00:00 (UTC)
2025-09-02 22:13:43,431 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-02 22:13:43,431 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-02 22:13:43,432 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-02 22:13:43,432 - prompt_manager.app.api.v1.api - INFO - Listing versions for prompt: Coding Assistant
2025-09-02 22:13:43,436 - prompt_manager.app.api.v1.api - INFO - Found 2 versions for prompt: Coding Assistant
2025-09-02 22:13:43,436 - prompt_manager.app.api.v1.api - ERROR - Error listing versions for Coding Assistant: name 'json' is not defined
Traceback (most recent call last):
  File "/Users/prisha/Desktop/Coding/system prompt/prompt_manager/app/api/v1/api.py", line 573, in list_prompt_versions
    content=json.dumps([v.dict() for v in versions], default=str),
            ^^^^
NameError: name 'json' is not defined
2025-09-02 22:13:43,437 - prompt_manager.app.database - ERROR - Error in database session: 
2025-09-02 22:13:43,437 - prompt_manager.app.database - INFO - Closing database session
2025-09-02 22:13:43,437 - prompt_manager.app.database - INFO - Database session closed
2025-09-02 22:13:43,438 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/name/Coding Assistant/versions?skip=0&limit=10 Status: 500 Time: 9.36ms
2025-09-02 22:13:44,404 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 22:13:44,405 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.1ms
2025-09-02 22:13:44,410 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/name/Coding Assistant/versions?skip=0&limit=10
2025-09-02 22:13:44,411 - prompt_manager.app.database - INFO - Creating new database session
2025-09-02 22:13:44,411 - prompt_manager.app.database - INFO - Yielding database session
2025-09-02 22:13:44,411 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-02 22:13:44,411 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-02 22:13:44,411 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-02 22:13:44,411 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-02 22:13:44,411 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-02 22:13:44,412 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-02 22:13:44,412 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 16:42:39+00:00 (UTC)
2025-09-02 22:13:44,412 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-02 22:13:44,412 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-02 22:13:44,412 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-02 22:13:44,413 - prompt_manager.app.api.v1.api - INFO - Listing versions for prompt: Coding Assistant
2025-09-02 22:13:44,414 - prompt_manager.app.api.v1.api - INFO - Found 2 versions for prompt: Coding Assistant
2025-09-02 22:13:44,414 - prompt_manager.app.api.v1.api - ERROR - Error listing versions for Coding Assistant: name 'json' is not defined
Traceback (most recent call last):
  File "/Users/prisha/Desktop/Coding/system prompt/prompt_manager/app/api/v1/api.py", line 573, in list_prompt_versions
    content=json.dumps([v.dict() for v in versions], default=str),
            ^^^^
NameError: name 'json' is not defined
2025-09-02 22:13:44,414 - prompt_manager.app.database - ERROR - Error in database session: 
2025-09-02 22:13:44,414 - prompt_manager.app.database - INFO - Closing database session
2025-09-02 22:13:44,415 - prompt_manager.app.database - INFO - Database session closed
2025-09-02 22:13:44,416 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/name/Coding Assistant/versions?skip=0&limit=10 Status: 500 Time: 5.99ms
2025-09-02 22:13:47,554 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 22:13:47,555 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.01ms
2025-09-02 22:13:47,566 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/1/history?skip=0&limit=10
2025-09-02 22:13:47,567 - prompt_manager.app.database - INFO - Creating new database session
2025-09-02 22:13:47,568 - prompt_manager.app.database - INFO - Yielding database session
2025-09-02 22:13:47,568 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-02 22:13:47,568 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-02 22:13:47,568 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-02 22:13:47,569 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-02 22:13:47,569 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-02 22:13:47,569 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-02 22:13:47,570 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 16:42:39+00:00 (UTC)
2025-09-02 22:13:47,570 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-02 22:13:47,570 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-02 22:13:47,571 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-02 22:13:47,571 - prompt_manager.app.api.v1.api - INFO - Retrieving history for prompt ID: 1
2025-09-02 22:13:47,581 - prompt_manager.app.api.v1.api - INFO - Found 1 history items for prompt ID: 1
2025-09-02 22:13:47,581 - prompt_manager.app.api.v1.api - ERROR - Error retrieving history for prompt 1: name 'json' is not defined
Traceback (most recent call last):
  File "/Users/prisha/Desktop/Coding/system prompt/prompt_manager/app/api/v1/api.py", line 676, in get_prompt_history
    content=json.dumps([h.dict() for h in history_items], default=str),
            ^^^^
NameError: name 'json' is not defined
2025-09-02 22:13:47,581 - prompt_manager.app.database - ERROR - Error in database session: 
2025-09-02 22:13:47,581 - prompt_manager.app.database - INFO - Closing database session
2025-09-02 22:13:47,582 - prompt_manager.app.database - INFO - Database session closed
2025-09-02 22:13:47,582 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/1/history?skip=0&limit=10 Status: 500 Time: 16.3ms
2025-09-02 23:09:56,193 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-02 23:09:56,193 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-02 23:09:56,194 - prompt_manager.app.main - INFO - Database URL: sqlite:///./prompts.db
2025-09-02 23:10:07,014 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/1/test-persona
2025-09-02 23:10:07,022 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/1/test-persona Status: 401 Time: 8.17ms
2025-09-02 23:10:38,160 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/login
2025-09-02 23:10:38,167 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/login Status: 404 Time: 6.01ms
2025-09-02 23:11:01,182 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-02 23:11:01,187 - prompt_manager.app.database - INFO - Creating new database session
2025-09-02 23:11:01,187 - prompt_manager.app.database - INFO - Yielding database session
2025-09-02 23:11:01,489 - prompt_manager.app.api.v1.endpoints.auth - INFO - Created access token for user: admin@example.com
2025-09-02 23:11:01,499 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 200 Time: 316.63ms
2025-09-02 23:11:01,500 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-02 23:11:01,500 - prompt_manager.app.database - INFO - Closing database session
2025-09-02 23:11:01,500 - prompt_manager.app.database - INFO - Database session closed
2025-09-02 23:11:21,978 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 23:11:21,985 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 7.54ms
2025-09-02 23:11:22,004 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/74/test-persona
2025-09-02 23:11:22,011 - prompt_manager.app.database - INFO - Creating new database session
2025-09-02 23:11:22,012 - prompt_manager.app.database - INFO - Yielding database session
2025-09-02 23:11:22,013 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-02 23:11:22,013 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-02 23:11:22,013 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-02 23:11:22,013 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-02 23:11:22,014 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-02 23:11:22,015 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-02 23:11:22,015 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 17:29:14+00:00 (UTC)
2025-09-02 23:11:22,015 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-02 23:11:22,016 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-02 23:11:22,027 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-02 23:11:22,028 - prompt_manager.app.api.v1.api - INFO - Testing persona for prompt ID 74 (user: prishatank6@gmail.com)
2025-09-02 23:11:22,040 - prompt_manager.app.database - ERROR - Error in database session: 
2025-09-02 23:11:22,040 - prompt_manager.app.database - INFO - Closing database session
2025-09-02 23:11:22,040 - prompt_manager.app.database - INFO - Database session closed
2025-09-02 23:11:22,040 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/74/test-persona Status: 404 Time: 36.09ms
2025-09-02 23:12:49,766 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/1/test-persona
2025-09-02 23:12:49,772 - prompt_manager.app.database - INFO - Creating new database session
2025-09-02 23:12:49,772 - prompt_manager.app.database - INFO - Yielding database session
2025-09-02 23:12:49,773 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-02 23:12:49,773 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-02 23:12:49,773 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-02 23:12:49,773 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-02 23:12:49,773 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-02 23:12:49,781 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-02 23:12:49,781 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 17:41:01+00:00 (UTC)
2025-09-02 23:12:49,781 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-02 23:12:49,781 - prompt_manager.app.core.security - INFO - Looking up user with email: admin@example.com
2025-09-02 23:12:49,792 - prompt_manager.app.core.security - INFO - Found user: admin@example.com (ID: 1)
2025-09-02 23:12:49,798 - prompt_manager.app.database - ERROR - Error in database session: [{'type': 'string_type', 'loc': ('body',), 'msg': 'Input should be a valid string', 'input': {'user_input': 'Hello, who are you?'}, 'url': 'https://errors.pydantic.dev/2.4/v/string_type'}]
2025-09-02 23:12:49,798 - prompt_manager.app.database - INFO - Closing database session
2025-09-02 23:12:49,799 - prompt_manager.app.database - INFO - Database session closed
2025-09-02 23:12:49,799 - prompt_manager.app.main - ERROR - Validation error for request: POST http://localhost:8000/api/v1/prompts/1/test-persona
2025-09-02 23:12:49,800 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/1/test-persona Status: 422 Time: 34.33ms
2025-09-02 23:13:30,880 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/1/test-persona
2025-09-02 23:13:30,883 - prompt_manager.app.database - INFO - Creating new database session
2025-09-02 23:13:30,883 - prompt_manager.app.database - INFO - Yielding database session
2025-09-02 23:13:30,883 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-02 23:13:30,883 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-02 23:13:30,883 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-02 23:13:30,883 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-02 23:13:30,883 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-02 23:13:30,884 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-02 23:13:30,884 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 17:41:01+00:00 (UTC)
2025-09-02 23:13:30,885 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-02 23:13:30,885 - prompt_manager.app.core.security - INFO - Looking up user with email: admin@example.com
2025-09-02 23:13:30,896 - prompt_manager.app.core.security - INFO - Found user: admin@example.com (ID: 1)
2025-09-02 23:13:30,897 - prompt_manager.app.database - ERROR - Error in database session: [{'type': 'string_type', 'loc': ('body',), 'msg': 'Input should be a valid string', 'input': {'input': 'Hello, who are you?'}, 'url': 'https://errors.pydantic.dev/2.4/v/string_type'}]
2025-09-02 23:13:30,897 - prompt_manager.app.database - INFO - Closing database session
2025-09-02 23:13:30,898 - prompt_manager.app.database - INFO - Database session closed
2025-09-02 23:13:30,898 - prompt_manager.app.main - ERROR - Validation error for request: POST http://localhost:8000/api/v1/prompts/1/test-persona
2025-09-02 23:13:30,898 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/1/test-persona Status: 422 Time: 18.64ms
2025-09-02 23:15:49,007 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/1/test-persona
2025-09-02 23:15:49,019 - prompt_manager.app.database - INFO - Creating new database session
2025-09-02 23:15:49,019 - prompt_manager.app.database - INFO - Yielding database session
2025-09-02 23:15:49,020 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-02 23:15:49,020 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-02 23:15:49,020 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-02 23:15:49,020 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-02 23:15:49,020 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-02 23:15:49,021 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-02 23:15:49,021 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 17:41:01+00:00 (UTC)
2025-09-02 23:15:49,022 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-02 23:15:49,022 - prompt_manager.app.core.security - INFO - Looking up user with email: admin@example.com
2025-09-02 23:15:49,033 - prompt_manager.app.core.security - INFO - Found user: admin@example.com (ID: 1)
2025-09-02 23:15:49,034 - prompt_manager.app.api.v1.api - INFO - Testing persona for prompt ID 1 (user: admin@example.com)
2025-09-02 23:15:49,863 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-02 23:15:49,866 - prompt_manager.app.api.v1.api - INFO - Generated persona response for prompt 'Coding Assistant' with persona type 'dynamic_persona'
2025-09-02 23:15:49,867 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/1/test-persona Status: 200 Time: 860.33ms
2025-09-02 23:15:49,868 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-02 23:15:49,868 - prompt_manager.app.database - INFO - Closing database session
2025-09-02 23:15:49,869 - prompt_manager.app.database - INFO - Database session closed
2025-09-02 23:21:15,167 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 23:21:15,176 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 8.68ms
2025-09-02 23:21:15,192 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/74/test-persona
2025-09-02 23:21:15,198 - prompt_manager.app.database - INFO - Creating new database session
2025-09-02 23:21:15,198 - prompt_manager.app.database - INFO - Yielding database session
2025-09-02 23:21:15,198 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-02 23:21:15,198 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-02 23:21:15,198 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-02 23:21:15,198 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-02 23:21:15,198 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-02 23:21:15,206 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-02 23:21:15,217 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 17:29:14+00:00 (UTC)
2025-09-02 23:21:15,217 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-02 23:21:15,218 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-02 23:21:15,253 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-02 23:21:15,255 - prompt_manager.app.api.v1.api - INFO - Testing persona for prompt ID 74 (user: prishatank6@gmail.com)
2025-09-02 23:21:15,259 - prompt_manager.app.database - ERROR - Error in database session: 
2025-09-02 23:21:15,259 - prompt_manager.app.database - INFO - Closing database session
2025-09-02 23:21:15,267 - prompt_manager.app.database - INFO - Database session closed
2025-09-02 23:21:15,272 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/74/test-persona Status: 404 Time: 79.85ms
2025-09-02 23:21:16,948 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 23:21:16,949 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.52ms
2025-09-02 23:21:16,966 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/74/test-persona
2025-09-02 23:21:16,970 - prompt_manager.app.database - INFO - Creating new database session
2025-09-02 23:21:16,970 - prompt_manager.app.database - INFO - Yielding database session
2025-09-02 23:21:16,970 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-02 23:21:16,970 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-02 23:21:16,970 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-02 23:21:16,971 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-02 23:21:16,971 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-02 23:21:16,972 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-02 23:21:16,972 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 17:29:14+00:00 (UTC)
2025-09-02 23:21:16,972 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-02 23:21:16,972 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-02 23:21:16,973 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-02 23:21:16,973 - prompt_manager.app.api.v1.api - INFO - Testing persona for prompt ID 74 (user: prishatank6@gmail.com)
2025-09-02 23:21:16,976 - prompt_manager.app.database - ERROR - Error in database session: 
2025-09-02 23:21:16,976 - prompt_manager.app.database - INFO - Closing database session
2025-09-02 23:21:16,976 - prompt_manager.app.database - INFO - Database session closed
2025-09-02 23:21:16,979 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/74/test-persona Status: 404 Time: 13.52ms
2025-09-02 23:21:18,589 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 23:21:18,594 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 5.09ms
2025-09-02 23:21:18,611 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/74/test-persona
2025-09-02 23:21:18,621 - prompt_manager.app.database - INFO - Creating new database session
2025-09-02 23:21:18,622 - prompt_manager.app.database - INFO - Yielding database session
2025-09-02 23:21:18,623 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-02 23:21:18,623 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-02 23:21:18,623 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-02 23:21:18,623 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-02 23:21:18,624 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-02 23:21:18,633 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-02 23:21:18,634 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 17:29:14+00:00 (UTC)
2025-09-02 23:21:18,634 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-02 23:21:18,635 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-02 23:21:18,646 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-02 23:21:18,646 - prompt_manager.app.api.v1.api - INFO - Testing persona for prompt ID 74 (user: prishatank6@gmail.com)
2025-09-02 23:21:18,647 - prompt_manager.app.database - ERROR - Error in database session: 
2025-09-02 23:21:18,647 - prompt_manager.app.database - INFO - Closing database session
2025-09-02 23:21:18,648 - prompt_manager.app.database - INFO - Database session closed
2025-09-02 23:21:18,648 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/74/test-persona Status: 404 Time: 37.35ms
2025-09-02 23:21:29,054 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 23:21:29,057 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 3.02ms
2025-09-02 23:21:43,166 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 23:21:43,168 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 2.79ms
2025-09-02 23:21:43,179 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-02 23:21:43,187 - prompt_manager.app.database - INFO - Creating new database session
2025-09-02 23:21:43,188 - prompt_manager.app.database - INFO - Yielding database session
2025-09-02 23:21:43,489 - prompt_manager.app.api.v1.endpoints.auth - INFO - Created access token for user: prishatank6@gmail.com
2025-09-02 23:21:43,495 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 200 Time: 315.91ms
2025-09-02 23:21:43,495 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-02 23:21:43,495 - prompt_manager.app.database - INFO - Closing database session
2025-09-02 23:21:43,495 - prompt_manager.app.database - INFO - Database session closed
2025-09-02 23:21:43,545 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 23:21:43,545 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.33ms
2025-09-02 23:21:45,066 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 23:21:45,067 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.56ms
2025-09-02 23:21:49,075 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 23:21:49,088 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 12.9ms
2025-09-02 23:21:49,099 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/1
2025-09-02 23:21:49,102 - prompt_manager.app.database - INFO - Creating new database session
2025-09-02 23:21:49,103 - prompt_manager.app.database - INFO - Yielding database session
2025-09-02 23:21:49,103 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-02 23:21:49,103 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-02 23:21:49,103 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-02 23:21:49,103 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-02 23:21:49,104 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-02 23:21:49,105 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-02 23:21:49,106 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 17:51:43+00:00 (UTC)
2025-09-02 23:21:49,106 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-02 23:21:49,106 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-02 23:21:49,122 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-02 23:21:49,123 - prompt_manager.app.api.v1.api - INFO - Retrieving prompt with ID: 1
2025-09-02 23:21:49,125 - prompt_manager.app.api.v1.api - INFO - Successfully retrieved prompt Coding Assistant v1.0.0 (ID: 1)
2025-09-02 23:21:49,126 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/1 Status: 200 Time: 27.72ms
2025-09-02 23:21:49,127 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-02 23:21:49,127 - prompt_manager.app.database - INFO - Closing database session
2025-09-02 23:21:49,127 - prompt_manager.app.database - INFO - Database session closed
2025-09-02 23:21:56,510 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 23:21:56,512 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 2.92ms
2025-09-02 23:22:01,599 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 23:22:01,599 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.47ms
2025-09-02 23:22:03,764 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 23:22:03,765 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.85ms
2025-09-02 23:22:03,771 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-02 23:22:03,773 - prompt_manager.app.database - INFO - Creating new database session
2025-09-02 23:22:03,773 - prompt_manager.app.database - INFO - Yielding database session
2025-09-02 23:22:03,773 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-02 23:22:03,773 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-02 23:22:03,773 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-02 23:22:03,773 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-02 23:22:03,774 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-02 23:22:03,774 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-02 23:22:03,774 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 17:51:43+00:00 (UTC)
2025-09-02 23:22:03,774 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-02 23:22:03,774 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-02 23:22:03,780 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-02 23:22:03,781 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-02 23:22:03,801 - prompt_manager.app.api.v1.api - INFO - Found 2 prompts out of 2 total
2025-09-02 23:22:03,803 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 32.19ms
2025-09-02 23:22:03,804 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-02 23:22:03,804 - prompt_manager.app.database - INFO - Closing database session
2025-09-02 23:22:03,804 - prompt_manager.app.database - INFO - Database session closed
2025-09-02 23:22:23,483 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 23:22:23,484 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.19ms
2025-09-02 23:22:23,546 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 23:22:23,546 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.49ms
2025-09-02 23:22:23,553 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/1/test-persona
2025-09-02 23:22:23,554 - prompt_manager.app.database - INFO - Creating new database session
2025-09-02 23:22:23,554 - prompt_manager.app.database - INFO - Yielding database session
2025-09-02 23:22:23,554 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-02 23:22:23,554 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-02 23:22:23,554 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-02 23:22:23,554 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-02 23:22:23,554 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-02 23:22:23,554 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-02 23:22:23,554 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 17:51:43+00:00 (UTC)
2025-09-02 23:22:23,555 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-02 23:22:23,555 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-02 23:22:23,556 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-02 23:22:23,556 - prompt_manager.app.api.v1.api - INFO - Testing persona for prompt ID 1 (user: prishatank6@gmail.com)
2025-09-02 23:22:24,435 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-02 23:22:24,447 - prompt_manager.app.api.v1.api - INFO - Generated persona response for prompt 'Coding Assistant' with persona type 'dynamic_persona'
2025-09-02 23:22:24,447 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/1/test-persona Status: 200 Time: 893.87ms
2025-09-02 23:22:24,448 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-02 23:22:24,448 - prompt_manager.app.database - INFO - Closing database session
2025-09-02 23:22:24,448 - prompt_manager.app.database - INFO - Database session closed
2025-09-02 23:22:48,769 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 23:22:48,770 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.82ms
2025-09-02 23:23:08,238 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-02 23:23:11,636 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-02 23:23:11,636 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-02 23:23:11,637 - prompt_manager.app.main - INFO - Database URL: sqlite:///./prompts.db
2025-09-02 23:34:14,999 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 23:34:15,006 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 7.65ms
2025-09-02 23:34:24,610 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 23:34:24,612 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.74ms
2025-09-02 23:34:24,617 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-02 23:34:24,620 - prompt_manager.app.database - INFO - Creating new database session
2025-09-02 23:34:24,621 - prompt_manager.app.database - INFO - Yielding database session
2025-09-02 23:34:24,942 - prompt_manager.app.api.v1.endpoints.auth - INFO - Created access token for user: prishatank6@gmail.com
2025-09-02 23:34:24,950 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 200 Time: 333.37ms
2025-09-02 23:34:24,951 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-02 23:34:24,951 - prompt_manager.app.database - INFO - Closing database session
2025-09-02 23:34:24,951 - prompt_manager.app.database - INFO - Database session closed
2025-09-02 23:34:24,981 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 23:34:24,982 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.35ms
2025-09-02 23:34:27,587 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 23:34:27,588 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.3ms
2025-09-02 23:34:29,834 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 23:34:29,836 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.95ms
2025-09-02 23:34:29,848 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-02 23:34:29,849 - prompt_manager.app.database - INFO - Creating new database session
2025-09-02 23:34:29,850 - prompt_manager.app.database - INFO - Yielding database session
2025-09-02 23:34:29,850 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-02 23:34:29,850 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-02 23:34:29,850 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-02 23:34:29,851 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-02 23:34:29,851 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-02 23:34:29,851 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-02 23:34:29,852 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 18:04:24+00:00 (UTC)
2025-09-02 23:34:29,852 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-02 23:34:29,852 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-02 23:34:29,854 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-02 23:34:29,854 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-02 23:34:29,864 - prompt_manager.app.api.v1.api - INFO - Found 2 prompts out of 2 total
2025-09-02 23:34:29,865 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 17.22ms
2025-09-02 23:34:29,866 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-02 23:34:29,866 - prompt_manager.app.database - INFO - Closing database session
2025-09-02 23:34:29,866 - prompt_manager.app.database - INFO - Database session closed
2025-09-02 23:34:37,268 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 23:34:37,269 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.89ms
2025-09-02 23:34:37,286 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/1
2025-09-02 23:34:37,288 - prompt_manager.app.database - INFO - Creating new database session
2025-09-02 23:34:37,288 - prompt_manager.app.database - INFO - Yielding database session
2025-09-02 23:34:37,288 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-02 23:34:37,288 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-02 23:34:37,289 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-02 23:34:37,289 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-02 23:34:37,289 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-02 23:34:37,290 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-02 23:34:37,290 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 18:04:24+00:00 (UTC)
2025-09-02 23:34:37,290 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-02 23:34:37,290 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-02 23:34:37,293 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-02 23:34:37,293 - prompt_manager.app.api.v1.api - INFO - Retrieving prompt with ID: 1
2025-09-02 23:34:37,295 - prompt_manager.app.api.v1.api - INFO - Successfully retrieved prompt Coding Assistant v1.0.0 (ID: 1)
2025-09-02 23:34:37,296 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/1 Status: 200 Time: 10.21ms
2025-09-02 23:34:37,296 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-02 23:34:37,297 - prompt_manager.app.database - INFO - Closing database session
2025-09-02 23:34:37,297 - prompt_manager.app.database - INFO - Database session closed
2025-09-02 23:42:35,331 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 23:42:35,339 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 7.96ms
2025-09-02 23:42:41,509 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 23:42:41,511 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 2.56ms
2025-09-02 23:42:41,563 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 23:42:41,566 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 3.05ms
2025-09-02 23:42:41,571 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/name/Coding Assistant/versions?skip=0&limit=10
2025-09-02 23:42:41,574 - prompt_manager.app.database - INFO - Creating new database session
2025-09-02 23:42:41,575 - prompt_manager.app.database - INFO - Yielding database session
2025-09-02 23:42:41,575 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-02 23:42:41,575 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-02 23:42:41,575 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-02 23:42:41,575 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-02 23:42:41,575 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-02 23:42:41,588 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-02 23:42:41,588 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 18:04:24+00:00 (UTC)
2025-09-02 23:42:41,588 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-02 23:42:41,588 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-02 23:42:41,602 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-02 23:42:41,604 - prompt_manager.app.api.v1.api - INFO - Listing versions for prompt: Coding Assistant
2025-09-02 23:42:41,611 - prompt_manager.app.api.v1.api - INFO - Found 2 versions for prompt: Coding Assistant
2025-09-02 23:42:41,614 - prompt_manager.app.api.v1.api - ERROR - Error listing versions for Coding Assistant: name 'json' is not defined
Traceback (most recent call last):
  File "/Users/prisha/Desktop/Coding/system prompt/prompt_manager/app/api/v1/api.py", line 573, in list_prompt_versions
    content=json.dumps([v.dict() for v in versions], default=str),
            ^^^^
NameError: name 'json' is not defined
2025-09-02 23:42:41,621 - prompt_manager.app.database - ERROR - Error in database session: 
2025-09-02 23:42:41,621 - prompt_manager.app.database - INFO - Closing database session
2025-09-02 23:42:41,621 - prompt_manager.app.database - INFO - Database session closed
2025-09-02 23:42:41,622 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/name/Coding Assistant/versions?skip=0&limit=10 Status: 500 Time: 50.36ms
2025-09-02 23:45:09,211 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-02 23:45:12,554 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-02 23:45:12,555 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-02 23:45:12,555 - prompt_manager.app.main - INFO - Database URL: sqlite:///./prompts.db
2025-09-02 23:45:35,907 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-02 23:45:38,176 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-02 23:45:38,176 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-02 23:45:38,177 - prompt_manager.app.main - INFO - Database URL: sqlite:///./prompts.db
2025-09-02 23:57:38,760 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 23:57:38,767 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 6.95ms
2025-09-02 23:57:38,775 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/name/Coding Assistant/versions?skip=0&limit=10
2025-09-02 23:57:38,780 - prompt_manager.app.database - INFO - Creating new database session
2025-09-02 23:57:38,780 - prompt_manager.app.database - INFO - Yielding database session
2025-09-02 23:57:38,781 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-02 23:57:38,781 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-02 23:57:38,781 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-02 23:57:38,781 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-02 23:57:38,781 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-02 23:57:38,800 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-02 23:57:38,800 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 18:04:24+00:00 (UTC)
2025-09-02 23:57:38,800 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-02 23:57:38,800 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-02 23:57:38,826 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-02 23:57:38,827 - prompt_manager.app.api.v1.api - INFO - Listing versions for prompt: Coding Assistant
2025-09-02 23:57:38,833 - prompt_manager.app.api.v1.api - INFO - Found 2 versions for prompt: Coding Assistant
2025-09-02 23:57:38,835 - prompt_manager.app.api.v1.api - ERROR - Error listing versions for Coding Assistant: name 'json' is not defined
Traceback (most recent call last):
  File "/Users/prisha/Desktop/Coding/system prompt/prompt_manager/app/api/v1/api.py", line 582, in list_prompt_versions
    content=json.dumps([v.dict() for v in versions], default=str),
            ^^^^
NameError: name 'json' is not defined
2025-09-02 23:57:38,837 - prompt_manager.app.database - ERROR - Error in database session: 
2025-09-02 23:57:38,837 - prompt_manager.app.database - INFO - Closing database session
2025-09-02 23:57:38,837 - prompt_manager.app.database - INFO - Database session closed
2025-09-02 23:57:38,838 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/name/Coding Assistant/versions?skip=0&limit=10 Status: 500 Time: 62.53ms
2025-09-02 23:57:40,755 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 23:57:40,756 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.45ms
2025-09-02 23:57:40,759 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/name/Coding Assistant/versions?skip=0&limit=10
2025-09-02 23:57:40,759 - prompt_manager.app.database - INFO - Creating new database session
2025-09-02 23:57:40,759 - prompt_manager.app.database - INFO - Yielding database session
2025-09-02 23:57:40,759 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-02 23:57:40,759 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-02 23:57:40,759 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-02 23:57:40,759 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-02 23:57:40,759 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-02 23:57:40,760 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-02 23:57:40,760 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 18:04:24+00:00 (UTC)
2025-09-02 23:57:40,760 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-02 23:57:40,760 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-02 23:57:40,761 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-02 23:57:40,761 - prompt_manager.app.api.v1.api - INFO - Listing versions for prompt: Coding Assistant
2025-09-02 23:57:40,762 - prompt_manager.app.api.v1.api - INFO - Found 2 versions for prompt: Coding Assistant
2025-09-02 23:57:40,762 - prompt_manager.app.api.v1.api - ERROR - Error listing versions for Coding Assistant: name 'json' is not defined
Traceback (most recent call last):
  File "/Users/prisha/Desktop/Coding/system prompt/prompt_manager/app/api/v1/api.py", line 582, in list_prompt_versions
    content=json.dumps([v.dict() for v in versions], default=str),
            ^^^^
NameError: name 'json' is not defined
2025-09-02 23:57:40,763 - prompt_manager.app.database - ERROR - Error in database session: 
2025-09-02 23:57:40,763 - prompt_manager.app.database - INFO - Closing database session
2025-09-02 23:57:40,763 - prompt_manager.app.database - INFO - Database session closed
2025-09-02 23:57:40,763 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/name/Coding Assistant/versions?skip=0&limit=10 Status: 500 Time: 4.33ms
2025-09-02 23:57:41,167 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 23:57:41,167 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.56ms
2025-09-02 23:57:41,170 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/name/Coding Assistant/versions?skip=0&limit=10
2025-09-02 23:57:41,171 - prompt_manager.app.database - INFO - Creating new database session
2025-09-02 23:57:41,171 - prompt_manager.app.database - INFO - Yielding database session
2025-09-02 23:57:41,171 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-02 23:57:41,171 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-02 23:57:41,171 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-02 23:57:41,171 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-02 23:57:41,171 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-02 23:57:41,171 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-02 23:57:41,171 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 18:04:24+00:00 (UTC)
2025-09-02 23:57:41,171 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-02 23:57:41,171 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-02 23:57:41,172 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-02 23:57:41,172 - prompt_manager.app.api.v1.api - INFO - Listing versions for prompt: Coding Assistant
2025-09-02 23:57:41,174 - prompt_manager.app.api.v1.api - INFO - Found 2 versions for prompt: Coding Assistant
2025-09-02 23:57:41,175 - prompt_manager.app.api.v1.api - ERROR - Error listing versions for Coding Assistant: name 'json' is not defined
Traceback (most recent call last):
  File "/Users/prisha/Desktop/Coding/system prompt/prompt_manager/app/api/v1/api.py", line 582, in list_prompt_versions
    content=json.dumps([v.dict() for v in versions], default=str),
            ^^^^
NameError: name 'json' is not defined
2025-09-02 23:57:41,176 - prompt_manager.app.database - ERROR - Error in database session: 
2025-09-02 23:57:41,176 - prompt_manager.app.database - INFO - Closing database session
2025-09-02 23:57:41,176 - prompt_manager.app.database - INFO - Database session closed
2025-09-02 23:57:41,177 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/name/Coding Assistant/versions?skip=0&limit=10 Status: 500 Time: 6.86ms
2025-09-02 23:57:41,387 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 23:57:41,388 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.51ms
2025-09-02 23:57:41,395 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/name/Coding Assistant/versions?skip=0&limit=10
2025-09-02 23:57:41,396 - prompt_manager.app.database - INFO - Creating new database session
2025-09-02 23:57:41,396 - prompt_manager.app.database - INFO - Yielding database session
2025-09-02 23:57:41,396 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-02 23:57:41,396 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-02 23:57:41,396 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-02 23:57:41,396 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-02 23:57:41,396 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-02 23:57:41,396 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-02 23:57:41,396 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 18:04:24+00:00 (UTC)
2025-09-02 23:57:41,396 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-02 23:57:41,396 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-02 23:57:41,397 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-02 23:57:41,397 - prompt_manager.app.api.v1.api - INFO - Listing versions for prompt: Coding Assistant
2025-09-02 23:57:41,399 - prompt_manager.app.api.v1.api - INFO - Found 2 versions for prompt: Coding Assistant
2025-09-02 23:57:41,400 - prompt_manager.app.api.v1.api - ERROR - Error listing versions for Coding Assistant: name 'json' is not defined
Traceback (most recent call last):
  File "/Users/prisha/Desktop/Coding/system prompt/prompt_manager/app/api/v1/api.py", line 582, in list_prompt_versions
    content=json.dumps([v.dict() for v in versions], default=str),
            ^^^^
NameError: name 'json' is not defined
2025-09-02 23:57:41,401 - prompt_manager.app.database - ERROR - Error in database session: 
2025-09-02 23:57:41,401 - prompt_manager.app.database - INFO - Closing database session
2025-09-02 23:57:41,401 - prompt_manager.app.database - INFO - Database session closed
2025-09-02 23:57:41,402 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/name/Coding Assistant/versions?skip=0&limit=10 Status: 500 Time: 6.84ms
2025-09-02 23:57:45,189 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-02 23:57:45,192 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 2.68ms
2025-09-02 23:57:45,206 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/1/history?skip=0&limit=10
2025-09-02 23:57:45,211 - prompt_manager.app.database - INFO - Creating new database session
2025-09-02 23:57:45,211 - prompt_manager.app.database - INFO - Yielding database session
2025-09-02 23:57:45,212 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-02 23:57:45,213 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-02 23:57:45,213 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-02 23:57:45,213 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-02 23:57:45,213 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-02 23:57:45,215 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-02 23:57:45,215 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 18:04:24+00:00 (UTC)
2025-09-02 23:57:45,215 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-02 23:57:45,215 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-02 23:57:45,223 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-02 23:57:45,223 - prompt_manager.app.api.v1.api - INFO - Retrieving history for prompt ID: 1
2025-09-02 23:57:45,236 - prompt_manager.app.api.v1.api - INFO - Found 1 history items for prompt ID: 1
2025-09-02 23:57:45,237 - prompt_manager.app.api.v1.api - ERROR - Error retrieving history for prompt 1: name 'json' is not defined
Traceback (most recent call last):
  File "/Users/prisha/Desktop/Coding/system prompt/prompt_manager/app/api/v1/api.py", line 695, in get_prompt_history
    content=json.dumps([h.dict() for h in history_items], default=str),
            ^^^^
NameError: name 'json' is not defined
2025-09-02 23:57:45,238 - prompt_manager.app.database - ERROR - Error in database session: 
2025-09-02 23:57:45,238 - prompt_manager.app.database - INFO - Closing database session
2025-09-02 23:57:45,238 - prompt_manager.app.database - INFO - Database session closed
2025-09-02 23:57:45,238 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/1/history?skip=0&limit=10 Status: 500 Time: 32.92ms
2025-09-03 00:07:43,331 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 00:07:46,617 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 00:07:46,618 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-03 00:07:46,618 - prompt_manager.app.main - INFO - Database URL: sqlite:///./prompts.db
2025-09-03 00:09:14,325 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-03 00:09:14,332 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 00:09:14,333 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 00:09:14,732 - prompt_manager.app.database - ERROR - Error in database session: 
2025-09-03 00:09:14,732 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 00:09:14,733 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 00:09:14,734 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 401 Time: 408.64ms
2025-09-03 00:09:55,667 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 00:09:56,872 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 00:09:56,872 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-03 00:09:56,872 - prompt_manager.app.main - INFO - Database URL: sqlite:///./prompts.db
2025-09-03 00:10:39,299 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 00:10:40,764 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 00:10:40,764 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-03 00:10:40,764 - prompt_manager.app.main - INFO - Database URL: sqlite:///./prompts.db
2025-09-03 00:12:28,660 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 00:12:30,022 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 00:12:30,022 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-03 00:12:30,023 - prompt_manager.app.main - INFO - Database URL: sqlite:///./prompts.db
2025-09-03 00:12:33,977 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 00:12:35,661 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 00:12:35,661 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-03 00:12:35,661 - prompt_manager.app.main - INFO - Database URL: sqlite:///./prompts.db
2025-09-03 00:13:17,697 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 00:13:17,719 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 21.31ms
2025-09-03 00:13:17,746 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/1/history?skip=0&limit=10
2025-09-03 00:13:17,754 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 00:13:17,755 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 00:13:17,755 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 00:13:17,755 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 00:13:17,755 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 00:13:17,755 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 00:13:17,756 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 00:13:17,781 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 00:13:17,781 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 18:04:24+00:00 (UTC)
2025-09-03 00:13:17,781 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 00:13:17,781 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 00:13:17,803 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-03 00:13:17,804 - prompt_manager.app.api.v1.api - INFO - Retrieving history for prompt ID: 1
2025-09-03 00:13:17,823 - prompt_manager.app.api.v1.api - INFO - Found 1 history items for prompt ID: 1
2025-09-03 00:13:17,825 - prompt_manager.app.api.v1.api - ERROR - Error retrieving history for prompt 1: name 'json' is not defined
Traceback (most recent call last):
  File "/Users/prisha/Desktop/Coding/system prompt/prompt_manager/app/api/v1/api.py", line 695, in get_prompt_history
    content=json.dumps([h.dict() for h in history_items], default=str),
            ^^^^
NameError: name 'json' is not defined
2025-09-03 00:13:17,828 - prompt_manager.app.database - ERROR - Error in database session: 
2025-09-03 00:13:17,829 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 00:13:17,830 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 00:13:17,831 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/1/history?skip=0&limit=10 Status: 500 Time: 85.02ms
2025-09-03 00:13:30,099 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 00:13:33,246 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 00:13:33,246 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-03 00:13:33,246 - prompt_manager.app.main - INFO - Database URL: sqlite:///./prompts.db
2025-09-03 00:14:43,911 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 00:14:46,217 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 00:14:46,218 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-03 00:14:46,218 - prompt_manager.app.main - INFO - Database URL: sqlite:///./prompts.db
2025-09-03 00:15:16,552 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 00:15:17,847 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 00:15:17,847 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-03 00:15:17,847 - prompt_manager.app.main - INFO - Database URL: sqlite:///./prompts.db
2025-09-03 00:16:49,305 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 00:16:50,720 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 00:16:50,720 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-03 00:16:50,720 - prompt_manager.app.main - INFO - Database URL: sqlite:///./prompts.db
2025-09-03 00:17:11,152 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 00:17:12,563 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 00:17:12,563 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-03 00:17:12,563 - prompt_manager.app.main - INFO - Database URL: sqlite:///./prompts.db
2025-09-03 00:18:24,359 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 00:18:24,365 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 5.5ms
2025-09-03 00:18:24,386 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/1/history?skip=0&limit=10
2025-09-03 00:18:24,388 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 00:18:24,389 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 00:18:24,389 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 00:18:24,389 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 00:18:24,389 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 00:18:24,389 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 00:18:24,389 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 00:18:24,394 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 00:18:24,394 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 18:04:24+00:00 (UTC)
2025-09-03 00:18:24,394 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 00:18:24,394 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 00:18:24,421 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-03 00:18:24,421 - prompt_manager.app.api.v1.api - INFO - Retrieving history for prompt ID: 1
2025-09-03 00:18:24,430 - prompt_manager.app.api.v1.api - INFO - Found 1 history items for prompt ID: 1
2025-09-03 00:18:24,431 - prompt_manager.app.api.v1.api - ERROR - Error retrieving history for prompt 1: name 'json' is not defined
Traceback (most recent call last):
  File "/Users/prisha/Desktop/Coding/system prompt/prompt_manager/app/api/v1/api.py", line 689, in get_prompt_history
    content=json.dumps([{
            ^^^^
NameError: name 'json' is not defined
2025-09-03 00:18:24,432 - prompt_manager.app.database - ERROR - Error in database session: 
2025-09-03 00:18:24,432 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 00:18:24,432 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 00:18:24,433 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/1/history?skip=0&limit=10 Status: 500 Time: 46.25ms
2025-09-03 00:18:25,375 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 00:18:25,376 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.24ms
2025-09-03 00:18:25,383 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/1/history?skip=0&limit=10
2025-09-03 00:18:25,385 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 00:18:25,385 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 00:18:25,386 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 00:18:25,386 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 00:18:25,386 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 00:18:25,386 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 00:18:25,386 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 00:18:25,387 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 00:18:25,387 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 18:04:24+00:00 (UTC)
2025-09-03 00:18:25,387 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 00:18:25,387 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 00:18:25,388 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-03 00:18:25,389 - prompt_manager.app.api.v1.api - INFO - Retrieving history for prompt ID: 1
2025-09-03 00:18:25,392 - prompt_manager.app.api.v1.api - INFO - Found 1 history items for prompt ID: 1
2025-09-03 00:18:25,393 - prompt_manager.app.api.v1.api - ERROR - Error retrieving history for prompt 1: name 'json' is not defined
Traceback (most recent call last):
  File "/Users/prisha/Desktop/Coding/system prompt/prompt_manager/app/api/v1/api.py", line 689, in get_prompt_history
    content=json.dumps([{
            ^^^^
NameError: name 'json' is not defined
2025-09-03 00:18:25,393 - prompt_manager.app.database - ERROR - Error in database session: 
2025-09-03 00:18:25,394 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 00:18:25,394 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 00:18:25,395 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/1/history?skip=0&limit=10 Status: 500 Time: 12.11ms
2025-09-03 00:18:25,771 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 00:18:25,771 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.45ms
2025-09-03 00:18:25,776 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/1/history?skip=0&limit=10
2025-09-03 00:18:25,777 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 00:18:25,777 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 00:18:25,778 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 00:18:25,778 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 00:18:25,778 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 00:18:25,778 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 00:18:25,778 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 00:18:25,778 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 00:18:25,778 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 18:04:24+00:00 (UTC)
2025-09-03 00:18:25,778 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 00:18:25,779 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 00:18:25,780 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-03 00:18:25,780 - prompt_manager.app.api.v1.api - INFO - Retrieving history for prompt ID: 1
2025-09-03 00:18:25,783 - prompt_manager.app.api.v1.api - INFO - Found 1 history items for prompt ID: 1
2025-09-03 00:18:25,783 - prompt_manager.app.api.v1.api - ERROR - Error retrieving history for prompt 1: name 'json' is not defined
Traceback (most recent call last):
  File "/Users/prisha/Desktop/Coding/system prompt/prompt_manager/app/api/v1/api.py", line 689, in get_prompt_history
    content=json.dumps([{
            ^^^^
NameError: name 'json' is not defined
2025-09-03 00:18:25,785 - prompt_manager.app.database - ERROR - Error in database session: 
2025-09-03 00:18:25,785 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 00:18:25,786 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 00:18:25,788 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/1/history?skip=0&limit=10 Status: 500 Time: 11.95ms
2025-09-03 00:18:25,969 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 00:18:25,971 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.11ms
2025-09-03 00:18:25,975 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/1/history?skip=0&limit=10
2025-09-03 00:18:25,976 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 00:18:25,976 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 00:18:25,976 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 00:18:25,976 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 00:18:25,977 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 00:18:25,977 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 00:18:25,977 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 00:18:25,977 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 00:18:25,977 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 18:04:24+00:00 (UTC)
2025-09-03 00:18:25,977 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 00:18:25,977 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 00:18:25,978 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-03 00:18:25,979 - prompt_manager.app.api.v1.api - INFO - Retrieving history for prompt ID: 1
2025-09-03 00:18:25,982 - prompt_manager.app.api.v1.api - INFO - Found 1 history items for prompt ID: 1
2025-09-03 00:18:25,982 - prompt_manager.app.api.v1.api - ERROR - Error retrieving history for prompt 1: name 'json' is not defined
Traceback (most recent call last):
  File "/Users/prisha/Desktop/Coding/system prompt/prompt_manager/app/api/v1/api.py", line 689, in get_prompt_history
    content=json.dumps([{
            ^^^^
NameError: name 'json' is not defined
2025-09-03 00:18:25,984 - prompt_manager.app.database - ERROR - Error in database session: 
2025-09-03 00:18:25,984 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 00:18:25,984 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 00:18:25,986 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/1/history?skip=0&limit=10 Status: 500 Time: 10.38ms
2025-09-03 00:18:26,171 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 00:18:26,171 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.59ms
2025-09-03 00:18:26,177 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/1/history?skip=0&limit=10
2025-09-03 00:18:26,177 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 00:18:26,177 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 00:18:26,178 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 00:18:26,178 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 00:18:26,178 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 00:18:26,178 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 00:18:26,178 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 00:18:26,178 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 00:18:26,178 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 18:04:24+00:00 (UTC)
2025-09-03 00:18:26,178 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 00:18:26,178 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 00:18:26,179 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-03 00:18:26,179 - prompt_manager.app.api.v1.api - INFO - Retrieving history for prompt ID: 1
2025-09-03 00:18:26,180 - prompt_manager.app.api.v1.api - INFO - Found 1 history items for prompt ID: 1
2025-09-03 00:18:26,180 - prompt_manager.app.api.v1.api - ERROR - Error retrieving history for prompt 1: name 'json' is not defined
Traceback (most recent call last):
  File "/Users/prisha/Desktop/Coding/system prompt/prompt_manager/app/api/v1/api.py", line 689, in get_prompt_history
    content=json.dumps([{
            ^^^^
NameError: name 'json' is not defined
2025-09-03 00:18:26,180 - prompt_manager.app.database - ERROR - Error in database session: 
2025-09-03 00:18:26,180 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 00:18:26,180 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 00:18:26,180 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/1/history?skip=0&limit=10 Status: 500 Time: 3.9ms
2025-09-03 00:18:29,117 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 00:18:29,148 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 27.97ms
2025-09-03 00:18:41,314 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 00:18:41,316 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.92ms
2025-09-03 00:18:41,320 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-03 00:18:41,324 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 00:18:41,325 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 00:18:41,662 - prompt_manager.app.api.v1.endpoints.auth - INFO - Created access token for user: prishatank6@gmail.com
2025-09-03 00:18:41,672 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 200 Time: 352.22ms
2025-09-03 00:18:41,673 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 00:18:41,673 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 00:18:41,673 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 00:18:41,707 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 00:18:41,708 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.36ms
2025-09-03 00:21:01,743 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 00:21:01,753 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 10.26ms
2025-09-03 00:21:05,308 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 00:21:05,309 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.06ms
2025-09-03 00:21:12,396 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 00:21:12,399 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 2.44ms
2025-09-03 00:21:13,904 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 00:21:13,905 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.06ms
2025-09-03 00:21:13,912 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/name/Coding Assistant/versions?skip=0&limit=10
2025-09-03 00:21:13,915 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 00:21:13,915 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 00:21:13,916 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 00:21:13,916 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 00:21:13,916 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 00:21:13,916 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 00:21:13,916 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 00:21:13,926 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 00:21:13,926 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 18:48:41+00:00 (UTC)
2025-09-03 00:21:13,926 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 00:21:13,926 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 00:21:13,939 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-03 00:21:13,940 - prompt_manager.app.api.v1.api - INFO - Listing versions for prompt: Coding Assistant
2025-09-03 00:21:13,953 - prompt_manager.app.api.v1.api - INFO - Found 2 versions for prompt: Coding Assistant
2025-09-03 00:21:13,953 - prompt_manager.app.api.v1.api - ERROR - Error listing versions for Coding Assistant: name 'json' is not defined
Traceback (most recent call last):
  File "/Users/prisha/Desktop/Coding/system prompt/prompt_manager/app/api/v1/api.py", line 567, in list_prompt_versions
    content=json.dumps([{
            ^^^^
NameError: name 'json' is not defined
2025-09-03 00:21:13,956 - prompt_manager.app.database - ERROR - Error in database session: 
2025-09-03 00:21:13,956 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 00:21:13,957 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 00:21:13,957 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/name/Coding Assistant/versions?skip=0&limit=10 Status: 500 Time: 45.3ms
2025-09-03 00:21:18,523 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 00:21:18,524 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.01ms
2025-09-03 00:21:18,528 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/1/history?skip=0&limit=10
2025-09-03 00:21:18,529 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 00:21:18,529 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 00:21:18,529 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 00:21:18,529 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 00:21:18,529 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 00:21:18,529 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 00:21:18,530 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 00:21:18,530 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 00:21:18,530 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 18:48:41+00:00 (UTC)
2025-09-03 00:21:18,530 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 00:21:18,530 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 00:21:18,530 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-03 00:21:18,531 - prompt_manager.app.api.v1.api - INFO - Retrieving history for prompt ID: 1
2025-09-03 00:21:18,533 - prompt_manager.app.api.v1.api - INFO - Found 1 history items for prompt ID: 1
2025-09-03 00:21:18,535 - prompt_manager.app.api.v1.api - ERROR - Error retrieving history for prompt 1: name 'json' is not defined
Traceback (most recent call last):
  File "/Users/prisha/Desktop/Coding/system prompt/prompt_manager/app/api/v1/api.py", line 689, in get_prompt_history
    content=json.dumps([{
            ^^^^
NameError: name 'json' is not defined
2025-09-03 00:21:18,536 - prompt_manager.app.database - ERROR - Error in database session: 
2025-09-03 00:21:18,536 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 00:21:18,536 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 00:21:18,537 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/1/history?skip=0&limit=10 Status: 500 Time: 9.14ms
2025-09-03 00:21:24,421 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 00:21:24,423 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.05ms
2025-09-03 00:21:24,476 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 00:21:24,477 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.62ms
2025-09-03 00:21:24,481 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/74/history?skip=0&limit=10
2025-09-03 00:21:24,483 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 00:21:24,483 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 00:21:24,483 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 00:21:24,483 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 00:21:24,483 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 00:21:24,483 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 00:21:24,483 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 00:21:24,484 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 00:21:24,484 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 18:48:41+00:00 (UTC)
2025-09-03 00:21:24,484 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 00:21:24,485 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 00:21:24,490 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-03 00:21:24,491 - prompt_manager.app.api.v1.api - INFO - Retrieving history for prompt ID: 74
2025-09-03 00:21:24,491 - prompt_manager.app.api.v1.api - WARNING - Prompt with ID 74 not found
2025-09-03 00:21:24,492 - prompt_manager.app.database - ERROR - Error in database session: Prompt not found
2025-09-03 00:21:24,492 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 00:21:24,492 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 00:21:24,492 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/74/history?skip=0&limit=10 Status: 404 Time: 11.07ms
2025-09-03 00:21:26,799 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 00:21:26,805 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 5.97ms
2025-09-03 00:21:27,870 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 00:21:27,870 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.48ms
2025-09-03 00:21:30,507 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 00:21:30,508 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.56ms
2025-09-03 00:21:32,785 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 00:21:32,786 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.47ms
2025-09-03 00:21:32,791 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 00:21:32,794 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 00:21:32,794 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 00:21:32,795 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 00:21:32,795 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 00:21:32,795 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 00:21:32,795 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 00:21:32,795 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 00:21:32,800 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 00:21:32,800 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 18:48:41+00:00 (UTC)
2025-09-03 00:21:32,801 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 00:21:32,801 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 00:21:32,814 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-03 00:21:32,816 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 00:21:32,827 - prompt_manager.app.api.v1.api - INFO - Found 2 prompts out of 2 total
2025-09-03 00:21:32,830 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 38.6ms
2025-09-03 00:21:32,831 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 00:21:32,831 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 00:21:32,831 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 00:24:22,770 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 00:24:22,783 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 12.89ms
2025-09-03 00:24:41,968 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 00:24:41,973 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 00:24:41,975 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 7.32ms
2025-09-03 00:24:41,978 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 5.25ms
2025-09-03 00:24:42,069 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/name/Coding Assistant/versions?skip=0&limit=10
2025-09-03 00:24:42,070 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 00:24:42,070 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 00:24:42,070 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 00:24:42,070 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 00:24:42,070 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 00:24:42,070 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 00:24:42,070 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 00:24:42,071 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 00:24:42,071 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 18:48:41+00:00 (UTC)
2025-09-03 00:24:42,071 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 00:24:42,071 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 00:24:42,083 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-03 00:24:42,084 - prompt_manager.app.api.v1.api - INFO - Listing versions for prompt: Coding Assistant
2025-09-03 00:24:42,086 - prompt_manager.app.api.v1.api - INFO - Found 2 versions for prompt: Coding Assistant
2025-09-03 00:24:42,086 - prompt_manager.app.api.v1.api - ERROR - Error listing versions for Coding Assistant: name 'json' is not defined
Traceback (most recent call last):
  File "/Users/prisha/Desktop/Coding/system prompt/prompt_manager/app/api/v1/api.py", line 567, in list_prompt_versions
    content=json.dumps([{
            ^^^^
NameError: name 'json' is not defined
2025-09-03 00:24:42,089 - prompt_manager.app.database - ERROR - Error in database session: 
2025-09-03 00:24:42,089 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 00:24:42,089 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 00:24:42,089 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/name/Coding Assistant/versions?skip=0&limit=10 Status: 500 Time: 20.65ms
2025-09-03 00:26:11,190 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 00:26:13,907 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 00:26:13,908 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-03 00:26:13,908 - prompt_manager.app.main - INFO - Database URL: sqlite:///./prompts.db
2025-09-03 00:26:31,575 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 00:26:33,100 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 00:26:33,100 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-03 00:26:33,100 - prompt_manager.app.main - INFO - Database URL: sqlite:///./prompts.db
2025-09-03 00:27:28,737 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 00:27:30,373 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 00:27:30,373 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-03 00:27:30,373 - prompt_manager.app.main - INFO - Database URL: sqlite:///./prompts.db
2025-09-03 00:28:30,979 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 00:28:32,421 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 00:28:32,421 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-03 00:28:32,421 - prompt_manager.app.main - INFO - Database URL: sqlite:///./prompts.db
2025-09-03 00:30:39,926 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 00:30:39,932 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 5.51ms
2025-09-03 00:30:39,947 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/name/Coding Assistant/versions?skip=0&limit=10
2025-09-03 00:30:39,952 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 00:30:39,954 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 00:30:39,954 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 00:30:39,954 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 00:30:39,954 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 00:30:39,955 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 00:30:39,955 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 00:30:39,972 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 00:30:39,972 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 18:48:41+00:00 (UTC)
2025-09-03 00:30:39,972 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 00:30:39,972 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 00:30:39,992 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-03 00:30:39,995 - prompt_manager.app.database - ERROR - Error in database session: 1 validation errors:
  {'type': 'list_type', 'loc': ('response',), 'msg': 'Input should be a valid list', 'input': {'name': 'Coding Assistant', 'versions': [{'id': 1, 'version': '1.0.0', 'status': 'active', 'is_active': True}], 'total': 1}, 'url': 'https://errors.pydantic.dev/2.4/v/list_type'}

2025-09-03 00:30:39,995 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 00:30:39,995 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 00:30:39,996 - prompt_manager.app.main - ERROR - Unhandled exception: 1 validation errors:
  {'type': 'list_type', 'loc': ('response',), 'msg': 'Input should be a valid list', 'input': {'name': 'Coding Assistant', 'versions': [{'id': 1, 'version': '1.0.0', 'status': 'active', 'is_active': True}], 'total': 1}, 'url': 'https://errors.pydantic.dev/2.4/v/list_type'}

Request: GET http://localhost:8000/api/v1/prompts/name/Coding Assistant/versions?skip=0&limit=10
Client: 127.0.0.1
Traceback (most recent call last):
  File "/Applications/anaconda3/lib/python3.11/site-packages/anyio/streams/memory.py", line 98, in receive
    return self.receive_nowait()
           ^^^^^^^^^^^^^^^^^^^^^
  File "/Applications/anaconda3/lib/python3.11/site-packages/anyio/streams/memory.py", line 93, in receive_nowait
    raise WouldBlock
anyio.WouldBlock

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/base.py", line 78, in call_next
    message = await recv_stream.receive()
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Applications/anaconda3/lib/python3.11/site-packages/anyio/streams/memory.py", line 118, in receive
    raise EndOfStream
anyio.EndOfStream

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/errors.py", line 162, in __call__
    await self.app(scope, receive, _send)
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/base.py", line 108, in __call__
    response = await self.dispatch_func(request, call_next)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/prisha/Desktop/Coding/system prompt/prompt_manager/app/main.py", line 177, in log_requests
    response = await call_next(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/base.py", line 84, in call_next
    raise app_exc
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/base.py", line 70, in coro
    await self.app(scope, receive_or_disconnect, send_no_error)
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/cors.py", line 83, in __call__
    await self.app(scope, receive, send)
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/exceptions.py", line 79, in __call__
    raise exc
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/exceptions.py", line 68, in __call__
    await self.app(scope, receive, sender)
  File "/Applications/anaconda3/lib/python3.11/site-packages/fastapi/middleware/asyncexitstack.py", line 20, in __call__
    raise e
  File "/Applications/anaconda3/lib/python3.11/site-packages/fastapi/middleware/asyncexitstack.py", line 17, in __call__
    await self.app(scope, receive, send)
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/routing.py", line 718, in __call__
    await route.handle(scope, receive, send)
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/routing.py", line 276, in handle
    await self.app(scope, receive, send)
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/routing.py", line 66, in app
    response = await func(request)
               ^^^^^^^^^^^^^^^^^^^
  File "/Applications/anaconda3/lib/python3.11/site-packages/fastapi/routing.py", line 292, in app
    content = await serialize_response(
              ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Applications/anaconda3/lib/python3.11/site-packages/fastapi/routing.py", line 155, in serialize_response
    raise ResponseValidationError(
fastapi.exceptions.ResponseValidationError: 1 validation errors:
  {'type': 'list_type', 'loc': ('response',), 'msg': 'Input should be a valid list', 'input': {'name': 'Coding Assistant', 'versions': [{'id': 1, 'version': '1.0.0', 'status': 'active', 'is_active': True}], 'total': 1}, 'url': 'https://errors.pydantic.dev/2.4/v/list_type'}

2025-09-03 00:31:10,136 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 00:31:11,539 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 00:31:11,539 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-03 00:31:11,539 - prompt_manager.app.main - INFO - Database URL: sqlite:///./prompts.db
2025-09-03 00:31:22,051 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 00:31:23,567 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 00:31:23,567 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-03 00:31:23,567 - prompt_manager.app.main - INFO - Database URL: sqlite:///./prompts.db
2025-09-03 00:31:43,959 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 00:31:43,968 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 8.81ms
2025-09-03 00:31:43,977 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/name/Coding Assistant/versions?skip=0&limit=10
2025-09-03 00:31:43,979 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 00:31:43,984 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 00:31:43,985 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 00:31:43,985 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 00:31:43,985 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 00:31:43,985 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 00:31:43,985 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 00:31:43,990 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 00:31:43,990 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 18:48:41+00:00 (UTC)
2025-09-03 00:31:43,991 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 00:31:43,991 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 00:31:44,011 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-03 00:31:44,012 - prompt_manager.app.database - ERROR - Error in database session: 1 validation errors:
  {'type': 'missing', 'loc': ('response', 0, 'updated_at'), 'msg': 'Field required', 'input': {'id': 1, 'name': 'Coding Assistant', 'version': '1.0.0', 'status': 'active', 'is_active': True, 'created_at': '2023-01-01T00:00:00Z', 'created_by': 'test@example.com', 'description': 'Test prompt'}, 'url': 'https://errors.pydantic.dev/2.4/v/missing'}

2025-09-03 00:31:44,012 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 00:31:44,013 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 00:31:44,014 - prompt_manager.app.main - ERROR - Unhandled exception: 1 validation errors:
  {'type': 'missing', 'loc': ('response', 0, 'updated_at'), 'msg': 'Field required', 'input': {'id': 1, 'name': 'Coding Assistant', 'version': '1.0.0', 'status': 'active', 'is_active': True, 'created_at': '2023-01-01T00:00:00Z', 'created_by': 'test@example.com', 'description': 'Test prompt'}, 'url': 'https://errors.pydantic.dev/2.4/v/missing'}

Request: GET http://localhost:8000/api/v1/prompts/name/Coding Assistant/versions?skip=0&limit=10
Client: 127.0.0.1
Traceback (most recent call last):
  File "/Applications/anaconda3/lib/python3.11/site-packages/anyio/streams/memory.py", line 98, in receive
    return self.receive_nowait()
           ^^^^^^^^^^^^^^^^^^^^^
  File "/Applications/anaconda3/lib/python3.11/site-packages/anyio/streams/memory.py", line 93, in receive_nowait
    raise WouldBlock
anyio.WouldBlock

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/base.py", line 78, in call_next
    message = await recv_stream.receive()
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Applications/anaconda3/lib/python3.11/site-packages/anyio/streams/memory.py", line 118, in receive
    raise EndOfStream
anyio.EndOfStream

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/errors.py", line 162, in __call__
    await self.app(scope, receive, _send)
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/base.py", line 108, in __call__
    response = await self.dispatch_func(request, call_next)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/prisha/Desktop/Coding/system prompt/prompt_manager/app/main.py", line 177, in log_requests
    response = await call_next(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/base.py", line 84, in call_next
    raise app_exc
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/base.py", line 70, in coro
    await self.app(scope, receive_or_disconnect, send_no_error)
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/cors.py", line 83, in __call__
    await self.app(scope, receive, send)
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/exceptions.py", line 79, in __call__
    raise exc
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/exceptions.py", line 68, in __call__
    await self.app(scope, receive, sender)
  File "/Applications/anaconda3/lib/python3.11/site-packages/fastapi/middleware/asyncexitstack.py", line 20, in __call__
    raise e
  File "/Applications/anaconda3/lib/python3.11/site-packages/fastapi/middleware/asyncexitstack.py", line 17, in __call__
    await self.app(scope, receive, send)
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/routing.py", line 718, in __call__
    await route.handle(scope, receive, send)
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/routing.py", line 276, in handle
    await self.app(scope, receive, send)
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/routing.py", line 66, in app
    response = await func(request)
               ^^^^^^^^^^^^^^^^^^^
  File "/Applications/anaconda3/lib/python3.11/site-packages/fastapi/routing.py", line 292, in app
    content = await serialize_response(
              ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Applications/anaconda3/lib/python3.11/site-packages/fastapi/routing.py", line 155, in serialize_response
    raise ResponseValidationError(
fastapi.exceptions.ResponseValidationError: 1 validation errors:
  {'type': 'missing', 'loc': ('response', 0, 'updated_at'), 'msg': 'Field required', 'input': {'id': 1, 'name': 'Coding Assistant', 'version': '1.0.0', 'status': 'active', 'is_active': True, 'created_at': '2023-01-01T00:00:00Z', 'created_by': 'test@example.com', 'description': 'Test prompt'}, 'url': 'https://errors.pydantic.dev/2.4/v/missing'}

2025-09-03 00:31:45,306 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 00:31:45,306 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.62ms
2025-09-03 00:31:45,309 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/name/Coding Assistant/versions?skip=0&limit=10
2025-09-03 00:31:45,310 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 00:31:45,310 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 00:31:45,310 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 00:31:45,310 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 00:31:45,310 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 00:31:45,310 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 00:31:45,310 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 00:31:45,310 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 00:31:45,310 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 18:48:41+00:00 (UTC)
2025-09-03 00:31:45,310 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 00:31:45,310 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 00:31:45,311 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-03 00:31:45,311 - prompt_manager.app.database - ERROR - Error in database session: 1 validation errors:
  {'type': 'missing', 'loc': ('response', 0, 'updated_at'), 'msg': 'Field required', 'input': {'id': 1, 'name': 'Coding Assistant', 'version': '1.0.0', 'status': 'active', 'is_active': True, 'created_at': '2023-01-01T00:00:00Z', 'created_by': 'test@example.com', 'description': 'Test prompt'}, 'url': 'https://errors.pydantic.dev/2.4/v/missing'}

2025-09-03 00:31:45,311 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 00:31:45,312 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 00:31:45,313 - prompt_manager.app.main - ERROR - Unhandled exception: 1 validation errors:
  {'type': 'missing', 'loc': ('response', 0, 'updated_at'), 'msg': 'Field required', 'input': {'id': 1, 'name': 'Coding Assistant', 'version': '1.0.0', 'status': 'active', 'is_active': True, 'created_at': '2023-01-01T00:00:00Z', 'created_by': 'test@example.com', 'description': 'Test prompt'}, 'url': 'https://errors.pydantic.dev/2.4/v/missing'}

Request: GET http://localhost:8000/api/v1/prompts/name/Coding Assistant/versions?skip=0&limit=10
Client: 127.0.0.1
Traceback (most recent call last):
  File "/Applications/anaconda3/lib/python3.11/site-packages/anyio/streams/memory.py", line 98, in receive
    return self.receive_nowait()
           ^^^^^^^^^^^^^^^^^^^^^
  File "/Applications/anaconda3/lib/python3.11/site-packages/anyio/streams/memory.py", line 93, in receive_nowait
    raise WouldBlock
anyio.WouldBlock

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/base.py", line 78, in call_next
    message = await recv_stream.receive()
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Applications/anaconda3/lib/python3.11/site-packages/anyio/streams/memory.py", line 118, in receive
    raise EndOfStream
anyio.EndOfStream

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/errors.py", line 162, in __call__
    await self.app(scope, receive, _send)
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/base.py", line 108, in __call__
    response = await self.dispatch_func(request, call_next)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/prisha/Desktop/Coding/system prompt/prompt_manager/app/main.py", line 177, in log_requests
    response = await call_next(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/base.py", line 84, in call_next
    raise app_exc
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/base.py", line 70, in coro
    await self.app(scope, receive_or_disconnect, send_no_error)
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/cors.py", line 83, in __call__
    await self.app(scope, receive, send)
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/exceptions.py", line 79, in __call__
    raise exc
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/exceptions.py", line 68, in __call__
    await self.app(scope, receive, sender)
  File "/Applications/anaconda3/lib/python3.11/site-packages/fastapi/middleware/asyncexitstack.py", line 20, in __call__
    raise e
  File "/Applications/anaconda3/lib/python3.11/site-packages/fastapi/middleware/asyncexitstack.py", line 17, in __call__
    await self.app(scope, receive, send)
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/routing.py", line 718, in __call__
    await route.handle(scope, receive, send)
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/routing.py", line 276, in handle
    await self.app(scope, receive, send)
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/routing.py", line 66, in app
    response = await func(request)
               ^^^^^^^^^^^^^^^^^^^
  File "/Applications/anaconda3/lib/python3.11/site-packages/fastapi/routing.py", line 292, in app
    content = await serialize_response(
              ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Applications/anaconda3/lib/python3.11/site-packages/fastapi/routing.py", line 155, in serialize_response
    raise ResponseValidationError(
fastapi.exceptions.ResponseValidationError: 1 validation errors:
  {'type': 'missing', 'loc': ('response', 0, 'updated_at'), 'msg': 'Field required', 'input': {'id': 1, 'name': 'Coding Assistant', 'version': '1.0.0', 'status': 'active', 'is_active': True, 'created_at': '2023-01-01T00:00:00Z', 'created_by': 'test@example.com', 'description': 'Test prompt'}, 'url': 'https://errors.pydantic.dev/2.4/v/missing'}

2025-09-03 00:31:46,812 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 00:31:46,813 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.77ms
2025-09-03 00:31:46,820 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/name/Coding Assistant/versions?skip=0&limit=10
2025-09-03 00:31:46,822 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 00:31:46,822 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 00:31:46,822 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 00:31:46,823 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 00:31:46,823 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 00:31:46,823 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 00:31:46,823 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 00:31:46,823 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 00:31:46,824 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 18:48:41+00:00 (UTC)
2025-09-03 00:31:46,824 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 00:31:46,824 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 00:31:46,827 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-03 00:31:46,828 - prompt_manager.app.database - ERROR - Error in database session: 1 validation errors:
  {'type': 'missing', 'loc': ('response', 0, 'updated_at'), 'msg': 'Field required', 'input': {'id': 1, 'name': 'Coding Assistant', 'version': '1.0.0', 'status': 'active', 'is_active': True, 'created_at': '2023-01-01T00:00:00Z', 'created_by': 'test@example.com', 'description': 'Test prompt'}, 'url': 'https://errors.pydantic.dev/2.4/v/missing'}

2025-09-03 00:31:46,829 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 00:31:46,829 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 00:31:46,830 - prompt_manager.app.main - ERROR - Unhandled exception: 1 validation errors:
  {'type': 'missing', 'loc': ('response', 0, 'updated_at'), 'msg': 'Field required', 'input': {'id': 1, 'name': 'Coding Assistant', 'version': '1.0.0', 'status': 'active', 'is_active': True, 'created_at': '2023-01-01T00:00:00Z', 'created_by': 'test@example.com', 'description': 'Test prompt'}, 'url': 'https://errors.pydantic.dev/2.4/v/missing'}

Request: GET http://localhost:8000/api/v1/prompts/name/Coding Assistant/versions?skip=0&limit=10
Client: 127.0.0.1
Traceback (most recent call last):
  File "/Applications/anaconda3/lib/python3.11/site-packages/anyio/streams/memory.py", line 98, in receive
    return self.receive_nowait()
           ^^^^^^^^^^^^^^^^^^^^^
  File "/Applications/anaconda3/lib/python3.11/site-packages/anyio/streams/memory.py", line 93, in receive_nowait
    raise WouldBlock
anyio.WouldBlock

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/base.py", line 78, in call_next
    message = await recv_stream.receive()
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Applications/anaconda3/lib/python3.11/site-packages/anyio/streams/memory.py", line 118, in receive
    raise EndOfStream
anyio.EndOfStream

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/errors.py", line 162, in __call__
    await self.app(scope, receive, _send)
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/base.py", line 108, in __call__
    response = await self.dispatch_func(request, call_next)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/prisha/Desktop/Coding/system prompt/prompt_manager/app/main.py", line 177, in log_requests
    response = await call_next(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/base.py", line 84, in call_next
    raise app_exc
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/base.py", line 70, in coro
    await self.app(scope, receive_or_disconnect, send_no_error)
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/cors.py", line 83, in __call__
    await self.app(scope, receive, send)
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/exceptions.py", line 79, in __call__
    raise exc
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/exceptions.py", line 68, in __call__
    await self.app(scope, receive, sender)
  File "/Applications/anaconda3/lib/python3.11/site-packages/fastapi/middleware/asyncexitstack.py", line 20, in __call__
    raise e
  File "/Applications/anaconda3/lib/python3.11/site-packages/fastapi/middleware/asyncexitstack.py", line 17, in __call__
    await self.app(scope, receive, send)
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/routing.py", line 718, in __call__
    await route.handle(scope, receive, send)
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/routing.py", line 276, in handle
    await self.app(scope, receive, send)
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/routing.py", line 66, in app
    response = await func(request)
               ^^^^^^^^^^^^^^^^^^^
  File "/Applications/anaconda3/lib/python3.11/site-packages/fastapi/routing.py", line 292, in app
    content = await serialize_response(
              ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Applications/anaconda3/lib/python3.11/site-packages/fastapi/routing.py", line 155, in serialize_response
    raise ResponseValidationError(
fastapi.exceptions.ResponseValidationError: 1 validation errors:
  {'type': 'missing', 'loc': ('response', 0, 'updated_at'), 'msg': 'Field required', 'input': {'id': 1, 'name': 'Coding Assistant', 'version': '1.0.0', 'status': 'active', 'is_active': True, 'created_at': '2023-01-01T00:00:00Z', 'created_by': 'test@example.com', 'description': 'Test prompt'}, 'url': 'https://errors.pydantic.dev/2.4/v/missing'}

2025-09-03 00:32:05,593 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 00:32:05,598 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 5.56ms
2025-09-03 00:32:05,619 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/name/Coding Assistant/versions?skip=0&limit=10
2025-09-03 00:32:05,629 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 00:32:05,630 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 00:32:05,630 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 00:32:05,630 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 00:32:05,630 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 00:32:05,630 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 00:32:05,630 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 00:32:05,632 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 00:32:05,632 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 18:48:41+00:00 (UTC)
2025-09-03 00:32:05,632 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 00:32:05,632 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 00:32:05,637 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-03 00:32:05,642 - prompt_manager.app.database - ERROR - Error in database session: 1 validation errors:
  {'type': 'missing', 'loc': ('response', 0, 'updated_at'), 'msg': 'Field required', 'input': {'id': 1, 'name': 'Coding Assistant', 'version': '1.0.0', 'status': 'active', 'is_active': True, 'created_at': '2023-01-01T00:00:00Z', 'created_by': 'test@example.com', 'description': 'Test prompt'}, 'url': 'https://errors.pydantic.dev/2.4/v/missing'}

2025-09-03 00:32:05,642 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 00:32:05,642 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 00:32:05,643 - prompt_manager.app.main - ERROR - Unhandled exception: 1 validation errors:
  {'type': 'missing', 'loc': ('response', 0, 'updated_at'), 'msg': 'Field required', 'input': {'id': 1, 'name': 'Coding Assistant', 'version': '1.0.0', 'status': 'active', 'is_active': True, 'created_at': '2023-01-01T00:00:00Z', 'created_by': 'test@example.com', 'description': 'Test prompt'}, 'url': 'https://errors.pydantic.dev/2.4/v/missing'}

Request: GET http://localhost:8000/api/v1/prompts/name/Coding Assistant/versions?skip=0&limit=10
Client: 127.0.0.1
Traceback (most recent call last):
  File "/Applications/anaconda3/lib/python3.11/site-packages/anyio/streams/memory.py", line 98, in receive
    return self.receive_nowait()
           ^^^^^^^^^^^^^^^^^^^^^
  File "/Applications/anaconda3/lib/python3.11/site-packages/anyio/streams/memory.py", line 93, in receive_nowait
    raise WouldBlock
anyio.WouldBlock

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/base.py", line 78, in call_next
    message = await recv_stream.receive()
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Applications/anaconda3/lib/python3.11/site-packages/anyio/streams/memory.py", line 118, in receive
    raise EndOfStream
anyio.EndOfStream

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/errors.py", line 162, in __call__
    await self.app(scope, receive, _send)
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/base.py", line 108, in __call__
    response = await self.dispatch_func(request, call_next)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/prisha/Desktop/Coding/system prompt/prompt_manager/app/main.py", line 177, in log_requests
    response = await call_next(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/base.py", line 84, in call_next
    raise app_exc
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/base.py", line 70, in coro
    await self.app(scope, receive_or_disconnect, send_no_error)
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/cors.py", line 83, in __call__
    await self.app(scope, receive, send)
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/exceptions.py", line 79, in __call__
    raise exc
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/exceptions.py", line 68, in __call__
    await self.app(scope, receive, sender)
  File "/Applications/anaconda3/lib/python3.11/site-packages/fastapi/middleware/asyncexitstack.py", line 20, in __call__
    raise e
  File "/Applications/anaconda3/lib/python3.11/site-packages/fastapi/middleware/asyncexitstack.py", line 17, in __call__
    await self.app(scope, receive, send)
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/routing.py", line 718, in __call__
    await route.handle(scope, receive, send)
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/routing.py", line 276, in handle
    await self.app(scope, receive, send)
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/routing.py", line 66, in app
    response = await func(request)
               ^^^^^^^^^^^^^^^^^^^
  File "/Applications/anaconda3/lib/python3.11/site-packages/fastapi/routing.py", line 292, in app
    content = await serialize_response(
              ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Applications/anaconda3/lib/python3.11/site-packages/fastapi/routing.py", line 155, in serialize_response
    raise ResponseValidationError(
fastapi.exceptions.ResponseValidationError: 1 validation errors:
  {'type': 'missing', 'loc': ('response', 0, 'updated_at'), 'msg': 'Field required', 'input': {'id': 1, 'name': 'Coding Assistant', 'version': '1.0.0', 'status': 'active', 'is_active': True, 'created_at': '2023-01-01T00:00:00Z', 'created_by': 'test@example.com', 'description': 'Test prompt'}, 'url': 'https://errors.pydantic.dev/2.4/v/missing'}

2025-09-03 00:32:05,787 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 00:32:05,788 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.56ms
2025-09-03 00:32:05,792 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/name/Coding Assistant/versions?skip=0&limit=10
2025-09-03 00:32:05,792 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 00:32:05,792 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 00:32:05,792 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 00:32:05,792 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 00:32:05,792 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 00:32:05,792 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 00:32:05,792 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 00:32:05,793 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 00:32:05,793 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 18:48:41+00:00 (UTC)
2025-09-03 00:32:05,793 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 00:32:05,793 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 00:32:05,794 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-03 00:32:05,795 - prompt_manager.app.database - ERROR - Error in database session: 1 validation errors:
  {'type': 'missing', 'loc': ('response', 0, 'updated_at'), 'msg': 'Field required', 'input': {'id': 1, 'name': 'Coding Assistant', 'version': '1.0.0', 'status': 'active', 'is_active': True, 'created_at': '2023-01-01T00:00:00Z', 'created_by': 'test@example.com', 'description': 'Test prompt'}, 'url': 'https://errors.pydantic.dev/2.4/v/missing'}

2025-09-03 00:32:05,795 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 00:32:05,795 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 00:32:05,795 - prompt_manager.app.main - ERROR - Unhandled exception: 1 validation errors:
  {'type': 'missing', 'loc': ('response', 0, 'updated_at'), 'msg': 'Field required', 'input': {'id': 1, 'name': 'Coding Assistant', 'version': '1.0.0', 'status': 'active', 'is_active': True, 'created_at': '2023-01-01T00:00:00Z', 'created_by': 'test@example.com', 'description': 'Test prompt'}, 'url': 'https://errors.pydantic.dev/2.4/v/missing'}

Request: GET http://localhost:8000/api/v1/prompts/name/Coding Assistant/versions?skip=0&limit=10
Client: 127.0.0.1
Traceback (most recent call last):
  File "/Applications/anaconda3/lib/python3.11/site-packages/anyio/streams/memory.py", line 98, in receive
    return self.receive_nowait()
           ^^^^^^^^^^^^^^^^^^^^^
  File "/Applications/anaconda3/lib/python3.11/site-packages/anyio/streams/memory.py", line 93, in receive_nowait
    raise WouldBlock
anyio.WouldBlock

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/base.py", line 78, in call_next
    message = await recv_stream.receive()
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Applications/anaconda3/lib/python3.11/site-packages/anyio/streams/memory.py", line 118, in receive
    raise EndOfStream
anyio.EndOfStream

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/errors.py", line 162, in __call__
    await self.app(scope, receive, _send)
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/base.py", line 108, in __call__
    response = await self.dispatch_func(request, call_next)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/prisha/Desktop/Coding/system prompt/prompt_manager/app/main.py", line 177, in log_requests
    response = await call_next(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/base.py", line 84, in call_next
    raise app_exc
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/base.py", line 70, in coro
    await self.app(scope, receive_or_disconnect, send_no_error)
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/cors.py", line 83, in __call__
    await self.app(scope, receive, send)
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/exceptions.py", line 79, in __call__
    raise exc
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/exceptions.py", line 68, in __call__
    await self.app(scope, receive, sender)
  File "/Applications/anaconda3/lib/python3.11/site-packages/fastapi/middleware/asyncexitstack.py", line 20, in __call__
    raise e
  File "/Applications/anaconda3/lib/python3.11/site-packages/fastapi/middleware/asyncexitstack.py", line 17, in __call__
    await self.app(scope, receive, send)
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/routing.py", line 718, in __call__
    await route.handle(scope, receive, send)
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/routing.py", line 276, in handle
    await self.app(scope, receive, send)
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/routing.py", line 66, in app
    response = await func(request)
               ^^^^^^^^^^^^^^^^^^^
  File "/Applications/anaconda3/lib/python3.11/site-packages/fastapi/routing.py", line 292, in app
    content = await serialize_response(
              ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Applications/anaconda3/lib/python3.11/site-packages/fastapi/routing.py", line 155, in serialize_response
    raise ResponseValidationError(
fastapi.exceptions.ResponseValidationError: 1 validation errors:
  {'type': 'missing', 'loc': ('response', 0, 'updated_at'), 'msg': 'Field required', 'input': {'id': 1, 'name': 'Coding Assistant', 'version': '1.0.0', 'status': 'active', 'is_active': True, 'created_at': '2023-01-01T00:00:00Z', 'created_by': 'test@example.com', 'description': 'Test prompt'}, 'url': 'https://errors.pydantic.dev/2.4/v/missing'}

2025-09-03 00:32:05,993 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 00:32:05,994 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.62ms
2025-09-03 00:32:05,998 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/name/Coding Assistant/versions?skip=0&limit=10
2025-09-03 00:32:05,999 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 00:32:05,999 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 00:32:05,999 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 00:32:05,999 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 00:32:05,999 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 00:32:05,999 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 00:32:06,000 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 00:32:06,000 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 00:32:06,000 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 18:48:41+00:00 (UTC)
2025-09-03 00:32:06,001 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 00:32:06,001 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 00:32:06,002 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-03 00:32:06,002 - prompt_manager.app.database - ERROR - Error in database session: 1 validation errors:
  {'type': 'missing', 'loc': ('response', 0, 'updated_at'), 'msg': 'Field required', 'input': {'id': 1, 'name': 'Coding Assistant', 'version': '1.0.0', 'status': 'active', 'is_active': True, 'created_at': '2023-01-01T00:00:00Z', 'created_by': 'test@example.com', 'description': 'Test prompt'}, 'url': 'https://errors.pydantic.dev/2.4/v/missing'}

2025-09-03 00:32:06,002 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 00:32:06,002 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 00:32:06,003 - prompt_manager.app.main - ERROR - Unhandled exception: 1 validation errors:
  {'type': 'missing', 'loc': ('response', 0, 'updated_at'), 'msg': 'Field required', 'input': {'id': 1, 'name': 'Coding Assistant', 'version': '1.0.0', 'status': 'active', 'is_active': True, 'created_at': '2023-01-01T00:00:00Z', 'created_by': 'test@example.com', 'description': 'Test prompt'}, 'url': 'https://errors.pydantic.dev/2.4/v/missing'}

Request: GET http://localhost:8000/api/v1/prompts/name/Coding Assistant/versions?skip=0&limit=10
Client: 127.0.0.1
Traceback (most recent call last):
  File "/Applications/anaconda3/lib/python3.11/site-packages/anyio/streams/memory.py", line 98, in receive
    return self.receive_nowait()
           ^^^^^^^^^^^^^^^^^^^^^
  File "/Applications/anaconda3/lib/python3.11/site-packages/anyio/streams/memory.py", line 93, in receive_nowait
    raise WouldBlock
anyio.WouldBlock

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/base.py", line 78, in call_next
    message = await recv_stream.receive()
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Applications/anaconda3/lib/python3.11/site-packages/anyio/streams/memory.py", line 118, in receive
    raise EndOfStream
anyio.EndOfStream

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/errors.py", line 162, in __call__
    await self.app(scope, receive, _send)
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/base.py", line 108, in __call__
    response = await self.dispatch_func(request, call_next)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/prisha/Desktop/Coding/system prompt/prompt_manager/app/main.py", line 177, in log_requests
    response = await call_next(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/base.py", line 84, in call_next
    raise app_exc
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/base.py", line 70, in coro
    await self.app(scope, receive_or_disconnect, send_no_error)
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/cors.py", line 83, in __call__
    await self.app(scope, receive, send)
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/exceptions.py", line 79, in __call__
    raise exc
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/exceptions.py", line 68, in __call__
    await self.app(scope, receive, sender)
  File "/Applications/anaconda3/lib/python3.11/site-packages/fastapi/middleware/asyncexitstack.py", line 20, in __call__
    raise e
  File "/Applications/anaconda3/lib/python3.11/site-packages/fastapi/middleware/asyncexitstack.py", line 17, in __call__
    await self.app(scope, receive, send)
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/routing.py", line 718, in __call__
    await route.handle(scope, receive, send)
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/routing.py", line 276, in handle
    await self.app(scope, receive, send)
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/routing.py", line 66, in app
    response = await func(request)
               ^^^^^^^^^^^^^^^^^^^
  File "/Applications/anaconda3/lib/python3.11/site-packages/fastapi/routing.py", line 292, in app
    content = await serialize_response(
              ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Applications/anaconda3/lib/python3.11/site-packages/fastapi/routing.py", line 155, in serialize_response
    raise ResponseValidationError(
fastapi.exceptions.ResponseValidationError: 1 validation errors:
  {'type': 'missing', 'loc': ('response', 0, 'updated_at'), 'msg': 'Field required', 'input': {'id': 1, 'name': 'Coding Assistant', 'version': '1.0.0', 'status': 'active', 'is_active': True, 'created_at': '2023-01-01T00:00:00Z', 'created_by': 'test@example.com', 'description': 'Test prompt'}, 'url': 'https://errors.pydantic.dev/2.4/v/missing'}

2025-09-03 00:32:06,204 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 00:32:06,205 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.51ms
2025-09-03 00:32:06,209 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/name/Coding Assistant/versions?skip=0&limit=10
2025-09-03 00:32:06,209 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 00:32:06,209 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 00:32:06,210 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 00:32:06,210 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 00:32:06,210 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 00:32:06,210 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 00:32:06,210 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 00:32:06,211 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 00:32:06,211 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 18:48:41+00:00 (UTC)
2025-09-03 00:32:06,211 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 00:32:06,211 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 00:32:06,212 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-03 00:32:06,212 - prompt_manager.app.database - ERROR - Error in database session: 1 validation errors:
  {'type': 'missing', 'loc': ('response', 0, 'updated_at'), 'msg': 'Field required', 'input': {'id': 1, 'name': 'Coding Assistant', 'version': '1.0.0', 'status': 'active', 'is_active': True, 'created_at': '2023-01-01T00:00:00Z', 'created_by': 'test@example.com', 'description': 'Test prompt'}, 'url': 'https://errors.pydantic.dev/2.4/v/missing'}

2025-09-03 00:32:06,212 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 00:32:06,212 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 00:32:06,213 - prompt_manager.app.main - ERROR - Unhandled exception: 1 validation errors:
  {'type': 'missing', 'loc': ('response', 0, 'updated_at'), 'msg': 'Field required', 'input': {'id': 1, 'name': 'Coding Assistant', 'version': '1.0.0', 'status': 'active', 'is_active': True, 'created_at': '2023-01-01T00:00:00Z', 'created_by': 'test@example.com', 'description': 'Test prompt'}, 'url': 'https://errors.pydantic.dev/2.4/v/missing'}

Request: GET http://localhost:8000/api/v1/prompts/name/Coding Assistant/versions?skip=0&limit=10
Client: 127.0.0.1
Traceback (most recent call last):
  File "/Applications/anaconda3/lib/python3.11/site-packages/anyio/streams/memory.py", line 98, in receive
    return self.receive_nowait()
           ^^^^^^^^^^^^^^^^^^^^^
  File "/Applications/anaconda3/lib/python3.11/site-packages/anyio/streams/memory.py", line 93, in receive_nowait
    raise WouldBlock
anyio.WouldBlock

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/base.py", line 78, in call_next
    message = await recv_stream.receive()
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Applications/anaconda3/lib/python3.11/site-packages/anyio/streams/memory.py", line 118, in receive
    raise EndOfStream
anyio.EndOfStream

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/errors.py", line 162, in __call__
    await self.app(scope, receive, _send)
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/base.py", line 108, in __call__
    response = await self.dispatch_func(request, call_next)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/prisha/Desktop/Coding/system prompt/prompt_manager/app/main.py", line 177, in log_requests
    response = await call_next(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/base.py", line 84, in call_next
    raise app_exc
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/base.py", line 70, in coro
    await self.app(scope, receive_or_disconnect, send_no_error)
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/cors.py", line 83, in __call__
    await self.app(scope, receive, send)
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/exceptions.py", line 79, in __call__
    raise exc
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/exceptions.py", line 68, in __call__
    await self.app(scope, receive, sender)
  File "/Applications/anaconda3/lib/python3.11/site-packages/fastapi/middleware/asyncexitstack.py", line 20, in __call__
    raise e
  File "/Applications/anaconda3/lib/python3.11/site-packages/fastapi/middleware/asyncexitstack.py", line 17, in __call__
    await self.app(scope, receive, send)
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/routing.py", line 718, in __call__
    await route.handle(scope, receive, send)
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/routing.py", line 276, in handle
    await self.app(scope, receive, send)
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/routing.py", line 66, in app
    response = await func(request)
               ^^^^^^^^^^^^^^^^^^^
  File "/Applications/anaconda3/lib/python3.11/site-packages/fastapi/routing.py", line 292, in app
    content = await serialize_response(
              ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Applications/anaconda3/lib/python3.11/site-packages/fastapi/routing.py", line 155, in serialize_response
    raise ResponseValidationError(
fastapi.exceptions.ResponseValidationError: 1 validation errors:
  {'type': 'missing', 'loc': ('response', 0, 'updated_at'), 'msg': 'Field required', 'input': {'id': 1, 'name': 'Coding Assistant', 'version': '1.0.0', 'status': 'active', 'is_active': True, 'created_at': '2023-01-01T00:00:00Z', 'created_by': 'test@example.com', 'description': 'Test prompt'}, 'url': 'https://errors.pydantic.dev/2.4/v/missing'}

2025-09-03 00:32:06,420 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 00:32:06,421 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.49ms
2025-09-03 00:32:06,425 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/name/Coding Assistant/versions?skip=0&limit=10
2025-09-03 00:32:06,426 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 00:32:06,427 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 00:32:06,427 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 00:32:06,427 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 00:32:06,427 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 00:32:06,428 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 00:32:06,428 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 00:32:06,428 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 00:32:06,428 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 18:48:41+00:00 (UTC)
2025-09-03 00:32:06,428 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 00:32:06,429 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 00:32:06,430 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-03 00:32:06,431 - prompt_manager.app.database - ERROR - Error in database session: 1 validation errors:
  {'type': 'missing', 'loc': ('response', 0, 'updated_at'), 'msg': 'Field required', 'input': {'id': 1, 'name': 'Coding Assistant', 'version': '1.0.0', 'status': 'active', 'is_active': True, 'created_at': '2023-01-01T00:00:00Z', 'created_by': 'test@example.com', 'description': 'Test prompt'}, 'url': 'https://errors.pydantic.dev/2.4/v/missing'}

2025-09-03 00:32:06,431 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 00:32:06,431 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 00:32:06,433 - prompt_manager.app.main - ERROR - Unhandled exception: 1 validation errors:
  {'type': 'missing', 'loc': ('response', 0, 'updated_at'), 'msg': 'Field required', 'input': {'id': 1, 'name': 'Coding Assistant', 'version': '1.0.0', 'status': 'active', 'is_active': True, 'created_at': '2023-01-01T00:00:00Z', 'created_by': 'test@example.com', 'description': 'Test prompt'}, 'url': 'https://errors.pydantic.dev/2.4/v/missing'}

Request: GET http://localhost:8000/api/v1/prompts/name/Coding Assistant/versions?skip=0&limit=10
Client: 127.0.0.1
Traceback (most recent call last):
  File "/Applications/anaconda3/lib/python3.11/site-packages/anyio/streams/memory.py", line 98, in receive
    return self.receive_nowait()
           ^^^^^^^^^^^^^^^^^^^^^
  File "/Applications/anaconda3/lib/python3.11/site-packages/anyio/streams/memory.py", line 93, in receive_nowait
    raise WouldBlock
anyio.WouldBlock

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/base.py", line 78, in call_next
    message = await recv_stream.receive()
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Applications/anaconda3/lib/python3.11/site-packages/anyio/streams/memory.py", line 118, in receive
    raise EndOfStream
anyio.EndOfStream

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/errors.py", line 162, in __call__
    await self.app(scope, receive, _send)
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/base.py", line 108, in __call__
    response = await self.dispatch_func(request, call_next)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/prisha/Desktop/Coding/system prompt/prompt_manager/app/main.py", line 177, in log_requests
    response = await call_next(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/base.py", line 84, in call_next
    raise app_exc
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/base.py", line 70, in coro
    await self.app(scope, receive_or_disconnect, send_no_error)
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/cors.py", line 83, in __call__
    await self.app(scope, receive, send)
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/exceptions.py", line 79, in __call__
    raise exc
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/middleware/exceptions.py", line 68, in __call__
    await self.app(scope, receive, sender)
  File "/Applications/anaconda3/lib/python3.11/site-packages/fastapi/middleware/asyncexitstack.py", line 20, in __call__
    raise e
  File "/Applications/anaconda3/lib/python3.11/site-packages/fastapi/middleware/asyncexitstack.py", line 17, in __call__
    await self.app(scope, receive, send)
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/routing.py", line 718, in __call__
    await route.handle(scope, receive, send)
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/routing.py", line 276, in handle
    await self.app(scope, receive, send)
  File "/Applications/anaconda3/lib/python3.11/site-packages/starlette/routing.py", line 66, in app
    response = await func(request)
               ^^^^^^^^^^^^^^^^^^^
  File "/Applications/anaconda3/lib/python3.11/site-packages/fastapi/routing.py", line 292, in app
    content = await serialize_response(
              ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Applications/anaconda3/lib/python3.11/site-packages/fastapi/routing.py", line 155, in serialize_response
    raise ResponseValidationError(
fastapi.exceptions.ResponseValidationError: 1 validation errors:
  {'type': 'missing', 'loc': ('response', 0, 'updated_at'), 'msg': 'Field required', 'input': {'id': 1, 'name': 'Coding Assistant', 'version': '1.0.0', 'status': 'active', 'is_active': True, 'created_at': '2023-01-01T00:00:00Z', 'created_by': 'test@example.com', 'description': 'Test prompt'}, 'url': 'https://errors.pydantic.dev/2.4/v/missing'}

2025-09-03 00:33:01,153 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 00:33:02,548 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 00:33:02,548 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-03 00:33:02,548 - prompt_manager.app.main - INFO - Database URL: sqlite:///./prompts.db
2025-09-03 00:33:24,823 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 00:33:25,865 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 00:33:25,865 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-03 00:33:25,865 - prompt_manager.app.main - INFO - Database URL: sqlite:///./prompts.db
2025-09-03 00:33:51,277 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 00:33:51,280 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 2.43ms
2025-09-03 00:33:51,285 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/name/Coding Assistant/versions?skip=0&limit=10
2025-09-03 00:33:51,288 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 00:33:51,288 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 00:33:51,289 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 00:33:51,289 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 00:33:51,289 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 00:33:51,289 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 00:33:51,289 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 00:33:51,293 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 00:33:51,293 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 18:48:41+00:00 (UTC)
2025-09-03 00:33:51,293 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 00:33:51,293 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 00:33:51,307 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-03 00:33:51,309 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/name/Coding Assistant/versions?skip=0&limit=10 Status: 200 Time: 23.83ms
2025-09-03 00:33:51,310 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 00:33:51,310 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 00:33:51,310 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 00:34:00,388 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 00:34:00,389 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.18ms
2025-09-03 00:34:00,395 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/1/history?skip=0&limit=10
2025-09-03 00:34:00,396 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 00:34:00,396 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 00:34:00,396 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 00:34:00,396 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 00:34:00,397 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 00:34:00,397 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 00:34:00,397 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 00:34:00,397 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 00:34:00,397 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 18:48:41+00:00 (UTC)
2025-09-03 00:34:00,397 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 00:34:00,397 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 00:34:00,398 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-03 00:34:00,398 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/1/history?skip=0&limit=10 Status: 200 Time: 3.6ms
2025-09-03 00:34:00,399 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 00:34:00,399 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 00:34:00,399 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 00:34:16,487 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 00:34:16,493 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 6.53ms
2025-09-03 00:34:18,638 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 00:34:18,638 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.75ms
2025-09-03 00:34:18,650 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 00:34:18,657 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 00:34:18,657 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 00:34:18,659 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 00:34:18,660 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 00:34:18,660 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 00:34:18,660 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 00:34:18,663 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 00:34:18,665 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 00:34:18,666 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 18:48:41+00:00 (UTC)
2025-09-03 00:34:18,666 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 00:34:18,670 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 00:34:18,675 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-03 00:34:18,678 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 00:34:18,689 - prompt_manager.app.api.v1.api - INFO - Found 2 prompts out of 2 total
2025-09-03 00:34:18,691 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 41.05ms
2025-09-03 00:34:18,692 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 00:34:18,692 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 00:34:18,693 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 00:34:26,528 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 00:34:26,545 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 16.82ms
2025-09-03 00:34:27,822 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 00:34:29,294 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 00:34:29,294 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-03 00:34:29,294 - prompt_manager.app.main - INFO - Database URL: sqlite:///./prompts.db
2025-09-03 00:34:30,125 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 00:34:30,136 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 11.91ms
2025-09-03 00:34:30,149 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/1/history?skip=0&limit=10
2025-09-03 00:34:30,157 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 00:34:30,158 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 00:34:30,162 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 00:34:30,162 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 00:34:30,162 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 00:34:30,163 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 00:34:30,163 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 00:34:30,166 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 00:34:30,166 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 18:48:41+00:00 (UTC)
2025-09-03 00:34:30,166 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 00:34:30,166 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 00:34:30,191 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-03 00:34:30,192 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/1/history?skip=0&limit=10 Status: 200 Time: 42.46ms
2025-09-03 00:34:30,201 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 00:34:30,202 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 00:34:30,203 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 00:34:38,730 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 00:34:38,737 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 6.4ms
2025-09-03 00:34:40,320 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 00:34:40,321 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.78ms
2025-09-03 00:34:44,261 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 00:34:44,262 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.34ms
2025-09-03 00:34:45,806 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 00:34:45,809 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 3.08ms
2025-09-03 00:34:45,827 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/2/history?skip=0&limit=10
2025-09-03 00:34:45,832 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 00:34:45,832 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 00:34:45,833 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 00:34:45,833 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 00:34:45,833 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 00:34:45,833 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 00:34:45,834 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 00:34:45,835 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 00:34:45,835 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 18:48:41+00:00 (UTC)
2025-09-03 00:34:45,835 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 00:34:45,835 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 00:34:45,845 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-03 00:34:45,851 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/2/history?skip=0&limit=10 Status: 200 Time: 23.57ms
2025-09-03 00:34:45,854 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 00:34:45,854 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 00:34:45,854 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 00:34:52,204 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 00:34:52,205 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.08ms
2025-09-03 00:34:53,401 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 00:34:53,402 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.26ms
2025-09-03 00:34:53,413 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/3/history?skip=0&limit=10
2025-09-03 00:34:53,415 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 00:34:53,415 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 00:34:53,416 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 00:34:53,416 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 00:34:53,416 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 00:34:53,416 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 00:34:53,416 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 00:34:53,417 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 00:34:53,417 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 18:48:41+00:00 (UTC)
2025-09-03 00:34:53,417 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 00:34:53,417 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 00:34:53,419 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-03 00:34:53,420 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/3/history?skip=0&limit=10 Status: 200 Time: 6.68ms
2025-09-03 00:34:53,420 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 00:34:53,420 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 00:34:53,421 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 00:39:32,331 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 00:39:33,508 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 00:39:33,508 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-03 00:39:33,508 - prompt_manager.app.main - INFO - Database URL: sqlite:///./prompts.db
2025-09-03 00:40:43,105 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 00:40:43,111 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 5.41ms
2025-09-03 00:40:43,122 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/3/history?skip=0&limit=10
2025-09-03 00:40:43,135 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 00:40:43,135 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 00:40:43,136 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 00:40:43,137 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 00:40:43,137 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 00:40:43,137 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 00:40:43,137 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 00:40:43,143 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 00:40:43,144 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 18:48:41+00:00 (UTC)
2025-09-03 00:40:43,144 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 00:40:43,144 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 00:40:43,168 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-03 00:40:43,179 - prompt_manager.app.api.v1.api - WARNING - Prompt not found with ID: 3
2025-09-03 00:40:43,180 - prompt_manager.app.database - ERROR - Error in database session: Prompt not found
2025-09-03 00:40:43,180 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 00:40:43,180 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 00:40:43,181 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/3/history?skip=0&limit=10 Status: 404 Time: 58.97ms
2025-09-03 00:40:46,268 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 00:40:46,268 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.77ms
2025-09-03 00:40:47,379 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 00:40:47,380 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.19ms
2025-09-03 00:40:47,387 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/2/history?skip=0&limit=10
2025-09-03 00:40:47,388 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 00:40:47,388 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 00:40:47,389 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 00:40:47,389 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 00:40:47,389 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 00:40:47,389 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 00:40:47,389 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 00:40:47,389 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 00:40:47,389 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 18:48:41+00:00 (UTC)
2025-09-03 00:40:47,389 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 00:40:47,389 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 00:40:47,391 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-03 00:40:47,392 - prompt_manager.app.api.v1.api - ERROR - Error retrieving history for prompt 2: module 'prompt_manager.app.crud.crud' has no attribute 'can_user_access_prompt'
Traceback (most recent call last):
  File "/Users/prisha/Desktop/Coding/system prompt/prompt_manager/app/api/v1/api.py", line 628, in get_prompt_history
    if not crud.can_user_access_prompt(db, current_user.id, prompt_id):
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: module 'prompt_manager.app.crud.crud' has no attribute 'can_user_access_prompt'
2025-09-03 00:40:47,394 - prompt_manager.app.database - ERROR - Error in database session: 
2025-09-03 00:40:47,395 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 00:40:47,395 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 00:40:47,395 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/2/history?skip=0&limit=10 Status: 500 Time: 7.96ms
2025-09-03 00:40:49,681 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 00:40:49,682 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.59ms
2025-09-03 00:40:50,596 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 00:40:50,598 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.62ms
2025-09-03 00:40:50,606 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/1/history?skip=0&limit=10
2025-09-03 00:40:50,608 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 00:40:50,608 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 00:40:50,608 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 00:40:50,608 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 00:40:50,608 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 00:40:50,608 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 00:40:50,608 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 00:40:50,609 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 00:40:50,609 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 18:48:41+00:00 (UTC)
2025-09-03 00:40:50,609 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 00:40:50,609 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 00:40:50,610 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-03 00:40:50,611 - prompt_manager.app.api.v1.api - ERROR - Error retrieving history for prompt 1: module 'prompt_manager.app.crud.crud' has no attribute 'can_user_access_prompt'
Traceback (most recent call last):
  File "/Users/prisha/Desktop/Coding/system prompt/prompt_manager/app/api/v1/api.py", line 628, in get_prompt_history
    if not crud.can_user_access_prompt(db, current_user.id, prompt_id):
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: module 'prompt_manager.app.crud.crud' has no attribute 'can_user_access_prompt'
2025-09-03 00:40:50,611 - prompt_manager.app.database - ERROR - Error in database session: 
2025-09-03 00:40:50,611 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 00:40:50,611 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 00:40:50,612 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/1/history?skip=0&limit=10 Status: 500 Time: 6.3ms
2025-09-03 00:41:40,210 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 00:41:44,055 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 00:41:44,056 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-03 00:41:44,056 - prompt_manager.app.main - INFO - Database URL: sqlite:///./prompts.db
2025-09-03 01:20:44,789 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 01:20:44,805 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 16.72ms
2025-09-03 01:20:44,839 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/1/history?skip=0&limit=10
2025-09-03 01:20:44,846 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 01:20:44,846 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 01:20:44,847 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 01:20:44,847 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 01:20:44,847 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 01:20:44,848 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 01:20:44,848 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 01:20:44,869 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 01:20:44,869 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 18:48:41+00:00 (UTC)
2025-09-03 01:20:44,869 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 01:20:44,869 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 01:20:44,892 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-03 01:20:44,893 - prompt_manager.app.api.v1.api - INFO - Retrieving history for prompt ID: 1
2025-09-03 01:20:44,914 - prompt_manager.app.api.v1.api - INFO - Found 1 history items for prompt ID: 1
2025-09-03 01:20:44,920 - prompt_manager.app.api.v1.api - ERROR - Error retrieving history for prompt 1: name 'json' is not defined
Traceback (most recent call last):
  File "/Users/prisha/Desktop/Coding/system prompt/prompt_manager/app/api/v1/api.py", line 676, in get_prompt_history
    content=json.dumps([h.dict() for h in history_items], default=str),
            ^^^^
NameError: name 'json' is not defined
2025-09-03 01:20:44,927 - prompt_manager.app.database - ERROR - Error in database session: 
2025-09-03 01:20:44,929 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 01:20:44,929 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 01:20:44,933 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/1/history?skip=0&limit=10 Status: 500 Time: 93.83ms
2025-09-03 01:20:46,989 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 01:20:46,991 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.23ms
2025-09-03 01:20:48,571 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 01:20:48,572 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.89ms
2025-09-03 01:20:52,755 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 01:20:52,756 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.98ms
2025-09-03 01:20:52,764 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/1
2025-09-03 01:20:52,766 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 01:20:52,766 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 01:20:52,767 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 01:20:52,767 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 01:20:52,767 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 01:20:52,767 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 01:20:52,767 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 01:20:52,769 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 01:20:52,769 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 18:48:41+00:00 (UTC)
2025-09-03 01:20:52,769 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 01:20:52,770 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 01:20:52,776 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-03 01:20:52,777 - prompt_manager.app.api.v1.api - INFO - Retrieving prompt with ID: 1
2025-09-03 01:20:52,778 - prompt_manager.app.api.v1.api - INFO - Successfully retrieved prompt Coding Assistant v1.0.0 (ID: 1)
2025-09-03 01:20:52,782 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/1 Status: 200 Time: 18.15ms
2025-09-03 01:20:52,784 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 01:20:52,784 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 01:20:52,785 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 01:35:00,319 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 01:35:00,323 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 4.72ms
2025-09-03 01:35:11,250 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 01:35:11,251 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 01:35:11,252 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.49ms
2025-09-03 01:35:11,252 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.87ms
2025-09-03 01:35:11,286 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/name/Coding Assistant/versions?skip=0&limit=10
2025-09-03 01:35:11,287 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 01:35:11,287 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 01:35:11,287 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 01:35:11,287 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 01:35:11,287 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 01:35:11,287 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 01:35:11,287 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 01:35:11,288 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 01:35:11,288 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 18:48:41+00:00 (UTC)
2025-09-03 01:35:11,288 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 01:35:11,288 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 01:35:11,294 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-03 01:35:11,294 - prompt_manager.app.api.v1.api - INFO - Listing versions for prompt: Coding Assistant
2025-09-03 01:35:11,299 - prompt_manager.app.api.v1.api - INFO - Found 2 versions for prompt: Coding Assistant
2025-09-03 01:35:11,299 - prompt_manager.app.api.v1.api - ERROR - Error listing versions for Coding Assistant: name 'json' is not defined
Traceback (most recent call last):
  File "/Users/prisha/Desktop/Coding/system prompt/prompt_manager/app/api/v1/api.py", line 573, in list_prompt_versions
    content=json.dumps([v.dict() for v in versions], default=str),
            ^^^^
NameError: name 'json' is not defined
2025-09-03 01:35:11,300 - prompt_manager.app.database - ERROR - Error in database session: 
2025-09-03 01:35:11,300 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 01:35:11,300 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 01:35:11,301 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/name/Coding Assistant/versions?skip=0&limit=10 Status: 500 Time: 15.2ms
2025-09-03 01:35:40,659 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 01:35:40,661 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.96ms
2025-09-03 01:35:40,672 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/1/history?skip=0&limit=10
2025-09-03 01:35:40,675 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 01:35:40,675 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 01:35:40,676 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 01:35:40,676 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 01:35:40,676 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 01:35:40,676 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 01:35:40,677 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 01:35:40,677 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 01:35:40,677 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 18:48:41+00:00 (UTC)
2025-09-03 01:35:40,677 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 01:35:40,677 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 01:35:40,679 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-03 01:35:40,679 - prompt_manager.app.api.v1.api - INFO - Retrieving history for prompt ID: 1
2025-09-03 01:35:40,683 - prompt_manager.app.api.v1.api - INFO - Found 1 history items for prompt ID: 1
2025-09-03 01:35:40,683 - prompt_manager.app.api.v1.api - ERROR - Error retrieving history for prompt 1: name 'json' is not defined
Traceback (most recent call last):
  File "/Users/prisha/Desktop/Coding/system prompt/prompt_manager/app/api/v1/api.py", line 676, in get_prompt_history
    content=json.dumps([h.dict() for h in history_items], default=str),
            ^^^^
NameError: name 'json' is not defined
2025-09-03 01:35:40,684 - prompt_manager.app.database - ERROR - Error in database session: 
2025-09-03 01:35:40,684 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 01:35:40,684 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 01:35:40,685 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/1/history?skip=0&limit=10 Status: 500 Time: 12.9ms
2025-09-03 01:37:18,167 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/name/test/versions
2025-09-03 01:37:18,173 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 01:37:18,173 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 01:37:18,173 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 01:37:18,173 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 01:37:18,173 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 01:37:18,173 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 01:37:18,173 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 01:37:18,174 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 01:37:18,174 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 17:41:01+00:00 (UTC)
2025-09-03 01:37:18,174 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 01:37:18,174 - prompt_manager.app.core.security - INFO - Looking up user with email: admin@example.com
2025-09-03 01:37:18,177 - prompt_manager.app.core.security - INFO - Found user: admin@example.com (ID: 1)
2025-09-03 01:37:18,178 - prompt_manager.app.api.v1.api - INFO - Listing versions for prompt: test
2025-09-03 01:37:18,178 - prompt_manager.app.api.v1.api - WARNING - No versions found for prompt: test
2025-09-03 01:37:18,179 - prompt_manager.app.database - ERROR - Error in database session: Prompt not found
2025-09-03 01:37:18,179 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 01:37:18,179 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 01:37:18,180 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/name/test/versions Status: 404 Time: 13.7ms
2025-09-03 01:37:39,613 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 01:37:39,614 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.86ms
2025-09-03 01:37:39,618 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/name/Coding Assistant/versions?skip=0&limit=10
2025-09-03 01:37:39,620 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 01:37:39,620 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 01:37:39,620 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 01:37:39,620 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 01:37:39,620 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 01:37:39,620 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 01:37:39,620 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 01:37:39,620 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 01:37:39,620 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 18:48:41+00:00 (UTC)
2025-09-03 01:37:39,621 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 01:37:39,621 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 01:37:39,621 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-03 01:37:39,622 - prompt_manager.app.api.v1.api - INFO - Listing versions for prompt: Coding Assistant
2025-09-03 01:37:39,624 - prompt_manager.app.api.v1.api - INFO - Found 2 versions for prompt: Coding Assistant
2025-09-03 01:37:39,625 - prompt_manager.app.api.v1.api - ERROR - Error listing versions for Coding Assistant: name 'json' is not defined
Traceback (most recent call last):
  File "/Users/prisha/Desktop/Coding/system prompt/prompt_manager/app/api/v1/api.py", line 573, in list_prompt_versions
    content=json.dumps([v.dict() for v in versions], default=str),
            ^^^^
NameError: name 'json' is not defined
2025-09-03 01:37:39,626 - prompt_manager.app.database - ERROR - Error in database session: 
2025-09-03 01:37:39,626 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 01:37:39,626 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 01:37:39,627 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/name/Coding Assistant/versions?skip=0&limit=10 Status: 500 Time: 8.73ms
2025-09-03 01:37:43,951 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 01:37:43,952 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.77ms
2025-09-03 01:37:48,003 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 01:37:48,004 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.1ms
2025-09-03 01:37:48,015 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 01:37:48,017 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 01:37:48,017 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 01:37:48,017 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 01:37:48,017 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 01:37:48,017 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 01:37:48,017 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 01:37:48,018 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 01:37:48,018 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 01:37:48,019 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 18:48:41+00:00 (UTC)
2025-09-03 01:37:48,019 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 01:37:48,019 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 01:37:48,021 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-03 01:37:48,022 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 01:37:48,026 - prompt_manager.app.api.v1.api - INFO - Found 2 prompts out of 2 total
2025-09-03 01:37:48,029 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 14.64ms
2025-09-03 01:37:48,030 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 01:37:48,030 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 01:37:48,030 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 01:37:58,371 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 01:37:58,372 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.99ms
2025-09-03 01:38:05,927 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/1/history
2025-09-03 01:38:05,928 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 01:38:05,928 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 01:38:05,928 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 01:38:05,928 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 01:38:05,928 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 01:38:05,928 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 01:38:05,928 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 01:38:05,928 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 01:38:05,928 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 17:41:01+00:00 (UTC)
2025-09-03 01:38:05,928 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 01:38:05,928 - prompt_manager.app.core.security - INFO - Looking up user with email: admin@example.com
2025-09-03 01:38:05,929 - prompt_manager.app.core.security - INFO - Found user: admin@example.com (ID: 1)
2025-09-03 01:38:05,929 - prompt_manager.app.api.v1.api - INFO - Retrieving history for prompt ID: 1
2025-09-03 01:38:05,929 - prompt_manager.app.api.v1.api - INFO - Found 1 history items for prompt ID: 1
2025-09-03 01:38:05,929 - prompt_manager.app.api.v1.api - ERROR - Error retrieving history for prompt 1: name 'json' is not defined
Traceback (most recent call last):
  File "/Users/prisha/Desktop/Coding/system prompt/prompt_manager/app/api/v1/api.py", line 676, in get_prompt_history
    content=json.dumps([h.dict() for h in history_items], default=str),
            ^^^^
NameError: name 'json' is not defined
2025-09-03 01:38:05,930 - prompt_manager.app.database - ERROR - Error in database session: 
2025-09-03 01:38:05,930 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 01:38:05,930 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 01:38:05,930 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/1/history Status: 500 Time: 2.94ms
2025-09-03 01:38:18,788 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 01:38:19,893 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 01:38:19,893 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-03 01:38:19,893 - prompt_manager.app.main - INFO - Database URL: sqlite:///./prompts.db
2025-09-03 01:38:25,984 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 01:38:25,985 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.09ms
2025-09-03 01:38:25,994 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/1/history?skip=0&limit=10
2025-09-03 01:38:25,997 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 01:38:25,998 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 01:38:25,998 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 01:38:25,998 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 01:38:25,998 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 01:38:25,998 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 01:38:25,999 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 01:38:26,000 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 01:38:26,000 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 18:48:41+00:00 (UTC)
2025-09-03 01:38:26,000 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 01:38:26,000 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 01:38:26,011 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-03 01:38:26,011 - prompt_manager.app.api.v1.api - INFO - Retrieving history for prompt ID: 1
2025-09-03 01:38:26,019 - prompt_manager.app.api.v1.api - INFO - Found 1 history items for prompt ID: 1
2025-09-03 01:38:26,020 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/1/history?skip=0&limit=10 Status: 200 Time: 25.29ms
2025-09-03 01:38:26,021 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 01:38:26,021 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 01:38:26,021 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 01:38:38,881 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/1/history
2025-09-03 01:38:38,886 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 01:38:38,886 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 01:38:38,886 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 01:38:38,886 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 01:38:38,886 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 01:38:38,886 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 01:38:38,886 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 01:38:38,887 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 01:38:38,887 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 17:41:01+00:00 (UTC)
2025-09-03 01:38:38,887 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 01:38:38,887 - prompt_manager.app.core.security - INFO - Looking up user with email: admin@example.com
2025-09-03 01:38:38,890 - prompt_manager.app.core.security - INFO - Found user: admin@example.com (ID: 1)
2025-09-03 01:38:38,890 - prompt_manager.app.api.v1.api - INFO - Retrieving history for prompt ID: 1
2025-09-03 01:38:38,891 - prompt_manager.app.api.v1.api - INFO - Found 1 history items for prompt ID: 1
2025-09-03 01:38:38,892 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/1/history Status: 200 Time: 10.8ms
2025-09-03 01:38:38,893 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 01:38:38,893 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 01:38:38,893 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 01:38:53,597 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/name/Coding Assistant/versions
2025-09-03 01:38:53,598 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 01:38:53,598 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 01:38:53,599 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 01:38:53,599 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 01:38:53,599 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 01:38:53,599 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 01:38:53,599 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 01:38:53,599 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 01:38:53,599 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 17:41:01+00:00 (UTC)
2025-09-03 01:38:53,599 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 01:38:53,599 - prompt_manager.app.core.security - INFO - Looking up user with email: admin@example.com
2025-09-03 01:38:53,600 - prompt_manager.app.core.security - INFO - Found user: admin@example.com (ID: 1)
2025-09-03 01:38:53,600 - prompt_manager.app.api.v1.api - INFO - Listing versions for prompt: Coding Assistant
2025-09-03 01:38:53,604 - prompt_manager.app.api.v1.api - INFO - Found 2 versions for prompt: Coding Assistant
2025-09-03 01:38:53,604 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/name/Coding Assistant/versions Status: 200 Time: 6.66ms
2025-09-03 01:38:53,604 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 01:38:53,604 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 01:38:53,605 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 01:39:05,067 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 01:39:05,070 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 4.32ms
2025-09-03 01:39:05,073 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/name/Coding Assistant/versions?skip=0&limit=10
2025-09-03 01:39:05,075 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 01:39:05,076 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 01:39:05,076 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 01:39:05,076 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 01:39:05,076 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 01:39:05,076 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 01:39:05,076 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 01:39:05,077 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 01:39:05,078 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 18:48:41+00:00 (UTC)
2025-09-03 01:39:05,078 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 01:39:05,078 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 01:39:05,081 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-03 01:39:05,081 - prompt_manager.app.api.v1.api - INFO - Listing versions for prompt: Coding Assistant
2025-09-03 01:39:05,085 - prompt_manager.app.api.v1.api - INFO - Found 2 versions for prompt: Coding Assistant
2025-09-03 01:39:05,086 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/name/Coding Assistant/versions?skip=0&limit=10 Status: 200 Time: 13.44ms
2025-09-03 01:39:05,088 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 01:39:05,088 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 01:39:05,088 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 01:39:48,428 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 01:39:48,440 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 11.21ms
2025-09-03 01:39:55,108 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 01:39:55,108 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.57ms
2025-09-03 01:39:56,222 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 01:39:56,223 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.79ms
2025-09-03 01:39:56,235 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/2
2025-09-03 01:39:56,240 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 01:39:56,240 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 01:39:56,241 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 01:39:56,241 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 01:39:56,241 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 01:39:56,241 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 01:39:56,242 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 01:39:56,249 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 01:39:56,249 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 18:48:41+00:00 (UTC)
2025-09-03 01:39:56,249 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 01:39:56,249 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 01:39:56,261 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-03 01:39:56,262 - prompt_manager.app.api.v1.api - INFO - Retrieving prompt with ID: 2
2025-09-03 01:39:56,263 - prompt_manager.app.api.v1.api - INFO - Successfully retrieved prompt Coding Assistant v1.0.1 (ID: 2)
2025-09-03 01:39:56,266 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/2 Status: 200 Time: 31.66ms
2025-09-03 01:39:56,269 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 01:39:56,269 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 01:39:56,271 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 01:41:04,213 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 01:41:04,219 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 6.44ms
2025-09-03 01:41:16,102 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 01:41:16,106 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 4.15ms
2025-09-03 01:41:16,111 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-03 01:41:16,115 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 01:41:16,116 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 01:41:16,406 - prompt_manager.app.api.v1.endpoints.auth - INFO - Created access token for user: prishatank6@gmail.com
2025-09-03 01:41:16,416 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 200 Time: 304.47ms
2025-09-03 01:41:16,416 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 01:41:16,416 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 01:41:16,417 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 01:41:16,452 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 01:41:16,453 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.32ms
2025-09-03 01:41:18,610 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 01:41:18,611 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.85ms
2025-09-03 01:41:24,188 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 01:41:24,192 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 3.62ms
2025-09-03 01:41:24,203 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 01:41:24,208 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 01:41:24,208 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 01:41:24,208 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 01:41:24,209 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 01:41:24,209 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 01:41:24,209 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 01:41:24,209 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 01:41:24,211 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 01:41:24,211 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 20:11:16+00:00 (UTC)
2025-09-03 01:41:24,212 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 01:41:24,212 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 01:41:24,220 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-03 01:41:24,221 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 01:41:24,229 - prompt_manager.app.api.v1.api - INFO - Found 2 prompts out of 2 total
2025-09-03 01:41:24,230 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 27.8ms
2025-09-03 01:41:24,231 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 01:41:24,231 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 01:41:24,231 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 01:48:52,935 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 01:48:52,935 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-03 01:48:52,936 - prompt_manager.app.main - INFO - Database URL: sqlite:///./prompts.db
2025-09-03 01:49:30,514 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 01:58:32,550 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 01:58:32,551 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-03 01:58:32,551 - prompt_manager.app.main - INFO - Database URL: sqlite:///./prompts.db
2025-09-03 01:58:47,630 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/1/test-persona
2025-09-03 01:58:47,632 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 01:58:47,632 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 01:58:47,632 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 01:58:47,632 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 01:58:47,632 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 01:58:47,632 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 01:58:47,632 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 01:58:47,633 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 01:58:47,633 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 17:41:01+00:00 (UTC)
2025-09-03 01:58:47,633 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 01:58:47,633 - prompt_manager.app.core.security - INFO - Looking up user with email: admin@example.com
2025-09-03 01:58:47,641 - prompt_manager.app.core.security - INFO - Found user: admin@example.com (ID: 1)
2025-09-03 01:58:47,642 - prompt_manager.app.api.v1.api - INFO - Testing persona for prompt ID 1 (user: admin@example.com)
2025-09-03 01:58:48,426 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 01:58:48,429 - prompt_manager.app.api.v1.api - INFO - Generated persona response for prompt 'Coding Assistant' with persona type 'dynamic_persona'
2025-09-03 01:58:48,430 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/1/test-persona Status: 200 Time: 799.5ms
2025-09-03 01:58:48,431 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 01:58:48,431 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 01:58:48,431 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 01:59:07,670 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 01:59:07,674 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 4.19ms
2025-09-03 01:59:07,692 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/74/test-persona
2025-09-03 01:59:07,695 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 01:59:07,695 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 01:59:07,696 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 01:59:07,696 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 01:59:07,696 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 01:59:07,696 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 01:59:07,697 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 01:59:07,698 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 01:59:07,698 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 20:21:14+00:00 (UTC)
2025-09-03 01:59:07,698 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 01:59:07,699 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 01:59:07,707 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-03 01:59:07,708 - prompt_manager.app.api.v1.api - INFO - Testing persona for prompt ID 74 (user: prishatank6@gmail.com)
2025-09-03 01:59:07,710 - prompt_manager.app.database - ERROR - Error in database session: 
2025-09-03 01:59:07,710 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 01:59:07,710 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 01:59:07,711 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/74/test-persona Status: 404 Time: 19.54ms
2025-09-03 01:59:15,840 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 01:59:15,840 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.83ms
2025-09-03 01:59:15,847 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/74
2025-09-03 01:59:15,847 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 01:59:15,848 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 01:59:15,848 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 01:59:15,848 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 01:59:15,848 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 01:59:15,848 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 01:59:15,848 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 01:59:15,848 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 01:59:15,848 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 20:21:14+00:00 (UTC)
2025-09-03 01:59:15,849 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 01:59:15,849 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 01:59:15,851 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-03 01:59:15,852 - prompt_manager.app.api.v1.api - INFO - Retrieving prompt with ID: 74
2025-09-03 01:59:15,853 - prompt_manager.app.api.v1.api - WARNING - Prompt with ID 74 not found
2025-09-03 01:59:15,854 - prompt_manager.app.database - ERROR - Error in database session: Prompt not found
2025-09-03 01:59:15,854 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 01:59:15,855 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 01:59:15,856 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/74 Status: 404 Time: 9.38ms
2025-09-03 01:59:17,816 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 01:59:17,817 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.86ms
2025-09-03 01:59:17,830 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/74
2025-09-03 01:59:17,832 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 01:59:17,832 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 01:59:17,832 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 01:59:17,832 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 01:59:17,832 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 01:59:17,832 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 01:59:17,832 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 01:59:17,833 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 01:59:17,833 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 20:21:14+00:00 (UTC)
2025-09-03 01:59:17,833 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 01:59:17,833 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 01:59:17,834 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-03 01:59:17,834 - prompt_manager.app.api.v1.api - INFO - Retrieving prompt with ID: 74
2025-09-03 01:59:17,835 - prompt_manager.app.api.v1.api - WARNING - Prompt with ID 74 not found
2025-09-03 01:59:17,836 - prompt_manager.app.database - ERROR - Error in database session: Prompt not found
2025-09-03 01:59:17,836 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 01:59:17,837 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 01:59:17,838 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/74 Status: 404 Time: 7.77ms
2025-09-03 01:59:23,216 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 01:59:23,218 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.62ms
2025-09-03 01:59:23,229 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 01:59:23,230 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 01:59:23,230 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 01:59:23,230 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 01:59:23,230 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 01:59:23,231 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 01:59:23,231 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 01:59:23,231 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 01:59:23,231 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 01:59:23,231 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 20:21:14+00:00 (UTC)
2025-09-03 01:59:23,232 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 01:59:23,232 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 01:59:23,233 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-03 01:59:23,233 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 01:59:23,242 - prompt_manager.app.api.v1.api - INFO - Found 2 prompts out of 2 total
2025-09-03 01:59:23,243 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 13.94ms
2025-09-03 01:59:23,243 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 01:59:23,243 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 01:59:23,243 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 01:59:53,604 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 01:59:53,606 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 2.61ms
2025-09-03 02:00:10,063 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 02:00:10,065 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 3.03ms
2025-09-03 02:00:10,071 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-03 02:00:10,075 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 02:00:10,076 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 02:00:10,364 - prompt_manager.app.api.v1.endpoints.auth - INFO - Created access token for user: prishatank6@gmail.com
2025-09-03 02:00:10,376 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 200 Time: 304.39ms
2025-09-03 02:00:10,376 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 02:00:10,376 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 02:00:10,376 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 02:00:10,426 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 02:00:10,427 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.35ms
2025-09-03 02:00:12,036 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 02:00:12,037 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.84ms
2025-09-03 02:00:15,168 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 02:00:15,168 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.8ms
2025-09-03 02:00:15,183 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/1
2025-09-03 02:00:15,184 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 02:00:15,184 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 02:00:15,185 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 02:00:15,185 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 02:00:15,185 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 02:00:15,185 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 02:00:15,185 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 02:00:15,186 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 02:00:15,186 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 20:30:10+00:00 (UTC)
2025-09-03 02:00:15,186 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 02:00:15,186 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 02:00:15,188 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-03 02:00:15,188 - prompt_manager.app.api.v1.api - INFO - Retrieving prompt with ID: 1
2025-09-03 02:00:15,191 - prompt_manager.app.api.v1.api - INFO - Successfully retrieved prompt Coding Assistant v1.0.0 (ID: 1)
2025-09-03 02:00:15,192 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/1 Status: 200 Time: 8.87ms
2025-09-03 02:00:15,192 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 02:00:15,192 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 02:00:15,193 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 02:00:24,087 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 02:00:24,088 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.66ms
2025-09-03 02:00:24,140 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 02:00:24,140 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.5ms
2025-09-03 02:00:24,149 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/1/test-persona
2025-09-03 02:00:24,150 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 02:00:24,150 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 02:00:24,150 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 02:00:24,150 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 02:00:24,150 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 02:00:24,150 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 02:00:24,150 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 02:00:24,150 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 02:00:24,150 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 20:30:10+00:00 (UTC)
2025-09-03 02:00:24,150 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 02:00:24,150 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 02:00:24,152 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-03 02:00:24,153 - prompt_manager.app.api.v1.api - INFO - Testing persona for prompt ID 1 (user: prishatank6@gmail.com)
2025-09-03 02:00:24,974 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 02:00:24,979 - prompt_manager.app.api.v1.api - INFO - Generated persona response for prompt 'Coding Assistant' with persona type 'dynamic_persona'
2025-09-03 02:00:24,980 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/1/test-persona Status: 200 Time: 831.59ms
2025-09-03 02:00:24,981 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 02:00:24,982 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 02:00:24,982 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 02:00:38,334 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 02:00:38,338 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 4.55ms
2025-09-03 02:00:44,548 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 02:00:44,549 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.82ms
2025-09-03 02:00:44,583 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 02:00:44,583 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.45ms
2025-09-03 02:00:44,586 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/name/Coding Assistant/versions?skip=0&limit=10
2025-09-03 02:00:44,587 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 02:00:44,587 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 02:00:44,588 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 02:00:44,588 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 02:00:44,588 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 02:00:44,588 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 02:00:44,588 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 02:00:44,589 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 02:00:44,589 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 20:30:10+00:00 (UTC)
2025-09-03 02:00:44,589 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 02:00:44,589 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 02:00:44,595 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-03 02:00:44,596 - prompt_manager.app.api.v1.api - INFO - Listing versions for prompt: Coding Assistant
2025-09-03 02:00:44,601 - prompt_manager.app.api.v1.api - INFO - Found 2 versions for prompt: Coding Assistant
2025-09-03 02:00:44,602 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/name/Coding Assistant/versions?skip=0&limit=10 Status: 200 Time: 15.67ms
2025-09-03 02:00:44,603 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 02:00:44,603 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 02:00:44,603 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 02:00:49,716 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 02:00:49,717 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.4ms
2025-09-03 02:00:49,720 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/1/history?skip=0&limit=10
2025-09-03 02:00:49,721 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 02:00:49,721 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 02:00:49,722 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 02:00:49,722 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 02:00:49,722 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 02:00:49,722 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 02:00:49,722 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 02:00:49,722 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 02:00:49,723 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 20:30:10+00:00 (UTC)
2025-09-03 02:00:49,723 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 02:00:49,723 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 02:00:49,723 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 2)
2025-09-03 02:00:49,724 - prompt_manager.app.api.v1.api - INFO - Retrieving history for prompt ID: 1
2025-09-03 02:00:49,729 - prompt_manager.app.api.v1.api - INFO - Found 1 history items for prompt ID: 1
2025-09-03 02:00:49,730 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/1/history?skip=0&limit=10 Status: 200 Time: 9.93ms
2025-09-03 02:00:49,731 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 02:00:49,731 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 02:00:49,732 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 02:04:58,839 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/74
2025-09-03 02:04:58,847 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 02:04:58,848 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 02:04:58,848 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 02:04:58,848 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 02:04:58,848 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 02:04:58,848 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 02:04:58,848 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 02:04:58,849 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 02:04:58,849 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 17:41:01+00:00 (UTC)
2025-09-03 02:04:58,849 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 02:04:58,850 - prompt_manager.app.core.security - INFO - Looking up user with email: admin@example.com
2025-09-03 02:04:58,855 - prompt_manager.app.core.security - ERROR - User not found with email: admin@example.com
2025-09-03 02:04:58,855 - prompt_manager.app.core.security - ERROR - Database error during user lookup: 
2025-09-03 02:04:58,855 - prompt_manager.app.database - ERROR - Error in database session: 
2025-09-03 02:04:58,855 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 02:04:58,856 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 02:04:58,857 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/74 Status: 500 Time: 17.59ms
2025-09-03 02:05:20,015 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 02:05:41,452 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 02:05:41,452 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-03 02:05:41,453 - prompt_manager.app.main - INFO - Database URL: sqlite:////Users/prisha/Desktop/Coding/system prompt/prompts.db
2025-09-03 02:05:45,683 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 02:05:45,684 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.64ms
2025-09-03 02:05:55,966 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 02:05:55,975 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 02:05:55,975 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 02:05:55,976 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 02:05:55,976 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 02:05:55,976 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 02:05:55,976 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 02:05:55,976 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 02:05:55,979 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 02:05:55,979 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 17:41:01+00:00 (UTC)
2025-09-03 02:05:55,980 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 02:05:55,980 - prompt_manager.app.core.security - INFO - Looking up user with email: admin@example.com
2025-09-03 02:05:55,988 - prompt_manager.app.core.security - ERROR - User not found with email: admin@example.com
2025-09-03 02:05:55,988 - prompt_manager.app.core.security - ERROR - Database error during user lookup: 
2025-09-03 02:05:55,988 - prompt_manager.app.database - ERROR - Error in database session: 
2025-09-03 02:05:55,988 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 02:05:55,988 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 02:05:55,989 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 500 Time: 22.34ms
2025-09-03 02:06:12,454 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 02:06:12,459 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 5.26ms
2025-09-03 02:08:19,130 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 02:08:20,468 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 02:08:20,468 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-03 02:08:20,468 - prompt_manager.app.main - INFO - Database URL: sqlite:////Users/prisha/Desktop/Coding/system prompt/prompts.db
2025-09-03 02:09:41,921 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 02:09:43,347 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 02:09:43,347 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-03 02:09:43,347 - prompt_manager.app.main - INFO - Database URL: sqlite:////Users/prisha/Desktop/Coding/system prompt/prompts.db
2025-09-03 02:10:30,172 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 02:10:52,762 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 02:10:52,762 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-03 02:10:52,762 - prompt_manager.app.main - INFO - Database URL: sqlite:////Users/prisha/Desktop/Coding/system prompt/prompts.db
2025-09-03 02:10:59,253 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-03 02:10:59,254 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 02:10:59,254 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 02:10:59,545 - prompt_manager.app.api.v1.endpoints.auth - INFO - Created access token for user: admin@example.com
2025-09-03 02:10:59,550 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 200 Time: 296.75ms
2025-09-03 02:10:59,551 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 02:10:59,551 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 02:10:59,551 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 02:11:17,514 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/
2025-09-03 02:11:17,521 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 02:11:17,521 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 02:11:17,522 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 02:11:17,522 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 02:11:17,522 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 02:11:17,522 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 02:11:17,522 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 02:11:17,523 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 02:11:17,523 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 20:40:59+00:00 (UTC)
2025-09-03 02:11:17,523 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 02:11:17,523 - prompt_manager.app.core.security - INFO - Looking up user with email: admin@example.com
2025-09-03 02:11:17,530 - prompt_manager.app.core.security - INFO - Found user: admin@example.com (ID: 26)
2025-09-03 02:11:17,530 - prompt_manager.app.api.v1.api - INFO - Creating new prompt: Test Prompt version 1.0.0
2025-09-03 02:11:17,542 - prompt_manager.app.api.v1.api - INFO - Successfully created prompt Test Prompt v1.0.0 (ID: 75)
2025-09-03 02:11:17,543 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/ Status: 201 Time: 29.15ms
2025-09-03 02:11:17,544 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 02:11:17,544 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 02:11:17,544 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 02:12:37,822 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/75/test-persona
2025-09-03 02:12:37,827 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 02:12:37,827 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 02:12:37,827 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 02:12:37,827 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 02:12:37,827 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 02:12:37,827 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 02:12:37,827 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 02:12:37,828 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 02:12:37,828 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 20:40:59+00:00 (UTC)
2025-09-03 02:12:37,828 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 02:12:37,828 - prompt_manager.app.core.security - INFO - Looking up user with email: admin@example.com
2025-09-03 02:12:37,832 - prompt_manager.app.core.security - INFO - Found user: admin@example.com (ID: 26)
2025-09-03 02:12:37,833 - prompt_manager.app.api.v1.api - INFO - Testing persona for prompt ID 75 (user: admin@example.com)
2025-09-03 02:12:39,210 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 02:12:39,213 - prompt_manager.app.api.v1.api - INFO - Generated persona response for prompt 'Test Prompt' with persona type 'dynamic_persona'
2025-09-03 02:12:39,214 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/75/test-persona Status: 200 Time: 1391.61ms
2025-09-03 02:12:39,215 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 02:12:39,215 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 02:12:39,215 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 02:13:09,134 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 02:13:09,141 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 6.87ms
2025-09-03 02:13:49,821 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 02:13:49,826 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 4.99ms
2025-09-03 02:15:43,621 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 02:15:43,629 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 7.66ms
2025-09-03 02:15:43,636 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-03 02:15:43,654 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 02:15:43,655 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 02:15:43,945 - prompt_manager.app.api.v1.endpoints.auth - INFO - Created access token for user: prishatank6@gmail.com
2025-09-03 02:15:43,950 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 200 Time: 314.46ms
2025-09-03 02:15:43,951 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 02:15:43,951 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 02:15:43,951 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 02:15:44,003 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 02:15:44,003 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.32ms
2025-09-03 02:15:45,672 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 02:15:45,673 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.81ms
2025-09-03 02:15:48,802 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 02:15:48,816 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 14.48ms
2025-09-03 02:15:48,838 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/1
2025-09-03 02:15:48,843 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 02:15:48,843 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 02:15:48,843 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 02:15:48,843 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 02:15:48,843 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 02:15:48,844 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 02:15:48,844 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 02:15:48,845 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 02:15:48,846 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 20:45:43+00:00 (UTC)
2025-09-03 02:15:48,846 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 02:15:48,846 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 02:15:48,857 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 14)
2025-09-03 02:15:48,858 - prompt_manager.app.api.v1.api - INFO - Retrieving prompt with ID: 1
2025-09-03 02:15:48,860 - prompt_manager.app.api.v1.api - WARNING - Prompt with ID 1 not found
2025-09-03 02:15:48,863 - prompt_manager.app.database - ERROR - Error in database session: Prompt not found
2025-09-03 02:15:48,863 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 02:15:48,864 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 02:15:48,865 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/1 Status: 404 Time: 27.4ms
2025-09-03 02:15:50,587 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 02:15:50,588 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.22ms
2025-09-03 02:15:50,606 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/1
2025-09-03 02:15:50,607 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 02:15:50,608 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 02:15:50,608 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 02:15:50,608 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 02:15:50,609 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 02:15:50,609 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 02:15:50,609 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 02:15:50,610 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 02:15:50,610 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 20:45:43+00:00 (UTC)
2025-09-03 02:15:50,610 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 02:15:50,610 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 02:15:50,612 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 14)
2025-09-03 02:15:50,612 - prompt_manager.app.api.v1.api - INFO - Retrieving prompt with ID: 1
2025-09-03 02:15:50,614 - prompt_manager.app.api.v1.api - WARNING - Prompt with ID 1 not found
2025-09-03 02:15:50,615 - prompt_manager.app.database - ERROR - Error in database session: Prompt not found
2025-09-03 02:15:50,615 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 02:15:50,615 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 02:15:50,616 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/1 Status: 404 Time: 10.15ms
2025-09-03 02:15:53,719 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 02:15:53,720 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.34ms
2025-09-03 02:15:53,787 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 02:15:53,788 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.91ms
2025-09-03 02:15:53,796 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/74
2025-09-03 02:15:53,797 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 02:15:53,797 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 02:15:53,797 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 02:15:53,797 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 02:15:53,797 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 02:15:53,797 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 02:15:53,797 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 02:15:53,798 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 02:15:53,798 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 20:45:43+00:00 (UTC)
2025-09-03 02:15:53,798 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 02:15:53,798 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 02:15:53,799 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 14)
2025-09-03 02:15:53,800 - prompt_manager.app.api.v1.api - INFO - Retrieving prompt with ID: 74
2025-09-03 02:15:53,804 - prompt_manager.app.api.v1.api - INFO - Successfully retrieved prompt Coding Assistant v1.0.0 (ID: 74)
2025-09-03 02:15:53,805 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/74 Status: 200 Time: 9.82ms
2025-09-03 02:15:53,806 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 02:15:53,806 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 02:15:53,806 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 02:16:05,243 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 02:16:05,244 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.05ms
2025-09-03 02:16:19,070 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 02:16:19,071 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.08ms
2025-09-03 02:16:19,123 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 02:16:19,123 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.46ms
2025-09-03 02:16:19,131 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/74/test-persona
2025-09-03 02:16:19,132 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 02:16:19,132 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 02:16:19,132 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 02:16:19,132 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 02:16:19,133 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 02:16:19,133 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 02:16:19,133 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 02:16:19,133 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 02:16:19,133 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 20:45:43+00:00 (UTC)
2025-09-03 02:16:19,133 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 02:16:19,134 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 02:16:19,142 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 14)
2025-09-03 02:16:19,142 - prompt_manager.app.api.v1.api - INFO - Testing persona for prompt ID 74 (user: prishatank6@gmail.com)
2025-09-03 02:16:20,073 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 02:16:20,084 - prompt_manager.app.api.v1.api - INFO - Generated persona response for prompt 'Coding Assistant' with persona type 'dynamic_persona'
2025-09-03 02:16:20,085 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/74/test-persona Status: 200 Time: 954.29ms
2025-09-03 02:16:20,085 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 02:16:20,085 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 02:16:20,085 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 02:16:28,254 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 02:16:28,256 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 2.16ms
2025-09-03 02:16:34,186 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 02:16:34,188 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.81ms
2025-09-03 02:16:34,235 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 02:16:34,235 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.47ms
2025-09-03 02:16:34,239 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/name/Coding Assistant/versions?skip=0&limit=10
2025-09-03 02:16:34,240 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 02:16:34,240 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 02:16:34,241 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 02:16:34,241 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 02:16:34,241 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 02:16:34,241 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 02:16:34,241 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 02:16:34,242 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 02:16:34,242 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 20:45:43+00:00 (UTC)
2025-09-03 02:16:34,242 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 02:16:34,242 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 02:16:34,243 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 14)
2025-09-03 02:16:34,243 - prompt_manager.app.api.v1.api - INFO - Listing versions for prompt: Coding Assistant
2025-09-03 02:16:34,256 - prompt_manager.app.api.v1.api - INFO - Found 1 versions for prompt: Coding Assistant
2025-09-03 02:16:34,256 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/name/Coding Assistant/versions?skip=0&limit=10 Status: 200 Time: 17.48ms
2025-09-03 02:16:34,257 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 02:16:34,257 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 02:16:34,257 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 02:16:38,282 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 02:16:38,283 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.73ms
2025-09-03 02:16:40,328 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 02:16:40,329 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.34ms
2025-09-03 02:16:40,332 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 02:16:40,340 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 02:16:40,340 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 02:16:40,340 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 02:16:40,340 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 02:16:40,340 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 02:16:40,340 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 02:16:40,340 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 02:16:40,341 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 02:16:40,341 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-03 20:45:43+00:00 (UTC)
2025-09-03 02:16:40,341 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 02:16:40,341 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 02:16:40,341 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 14)
2025-09-03 02:16:40,342 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 02:16:40,345 - prompt_manager.app.api.v1.api - INFO - Found 73 prompts out of 73 total
2025-09-03 02:16:40,347 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 15.46ms
2025-09-03 02:16:40,348 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 02:16:40,349 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 02:16:40,349 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 09:49:03,100 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 09:49:03,112 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 12.79ms
2025-09-03 09:49:18,693 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 09:49:18,696 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 2.67ms
2025-09-03 09:49:18,702 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-03 09:49:18,709 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 09:49:18,710 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 09:49:18,979 - prompt_manager.app.api.v1.endpoints.auth - INFO - Created access token for user: prishatank6@gmail.com
2025-09-03 09:49:18,985 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 200 Time: 283.15ms
2025-09-03 09:49:18,985 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 09:49:18,985 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 09:49:18,986 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 09:49:19,020 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 09:49:19,020 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.33ms
2025-09-03 09:49:20,942 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 09:49:20,943 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.24ms
2025-09-03 09:52:45,779 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 09:52:45,782 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 3.87ms
2025-09-03 09:52:45,789 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/
2025-09-03 09:52:45,792 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 09:52:45,792 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 09:52:45,792 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 09:52:45,792 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 09:52:45,792 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 09:52:45,792 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 09:52:45,792 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 09:52:45,802 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 09:52:45,802 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 04:19:18+00:00 (UTC)
2025-09-03 09:52:45,802 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 09:52:45,802 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 09:52:45,824 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 14)
2025-09-03 09:52:45,826 - prompt_manager.app.api.v1.api - INFO - Creating new prompt: Math Tutor version 1.0.0
2025-09-03 09:52:45,839 - prompt_manager.app.api.v1.api - INFO - Successfully created prompt Math Tutor v1.0.0 (ID: 76)
2025-09-03 09:52:45,841 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/ Status: 201 Time: 52.61ms
2025-09-03 09:52:45,842 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 09:52:45,842 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 09:52:45,842 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 09:53:24,771 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 09:53:24,774 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 2.17ms
2025-09-03 09:53:24,821 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 09:53:24,822 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.43ms
2025-09-03 09:53:24,827 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/76
2025-09-03 09:53:24,829 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 09:53:24,829 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 09:53:24,829 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 09:53:24,829 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 09:53:24,829 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 09:53:24,829 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 09:53:24,829 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 09:53:24,829 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 09:53:24,829 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 04:19:18+00:00 (UTC)
2025-09-03 09:53:24,829 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 09:53:24,829 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 09:53:24,831 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 14)
2025-09-03 09:53:24,832 - prompt_manager.app.api.v1.api - INFO - Retrieving prompt with ID: 76
2025-09-03 09:53:24,832 - prompt_manager.app.api.v1.api - INFO - Successfully retrieved prompt Math Tutor v1.0.0 (ID: 76)
2025-09-03 09:53:24,833 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/76 Status: 200 Time: 5.55ms
2025-09-03 09:53:24,833 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 09:53:24,834 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 09:53:24,834 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 09:54:14,731 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 09:54:14,735 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 4.54ms
2025-09-03 09:54:17,139 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 09:54:17,141 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.56ms
2025-09-03 09:54:17,147 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/76/update-version
2025-09-03 09:54:17,150 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 09:54:17,150 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 09:54:17,150 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 09:54:17,150 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 09:54:17,151 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 09:54:17,151 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 09:54:17,151 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 09:54:17,152 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 09:54:17,152 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 04:19:18+00:00 (UTC)
2025-09-03 09:54:17,152 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 09:54:17,152 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 09:54:17,160 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 14)
2025-09-03 09:54:17,162 - prompt_manager.app.api.v1.api - INFO - Auto-updating prompt ID 76 (user: prishatank6@gmail.com)
2025-09-03 09:54:17,173 - prompt_manager.app.api.v1.api - INFO - Successfully auto-incremented version to '1.0.1' for prompt 'Math Tutor'
2025-09-03 09:54:17,174 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/76/update-version Status: 200 Time: 27.03ms
2025-09-03 09:54:17,175 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 09:54:17,175 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 09:54:17,175 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 09:54:37,605 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 09:54:37,607 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 09:54:37,607 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 2.43ms
2025-09-03 09:54:37,608 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.99ms
2025-09-03 09:54:37,655 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/77
2025-09-03 09:54:37,656 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 09:54:37,657 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 09:54:37,657 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 09:54:37,657 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 09:54:37,657 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 09:54:37,657 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 09:54:37,657 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 09:54:37,658 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 09:54:37,658 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 04:19:18+00:00 (UTC)
2025-09-03 09:54:37,658 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 09:54:37,658 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 09:54:37,660 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 14)
2025-09-03 09:54:37,660 - prompt_manager.app.api.v1.api - INFO - Retrieving prompt with ID: 77
2025-09-03 09:54:37,662 - prompt_manager.app.api.v1.api - INFO - Successfully retrieved prompt Math Tutor v1.0.1 (ID: 77)
2025-09-03 09:54:37,662 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/77 Status: 200 Time: 7.45ms
2025-09-03 09:54:37,663 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 09:54:37,663 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 09:54:37,663 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 09:55:04,606 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 09:55:04,610 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 4.1ms
2025-09-03 09:55:04,660 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 09:55:04,660 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.63ms
2025-09-03 09:55:04,668 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/77/test-persona
2025-09-03 09:55:04,669 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 09:55:04,669 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 09:55:04,669 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 09:55:04,669 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 09:55:04,670 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 09:55:04,670 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 09:55:04,670 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 09:55:04,670 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 09:55:04,670 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 04:19:18+00:00 (UTC)
2025-09-03 09:55:04,670 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 09:55:04,670 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 09:55:04,671 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 14)
2025-09-03 09:55:04,671 - prompt_manager.app.api.v1.api - INFO - Testing persona for prompt ID 77 (user: prishatank6@gmail.com)
2025-09-03 09:55:05,770 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 09:55:05,780 - prompt_manager.app.api.v1.api - INFO - Generated persona response for prompt 'Math Tutor' with persona type 'dynamic_persona'
2025-09-03 09:55:05,780 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/77/test-persona Status: 200 Time: 1111.77ms
2025-09-03 09:55:05,780 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 09:55:05,780 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 09:55:05,780 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 10:09:48,292 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 10:09:48,296 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 4.19ms
2025-09-03 10:14:20,876 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 10:14:20,884 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 7.94ms
2025-09-03 10:14:20,891 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-03 10:14:20,894 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 10:14:20,895 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 10:14:21,164 - prompt_manager.app.api.v1.endpoints.auth - INFO - Created access token for user: prishatank6@gmail.com
2025-09-03 10:14:21,169 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 200 Time: 277.5ms
2025-09-03 10:14:21,169 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 10:14:21,169 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 10:14:21,169 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 10:14:21,227 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 10:14:21,227 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.32ms
2025-09-03 10:14:24,141 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 10:14:24,142 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.72ms
2025-09-03 10:14:24,147 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/auth/me
2025-09-03 10:14:24,149 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 10:14:24,149 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 10:14:24,150 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 10:14:24,150 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 10:14:24,150 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 10:14:24,151 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 10:14:24,151 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 10:14:24,151 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 10:14:24,151 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 04:44:21+00:00 (UTC)
2025-09-03 10:14:24,151 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 10:14:24,151 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 10:14:24,156 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 14)
2025-09-03 10:14:24,156 - prompt_manager.app.api.v1.endpoints.auth - INFO - Current user: <prompt_manager.app.models.user.User object at 0x105f89090>
2025-09-03 10:14:24,156 - prompt_manager.app.api.v1.endpoints.auth - INFO - Token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJwcmlzaGF0YW5rNkBnbWFpbC5jb20iLCJlbWFpbCI6InByaXNoYXRhbms2QGdtYWlsLmNvbSIsInVzZXJfaWQiOiIxNCIsInNjb3BlcyI6WyJtZSJdLCJleHAiOjE3NTY5NjEwNjEsImlhdCI6MTc1Njg3NDY2MSwibmJmIjoxNzU2ODc0NjYxLCJpc3MiOiJQcm9tcHQgTWFuYWdlbWVudCBTZXJ2aWNlIiwiYXVkIjoiUHJvbXB0IE1hbmFnZW1lbnQgU2VydmljZSJ9.z5gZn4MnUJP9JcNzW5LoRWvz5GQ8j3mBy0dTNXbX4lA
2025-09-03 10:14:24,157 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/auth/me Status: 200 Time: 10.13ms
2025-09-03 10:14:24,158 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 10:14:24,158 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 10:14:24,159 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 10:14:27,580 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 10:14:27,581 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.02ms
2025-09-03 10:14:37,941 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 10:14:37,942 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.76ms
2025-09-03 10:14:37,952 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 10:14:37,954 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 10:14:37,954 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 10:14:37,954 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 10:14:37,954 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 10:14:37,954 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 10:14:37,955 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 10:14:37,955 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 10:14:37,955 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 10:14:37,955 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 04:44:21+00:00 (UTC)
2025-09-03 10:14:37,955 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 10:14:37,955 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 10:14:37,957 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 14)
2025-09-03 10:14:37,958 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 10:14:37,963 - prompt_manager.app.api.v1.api - INFO - Found 75 prompts out of 75 total
2025-09-03 10:14:37,967 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 14.2ms
2025-09-03 10:14:37,967 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 10:14:37,967 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 10:14:37,967 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 10:30:48,566 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 10:30:48,575 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 8.47ms
2025-09-03 10:44:22,611 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 10:44:22,617 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 5.83ms
2025-09-03 10:46:14,101 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 10:46:14,114 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 12.67ms
2025-09-03 10:46:14,119 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-03 10:46:14,124 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 10:46:14,124 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 10:46:14,407 - prompt_manager.app.api.v1.endpoints.auth - INFO - Created access token for user: prishatank6@gmail.com
2025-09-03 10:46:14,411 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 200 Time: 292.08ms
2025-09-03 10:46:14,412 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 10:46:14,412 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 10:46:14,412 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 10:46:14,469 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 10:46:14,469 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.33ms
2025-09-03 10:46:15,736 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 10:46:15,736 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.39ms
2025-09-03 10:47:46,237 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 10:47:46,250 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 13.54ms
2025-09-03 10:47:46,264 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/
2025-09-03 10:47:46,266 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 10:47:46,266 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 10:47:46,266 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 10:47:46,266 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 10:47:46,266 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 10:47:46,266 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 10:47:46,266 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 10:47:46,272 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 10:47:46,272 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 05:16:14+00:00 (UTC)
2025-09-03 10:47:46,272 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 10:47:46,272 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 10:47:46,283 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 14)
2025-09-03 10:47:46,285 - prompt_manager.app.api.v1.api - INFO - Creating new prompt: Healthcare Advisor version 1.0.0
2025-09-03 10:47:46,290 - prompt_manager.app.api.v1.api - INFO - Successfully created prompt Healthcare Advisor v1.0.0 (ID: 78)
2025-09-03 10:47:46,292 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/ Status: 201 Time: 28.28ms
2025-09-03 10:47:46,292 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 10:47:46,292 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 10:47:46,293 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 10:48:08,122 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 10:48:08,124 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 2.54ms
2025-09-03 10:48:10,065 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 10:48:10,066 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.81ms
2025-09-03 10:48:10,078 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/78
2025-09-03 10:48:10,081 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 10:48:10,081 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 10:48:10,081 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 10:48:10,081 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 10:48:10,082 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 10:48:10,082 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 10:48:10,082 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 10:48:10,083 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 10:48:10,083 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 05:16:14+00:00 (UTC)
2025-09-03 10:48:10,083 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 10:48:10,083 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 10:48:10,093 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 14)
2025-09-03 10:48:10,094 - prompt_manager.app.api.v1.api - INFO - Retrieving prompt with ID: 78
2025-09-03 10:48:10,096 - prompt_manager.app.api.v1.api - INFO - Successfully retrieved prompt Healthcare Advisor v1.0.0 (ID: 78)
2025-09-03 10:48:10,097 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/78 Status: 200 Time: 18.77ms
2025-09-03 10:48:10,098 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 10:48:10,098 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 10:48:10,098 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 10:48:31,884 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 10:48:31,887 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 3.11ms
2025-09-03 10:48:34,565 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 10:48:34,566 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.23ms
2025-09-03 10:48:34,581 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/78/update-version
2025-09-03 10:48:34,588 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 10:48:34,588 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 10:48:34,588 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 10:48:34,589 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 10:48:34,589 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 10:48:34,589 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 10:48:34,589 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 10:48:34,591 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 10:48:34,591 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 05:16:14+00:00 (UTC)
2025-09-03 10:48:34,591 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 10:48:34,591 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 10:48:34,599 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 14)
2025-09-03 10:48:34,600 - prompt_manager.app.api.v1.api - INFO - Auto-updating prompt ID 78 (user: prishatank6@gmail.com)
2025-09-03 10:48:34,610 - prompt_manager.app.api.v1.api - INFO - Successfully auto-incremented version to '1.0.1' for prompt 'Healthcare Advisor'
2025-09-03 10:48:34,611 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/78/update-version Status: 200 Time: 30.1ms
2025-09-03 10:48:34,612 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 10:48:34,612 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 10:48:34,612 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 10:49:09,095 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 10:49:09,108 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 12.88ms
2025-09-03 10:49:13,564 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 10:49:13,566 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 2.52ms
2025-09-03 10:49:13,579 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/79
2025-09-03 10:49:13,584 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 10:49:13,584 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 10:49:13,585 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 10:49:13,586 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 10:49:13,586 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 10:49:13,586 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 10:49:13,587 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 10:49:13,588 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 10:49:13,589 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 05:16:14+00:00 (UTC)
2025-09-03 10:49:13,589 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 10:49:13,589 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 10:49:13,598 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 14)
2025-09-03 10:49:13,598 - prompt_manager.app.api.v1.api - INFO - Retrieving prompt with ID: 79
2025-09-03 10:49:13,601 - prompt_manager.app.api.v1.api - INFO - Successfully retrieved prompt Healthcare Advisor v1.0.1 (ID: 79)
2025-09-03 10:49:13,602 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/79 Status: 200 Time: 22.61ms
2025-09-03 10:49:13,603 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 10:49:13,603 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 10:49:13,604 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 10:49:30,180 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 10:49:30,182 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.46ms
2025-09-03 10:49:32,962 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 10:49:32,963 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.18ms
2025-09-03 10:49:32,978 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/79/test-persona
2025-09-03 10:49:32,981 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 10:49:32,982 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 10:49:32,982 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 10:49:32,982 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 10:49:32,983 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 10:49:32,983 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 10:49:32,983 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 10:49:32,984 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 10:49:32,984 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 05:16:14+00:00 (UTC)
2025-09-03 10:49:32,984 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 10:49:32,984 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 10:49:32,990 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 14)
2025-09-03 10:49:32,991 - prompt_manager.app.api.v1.api - INFO - Testing persona for prompt ID 79 (user: prishatank6@gmail.com)
2025-09-03 10:49:34,128 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 10:49:34,137 - prompt_manager.app.api.v1.api - INFO - Generated persona response for prompt 'Healthcare Advisor' with persona type 'dynamic_persona'
2025-09-03 10:49:34,137 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/79/test-persona Status: 200 Time: 1159.1ms
2025-09-03 10:49:34,138 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 10:49:34,138 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 10:49:34,138 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 13:12:30,900 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 13:12:32,803 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 13:12:32,803 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-03 13:12:32,803 - prompt_manager.app.main - INFO - Database URL: sqlite:////Users/prisha/Desktop/Coding/system prompt/prompts.db
2025-09-03 13:12:59,599 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 13:13:00,759 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 13:13:00,759 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-03 13:13:00,759 - prompt_manager.app.main - INFO - Database URL: sqlite:////Users/prisha/Desktop/Coding/system prompt/prompts.db
2025-09-03 13:14:53,281 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 13:14:53,285 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 3.51ms
2025-09-03 13:15:06,259 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 13:15:06,262 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 3.21ms
2025-09-03 13:15:06,268 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-03 13:15:06,271 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 13:15:06,272 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 13:15:06,578 - prompt_manager.app.api.v1.endpoints.auth - INFO - Created access token for user: prishatank6@gmail.com
2025-09-03 13:15:06,586 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 200 Time: 318.25ms
2025-09-03 13:15:06,587 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 13:15:06,587 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 13:15:06,587 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 13:15:06,624 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 13:15:06,624 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.32ms
2025-09-03 13:15:08,375 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 13:15:08,376 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.91ms
2025-09-03 13:15:12,914 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 13:15:12,915 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.89ms
2025-09-03 13:15:12,930 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/1
2025-09-03 13:15:12,932 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 13:15:12,932 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 13:15:12,932 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 13:15:12,932 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 13:15:12,932 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 13:15:12,933 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 13:15:12,933 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 13:15:12,934 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 13:15:12,934 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 07:45:06+00:00 (UTC)
2025-09-03 13:15:12,934 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 13:15:12,934 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 13:15:12,935 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 14)
2025-09-03 13:15:12,936 - prompt_manager.app.api.v1.api - INFO - Retrieving prompt with ID: 1
2025-09-03 13:15:12,940 - prompt_manager.app.api.v1.api - WARNING - Prompt with ID 1 not found
2025-09-03 13:15:12,940 - prompt_manager.app.database - ERROR - Error in database session: Prompt not found
2025-09-03 13:15:12,940 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 13:15:12,941 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 13:15:12,942 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/1 Status: 404 Time: 12.31ms
2025-09-03 13:15:17,629 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 13:15:17,630 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 13:15:17,631 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.95ms
2025-09-03 13:15:17,632 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.29ms
2025-09-03 13:15:17,676 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/74
2025-09-03 13:15:17,677 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 13:15:17,677 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 13:15:17,677 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 13:15:17,677 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 13:15:17,677 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 13:15:17,677 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 13:15:17,678 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 13:15:17,678 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 13:15:17,678 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 07:45:06+00:00 (UTC)
2025-09-03 13:15:17,678 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 13:15:17,678 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 13:15:17,679 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 14)
2025-09-03 13:15:17,680 - prompt_manager.app.api.v1.api - INFO - Retrieving prompt with ID: 74
2025-09-03 13:15:17,681 - prompt_manager.app.api.v1.api - INFO - Successfully retrieved prompt Coding Assistant v1.0.0 (ID: 74)
2025-09-03 13:15:17,682 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/74 Status: 200 Time: 5.73ms
2025-09-03 13:15:17,683 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 13:15:17,683 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 13:15:17,683 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 13:15:25,910 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 13:15:25,914 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 4.15ms
2025-09-03 13:15:25,926 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/1
2025-09-03 13:15:25,928 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 13:15:25,929 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 13:15:25,929 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 13:15:25,930 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 13:15:25,930 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 13:15:25,930 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 13:15:25,930 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 13:15:25,932 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 13:15:25,932 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 07:45:06+00:00 (UTC)
2025-09-03 13:15:25,932 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 13:15:25,932 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 13:15:25,940 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 14)
2025-09-03 13:15:25,941 - prompt_manager.app.api.v1.api - INFO - Retrieving prompt with ID: 1
2025-09-03 13:15:25,942 - prompt_manager.app.api.v1.api - WARNING - Prompt with ID 1 not found
2025-09-03 13:15:25,942 - prompt_manager.app.database - ERROR - Error in database session: Prompt not found
2025-09-03 13:15:25,942 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 13:15:25,943 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 13:15:25,943 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/1 Status: 404 Time: 17.49ms
2025-09-03 13:17:07,970 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 13:17:09,274 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 13:17:09,274 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-03 13:17:09,274 - prompt_manager.app.main - INFO - Database URL: sqlite:////Users/prisha/Desktop/Coding/system prompt/prompts.db
2025-09-03 13:18:35,770 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 13:18:36,879 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 13:18:36,879 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-03 13:18:36,879 - prompt_manager.app.main - INFO - Database URL: sqlite:////Users/prisha/Desktop/Coding/system prompt/prompts.db
2025-09-03 13:19:25,575 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 13:19:26,938 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 13:19:26,938 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-03 13:19:26,938 - prompt_manager.app.main - INFO - Database URL: sqlite:////Users/prisha/Desktop/Coding/system prompt/prompts.db
2025-09-03 13:20:43,464 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 13:20:44,415 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 13:20:44,415 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-03 13:20:44,415 - prompt_manager.app.main - INFO - Database URL: sqlite:////Users/prisha/Desktop/Coding/system prompt/prompts.db
2025-09-03 13:21:35,104 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 13:21:35,107 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 2.73ms
2025-09-03 13:21:47,251 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 13:21:47,253 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.94ms
2025-09-03 13:21:47,258 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-03 13:21:47,265 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 13:21:47,266 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 13:21:47,568 - prompt_manager.app.api.v1.endpoints.auth - INFO - Created access token for user: prishatank6@gmail.com
2025-09-03 13:21:47,573 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 200 Time: 314.46ms
2025-09-03 13:21:47,573 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 13:21:47,573 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 13:21:47,574 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 13:21:47,614 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 13:21:47,615 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.35ms
2025-09-03 13:21:49,046 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 13:21:49,046 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.87ms
2025-09-03 13:22:11,027 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 13:22:11,035 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 13:22:11,037 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 10.62ms
2025-09-03 13:22:11,040 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 4.68ms
2025-09-03 13:22:11,125 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/?status=active
2025-09-03 13:22:11,127 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 13:22:11,128 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 13:22:11,129 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 13:22:11,129 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 13:22:11,129 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 13:22:11,129 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 13:22:11,129 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 13:22:11,133 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 13:22:11,133 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 07:51:47+00:00 (UTC)
2025-09-03 13:22:11,133 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 13:22:11,133 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 13:22:11,137 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 14)
2025-09-03 13:22:11,137 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=PromptStatus.ACTIVE, tag=None
2025-09-03 13:22:11,144 - prompt_manager.app.api.v1.api - INFO - Found 20 prompts out of 20 total
2025-09-03 13:22:11,145 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/?status=active Status: 200 Time: 19.67ms
2025-09-03 13:22:11,146 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 13:22:11,146 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 13:22:11,146 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 13:22:18,144 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 13:22:18,145 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 13:22:18,146 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.72ms
2025-09-03 13:22:18,147 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.23ms
2025-09-03 13:22:18,193 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/?status=active
2025-09-03 13:22:18,194 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 13:22:18,194 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 13:22:18,195 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 13:22:18,195 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 13:22:18,195 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 13:22:18,195 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 13:22:18,195 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 13:22:18,195 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 13:22:18,196 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 07:51:47+00:00 (UTC)
2025-09-03 13:22:18,196 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 13:22:18,196 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 13:22:18,197 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 14)
2025-09-03 13:22:18,197 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=PromptStatus.ACTIVE, tag=None
2025-09-03 13:22:18,198 - prompt_manager.app.api.v1.api - INFO - Found 20 prompts out of 20 total
2025-09-03 13:22:18,199 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/?status=active Status: 200 Time: 6.22ms
2025-09-03 13:22:18,200 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 13:22:18,200 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 13:22:18,200 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 13:22:51,855 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 13:22:53,009 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 13:22:53,009 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-03 13:22:53,009 - prompt_manager.app.main - INFO - Database URL: sqlite:////Users/prisha/Desktop/Coding/system prompt/prompts.db
2025-09-03 13:23:42,068 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 13:23:42,073 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 3.85ms
2025-09-03 13:23:42,084 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/?status=active
2025-09-03 13:23:42,085 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 13:23:42,086 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 13:23:42,086 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 13:23:42,086 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 13:23:42,086 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 13:23:42,086 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 13:23:42,086 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 13:23:42,091 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 13:23:42,091 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 07:51:47+00:00 (UTC)
2025-09-03 13:23:42,091 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 13:23:42,091 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 13:23:42,105 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 14)
2025-09-03 13:23:42,106 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=PromptStatus.ACTIVE, tag=None
2025-09-03 13:23:42,114 - prompt_manager.app.api.v1.api - INFO - Found 20 prompts out of 20 total
2025-09-03 13:23:42,115 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/?status=active Status: 200 Time: 31.74ms
2025-09-03 13:23:42,116 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 13:23:42,116 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 13:23:42,116 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 13:24:01,071 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 13:24:01,075 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 4.8ms
2025-09-03 13:24:01,098 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/test-persona
2025-09-03 13:24:01,103 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 13:24:01,103 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 13:24:01,103 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 13:24:01,104 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 13:24:01,104 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 13:24:01,104 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 13:24:01,104 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 13:24:01,106 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 13:24:01,106 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 07:51:47+00:00 (UTC)
2025-09-03 13:24:01,106 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 13:24:01,106 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 13:24:01,116 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 14)
2025-09-03 13:24:01,117 - prompt_manager.app.api.v1.api - INFO - Testing persona for user input: I want to write a palindrome code.
... (user: prishatank6@gmail.com)
2025-09-03 13:24:02,523 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 13:24:02,530 - prompt_manager.app.api.v1.api - INFO - Generated persona response for prompt 'code' with persona type 'dynamic_persona'
2025-09-03 13:24:02,531 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/test-persona Status: 200 Time: 1433.41ms
2025-09-03 13:24:02,532 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 13:24:02,532 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 13:24:02,533 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 13:24:09,757 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 13:24:09,758 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.62ms
2025-09-03 13:24:09,773 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/?status=active
2025-09-03 13:24:09,775 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 13:24:09,775 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 13:24:09,775 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 13:24:09,776 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 13:24:09,776 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 13:24:09,776 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 13:24:09,776 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 13:24:09,777 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 13:24:09,777 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 07:51:47+00:00 (UTC)
2025-09-03 13:24:09,777 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 13:24:09,777 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 13:24:09,779 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 14)
2025-09-03 13:24:09,780 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=PromptStatus.ACTIVE, tag=None
2025-09-03 13:24:09,782 - prompt_manager.app.api.v1.api - INFO - Found 20 prompts out of 20 total
2025-09-03 13:24:09,783 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/?status=active Status: 200 Time: 9.77ms
2025-09-03 13:24:09,784 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 13:24:09,784 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 13:24:09,784 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 13:24:15,989 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 13:24:15,990 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.82ms
2025-09-03 13:24:16,004 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/?status=active
2025-09-03 13:24:16,005 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 13:24:16,006 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 13:24:16,006 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 13:24:16,006 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 13:24:16,007 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 13:24:16,007 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 13:24:16,007 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 13:24:16,007 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 13:24:16,007 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 07:51:47+00:00 (UTC)
2025-09-03 13:24:16,008 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 13:24:16,008 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 13:24:16,010 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 14)
2025-09-03 13:24:16,010 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=PromptStatus.ACTIVE, tag=None
2025-09-03 13:24:16,014 - prompt_manager.app.api.v1.api - INFO - Found 20 prompts out of 20 total
2025-09-03 13:24:16,016 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/?status=active Status: 200 Time: 12.35ms
2025-09-03 13:24:16,017 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 13:24:16,017 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 13:24:16,017 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 13:24:17,928 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 13:24:17,930 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.47ms
2025-09-03 13:24:17,943 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/test-persona
2025-09-03 13:24:17,945 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 13:24:17,945 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 13:24:17,946 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 13:24:17,946 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 13:24:17,946 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 13:24:17,946 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 13:24:17,946 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 13:24:17,946 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 13:24:17,947 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 07:51:47+00:00 (UTC)
2025-09-03 13:24:17,947 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 13:24:17,947 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 13:24:17,948 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 14)
2025-09-03 13:24:17,948 - prompt_manager.app.api.v1.api - INFO - Testing persona for user input: I want to write a palindrome code.
... (user: prishatank6@gmail.com)
2025-09-03 13:24:18,807 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 13:24:18,813 - prompt_manager.app.api.v1.api - INFO - Generated persona response for prompt 'code' with persona type 'dynamic_persona'
2025-09-03 13:24:18,814 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/test-persona Status: 200 Time: 870.78ms
2025-09-03 13:24:18,815 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 13:24:18,816 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 13:24:18,816 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 13:24:25,206 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 13:24:25,207 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.21ms
2025-09-03 13:24:25,220 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/?status=active
2025-09-03 13:24:25,221 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 13:24:25,222 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 13:24:25,222 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 13:24:25,222 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 13:24:25,222 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 13:24:25,222 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 13:24:25,223 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 13:24:25,224 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 13:24:25,224 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 07:51:47+00:00 (UTC)
2025-09-03 13:24:25,224 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 13:24:25,224 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 13:24:25,229 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 14)
2025-09-03 13:24:25,229 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=PromptStatus.ACTIVE, tag=None
2025-09-03 13:24:25,231 - prompt_manager.app.api.v1.api - INFO - Found 20 prompts out of 20 total
2025-09-03 13:24:25,232 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/?status=active Status: 200 Time: 12.3ms
2025-09-03 13:24:25,233 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 13:24:25,233 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 13:24:25,233 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 13:24:42,941 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 13:24:42,942 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.35ms
2025-09-03 13:24:42,994 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 13:24:42,996 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.31ms
2025-09-03 13:24:43,006 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/?status=active
2025-09-03 13:24:43,008 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 13:24:43,008 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 13:24:43,008 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 13:24:43,009 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 13:24:43,009 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 13:24:43,009 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 13:24:43,009 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 13:24:43,009 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 13:24:43,010 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 07:51:47+00:00 (UTC)
2025-09-03 13:24:43,010 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 13:24:43,010 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 13:24:43,010 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 14)
2025-09-03 13:24:43,011 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=PromptStatus.ACTIVE, tag=None
2025-09-03 13:24:43,012 - prompt_manager.app.api.v1.api - INFO - Found 20 prompts out of 20 total
2025-09-03 13:24:43,013 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/?status=active Status: 200 Time: 6.34ms
2025-09-03 13:24:43,013 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 13:24:43,013 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 13:24:43,013 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 13:24:45,490 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 13:24:45,491 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.73ms
2025-09-03 13:24:45,497 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/test-persona
2025-09-03 13:24:45,498 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 13:24:45,498 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 13:24:45,498 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 13:24:45,498 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 13:24:45,498 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 13:24:45,498 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 13:24:45,498 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 13:24:45,499 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 13:24:45,499 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 07:51:47+00:00 (UTC)
2025-09-03 13:24:45,499 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 13:24:45,499 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 13:24:45,499 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 14)
2025-09-03 13:24:45,499 - prompt_manager.app.api.v1.api - INFO - Testing persona for user input: I have fever and headache what should I do?
... (user: prishatank6@gmail.com)
2025-09-03 13:24:46,776 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 13:24:46,784 - prompt_manager.app.api.v1.api - INFO - Generated persona response for prompt 'code_review' with persona type 'dynamic_persona'
2025-09-03 13:24:46,785 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/test-persona Status: 200 Time: 1288.24ms
2025-09-03 13:24:46,786 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 13:24:46,786 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 13:24:46,787 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 13:26:35,814 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 13:26:36,999 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 13:26:36,999 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-03 13:26:36,999 - prompt_manager.app.main - INFO - Database URL: sqlite:////Users/prisha/Desktop/Coding/system prompt/prompts.db
2025-09-03 13:26:51,729 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 13:26:51,737 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 7.43ms
2025-09-03 13:26:51,744 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/?status=active
2025-09-03 13:26:51,745 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 13:26:51,746 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 13:26:51,746 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 13:26:51,746 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 13:26:51,746 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 13:26:51,746 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 13:26:51,746 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 13:26:51,747 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 13:26:51,748 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 07:51:47+00:00 (UTC)
2025-09-03 13:26:51,748 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 13:26:51,748 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 13:26:51,758 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 14)
2025-09-03 13:26:51,759 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=PromptStatus.ACTIVE, tag=None
2025-09-03 13:26:51,765 - prompt_manager.app.api.v1.api - INFO - Found 20 prompts out of 20 total
2025-09-03 13:26:51,766 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/?status=active Status: 200 Time: 21.28ms
2025-09-03 13:26:51,766 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 13:26:51,766 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 13:26:51,766 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 13:27:08,949 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 13:27:09,865 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 13:27:09,865 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-03 13:27:09,865 - prompt_manager.app.main - INFO - Database URL: sqlite:////Users/prisha/Desktop/Coding/system prompt/prompts.db
2025-09-03 13:27:17,045 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 13:27:18,133 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 13:27:18,133 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-03 13:27:18,133 - prompt_manager.app.main - INFO - Database URL: sqlite:////Users/prisha/Desktop/Coding/system prompt/prompts.db
2025-09-03 13:27:39,881 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 13:27:39,883 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.65ms
2025-09-03 13:27:54,212 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 13:27:54,214 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 2.55ms
2025-09-03 13:27:54,219 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-03 13:27:54,223 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 13:27:54,225 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 13:27:54,534 - prompt_manager.app.api.v1.endpoints.auth - INFO - Created access token for user: prishatank6@gmail.com
2025-09-03 13:27:54,541 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 200 Time: 322.26ms
2025-09-03 13:27:54,542 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 13:27:54,542 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 13:27:54,542 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 13:27:54,570 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 13:27:54,571 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.34ms
2025-09-03 13:27:57,347 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 13:27:57,348 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.88ms
2025-09-03 13:28:10,179 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 13:28:10,181 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 2.73ms
2025-09-03 13:28:10,240 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 13:28:10,241 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.77ms
2025-09-03 13:28:10,248 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/?status=active
2025-09-03 13:28:10,250 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 13:28:10,251 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 13:28:10,251 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 13:28:10,251 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 13:28:10,251 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 13:28:10,251 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 13:28:10,251 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 13:28:10,252 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 13:28:10,252 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 07:57:54+00:00 (UTC)
2025-09-03 13:28:10,252 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 13:28:10,253 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 13:28:10,254 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 14)
2025-09-03 13:28:10,255 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=PromptStatus.ACTIVE, tag=None
2025-09-03 13:28:10,265 - prompt_manager.app.api.v1.api - INFO - Found 20 prompts out of 20 total
2025-09-03 13:28:10,268 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/?status=active Status: 200 Time: 20.2ms
2025-09-03 13:28:10,269 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 13:28:10,269 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 13:28:10,270 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 13:28:13,540 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 13:28:13,541 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.75ms
2025-09-03 13:28:13,555 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/test-persona
2025-09-03 13:28:13,557 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 13:28:13,557 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 13:28:13,558 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 13:28:13,558 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 13:28:13,558 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 13:28:13,558 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 13:28:13,558 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 13:28:13,559 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 13:28:13,559 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 07:57:54+00:00 (UTC)
2025-09-03 13:28:13,559 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 13:28:13,560 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 13:28:13,561 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 14)
2025-09-03 13:28:13,564 - prompt_manager.app.database - ERROR - Error in database session: [{'type': 'missing', 'loc': ('body', 'user_input'), 'msg': 'Field required', 'input': None, 'url': 'https://errors.pydantic.dev/2.4/v/missing'}]
2025-09-03 13:28:13,564 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 13:28:13,564 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 13:28:13,565 - prompt_manager.app.main - ERROR - Validation error for request: POST http://localhost:8000/api/v1/prompts/test-persona
2025-09-03 13:28:13,565 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/test-persona Status: 422 Time: 10.09ms
2025-09-03 13:28:15,572 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 13:28:15,573 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.77ms
2025-09-03 13:28:15,588 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/test-persona
2025-09-03 13:28:15,590 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 13:28:15,590 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 13:28:15,591 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 13:28:15,591 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 13:28:15,591 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 13:28:15,591 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 13:28:15,591 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 13:28:15,591 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 13:28:15,592 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 07:57:54+00:00 (UTC)
2025-09-03 13:28:15,592 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 13:28:15,592 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 13:28:15,593 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 14)
2025-09-03 13:28:15,594 - prompt_manager.app.database - ERROR - Error in database session: [{'type': 'missing', 'loc': ('body', 'user_input'), 'msg': 'Field required', 'input': None, 'url': 'https://errors.pydantic.dev/2.4/v/missing'}]
2025-09-03 13:28:15,594 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 13:28:15,594 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 13:28:15,596 - prompt_manager.app.main - ERROR - Validation error for request: POST http://localhost:8000/api/v1/prompts/test-persona
2025-09-03 13:28:15,597 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/test-persona Status: 422 Time: 8.44ms
2025-09-03 13:28:15,751 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 13:28:15,751 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.49ms
2025-09-03 13:28:15,759 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/test-persona
2025-09-03 13:28:15,760 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 13:28:15,760 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 13:28:15,760 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 13:28:15,760 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 13:28:15,760 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 13:28:15,760 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 13:28:15,760 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 13:28:15,761 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 13:28:15,761 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 07:57:54+00:00 (UTC)
2025-09-03 13:28:15,761 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 13:28:15,761 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 13:28:15,761 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 14)
2025-09-03 13:28:15,762 - prompt_manager.app.database - ERROR - Error in database session: [{'type': 'missing', 'loc': ('body', 'user_input'), 'msg': 'Field required', 'input': None, 'url': 'https://errors.pydantic.dev/2.4/v/missing'}]
2025-09-03 13:28:15,762 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 13:28:15,762 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 13:28:15,763 - prompt_manager.app.main - ERROR - Validation error for request: POST http://localhost:8000/api/v1/prompts/test-persona
2025-09-03 13:28:15,763 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/test-persona Status: 422 Time: 4.17ms
2025-09-03 13:28:43,542 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 13:28:44,761 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 13:28:44,761 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-03 13:28:44,761 - prompt_manager.app.main - INFO - Database URL: sqlite:////Users/prisha/Desktop/Coding/system prompt/prompts.db
2025-09-03 13:29:53,212 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 13:31:12,470 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 13:31:12,470 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-03 13:31:12,470 - prompt_manager.app.main - INFO - Database URL: sqlite:////Users/prisha/Desktop/Coding/system prompt/prompts.db
2025-09-03 13:31:12,474 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 13:31:12,475 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 13:31:12,475 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.54ms
2025-09-03 13:31:12,477 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.64ms
2025-09-03 13:31:23,929 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 13:31:23,932 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 3.29ms
2025-09-03 13:36:39,717 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 13:36:41,244 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 13:36:41,244 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-03 13:36:41,244 - prompt_manager.app.main - INFO - Database URL: sqlite:////Users/prisha/Desktop/Coding/system prompt/prompts.db
2025-09-03 13:38:05,176 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 13:38:06,662 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 13:38:06,663 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-03 13:38:06,663 - prompt_manager.app.main - INFO - Database URL: sqlite:////Users/prisha/Desktop/Coding/system prompt/prompts.db
2025-09-03 13:39:04,516 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 13:39:05,798 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 13:39:05,798 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-03 13:39:05,798 - prompt_manager.app.main - INFO - Database URL: sqlite:////Users/prisha/Desktop/Coding/system prompt/prompts.db
2025-09-03 13:39:40,918 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-03 13:39:40,920 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 13:39:40,920 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 13:39:41,217 - prompt_manager.app.api.v1.endpoints.auth - INFO - Created access token for user: admin@example.com
2025-09-03 13:39:41,225 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 200 Time: 307.11ms
2025-09-03 13:39:41,226 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 13:39:41,226 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 13:39:41,227 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 13:39:41,229 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/test-persona
2025-09-03 13:39:41,229 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 13:39:41,229 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 13:39:41,230 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 13:39:41,230 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 13:39:41,230 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 13:39:41,230 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 13:39:41,230 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 13:39:41,230 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 13:39:41,230 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 08:09:41+00:00 (UTC)
2025-09-03 13:39:41,230 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 13:39:41,230 - prompt_manager.app.core.security - INFO - Looking up user with email: admin@example.com
2025-09-03 13:39:41,231 - prompt_manager.app.core.security - INFO - Found user: admin@example.com (ID: 26)
2025-09-03 13:39:41,231 - prompt_manager.app.database - ERROR - Error in database session: [{'type': 'string_type', 'loc': ('body',), 'msg': 'Input should be a valid string', 'input': {'user_input': "I'm feeling really stressed and anxious today"}, 'url': 'https://errors.pydantic.dev/2.4/v/string_type'}]
2025-09-03 13:39:41,231 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 13:39:41,232 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 13:39:41,232 - prompt_manager.app.main - ERROR - Validation error for request: POST http://localhost:8000/api/v1/prompts/test-persona
2025-09-03 13:39:41,232 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/test-persona Status: 422 Time: 3.3ms
2025-09-03 13:39:41,234 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-03 13:39:41,234 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 13:39:41,234 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 13:39:41,498 - prompt_manager.app.api.v1.endpoints.auth - INFO - Created access token for user: admin@example.com
2025-09-03 13:39:41,499 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 200 Time: 265.03ms
2025-09-03 13:39:41,499 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 13:39:41,499 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 13:39:41,499 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 13:39:41,501 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/test-persona
2025-09-03 13:39:41,501 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 13:39:41,501 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 13:39:41,501 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 13:39:41,501 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 13:39:41,501 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 13:39:41,501 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 13:39:41,501 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 13:39:41,501 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 13:39:41,501 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 08:09:41+00:00 (UTC)
2025-09-03 13:39:41,501 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 13:39:41,502 - prompt_manager.app.core.security - INFO - Looking up user with email: admin@example.com
2025-09-03 13:39:41,502 - prompt_manager.app.core.security - INFO - Found user: admin@example.com (ID: 26)
2025-09-03 13:39:41,502 - prompt_manager.app.database - ERROR - Error in database session: [{'type': 'string_type', 'loc': ('body',), 'msg': 'Input should be a valid string', 'input': {'user_input': 'How do I implement a binary search in Python?'}, 'url': 'https://errors.pydantic.dev/2.4/v/string_type'}]
2025-09-03 13:39:41,502 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 13:39:41,502 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 13:39:41,502 - prompt_manager.app.main - ERROR - Validation error for request: POST http://localhost:8000/api/v1/prompts/test-persona
2025-09-03 13:39:41,503 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/test-persona Status: 422 Time: 1.94ms
2025-09-03 13:39:41,504 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-03 13:39:41,504 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 13:39:41,505 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 13:39:41,758 - prompt_manager.app.api.v1.endpoints.auth - INFO - Created access token for user: admin@example.com
2025-09-03 13:39:41,759 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 200 Time: 255.13ms
2025-09-03 13:39:41,759 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 13:39:41,760 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 13:39:41,760 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 13:39:41,761 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/test-persona
2025-09-03 13:39:41,761 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 13:39:41,761 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 13:39:41,762 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 13:39:41,762 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 13:39:41,762 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 13:39:41,762 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 13:39:41,762 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 13:39:41,762 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 13:39:41,762 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 08:09:41+00:00 (UTC)
2025-09-03 13:39:41,762 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 13:39:41,762 - prompt_manager.app.core.security - INFO - Looking up user with email: admin@example.com
2025-09-03 13:39:41,762 - prompt_manager.app.core.security - INFO - Found user: admin@example.com (ID: 26)
2025-09-03 13:39:41,763 - prompt_manager.app.database - ERROR - Error in database session: [{'type': 'string_type', 'loc': ('body',), 'msg': 'Input should be a valid string', 'input': {'user_input': "What's the best way to bake a chocolate cake?"}, 'url': 'https://errors.pydantic.dev/2.4/v/string_type'}]
2025-09-03 13:39:41,763 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 13:39:41,763 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 13:39:41,763 - prompt_manager.app.main - ERROR - Validation error for request: POST http://localhost:8000/api/v1/prompts/test-persona
2025-09-03 13:39:41,763 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/test-persona Status: 422 Time: 2.03ms
2025-09-03 13:39:41,764 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-03 13:39:41,765 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 13:39:41,765 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 13:39:42,023 - prompt_manager.app.api.v1.endpoints.auth - INFO - Created access token for user: admin@example.com
2025-09-03 13:39:42,024 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 200 Time: 259.41ms
2025-09-03 13:39:42,025 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 13:39:42,025 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 13:39:42,025 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 13:39:42,027 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/test-persona
2025-09-03 13:39:42,028 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 13:39:42,028 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 13:39:42,028 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 13:39:42,028 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 13:39:42,028 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 13:39:42,028 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 13:39:42,028 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 13:39:42,028 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 13:39:42,028 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 08:09:42+00:00 (UTC)
2025-09-03 13:39:42,028 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 13:39:42,028 - prompt_manager.app.core.security - INFO - Looking up user with email: admin@example.com
2025-09-03 13:39:42,029 - prompt_manager.app.core.security - INFO - Found user: admin@example.com (ID: 26)
2025-09-03 13:39:42,029 - prompt_manager.app.database - ERROR - Error in database session: [{'type': 'string_type', 'loc': ('body',), 'msg': 'Input should be a valid string', 'input': {'user_input': "I'm having trouble with my internet connection"}, 'url': 'https://errors.pydantic.dev/2.4/v/string_type'}]
2025-09-03 13:39:42,029 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 13:39:42,029 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 13:39:42,029 - prompt_manager.app.main - ERROR - Validation error for request: POST http://localhost:8000/api/v1/prompts/test-persona
2025-09-03 13:39:42,029 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/test-persona Status: 422 Time: 2.51ms
2025-09-03 13:40:12,466 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 13:40:13,571 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 13:40:13,572 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-03 13:40:13,572 - prompt_manager.app.main - INFO - Database URL: sqlite:////Users/prisha/Desktop/Coding/system prompt/prompts.db
2025-09-03 13:40:26,496 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-03 13:40:26,501 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 13:40:26,501 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 13:40:26,802 - prompt_manager.app.api.v1.endpoints.auth - INFO - Created access token for user: admin@example.com
2025-09-03 13:40:26,807 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 200 Time: 311.29ms
2025-09-03 13:40:26,808 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 13:40:26,808 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 13:40:26,808 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 13:40:26,810 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/test-persona
2025-09-03 13:40:26,810 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 13:40:26,810 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 13:40:26,810 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 13:40:26,810 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 13:40:26,810 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 13:40:26,810 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 13:40:26,811 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 13:40:26,811 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 13:40:26,811 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 08:10:26+00:00 (UTC)
2025-09-03 13:40:26,811 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 13:40:26,811 - prompt_manager.app.core.security - INFO - Looking up user with email: admin@example.com
2025-09-03 13:40:26,811 - prompt_manager.app.core.security - INFO - Found user: admin@example.com (ID: 26)
2025-09-03 13:40:26,811 - prompt_manager.app.api.v1.api - INFO - Testing persona with automatic prompt selection (user: admin@example.com)
2025-09-03 13:40:27,745 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 13:40:27,749 - prompt_manager.app.crud.crud - INFO - LLM selected prompt: none for input: I'm feeling really stressed and anxious today
2025-09-03 13:40:27,749 - prompt_manager.app.crud.crud - WARNING - LLM returned invalid prompt ID: none
2025-09-03 13:40:27,749 - prompt_manager.app.database - ERROR - Error in database session: 
2025-09-03 13:40:27,749 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 13:40:27,749 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 13:40:27,750 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/test-persona Status: 404 Time: 940.12ms
2025-09-03 13:40:27,752 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-03 13:40:27,752 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 13:40:27,753 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 13:40:28,012 - prompt_manager.app.api.v1.endpoints.auth - INFO - Created access token for user: admin@example.com
2025-09-03 13:40:28,012 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 200 Time: 260.52ms
2025-09-03 13:40:28,013 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 13:40:28,013 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 13:40:28,013 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 13:40:28,014 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/test-persona
2025-09-03 13:40:28,017 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 13:40:28,017 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 13:40:28,017 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 13:40:28,017 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 13:40:28,017 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 13:40:28,017 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 13:40:28,017 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 13:40:28,017 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 13:40:28,017 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 08:10:28+00:00 (UTC)
2025-09-03 13:40:28,017 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 13:40:28,017 - prompt_manager.app.core.security - INFO - Looking up user with email: admin@example.com
2025-09-03 13:40:28,018 - prompt_manager.app.core.security - INFO - Found user: admin@example.com (ID: 26)
2025-09-03 13:40:28,018 - prompt_manager.app.api.v1.api - INFO - Testing persona with automatic prompt selection (user: admin@example.com)
2025-09-03 13:40:28,310 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 13:40:28,315 - prompt_manager.app.crud.crud - INFO - LLM selected prompt: Based on the user's input "How do I for input: How do I implement a binary search in Python?
2025-09-03 13:40:28,315 - prompt_manager.app.crud.crud - WARNING - LLM returned invalid prompt ID: Based on the user's input "How do I
2025-09-03 13:40:28,315 - prompt_manager.app.database - ERROR - Error in database session: 
2025-09-03 13:40:28,315 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 13:40:28,315 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 13:40:28,315 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/test-persona Status: 404 Time: 301.33ms
2025-09-03 13:40:28,317 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-03 13:40:28,318 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 13:40:28,318 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 13:40:28,576 - prompt_manager.app.api.v1.endpoints.auth - INFO - Created access token for user: admin@example.com
2025-09-03 13:40:28,576 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 200 Time: 258.6ms
2025-09-03 13:40:28,576 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 13:40:28,576 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 13:40:28,577 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 13:40:28,578 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/test-persona
2025-09-03 13:40:28,578 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 13:40:28,578 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 13:40:28,578 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 13:40:28,579 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 13:40:28,579 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 13:40:28,579 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 13:40:28,579 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 13:40:28,579 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 13:40:28,579 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 08:10:28+00:00 (UTC)
2025-09-03 13:40:28,579 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 13:40:28,579 - prompt_manager.app.core.security - INFO - Looking up user with email: admin@example.com
2025-09-03 13:40:28,579 - prompt_manager.app.core.security - INFO - Found user: admin@example.com (ID: 26)
2025-09-03 13:40:28,579 - prompt_manager.app.api.v1.api - INFO - Testing persona with automatic prompt selection (user: admin@example.com)
2025-09-03 13:40:29,054 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 13:40:29,056 - prompt_manager.app.crud.crud - INFO - LLM selected prompt: none for input: What's the best way to bake a chocolate cake?
2025-09-03 13:40:29,056 - prompt_manager.app.crud.crud - WARNING - LLM returned invalid prompt ID: none
2025-09-03 13:40:29,057 - prompt_manager.app.database - ERROR - Error in database session: 
2025-09-03 13:40:29,057 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 13:40:29,057 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 13:40:29,057 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/test-persona Status: 404 Time: 479.43ms
2025-09-03 13:40:29,059 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-03 13:40:29,060 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 13:40:29,060 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 13:40:29,316 - prompt_manager.app.api.v1.endpoints.auth - INFO - Created access token for user: admin@example.com
2025-09-03 13:40:29,316 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 200 Time: 257.03ms
2025-09-03 13:40:29,317 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 13:40:29,317 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 13:40:29,317 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 13:40:29,318 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/test-persona
2025-09-03 13:40:29,319 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 13:40:29,319 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 13:40:29,319 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 13:40:29,319 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 13:40:29,319 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 13:40:29,319 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 13:40:29,319 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 13:40:29,319 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 13:40:29,319 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 08:10:29+00:00 (UTC)
2025-09-03 13:40:29,319 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 13:40:29,319 - prompt_manager.app.core.security - INFO - Looking up user with email: admin@example.com
2025-09-03 13:40:29,319 - prompt_manager.app.core.security - INFO - Found user: admin@example.com (ID: 26)
2025-09-03 13:40:29,319 - prompt_manager.app.api.v1.api - INFO - Testing persona with automatic prompt selection (user: admin@example.com)
2025-09-03 13:40:29,657 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 13:40:29,659 - prompt_manager.app.crud.crud - INFO - LLM selected prompt: none for input: I'm having trouble with my internet connection
2025-09-03 13:40:29,659 - prompt_manager.app.crud.crud - WARNING - LLM returned invalid prompt ID: none
2025-09-03 13:40:29,659 - prompt_manager.app.database - ERROR - Error in database session: 
2025-09-03 13:40:29,659 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 13:40:29,659 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 13:40:29,660 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/test-persona Status: 404 Time: 341.42ms
2025-09-03 13:41:12,501 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 13:41:14,004 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 13:41:14,004 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-03 13:41:14,004 - prompt_manager.app.main - INFO - Database URL: sqlite:////Users/prisha/Desktop/Coding/system prompt/prompts.db
2025-09-03 13:41:47,305 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-03 13:41:47,306 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 13:41:47,307 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 13:41:47,594 - prompt_manager.app.api.v1.endpoints.auth - INFO - Created access token for user: admin@example.com
2025-09-03 13:41:47,598 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 200 Time: 293.23ms
2025-09-03 13:41:47,599 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 13:41:47,599 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 13:41:47,599 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 13:41:47,600 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/
2025-09-03 13:41:47,601 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 13:41:47,601 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 13:41:47,601 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 13:41:47,601 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 13:41:47,601 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 13:41:47,601 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 13:41:47,601 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 13:41:47,601 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 13:41:47,601 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 08:11:47+00:00 (UTC)
2025-09-03 13:41:47,601 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 13:41:47,601 - prompt_manager.app.core.security - INFO - Looking up user with email: admin@example.com
2025-09-03 13:41:47,602 - prompt_manager.app.core.security - INFO - Found user: admin@example.com (ID: 26)
2025-09-03 13:41:47,602 - prompt_manager.app.api.v1.api - INFO - Creating new prompt: mental_health_support version 1.0.0
2025-09-03 13:41:47,609 - prompt_manager.app.api.v1.api - INFO - Successfully created prompt mental_health_support v1.0.0 (ID: 80)
2025-09-03 13:41:47,609 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/ Status: 201 Time: 9.16ms
2025-09-03 13:41:47,610 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 13:41:47,610 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 13:41:47,610 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 13:41:47,612 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/
2025-09-03 13:41:47,612 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 13:41:47,612 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 13:41:47,612 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 13:41:47,612 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 13:41:47,612 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 13:41:47,612 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 13:41:47,612 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 13:41:47,613 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 13:41:47,613 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 08:11:47+00:00 (UTC)
2025-09-03 13:41:47,613 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 13:41:47,613 - prompt_manager.app.core.security - INFO - Looking up user with email: admin@example.com
2025-09-03 13:41:47,613 - prompt_manager.app.core.security - INFO - Found user: admin@example.com (ID: 26)
2025-09-03 13:41:47,613 - prompt_manager.app.api.v1.api - INFO - Creating new prompt: coding_assistant version 1.0.0
2025-09-03 13:41:47,616 - prompt_manager.app.api.v1.api - INFO - Successfully created prompt coding_assistant v1.0.0 (ID: 81)
2025-09-03 13:41:47,617 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/ Status: 201 Time: 5.0ms
2025-09-03 13:41:47,617 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 13:41:47,617 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 13:41:47,617 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 13:41:47,619 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/
2025-09-03 13:41:47,620 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 13:41:47,620 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 13:41:47,620 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 13:41:47,620 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 13:41:47,620 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 13:41:47,620 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 13:41:47,620 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 13:41:47,620 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 13:41:47,620 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 08:11:47+00:00 (UTC)
2025-09-03 13:41:47,620 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 13:41:47,620 - prompt_manager.app.core.security - INFO - Looking up user with email: admin@example.com
2025-09-03 13:41:47,620 - prompt_manager.app.core.security - INFO - Found user: admin@example.com (ID: 26)
2025-09-03 13:41:47,621 - prompt_manager.app.api.v1.api - INFO - Creating new prompt: cooking_assistant version 1.0.0
2025-09-03 13:41:47,623 - prompt_manager.app.api.v1.api - INFO - Successfully created prompt cooking_assistant v1.0.0 (ID: 82)
2025-09-03 13:41:47,623 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/ Status: 201 Time: 4.39ms
2025-09-03 13:41:47,624 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 13:41:47,624 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 13:41:47,624 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 13:41:47,625 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/
2025-09-03 13:41:47,625 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 13:41:47,625 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 13:41:47,626 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 13:41:47,626 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 13:41:47,626 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 13:41:47,626 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 13:41:47,626 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 13:41:47,627 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 13:41:47,627 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 08:11:47+00:00 (UTC)
2025-09-03 13:41:47,627 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 13:41:47,627 - prompt_manager.app.core.security - INFO - Looking up user with email: admin@example.com
2025-09-03 13:41:47,627 - prompt_manager.app.core.security - INFO - Found user: admin@example.com (ID: 26)
2025-09-03 13:41:47,628 - prompt_manager.app.api.v1.api - INFO - Creating new prompt: tech_support version 1.0.0
2025-09-03 13:41:47,632 - prompt_manager.app.api.v1.api - INFO - Successfully created prompt tech_support v1.0.0 (ID: 83)
2025-09-03 13:41:47,632 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/ Status: 201 Time: 7.63ms
2025-09-03 13:41:47,633 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 13:41:47,633 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 13:41:47,633 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 13:42:08,025 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-03 13:42:08,027 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 13:42:08,027 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 13:42:08,280 - prompt_manager.app.api.v1.endpoints.auth - INFO - Created access token for user: admin@example.com
2025-09-03 13:42:08,281 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 200 Time: 255.55ms
2025-09-03 13:42:08,281 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 13:42:08,281 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 13:42:08,281 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 13:42:08,283 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/test-persona
2025-09-03 13:42:08,283 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 13:42:08,283 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 13:42:08,283 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 13:42:08,283 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 13:42:08,283 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 13:42:08,283 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 13:42:08,283 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 13:42:08,284 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 13:42:08,284 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 08:12:08+00:00 (UTC)
2025-09-03 13:42:08,284 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 13:42:08,284 - prompt_manager.app.core.security - INFO - Looking up user with email: admin@example.com
2025-09-03 13:42:08,284 - prompt_manager.app.core.security - INFO - Found user: admin@example.com (ID: 26)
2025-09-03 13:42:08,284 - prompt_manager.app.api.v1.api - INFO - Testing persona with automatic prompt selection (user: admin@example.com)
2025-09-03 13:42:08,896 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 13:42:08,899 - prompt_manager.app.crud.crud - INFO - LLM selected prompt: none for input: I'm feeling really stressed and anxious today
2025-09-03 13:42:08,899 - prompt_manager.app.crud.crud - WARNING - LLM returned invalid prompt ID: none
2025-09-03 13:42:08,900 - prompt_manager.app.database - ERROR - Error in database session: 
2025-09-03 13:42:08,900 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 13:42:08,900 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 13:42:08,900 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/test-persona Status: 404 Time: 617.83ms
2025-09-03 13:42:08,903 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-03 13:42:08,904 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 13:42:08,904 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 13:42:09,168 - prompt_manager.app.api.v1.endpoints.auth - INFO - Created access token for user: admin@example.com
2025-09-03 13:42:09,168 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 200 Time: 265.15ms
2025-09-03 13:42:09,168 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 13:42:09,168 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 13:42:09,169 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 13:42:09,170 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/test-persona
2025-09-03 13:42:09,171 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 13:42:09,171 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 13:42:09,171 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 13:42:09,171 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 13:42:09,171 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 13:42:09,171 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 13:42:09,171 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 13:42:09,171 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 13:42:09,171 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 08:12:09+00:00 (UTC)
2025-09-03 13:42:09,171 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 13:42:09,171 - prompt_manager.app.core.security - INFO - Looking up user with email: admin@example.com
2025-09-03 13:42:09,171 - prompt_manager.app.core.security - INFO - Found user: admin@example.com (ID: 26)
2025-09-03 13:42:09,171 - prompt_manager.app.api.v1.api - INFO - Testing persona with automatic prompt selection (user: admin@example.com)
2025-09-03 13:42:09,475 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 13:42:09,476 - prompt_manager.app.crud.crud - INFO - LLM selected prompt: Based on the user's input "How do I for input: How do I implement a binary search in Python?
2025-09-03 13:42:09,476 - prompt_manager.app.crud.crud - WARNING - LLM returned invalid prompt ID: Based on the user's input "How do I
2025-09-03 13:42:09,477 - prompt_manager.app.database - ERROR - Error in database session: 
2025-09-03 13:42:09,477 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 13:42:09,477 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 13:42:09,477 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/test-persona Status: 404 Time: 307.46ms
2025-09-03 13:42:09,479 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-03 13:42:09,480 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 13:42:09,480 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 13:42:09,739 - prompt_manager.app.api.v1.endpoints.auth - INFO - Created access token for user: admin@example.com
2025-09-03 13:42:09,740 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 200 Time: 260.39ms
2025-09-03 13:42:09,740 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 13:42:09,740 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 13:42:09,740 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 13:42:09,742 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/test-persona
2025-09-03 13:42:09,743 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 13:42:09,743 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 13:42:09,743 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 13:42:09,743 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 13:42:09,743 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 13:42:09,743 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 13:42:09,743 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 13:42:09,743 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 13:42:09,743 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 08:12:09+00:00 (UTC)
2025-09-03 13:42:09,743 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 13:42:09,743 - prompt_manager.app.core.security - INFO - Looking up user with email: admin@example.com
2025-09-03 13:42:09,744 - prompt_manager.app.core.security - INFO - Found user: admin@example.com (ID: 26)
2025-09-03 13:42:09,744 - prompt_manager.app.api.v1.api - INFO - Testing persona with automatic prompt selection (user: admin@example.com)
2025-09-03 13:42:10,465 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 13:42:10,466 - prompt_manager.app.crud.crud - INFO - LLM selected prompt: none for input: What's the best way to bake a chocolate cake?
2025-09-03 13:42:10,467 - prompt_manager.app.crud.crud - WARNING - LLM returned invalid prompt ID: none
2025-09-03 13:42:10,467 - prompt_manager.app.database - ERROR - Error in database session: 
2025-09-03 13:42:10,467 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 13:42:10,467 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 13:42:10,467 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/test-persona Status: 404 Time: 725.2ms
2025-09-03 13:42:10,469 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-03 13:42:10,470 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 13:42:10,470 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 13:42:10,729 - prompt_manager.app.api.v1.endpoints.auth - INFO - Created access token for user: admin@example.com
2025-09-03 13:42:10,729 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 200 Time: 260.1ms
2025-09-03 13:42:10,730 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 13:42:10,730 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 13:42:10,730 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 13:42:10,731 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/test-persona
2025-09-03 13:42:10,732 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 13:42:10,732 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 13:42:10,732 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 13:42:10,732 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 13:42:10,732 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 13:42:10,732 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 13:42:10,732 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 13:42:10,732 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 13:42:10,732 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 08:12:10+00:00 (UTC)
2025-09-03 13:42:10,732 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 13:42:10,732 - prompt_manager.app.core.security - INFO - Looking up user with email: admin@example.com
2025-09-03 13:42:10,732 - prompt_manager.app.core.security - INFO - Found user: admin@example.com (ID: 26)
2025-09-03 13:42:10,732 - prompt_manager.app.api.v1.api - INFO - Testing persona with automatic prompt selection (user: admin@example.com)
2025-09-03 13:42:11,096 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 13:42:11,098 - prompt_manager.app.crud.crud - INFO - LLM selected prompt: none for input: I'm having trouble with my internet connection
2025-09-03 13:42:11,098 - prompt_manager.app.crud.crud - WARNING - LLM returned invalid prompt ID: none
2025-09-03 13:42:11,098 - prompt_manager.app.database - ERROR - Error in database session: 
2025-09-03 13:42:11,098 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 13:42:11,098 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 13:42:11,098 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/test-persona Status: 404 Time: 367.35ms
2025-09-03 13:43:40,008 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 13:43:41,644 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 13:43:41,644 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-03 13:43:41,644 - prompt_manager.app.main - INFO - Database URL: sqlite:////Users/prisha/Desktop/Coding/system prompt/prompts.db
2025-09-03 13:44:01,443 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-03 13:44:01,445 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 13:44:01,445 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 13:44:01,850 - prompt_manager.app.api.v1.endpoints.auth - INFO - Created access token for user: admin@example.com
2025-09-03 13:44:01,855 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 200 Time: 412.27ms
2025-09-03 13:44:01,856 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 13:44:01,856 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 13:44:01,856 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 13:44:01,858 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/test-persona
2025-09-03 13:44:01,858 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 13:44:01,858 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 13:44:01,858 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 13:44:01,858 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 13:44:01,858 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 13:44:01,858 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 13:44:01,858 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 13:44:01,859 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 13:44:01,859 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 08:14:01+00:00 (UTC)
2025-09-03 13:44:01,859 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 13:44:01,859 - prompt_manager.app.core.security - INFO - Looking up user with email: admin@example.com
2025-09-03 13:44:01,859 - prompt_manager.app.core.security - INFO - Found user: admin@example.com (ID: 26)
2025-09-03 13:44:01,859 - prompt_manager.app.api.v1.api - INFO - Testing persona with automatic prompt selection (user: admin@example.com)
2025-09-03 13:44:02,723 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 13:44:02,725 - prompt_manager.app.crud.crud - INFO - LLM selected prompt: The most relevant prompt ID is 80. for input: I'm feeling really stressed and anxious today
2025-09-03 13:44:02,725 - prompt_manager.app.crud.crud - WARNING - LLM returned invalid prompt ID: The most relevant prompt ID is 80.
2025-09-03 13:44:02,726 - prompt_manager.app.database - ERROR - Error in database session: 
2025-09-03 13:44:02,726 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 13:44:02,726 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 13:44:02,727 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/test-persona Status: 404 Time: 869.06ms
2025-09-03 13:44:02,729 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-03 13:44:02,730 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 13:44:02,730 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 13:44:02,987 - prompt_manager.app.api.v1.endpoints.auth - INFO - Created access token for user: admin@example.com
2025-09-03 13:44:02,988 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 200 Time: 258.58ms
2025-09-03 13:44:02,988 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 13:44:02,988 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 13:44:02,988 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 13:44:02,990 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/test-persona
2025-09-03 13:44:02,990 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 13:44:02,990 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 13:44:02,990 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 13:44:02,990 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 13:44:02,991 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 13:44:02,991 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 13:44:02,991 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 13:44:02,991 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 13:44:02,991 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 08:14:02+00:00 (UTC)
2025-09-03 13:44:02,991 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 13:44:02,991 - prompt_manager.app.core.security - INFO - Looking up user with email: admin@example.com
2025-09-03 13:44:02,993 - prompt_manager.app.core.security - INFO - Found user: admin@example.com (ID: 26)
2025-09-03 13:44:02,993 - prompt_manager.app.api.v1.api - INFO - Testing persona with automatic prompt selection (user: admin@example.com)
2025-09-03 13:44:03,479 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 13:44:03,480 - prompt_manager.app.crud.crud - INFO - LLM selected prompt: Based on the user's input, the most relevant for input: How do I implement a binary search in Python?
2025-09-03 13:44:03,480 - prompt_manager.app.crud.crud - WARNING - LLM returned invalid prompt ID: Based on the user's input, the most relevant
2025-09-03 13:44:03,481 - prompt_manager.app.database - ERROR - Error in database session: 
2025-09-03 13:44:03,481 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 13:44:03,481 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 13:44:03,481 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/test-persona Status: 404 Time: 491.55ms
2025-09-03 13:44:03,484 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-03 13:44:03,484 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 13:44:03,484 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 13:44:03,829 - prompt_manager.app.api.v1.endpoints.auth - INFO - Created access token for user: admin@example.com
2025-09-03 13:44:03,830 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 200 Time: 346.0ms
2025-09-03 13:44:03,830 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 13:44:03,830 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 13:44:03,830 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 13:44:03,832 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/test-persona
2025-09-03 13:44:03,832 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 13:44:03,832 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 13:44:03,832 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 13:44:03,832 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 13:44:03,832 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 13:44:03,832 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 13:44:03,832 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 13:44:03,832 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 13:44:03,832 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 08:14:03+00:00 (UTC)
2025-09-03 13:44:03,832 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 13:44:03,832 - prompt_manager.app.core.security - INFO - Looking up user with email: admin@example.com
2025-09-03 13:44:03,833 - prompt_manager.app.core.security - INFO - Found user: admin@example.com (ID: 26)
2025-09-03 13:44:03,833 - prompt_manager.app.api.v1.api - INFO - Testing persona with automatic prompt selection (user: admin@example.com)
2025-09-03 13:44:04,192 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 13:44:04,194 - prompt_manager.app.crud.crud - INFO - LLM selected prompt: 82

This is because the user's input is for input: What's the best way to bake a chocolate cake?
2025-09-03 13:44:04,194 - prompt_manager.app.crud.crud - WARNING - LLM returned invalid prompt ID: 82

This is because the user's input is
2025-09-03 13:44:04,195 - prompt_manager.app.database - ERROR - Error in database session: 
2025-09-03 13:44:04,195 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 13:44:04,195 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 13:44:04,195 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/test-persona Status: 404 Time: 363.54ms
2025-09-03 13:44:04,197 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-03 13:44:04,198 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 13:44:04,198 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 13:44:04,471 - prompt_manager.app.api.v1.endpoints.auth - INFO - Created access token for user: admin@example.com
2025-09-03 13:44:04,471 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 200 Time: 274.05ms
2025-09-03 13:44:04,472 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 13:44:04,472 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 13:44:04,472 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 13:44:04,473 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/test-persona
2025-09-03 13:44:04,474 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 13:44:04,474 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 13:44:04,474 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 13:44:04,474 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 13:44:04,474 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 13:44:04,474 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 13:44:04,474 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 13:44:04,474 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 13:44:04,474 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 08:14:04+00:00 (UTC)
2025-09-03 13:44:04,474 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 13:44:04,474 - prompt_manager.app.core.security - INFO - Looking up user with email: admin@example.com
2025-09-03 13:44:04,475 - prompt_manager.app.core.security - INFO - Found user: admin@example.com (ID: 26)
2025-09-03 13:44:04,475 - prompt_manager.app.api.v1.api - INFO - Testing persona with automatic prompt selection (user: admin@example.com)
2025-09-03 13:44:05,118 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 13:44:05,119 - prompt_manager.app.crud.crud - INFO - LLM selected prompt: Based on the user's input, the most relevant for input: I'm having trouble with my internet connection
2025-09-03 13:44:05,119 - prompt_manager.app.crud.crud - WARNING - LLM returned invalid prompt ID: Based on the user's input, the most relevant
2025-09-03 13:44:05,119 - prompt_manager.app.database - ERROR - Error in database session: 
2025-09-03 13:44:05,119 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 13:44:05,119 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 13:44:05,120 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/test-persona Status: 404 Time: 646.6ms
2025-09-03 13:44:36,345 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 13:44:37,534 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 13:44:37,534 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-03 13:44:37,534 - prompt_manager.app.main - INFO - Database URL: sqlite:////Users/prisha/Desktop/Coding/system prompt/prompts.db
2025-09-03 13:44:53,197 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 13:45:04,341 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 13:45:04,341 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("users")
2025-09-03 13:45:04,341 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 13:45:04,342 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("prompts")
2025-09-03 13:45:04,342 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 13:45:04,342 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("prompt_history")
2025-09-03 13:45:04,342 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 13:45:04,342 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-09-03 13:45:04,368 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 13:45:04,368 - prompt_manager.app.main - INFO - Log level: DEBUG
2025-09-03 13:45:04,368 - prompt_manager.app.main - INFO - Database URL: sqlite:////Users/prisha/Desktop/Coding/system prompt/prompts.db
2025-09-03 13:45:09,518 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-03 13:45:09,519 - multipart.multipart - DEBUG - Calling on_field_start with no data
2025-09-03 13:45:09,519 - multipart.multipart - DEBUG - Calling on_field_name with data[0:8]
2025-09-03 13:45:09,519 - multipart.multipart - DEBUG - Calling on_field_data with data[9:28]
2025-09-03 13:45:09,519 - multipart.multipart - DEBUG - Calling on_field_end with no data
2025-09-03 13:45:09,520 - multipart.multipart - DEBUG - Calling on_field_start with no data
2025-09-03 13:45:09,520 - multipart.multipart - DEBUG - Calling on_field_name with data[29:37]
2025-09-03 13:45:09,520 - multipart.multipart - DEBUG - Calling on_field_data with data[38:46]
2025-09-03 13:45:09,520 - multipart.multipart - DEBUG - Calling on_field_end with no data
2025-09-03 13:45:09,520 - multipart.multipart - DEBUG - Calling on_end with no data
2025-09-03 13:45:09,523 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 13:45:09,524 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 13:45:09,540 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 13:45:09,543 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 13:45:09,544 - sqlalchemy.engine.Engine - INFO - [generated in 0.00033s] ('admin@example.com', 1, 0)
2025-09-03 13:45:09,556 - passlib.handlers.bcrypt - DEBUG - detected 'bcrypt' backend, version '4.0.1'
2025-09-03 13:45:09,557 - passlib.handlers.bcrypt - DEBUG - 'bcrypt' backend lacks $2$ support, enabling workaround
2025-09-03 13:45:09,898 - prompt_manager.app.api.v1.endpoints.auth - INFO - Created access token for user: admin@example.com
2025-09-03 13:45:09,903 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 200 Time: 385.28ms
2025-09-03 13:45:09,904 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 13:45:09,905 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 13:45:09,905 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 13:45:09,905 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 13:45:09,907 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/test-persona
2025-09-03 13:45:09,908 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 13:45:09,908 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 13:45:09,908 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 13:45:09,908 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 13:45:09,908 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 13:45:09,908 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 13:45:09,908 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 13:45:09,909 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 13:45:09,910 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 08:15:09+00:00 (UTC)
2025-09-03 13:45:09,910 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 13:45:09,910 - prompt_manager.app.core.security - INFO - Looking up user with email: admin@example.com
2025-09-03 13:45:09,910 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 13:45:09,910 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 13:45:09,914 - sqlalchemy.engine.Engine - INFO - [cached since 0.3709s ago] ('admin@example.com', 1, 0)
2025-09-03 13:45:09,914 - prompt_manager.app.core.security - INFO - Found user: admin@example.com (ID: 26)
2025-09-03 13:45:09,916 - prompt_manager.app.api.v1.api - INFO - Testing persona with automatic prompt selection (user: admin@example.com)
2025-09-03 13:45:09,916 - prompt_manager.app.crud.crud - INFO - Finding most relevant prompt for input: I'm feeling really stressed and anxious today
2025-09-03 13:45:09,918 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 13:45:09,920 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.status = ? AND prompts.is_active = 1
2025-09-03 13:45:09,920 - sqlalchemy.engine.Engine - INFO - [generated in 0.00033s] ('active',)
2025-09-03 13:45:09,922 - prompt_manager.app.crud.crud - INFO - Found 16 active prompts in the database
2025-09-03 13:45:09,922 - prompt_manager.app.crud.crud - INFO - Active prompt 1: ID=28, Name=marketing, Status=active, is_active=True
2025-09-03 13:45:09,922 - prompt_manager.app.crud.crud - INFO - Active prompt 2: ID=31, Name=test_live_version_sync, Status=active, is_active=True
2025-09-03 13:45:09,922 - prompt_manager.app.crud.crud - INFO - Active prompt 3: ID=33, Name=debug_live_test, Status=active, is_active=True
2025-09-03 13:45:09,922 - prompt_manager.app.crud.crud - INFO - Active prompt 4: ID=37, Name=test_active_validation, Status=active, is_active=True
2025-09-03 13:45:09,922 - prompt_manager.app.crud.crud - INFO - Active prompt 5: ID=38, Name=test_auto_status, Status=active, is_active=True
2025-09-03 13:45:09,922 - prompt_manager.app.crud.crud - INFO - Active prompt 6: ID=40, Name=test_constraint, Status=active, is_active=True
2025-09-03 13:45:09,922 - prompt_manager.app.crud.crud - INFO - Active prompt 7: ID=43, Name=endpoint_test, Status=active, is_active=True
2025-09-03 13:45:09,922 - prompt_manager.app.crud.crud - INFO - Active prompt 8: ID=45, Name=final_test, Status=active, is_active=True
2025-09-03 13:45:09,922 - prompt_manager.app.crud.crud - INFO - Active prompt 9: ID=49, Name=full_test_prompt, Status=active, is_active=True
2025-09-03 13:45:09,923 - prompt_manager.app.crud.crud - INFO - Active prompt 10: ID=55, Name=lifecycle_test_final, Status=active, is_active=True
2025-09-03 13:45:09,923 - prompt_manager.app.crud.crud - INFO - Active prompt 11: ID=62, Name=code, Status=active, is_active=True
2025-09-03 13:45:09,923 - prompt_manager.app.crud.crud - INFO - Active prompt 12: ID=69, Name=Healthcare assistant, Status=active, is_active=True
2025-09-03 13:45:09,923 - prompt_manager.app.crud.crud - INFO - Active prompt 13: ID=80, Name=mental_health_support, Status=active, is_active=True
2025-09-03 13:45:09,923 - prompt_manager.app.crud.crud - INFO - Active prompt 14: ID=81, Name=coding_assistant, Status=active, is_active=True
2025-09-03 13:45:09,923 - prompt_manager.app.crud.crud - INFO - Active prompt 15: ID=82, Name=cooking_assistant, Status=active, is_active=True
2025-09-03 13:45:09,923 - prompt_manager.app.crud.crud - INFO - Active prompt 16: ID=83, Name=tech_support, Status=active, is_active=True
2025-09-03 13:45:09,923 - prompt_manager.app.crud.crud - INFO - Sending 16 prompts to LLM for analysis
2025-09-03 13:45:09,923 - prompt_manager.app.crud.crud - DEBUG - System prompt: You are an AI assistant that helps match user queries to the most appropriate system prompt.
        Analyze the user's input and determine which of the available prompts would be most relevant.
        Consider the prompt's content, description, tags, and metadata when making your decision.
        
        Return ONLY the ID of the most relevant prompt, or 'none' if none are a good match.
        
2025-09-03 13:45:09,923 - prompt_manager.app.crud.crud - DEBUG - User message: User Input: I'm feeling really stressed and anxious today
        
        Available Prompts:
        [
  {
    "id": 28,
    "name": "marketing",
    "content": "Testing",
    "description": "testing",
    "tags": "testing",
    "metadata": ""
  },
  {
    "id": 31,
    "name": "test_live_version_sync",
    "content": "Second version content",
    "description": "",
    "tags": "test",
    "metadata": ""
  },
  {
    "id": 33,
    "name": "debug_live_test",
    "content": "Debug content v2",
    "description": "",
    "tags": "debug",
    "metadata": ""
  },
  {
    "id": 37,
    "name": "test_active_validation",
    "content": "First version",
    "description": "",
    "tags": "test",
    "metadata": ""
  },
  {
    "id": 38,
    "name": "test_auto_status",
    "content": "Testing auto status",
    "description": "",
    "tags": "test",
    "metadata": ""
  },
  {
    "id": 40,
    "name": "test_constraint",
    "content": "First active version",
    "description": "",
    "tags": "test",
    "metadata": ""
  },
  {
    "id": 43,
    "name": "endpoint_test",
    "content": "Updated final test",
    "description": "",
    "tags": "test",
    "metadata": ""
  },
  {
    "id": 45,
    "name": "final_test",
    "content": "Final test",
    "description": "",
    "tags": "",
    "metadata": "{\"final\": \"test\"}"
  },
  {
    "id": 49,
    "name": "full_test_prompt",
    "content": "Initial content for the full test.",
    "description": "",
    "tags": "testing, full-flow",
    "metadata": "{\"author\": \"test_script\"}"
  },
  {
    "id": 55,
    "name": "lifecycle_test_final",
    "content": "Lifecycle test v2.0.0",
    "description": "",
    "tags": "lifecycle",
    "metadata": ""
  },
  {
    "id": 62,
    "name": "code",
    "content": "Update for Debugger",
    "description": "Update for debugger",
    "tags": "suggestion",
    "metadata": "{\"priority\": \"high\"}"
  },
  {
    "id": 69,
    "name": "Healthcare assistant",
    "content": "Just for checking",
    "description": "Prompt for healthcare assistant",
    "tags": "wellbeing",
    "metadata": "{\"category\": \"health\"}"
  },
  {
    "id": 80,
    "name": "mental_health_support",
    "content": "You are a compassionate mental health support assistant. Provide empathetic and supportive responses to users who may be experiencing stress, anxiety, or other mental health concerns. Offer helpful coping strategies and encourage professional help when appropriate.",
    "description": "Mental health support assistant",
    "tags": "mental_health, support, wellbeing",
    "metadata": ""
  },
  {
    "id": 81,
    "name": "coding_assistant",
    "content": "You are an expert programming assistant. Help users with coding questions, algorithm design, debugging, and best practices. Provide clear, concise, and accurate code examples in the requested programming language.",
    "description": "Expert programming assistant",
    "tags": "programming, coding, algorithms",
    "metadata": ""
  },
  {
    "id": 82,
    "name": "cooking_assistant",
    "content": "You are a professional chef and cooking instructor. Provide detailed recipes, cooking tips, and techniques. Help users with meal planning, ingredient substitutions, and troubleshooting cooking problems.",
    "description": "Professional cooking assistant",
    "tags": "cooking, recipes, baking",
    "metadata": ""
  },
  {
    "id": 83,
    "name": "tech_support",
    "content": "You are a technical support specialist. Help users troubleshoot hardware, software, and network issues. Provide step-by-step guidance for resolving technical problems.",
    "description": "Technical support specialist",
    "tags": "tech_support, troubleshooting, it",
    "metadata": ""
  }
]
        
        Based on the user's input, which prompt ID is most relevant? Return ONLY the ID number or 'none'.
        
2025-09-03 13:45:09,923 - prompt_manager.app.crud.crud - INFO - Initializing GROQ client...
2025-09-03 13:45:09,930 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-09-03 13:45:09,935 - httpx - DEBUG - load_verify_locations cafile='/Applications/anaconda3/lib/python3.11/site-packages/certifi/cacert.pem'
2025-09-03 13:45:09,975 - prompt_manager.app.crud.crud - INFO - Sending request to GROQ API...
2025-09-03 13:45:09,976 - groq._base_client - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are an AI assistant that helps match user queries to the most appropriate system prompt.\n        Analyze the user's input and determine which of the available prompts would be most relevant.\n        Consider the prompt's content, description, tags, and metadata when making your decision.\n        \n        Return ONLY the ID of the most relevant prompt, or 'none' if none are a good match.\n        "}, {'role': 'user', 'content': 'User Input: I\'m feeling really stressed and anxious today\n        \n        Available Prompts:\n        [\n  {\n    "id": 28,\n    "name": "marketing",\n    "content": "Testing",\n    "description": "testing",\n    "tags": "testing",\n    "metadata": ""\n  },\n  {\n    "id": 31,\n    "name": "test_live_version_sync",\n    "content": "Second version content",\n    "description": "",\n    "tags": "test",\n    "metadata": ""\n  },\n  {\n    "id": 33,\n    "name": "debug_live_test",\n    "content": "Debug content v2",\n    "description": "",\n    "tags": "debug",\n    "metadata": ""\n  },\n  {\n    "id": 37,\n    "name": "test_active_validation",\n    "content": "First version",\n    "description": "",\n    "tags": "test",\n    "metadata": ""\n  },\n  {\n    "id": 38,\n    "name": "test_auto_status",\n    "content": "Testing auto status",\n    "description": "",\n    "tags": "test",\n    "metadata": ""\n  },\n  {\n    "id": 40,\n    "name": "test_constraint",\n    "content": "First active version",\n    "description": "",\n    "tags": "test",\n    "metadata": ""\n  },\n  {\n    "id": 43,\n    "name": "endpoint_test",\n    "content": "Updated final test",\n    "description": "",\n    "tags": "test",\n    "metadata": ""\n  },\n  {\n    "id": 45,\n    "name": "final_test",\n    "content": "Final test",\n    "description": "",\n    "tags": "",\n    "metadata": "{\\"final\\": \\"test\\"}"\n  },\n  {\n    "id": 49,\n    "name": "full_test_prompt",\n    "content": "Initial content for the full test.",\n    "description": "",\n    "tags": "testing, full-flow",\n    "metadata": "{\\"author\\": \\"test_script\\"}"\n  },\n  {\n    "id": 55,\n    "name": "lifecycle_test_final",\n    "content": "Lifecycle test v2.0.0",\n    "description": "",\n    "tags": "lifecycle",\n    "metadata": ""\n  },\n  {\n    "id": 62,\n    "name": "code",\n    "content": "Update for Debugger",\n    "description": "Update for debugger",\n    "tags": "suggestion",\n    "metadata": "{\\"priority\\": \\"high\\"}"\n  },\n  {\n    "id": 69,\n    "name": "Healthcare assistant",\n    "content": "Just for checking",\n    "description": "Prompt for healthcare assistant",\n    "tags": "wellbeing",\n    "metadata": "{\\"category\\": \\"health\\"}"\n  },\n  {\n    "id": 80,\n    "name": "mental_health_support",\n    "content": "You are a compassionate mental health support assistant. Provide empathetic and supportive responses to users who may be experiencing stress, anxiety, or other mental health concerns. Offer helpful coping strategies and encourage professional help when appropriate.",\n    "description": "Mental health support assistant",\n    "tags": "mental_health, support, wellbeing",\n    "metadata": ""\n  },\n  {\n    "id": 81,\n    "name": "coding_assistant",\n    "content": "You are an expert programming assistant. Help users with coding questions, algorithm design, debugging, and best practices. Provide clear, concise, and accurate code examples in the requested programming language.",\n    "description": "Expert programming assistant",\n    "tags": "programming, coding, algorithms",\n    "metadata": ""\n  },\n  {\n    "id": 82,\n    "name": "cooking_assistant",\n    "content": "You are a professional chef and cooking instructor. Provide detailed recipes, cooking tips, and techniques. Help users with meal planning, ingredient substitutions, and troubleshooting cooking problems.",\n    "description": "Professional cooking assistant",\n    "tags": "cooking, recipes, baking",\n    "metadata": ""\n  },\n  {\n    "id": 83,\n    "name": "tech_support",\n    "content": "You are a technical support specialist. Help users troubleshoot hardware, software, and network issues. Provide step-by-step guidance for resolving technical problems.",\n    "description": "Technical support specialist",\n    "tags": "tech_support, troubleshooting, it",\n    "metadata": ""\n  }\n]\n        \n        Based on the user\'s input, which prompt ID is most relevant? Return ONLY the ID number or \'none\'.\n        '}], 'model': 'llama-3.1-8b-instant', 'max_tokens': 10, 'temperature': 0.3}}
2025-09-03 13:45:10,106 - httpcore.connection - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-09-03 13:45:10,166 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x119570f90>
2025-09-03 13:45:10,166 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x1194159a0> server_hostname='api.groq.com' timeout=5.0
2025-09-03 13:45:10,214 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x11901c450>
2025-09-03 13:45:10,214 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-03 13:45:10,214 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-09-03 13:45:10,214 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-03 13:45:10,214 - httpcore.http11 - DEBUG - send_request_body.complete
2025-09-03 13:45:10,214 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-03 13:45:10,652 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 03 Sep 2025 08:15:10 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Content-Encoding', b'br'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'bom'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'4922'), (b'x-ratelimit-reset-requests', b'6s'), (b'x-ratelimit-reset-tokens', b'10.78s'), (b'x-request-id', b'req_01k47a9qzffdp8xn4p65gg7bbp'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=4X6KvDHQbvOOr1NG.jgL1nY15.P55oYasVvB6EYqC4c-1756887310-1.0.1.1-17NRmD3b99qNY94N7jOObLf_p2xut9UbXH95Y.Fr_b5_g0076dFjre1nU0Z6hL4AH2rSIbTlcddLrDdLPF285eWgVKnqZGBT6_IwnhWLLKo; path=/; expires=Wed, 03-Sep-25 08:45:10 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9793cc39197b59a9-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-03 13:45:10,653 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 13:45:10,654 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-03 13:45:10,655 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-09-03 13:45:10,655 - httpcore.http11 - DEBUG - response_closed.started
2025-09-03 13:45:10,655 - httpcore.http11 - DEBUG - response_closed.complete
2025-09-03 13:45:10,655 - groq._base_client - DEBUG - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
2025-09-03 13:45:10,657 - prompt_manager.app.crud.crud - INFO - Received response from GROQ API
2025-09-03 13:45:10,658 - prompt_manager.app.crud.crud - DEBUG - GROQ API response: ChatCompletion(choices=[Choice(finish_reason='length', index=0, logprobs=None, message=ChoiceMessage(content='The most relevant prompt ID is 80.', role='assistant', tool_calls=None))], id='chatcmpl-0908d112-9c78-47cf-94b3-fe954e7557b2', created=1756887310, model='llama-3.1-8b-instant', object='chat.completion', system_fingerprint='fp_7083106d2c', usage=Usage(completion_time=0.016931204, completion_tokens=10, prompt_time=0.121059921, prompt_tokens=1096, total_time=0.137991125, total_tokens=1106, queue_time=0.047614599), usage_breakdown=None, x_groq={'id': 'req_01k47a9qzffdp8xn4p65gg7bbp'}, service_tier='on_demand')
2025-09-03 13:45:10,658 - prompt_manager.app.crud.crud - INFO - LLM selected prompt: The most relevant prompt ID is 80. for input: I'm feeling really stressed and anxious today
2025-09-03 13:45:10,658 - prompt_manager.app.crud.crud - WARNING - LLM returned invalid prompt ID: The most relevant prompt ID is 80.
2025-09-03 13:45:10,658 - prompt_manager.app.database - ERROR - Error in database session: 
2025-09-03 13:45:10,658 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 13:45:10,658 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 13:45:10,659 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 13:45:10,659 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 13:45:10,659 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/test-persona Status: 404 Time: 752.55ms
2025-09-03 13:45:10,663 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-03 13:45:10,664 - multipart.multipart - DEBUG - Calling on_field_start with no data
2025-09-03 13:45:10,664 - multipart.multipart - DEBUG - Calling on_field_name with data[0:8]
2025-09-03 13:45:10,664 - multipart.multipart - DEBUG - Calling on_field_data with data[9:28]
2025-09-03 13:45:10,664 - multipart.multipart - DEBUG - Calling on_field_end with no data
2025-09-03 13:45:10,664 - multipart.multipart - DEBUG - Calling on_field_start with no data
2025-09-03 13:45:10,664 - multipart.multipart - DEBUG - Calling on_field_name with data[29:37]
2025-09-03 13:45:10,664 - multipart.multipart - DEBUG - Calling on_field_data with data[38:46]
2025-09-03 13:45:10,664 - multipart.multipart - DEBUG - Calling on_field_end with no data
2025-09-03 13:45:10,664 - multipart.multipart - DEBUG - Calling on_end with no data
2025-09-03 13:45:10,665 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 13:45:10,665 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 13:45:10,665 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 13:45:10,666 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 13:45:10,666 - sqlalchemy.engine.Engine - INFO - [cached since 1.123s ago] ('admin@example.com', 1, 0)
2025-09-03 13:45:10,666 - httpcore.connection - DEBUG - close.started
2025-09-03 13:45:10,667 - httpcore.connection - DEBUG - close.complete
2025-09-03 13:45:10,929 - prompt_manager.app.api.v1.endpoints.auth - INFO - Created access token for user: admin@example.com
2025-09-03 13:45:10,929 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 200 Time: 266.67ms
2025-09-03 13:45:10,930 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 13:45:10,930 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 13:45:10,930 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 13:45:10,930 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 13:45:10,931 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/test-persona
2025-09-03 13:45:10,932 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 13:45:10,932 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 13:45:10,932 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 13:45:10,932 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 13:45:10,932 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 13:45:10,932 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 13:45:10,932 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 13:45:10,932 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 13:45:10,932 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 08:15:10+00:00 (UTC)
2025-09-03 13:45:10,932 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 13:45:10,932 - prompt_manager.app.core.security - INFO - Looking up user with email: admin@example.com
2025-09-03 13:45:10,932 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 13:45:10,933 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 13:45:10,933 - sqlalchemy.engine.Engine - INFO - [cached since 1.39s ago] ('admin@example.com', 1, 0)
2025-09-03 13:45:10,933 - prompt_manager.app.core.security - INFO - Found user: admin@example.com (ID: 26)
2025-09-03 13:45:10,933 - prompt_manager.app.api.v1.api - INFO - Testing persona with automatic prompt selection (user: admin@example.com)
2025-09-03 13:45:10,933 - prompt_manager.app.crud.crud - INFO - Finding most relevant prompt for input: How do I implement a binary search in Python?
2025-09-03 13:45:10,933 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 13:45:10,933 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.status = ? AND prompts.is_active = 1
2025-09-03 13:45:10,933 - sqlalchemy.engine.Engine - INFO - [cached since 1.014s ago] ('active',)
2025-09-03 13:45:10,934 - prompt_manager.app.crud.crud - INFO - Found 16 active prompts in the database
2025-09-03 13:45:10,934 - prompt_manager.app.crud.crud - INFO - Active prompt 1: ID=28, Name=marketing, Status=active, is_active=True
2025-09-03 13:45:10,934 - prompt_manager.app.crud.crud - INFO - Active prompt 2: ID=31, Name=test_live_version_sync, Status=active, is_active=True
2025-09-03 13:45:10,934 - prompt_manager.app.crud.crud - INFO - Active prompt 3: ID=33, Name=debug_live_test, Status=active, is_active=True
2025-09-03 13:45:10,934 - prompt_manager.app.crud.crud - INFO - Active prompt 4: ID=37, Name=test_active_validation, Status=active, is_active=True
2025-09-03 13:45:10,934 - prompt_manager.app.crud.crud - INFO - Active prompt 5: ID=38, Name=test_auto_status, Status=active, is_active=True
2025-09-03 13:45:10,934 - prompt_manager.app.crud.crud - INFO - Active prompt 6: ID=40, Name=test_constraint, Status=active, is_active=True
2025-09-03 13:45:10,934 - prompt_manager.app.crud.crud - INFO - Active prompt 7: ID=43, Name=endpoint_test, Status=active, is_active=True
2025-09-03 13:45:10,934 - prompt_manager.app.crud.crud - INFO - Active prompt 8: ID=45, Name=final_test, Status=active, is_active=True
2025-09-03 13:45:10,934 - prompt_manager.app.crud.crud - INFO - Active prompt 9: ID=49, Name=full_test_prompt, Status=active, is_active=True
2025-09-03 13:45:10,934 - prompt_manager.app.crud.crud - INFO - Active prompt 10: ID=55, Name=lifecycle_test_final, Status=active, is_active=True
2025-09-03 13:45:10,934 - prompt_manager.app.crud.crud - INFO - Active prompt 11: ID=62, Name=code, Status=active, is_active=True
2025-09-03 13:45:10,934 - prompt_manager.app.crud.crud - INFO - Active prompt 12: ID=69, Name=Healthcare assistant, Status=active, is_active=True
2025-09-03 13:45:10,934 - prompt_manager.app.crud.crud - INFO - Active prompt 13: ID=80, Name=mental_health_support, Status=active, is_active=True
2025-09-03 13:45:10,934 - prompt_manager.app.crud.crud - INFO - Active prompt 14: ID=81, Name=coding_assistant, Status=active, is_active=True
2025-09-03 13:45:10,934 - prompt_manager.app.crud.crud - INFO - Active prompt 15: ID=82, Name=cooking_assistant, Status=active, is_active=True
2025-09-03 13:45:10,934 - prompt_manager.app.crud.crud - INFO - Active prompt 16: ID=83, Name=tech_support, Status=active, is_active=True
2025-09-03 13:45:10,934 - prompt_manager.app.crud.crud - INFO - Sending 16 prompts to LLM for analysis
2025-09-03 13:45:10,934 - prompt_manager.app.crud.crud - DEBUG - System prompt: You are an AI assistant that helps match user queries to the most appropriate system prompt.
        Analyze the user's input and determine which of the available prompts would be most relevant.
        Consider the prompt's content, description, tags, and metadata when making your decision.
        
        Return ONLY the ID of the most relevant prompt, or 'none' if none are a good match.
        
2025-09-03 13:45:10,934 - prompt_manager.app.crud.crud - DEBUG - User message: User Input: How do I implement a binary search in Python?
        
        Available Prompts:
        [
  {
    "id": 28,
    "name": "marketing",
    "content": "Testing",
    "description": "testing",
    "tags": "testing",
    "metadata": ""
  },
  {
    "id": 31,
    "name": "test_live_version_sync",
    "content": "Second version content",
    "description": "",
    "tags": "test",
    "metadata": ""
  },
  {
    "id": 33,
    "name": "debug_live_test",
    "content": "Debug content v2",
    "description": "",
    "tags": "debug",
    "metadata": ""
  },
  {
    "id": 37,
    "name": "test_active_validation",
    "content": "First version",
    "description": "",
    "tags": "test",
    "metadata": ""
  },
  {
    "id": 38,
    "name": "test_auto_status",
    "content": "Testing auto status",
    "description": "",
    "tags": "test",
    "metadata": ""
  },
  {
    "id": 40,
    "name": "test_constraint",
    "content": "First active version",
    "description": "",
    "tags": "test",
    "metadata": ""
  },
  {
    "id": 43,
    "name": "endpoint_test",
    "content": "Updated final test",
    "description": "",
    "tags": "test",
    "metadata": ""
  },
  {
    "id": 45,
    "name": "final_test",
    "content": "Final test",
    "description": "",
    "tags": "",
    "metadata": "{\"final\": \"test\"}"
  },
  {
    "id": 49,
    "name": "full_test_prompt",
    "content": "Initial content for the full test.",
    "description": "",
    "tags": "testing, full-flow",
    "metadata": "{\"author\": \"test_script\"}"
  },
  {
    "id": 55,
    "name": "lifecycle_test_final",
    "content": "Lifecycle test v2.0.0",
    "description": "",
    "tags": "lifecycle",
    "metadata": ""
  },
  {
    "id": 62,
    "name": "code",
    "content": "Update for Debugger",
    "description": "Update for debugger",
    "tags": "suggestion",
    "metadata": "{\"priority\": \"high\"}"
  },
  {
    "id": 69,
    "name": "Healthcare assistant",
    "content": "Just for checking",
    "description": "Prompt for healthcare assistant",
    "tags": "wellbeing",
    "metadata": "{\"category\": \"health\"}"
  },
  {
    "id": 80,
    "name": "mental_health_support",
    "content": "You are a compassionate mental health support assistant. Provide empathetic and supportive responses to users who may be experiencing stress, anxiety, or other mental health concerns. Offer helpful coping strategies and encourage professional help when appropriate.",
    "description": "Mental health support assistant",
    "tags": "mental_health, support, wellbeing",
    "metadata": ""
  },
  {
    "id": 81,
    "name": "coding_assistant",
    "content": "You are an expert programming assistant. Help users with coding questions, algorithm design, debugging, and best practices. Provide clear, concise, and accurate code examples in the requested programming language.",
    "description": "Expert programming assistant",
    "tags": "programming, coding, algorithms",
    "metadata": ""
  },
  {
    "id": 82,
    "name": "cooking_assistant",
    "content": "You are a professional chef and cooking instructor. Provide detailed recipes, cooking tips, and techniques. Help users with meal planning, ingredient substitutions, and troubleshooting cooking problems.",
    "description": "Professional cooking assistant",
    "tags": "cooking, recipes, baking",
    "metadata": ""
  },
  {
    "id": 83,
    "name": "tech_support",
    "content": "You are a technical support specialist. Help users troubleshoot hardware, software, and network issues. Provide step-by-step guidance for resolving technical problems.",
    "description": "Technical support specialist",
    "tags": "tech_support, troubleshooting, it",
    "metadata": ""
  }
]
        
        Based on the user's input, which prompt ID is most relevant? Return ONLY the ID number or 'none'.
        
2025-09-03 13:45:10,934 - prompt_manager.app.crud.crud - INFO - Initializing GROQ client...
2025-09-03 13:45:10,935 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-09-03 13:45:10,935 - httpx - DEBUG - load_verify_locations cafile='/Applications/anaconda3/lib/python3.11/site-packages/certifi/cacert.pem'
2025-09-03 13:45:10,953 - prompt_manager.app.crud.crud - INFO - Sending request to GROQ API...
2025-09-03 13:45:10,953 - groq._base_client - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are an AI assistant that helps match user queries to the most appropriate system prompt.\n        Analyze the user's input and determine which of the available prompts would be most relevant.\n        Consider the prompt's content, description, tags, and metadata when making your decision.\n        \n        Return ONLY the ID of the most relevant prompt, or 'none' if none are a good match.\n        "}, {'role': 'user', 'content': 'User Input: How do I implement a binary search in Python?\n        \n        Available Prompts:\n        [\n  {\n    "id": 28,\n    "name": "marketing",\n    "content": "Testing",\n    "description": "testing",\n    "tags": "testing",\n    "metadata": ""\n  },\n  {\n    "id": 31,\n    "name": "test_live_version_sync",\n    "content": "Second version content",\n    "description": "",\n    "tags": "test",\n    "metadata": ""\n  },\n  {\n    "id": 33,\n    "name": "debug_live_test",\n    "content": "Debug content v2",\n    "description": "",\n    "tags": "debug",\n    "metadata": ""\n  },\n  {\n    "id": 37,\n    "name": "test_active_validation",\n    "content": "First version",\n    "description": "",\n    "tags": "test",\n    "metadata": ""\n  },\n  {\n    "id": 38,\n    "name": "test_auto_status",\n    "content": "Testing auto status",\n    "description": "",\n    "tags": "test",\n    "metadata": ""\n  },\n  {\n    "id": 40,\n    "name": "test_constraint",\n    "content": "First active version",\n    "description": "",\n    "tags": "test",\n    "metadata": ""\n  },\n  {\n    "id": 43,\n    "name": "endpoint_test",\n    "content": "Updated final test",\n    "description": "",\n    "tags": "test",\n    "metadata": ""\n  },\n  {\n    "id": 45,\n    "name": "final_test",\n    "content": "Final test",\n    "description": "",\n    "tags": "",\n    "metadata": "{\\"final\\": \\"test\\"}"\n  },\n  {\n    "id": 49,\n    "name": "full_test_prompt",\n    "content": "Initial content for the full test.",\n    "description": "",\n    "tags": "testing, full-flow",\n    "metadata": "{\\"author\\": \\"test_script\\"}"\n  },\n  {\n    "id": 55,\n    "name": "lifecycle_test_final",\n    "content": "Lifecycle test v2.0.0",\n    "description": "",\n    "tags": "lifecycle",\n    "metadata": ""\n  },\n  {\n    "id": 62,\n    "name": "code",\n    "content": "Update for Debugger",\n    "description": "Update for debugger",\n    "tags": "suggestion",\n    "metadata": "{\\"priority\\": \\"high\\"}"\n  },\n  {\n    "id": 69,\n    "name": "Healthcare assistant",\n    "content": "Just for checking",\n    "description": "Prompt for healthcare assistant",\n    "tags": "wellbeing",\n    "metadata": "{\\"category\\": \\"health\\"}"\n  },\n  {\n    "id": 80,\n    "name": "mental_health_support",\n    "content": "You are a compassionate mental health support assistant. Provide empathetic and supportive responses to users who may be experiencing stress, anxiety, or other mental health concerns. Offer helpful coping strategies and encourage professional help when appropriate.",\n    "description": "Mental health support assistant",\n    "tags": "mental_health, support, wellbeing",\n    "metadata": ""\n  },\n  {\n    "id": 81,\n    "name": "coding_assistant",\n    "content": "You are an expert programming assistant. Help users with coding questions, algorithm design, debugging, and best practices. Provide clear, concise, and accurate code examples in the requested programming language.",\n    "description": "Expert programming assistant",\n    "tags": "programming, coding, algorithms",\n    "metadata": ""\n  },\n  {\n    "id": 82,\n    "name": "cooking_assistant",\n    "content": "You are a professional chef and cooking instructor. Provide detailed recipes, cooking tips, and techniques. Help users with meal planning, ingredient substitutions, and troubleshooting cooking problems.",\n    "description": "Professional cooking assistant",\n    "tags": "cooking, recipes, baking",\n    "metadata": ""\n  },\n  {\n    "id": 83,\n    "name": "tech_support",\n    "content": "You are a technical support specialist. Help users troubleshoot hardware, software, and network issues. Provide step-by-step guidance for resolving technical problems.",\n    "description": "Technical support specialist",\n    "tags": "tech_support, troubleshooting, it",\n    "metadata": ""\n  }\n]\n        \n        Based on the user\'s input, which prompt ID is most relevant? Return ONLY the ID number or \'none\'.\n        '}], 'model': 'llama-3.1-8b-instant', 'max_tokens': 10, 'temperature': 0.3}}
2025-09-03 13:45:10,954 - httpcore.connection - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-09-03 13:45:11,014 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x119580bd0>
2025-09-03 13:45:11,014 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x1194164e0> server_hostname='api.groq.com' timeout=5.0
2025-09-03 13:45:11,059 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x119580c50>
2025-09-03 13:45:11,059 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-03 13:45:11,059 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-09-03 13:45:11,059 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-03 13:45:11,059 - httpcore.http11 - DEBUG - send_request_body.complete
2025-09-03 13:45:11,060 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-03 13:45:11,541 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 03 Sep 2025 08:15:11 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Content-Encoding', b'br'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'bom'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14398'), (b'x-ratelimit-remaining-tokens', b'3888'), (b'x-ratelimit-reset-requests', b'11.084999999s'), (b'x-ratelimit-reset-tokens', b'21.111s'), (b'x-request-id', b'req_01k47a9rw3fdp9kbz0wk14mxgm'), (b'via', b'1.1 google'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=xSO5lVLlB2jYklo8GHSBwu3Hn6tXMCAnwwjZgA4MhvQ-1756887311-1.0.1.1-IBdLFiyxoOWlxysudVd2IFjYNSYz3ogebilaamJzhIsbxsmZlvlS624kczBg9x.rMbFaQ3dHu8T_LR6wa15Kz8lSL3nXCL9Ss7iB70rcOx8; path=/; expires=Wed, 03-Sep-25 08:45:11 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9793cc3e58c43a3f-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-03 13:45:11,557 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 13:45:11,557 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-03 13:45:11,569 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-09-03 13:45:11,573 - httpcore.http11 - DEBUG - response_closed.started
2025-09-03 13:45:11,573 - httpcore.http11 - DEBUG - response_closed.complete
2025-09-03 13:45:11,574 - groq._base_client - DEBUG - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
2025-09-03 13:45:11,606 - prompt_manager.app.crud.crud - INFO - Received response from GROQ API
2025-09-03 13:45:11,608 - prompt_manager.app.crud.crud - DEBUG - GROQ API response: ChatCompletion(choices=[Choice(finish_reason='length', index=0, logprobs=None, message=ChoiceMessage(content="Based on the user's input, the most relevant", role='assistant', tool_calls=None))], id='chatcmpl-b3b2e1fe-f530-45d3-8510-47b5f3cc2fda', created=1756887311, model='llama-3.1-8b-instant', object='chat.completion', system_fingerprint='fp_7083106d2c', usage=Usage(completion_time=0.009778916, completion_tokens=10, prompt_time=0.069397527, prompt_tokens=1098, total_time=0.079176443, total_tokens=1108, queue_time=0.046073013), usage_breakdown=None, x_groq={'id': 'req_01k47a9rw3fdp9kbz0wk14mxgm'}, service_tier='on_demand')
2025-09-03 13:45:11,610 - prompt_manager.app.crud.crud - INFO - LLM selected prompt: Based on the user's input, the most relevant for input: How do I implement a binary search in Python?
2025-09-03 13:45:11,619 - prompt_manager.app.crud.crud - WARNING - LLM returned invalid prompt ID: Based on the user's input, the most relevant
2025-09-03 13:45:11,621 - prompt_manager.app.database - ERROR - Error in database session: 
2025-09-03 13:45:11,621 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 13:45:11,621 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 13:45:11,621 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 13:45:11,621 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 13:45:11,622 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/test-persona Status: 404 Time: 690.57ms
2025-09-03 13:45:11,624 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-03 13:45:11,624 - multipart.multipart - DEBUG - Calling on_field_start with no data
2025-09-03 13:45:11,624 - multipart.multipart - DEBUG - Calling on_field_name with data[0:8]
2025-09-03 13:45:11,624 - multipart.multipart - DEBUG - Calling on_field_data with data[9:28]
2025-09-03 13:45:11,624 - multipart.multipart - DEBUG - Calling on_field_end with no data
2025-09-03 13:45:11,624 - multipart.multipart - DEBUG - Calling on_field_start with no data
2025-09-03 13:45:11,624 - multipart.multipart - DEBUG - Calling on_field_name with data[29:37]
2025-09-03 13:45:11,624 - multipart.multipart - DEBUG - Calling on_field_data with data[38:46]
2025-09-03 13:45:11,624 - multipart.multipart - DEBUG - Calling on_field_end with no data
2025-09-03 13:45:11,624 - multipart.multipart - DEBUG - Calling on_end with no data
2025-09-03 13:45:11,625 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 13:45:11,625 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 13:45:11,625 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 13:45:11,625 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 13:45:11,625 - sqlalchemy.engine.Engine - INFO - [cached since 2.083s ago] ('admin@example.com', 1, 0)
2025-09-03 13:45:11,905 - prompt_manager.app.api.v1.endpoints.auth - INFO - Created access token for user: admin@example.com
2025-09-03 13:45:11,906 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 200 Time: 281.97ms
2025-09-03 13:45:11,906 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 13:45:11,906 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 13:45:11,906 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 13:45:11,906 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 13:45:11,908 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/test-persona
2025-09-03 13:45:11,909 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 13:45:11,909 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 13:45:11,909 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 13:45:11,909 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 13:45:11,909 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 13:45:11,909 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 13:45:11,909 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 13:45:11,909 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 13:45:11,909 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 08:15:11+00:00 (UTC)
2025-09-03 13:45:11,909 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 13:45:11,909 - prompt_manager.app.core.security - INFO - Looking up user with email: admin@example.com
2025-09-03 13:45:11,911 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 13:45:11,911 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 13:45:11,911 - sqlalchemy.engine.Engine - INFO - [cached since 2.368s ago] ('admin@example.com', 1, 0)
2025-09-03 13:45:11,912 - prompt_manager.app.core.security - INFO - Found user: admin@example.com (ID: 26)
2025-09-03 13:45:11,912 - prompt_manager.app.api.v1.api - INFO - Testing persona with automatic prompt selection (user: admin@example.com)
2025-09-03 13:45:11,913 - prompt_manager.app.crud.crud - INFO - Finding most relevant prompt for input: What's the best way to bake a chocolate cake?
2025-09-03 13:45:11,913 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 13:45:11,913 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.status = ? AND prompts.is_active = 1
2025-09-03 13:45:11,913 - sqlalchemy.engine.Engine - INFO - [cached since 1.994s ago] ('active',)
2025-09-03 13:45:11,914 - prompt_manager.app.crud.crud - INFO - Found 16 active prompts in the database
2025-09-03 13:45:11,914 - prompt_manager.app.crud.crud - INFO - Active prompt 1: ID=28, Name=marketing, Status=active, is_active=True
2025-09-03 13:45:11,914 - prompt_manager.app.crud.crud - INFO - Active prompt 2: ID=31, Name=test_live_version_sync, Status=active, is_active=True
2025-09-03 13:45:11,914 - prompt_manager.app.crud.crud - INFO - Active prompt 3: ID=33, Name=debug_live_test, Status=active, is_active=True
2025-09-03 13:45:11,914 - prompt_manager.app.crud.crud - INFO - Active prompt 4: ID=37, Name=test_active_validation, Status=active, is_active=True
2025-09-03 13:45:11,914 - prompt_manager.app.crud.crud - INFO - Active prompt 5: ID=38, Name=test_auto_status, Status=active, is_active=True
2025-09-03 13:45:11,914 - prompt_manager.app.crud.crud - INFO - Active prompt 6: ID=40, Name=test_constraint, Status=active, is_active=True
2025-09-03 13:45:11,914 - prompt_manager.app.crud.crud - INFO - Active prompt 7: ID=43, Name=endpoint_test, Status=active, is_active=True
2025-09-03 13:45:11,914 - prompt_manager.app.crud.crud - INFO - Active prompt 8: ID=45, Name=final_test, Status=active, is_active=True
2025-09-03 13:45:11,914 - prompt_manager.app.crud.crud - INFO - Active prompt 9: ID=49, Name=full_test_prompt, Status=active, is_active=True
2025-09-03 13:45:11,914 - prompt_manager.app.crud.crud - INFO - Active prompt 10: ID=55, Name=lifecycle_test_final, Status=active, is_active=True
2025-09-03 13:45:11,914 - prompt_manager.app.crud.crud - INFO - Active prompt 11: ID=62, Name=code, Status=active, is_active=True
2025-09-03 13:45:11,914 - prompt_manager.app.crud.crud - INFO - Active prompt 12: ID=69, Name=Healthcare assistant, Status=active, is_active=True
2025-09-03 13:45:11,914 - prompt_manager.app.crud.crud - INFO - Active prompt 13: ID=80, Name=mental_health_support, Status=active, is_active=True
2025-09-03 13:45:11,914 - prompt_manager.app.crud.crud - INFO - Active prompt 14: ID=81, Name=coding_assistant, Status=active, is_active=True
2025-09-03 13:45:11,914 - prompt_manager.app.crud.crud - INFO - Active prompt 15: ID=82, Name=cooking_assistant, Status=active, is_active=True
2025-09-03 13:45:11,914 - prompt_manager.app.crud.crud - INFO - Active prompt 16: ID=83, Name=tech_support, Status=active, is_active=True
2025-09-03 13:45:11,914 - prompt_manager.app.crud.crud - INFO - Sending 16 prompts to LLM for analysis
2025-09-03 13:45:11,914 - prompt_manager.app.crud.crud - DEBUG - System prompt: You are an AI assistant that helps match user queries to the most appropriate system prompt.
        Analyze the user's input and determine which of the available prompts would be most relevant.
        Consider the prompt's content, description, tags, and metadata when making your decision.
        
        Return ONLY the ID of the most relevant prompt, or 'none' if none are a good match.
        
2025-09-03 13:45:11,914 - prompt_manager.app.crud.crud - DEBUG - User message: User Input: What's the best way to bake a chocolate cake?
        
        Available Prompts:
        [
  {
    "id": 28,
    "name": "marketing",
    "content": "Testing",
    "description": "testing",
    "tags": "testing",
    "metadata": ""
  },
  {
    "id": 31,
    "name": "test_live_version_sync",
    "content": "Second version content",
    "description": "",
    "tags": "test",
    "metadata": ""
  },
  {
    "id": 33,
    "name": "debug_live_test",
    "content": "Debug content v2",
    "description": "",
    "tags": "debug",
    "metadata": ""
  },
  {
    "id": 37,
    "name": "test_active_validation",
    "content": "First version",
    "description": "",
    "tags": "test",
    "metadata": ""
  },
  {
    "id": 38,
    "name": "test_auto_status",
    "content": "Testing auto status",
    "description": "",
    "tags": "test",
    "metadata": ""
  },
  {
    "id": 40,
    "name": "test_constraint",
    "content": "First active version",
    "description": "",
    "tags": "test",
    "metadata": ""
  },
  {
    "id": 43,
    "name": "endpoint_test",
    "content": "Updated final test",
    "description": "",
    "tags": "test",
    "metadata": ""
  },
  {
    "id": 45,
    "name": "final_test",
    "content": "Final test",
    "description": "",
    "tags": "",
    "metadata": "{\"final\": \"test\"}"
  },
  {
    "id": 49,
    "name": "full_test_prompt",
    "content": "Initial content for the full test.",
    "description": "",
    "tags": "testing, full-flow",
    "metadata": "{\"author\": \"test_script\"}"
  },
  {
    "id": 55,
    "name": "lifecycle_test_final",
    "content": "Lifecycle test v2.0.0",
    "description": "",
    "tags": "lifecycle",
    "metadata": ""
  },
  {
    "id": 62,
    "name": "code",
    "content": "Update for Debugger",
    "description": "Update for debugger",
    "tags": "suggestion",
    "metadata": "{\"priority\": \"high\"}"
  },
  {
    "id": 69,
    "name": "Healthcare assistant",
    "content": "Just for checking",
    "description": "Prompt for healthcare assistant",
    "tags": "wellbeing",
    "metadata": "{\"category\": \"health\"}"
  },
  {
    "id": 80,
    "name": "mental_health_support",
    "content": "You are a compassionate mental health support assistant. Provide empathetic and supportive responses to users who may be experiencing stress, anxiety, or other mental health concerns. Offer helpful coping strategies and encourage professional help when appropriate.",
    "description": "Mental health support assistant",
    "tags": "mental_health, support, wellbeing",
    "metadata": ""
  },
  {
    "id": 81,
    "name": "coding_assistant",
    "content": "You are an expert programming assistant. Help users with coding questions, algorithm design, debugging, and best practices. Provide clear, concise, and accurate code examples in the requested programming language.",
    "description": "Expert programming assistant",
    "tags": "programming, coding, algorithms",
    "metadata": ""
  },
  {
    "id": 82,
    "name": "cooking_assistant",
    "content": "You are a professional chef and cooking instructor. Provide detailed recipes, cooking tips, and techniques. Help users with meal planning, ingredient substitutions, and troubleshooting cooking problems.",
    "description": "Professional cooking assistant",
    "tags": "cooking, recipes, baking",
    "metadata": ""
  },
  {
    "id": 83,
    "name": "tech_support",
    "content": "You are a technical support specialist. Help users troubleshoot hardware, software, and network issues. Provide step-by-step guidance for resolving technical problems.",
    "description": "Technical support specialist",
    "tags": "tech_support, troubleshooting, it",
    "metadata": ""
  }
]
        
        Based on the user's input, which prompt ID is most relevant? Return ONLY the ID number or 'none'.
        
2025-09-03 13:45:11,914 - prompt_manager.app.crud.crud - INFO - Initializing GROQ client...
2025-09-03 13:45:11,915 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-09-03 13:45:11,915 - httpx - DEBUG - load_verify_locations cafile='/Applications/anaconda3/lib/python3.11/site-packages/certifi/cacert.pem'
2025-09-03 13:45:11,936 - prompt_manager.app.crud.crud - INFO - Sending request to GROQ API...
2025-09-03 13:45:11,937 - groq._base_client - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are an AI assistant that helps match user queries to the most appropriate system prompt.\n        Analyze the user's input and determine which of the available prompts would be most relevant.\n        Consider the prompt's content, description, tags, and metadata when making your decision.\n        \n        Return ONLY the ID of the most relevant prompt, or 'none' if none are a good match.\n        "}, {'role': 'user', 'content': 'User Input: What\'s the best way to bake a chocolate cake?\n        \n        Available Prompts:\n        [\n  {\n    "id": 28,\n    "name": "marketing",\n    "content": "Testing",\n    "description": "testing",\n    "tags": "testing",\n    "metadata": ""\n  },\n  {\n    "id": 31,\n    "name": "test_live_version_sync",\n    "content": "Second version content",\n    "description": "",\n    "tags": "test",\n    "metadata": ""\n  },\n  {\n    "id": 33,\n    "name": "debug_live_test",\n    "content": "Debug content v2",\n    "description": "",\n    "tags": "debug",\n    "metadata": ""\n  },\n  {\n    "id": 37,\n    "name": "test_active_validation",\n    "content": "First version",\n    "description": "",\n    "tags": "test",\n    "metadata": ""\n  },\n  {\n    "id": 38,\n    "name": "test_auto_status",\n    "content": "Testing auto status",\n    "description": "",\n    "tags": "test",\n    "metadata": ""\n  },\n  {\n    "id": 40,\n    "name": "test_constraint",\n    "content": "First active version",\n    "description": "",\n    "tags": "test",\n    "metadata": ""\n  },\n  {\n    "id": 43,\n    "name": "endpoint_test",\n    "content": "Updated final test",\n    "description": "",\n    "tags": "test",\n    "metadata": ""\n  },\n  {\n    "id": 45,\n    "name": "final_test",\n    "content": "Final test",\n    "description": "",\n    "tags": "",\n    "metadata": "{\\"final\\": \\"test\\"}"\n  },\n  {\n    "id": 49,\n    "name": "full_test_prompt",\n    "content": "Initial content for the full test.",\n    "description": "",\n    "tags": "testing, full-flow",\n    "metadata": "{\\"author\\": \\"test_script\\"}"\n  },\n  {\n    "id": 55,\n    "name": "lifecycle_test_final",\n    "content": "Lifecycle test v2.0.0",\n    "description": "",\n    "tags": "lifecycle",\n    "metadata": ""\n  },\n  {\n    "id": 62,\n    "name": "code",\n    "content": "Update for Debugger",\n    "description": "Update for debugger",\n    "tags": "suggestion",\n    "metadata": "{\\"priority\\": \\"high\\"}"\n  },\n  {\n    "id": 69,\n    "name": "Healthcare assistant",\n    "content": "Just for checking",\n    "description": "Prompt for healthcare assistant",\n    "tags": "wellbeing",\n    "metadata": "{\\"category\\": \\"health\\"}"\n  },\n  {\n    "id": 80,\n    "name": "mental_health_support",\n    "content": "You are a compassionate mental health support assistant. Provide empathetic and supportive responses to users who may be experiencing stress, anxiety, or other mental health concerns. Offer helpful coping strategies and encourage professional help when appropriate.",\n    "description": "Mental health support assistant",\n    "tags": "mental_health, support, wellbeing",\n    "metadata": ""\n  },\n  {\n    "id": 81,\n    "name": "coding_assistant",\n    "content": "You are an expert programming assistant. Help users with coding questions, algorithm design, debugging, and best practices. Provide clear, concise, and accurate code examples in the requested programming language.",\n    "description": "Expert programming assistant",\n    "tags": "programming, coding, algorithms",\n    "metadata": ""\n  },\n  {\n    "id": 82,\n    "name": "cooking_assistant",\n    "content": "You are a professional chef and cooking instructor. Provide detailed recipes, cooking tips, and techniques. Help users with meal planning, ingredient substitutions, and troubleshooting cooking problems.",\n    "description": "Professional cooking assistant",\n    "tags": "cooking, recipes, baking",\n    "metadata": ""\n  },\n  {\n    "id": 83,\n    "name": "tech_support",\n    "content": "You are a technical support specialist. Help users troubleshoot hardware, software, and network issues. Provide step-by-step guidance for resolving technical problems.",\n    "description": "Technical support specialist",\n    "tags": "tech_support, troubleshooting, it",\n    "metadata": ""\n  }\n]\n        \n        Based on the user\'s input, which prompt ID is most relevant? Return ONLY the ID number or \'none\'.\n        '}], 'model': 'llama-3.1-8b-instant', 'max_tokens': 10, 'temperature': 0.3}}
2025-09-03 13:45:11,969 - httpcore.connection - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-09-03 13:45:12,007 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x118df4f50>
2025-09-03 13:45:12,008 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x1194168d0> server_hostname='api.groq.com' timeout=5.0
2025-09-03 13:45:12,057 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x119596910>
2025-09-03 13:45:12,057 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-03 13:45:12,057 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-09-03 13:45:12,058 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-03 13:45:12,058 - httpcore.http11 - DEBUG - send_request_body.complete
2025-09-03 13:45:12,058 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-03 13:45:12,393 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 03 Sep 2025 08:15:12 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Content-Encoding', b'br'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'bom'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14397'), (b'x-ratelimit-remaining-tokens', b'2870'), (b'x-ratelimit-reset-requests', b'17.104s'), (b'x-ratelimit-reset-tokens', b'31.3s'), (b'x-request-id', b'req_01k47a9sr3f069awmxa1n8nkj6'), (b'via', b'1.1 google'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=3.Ivg2S1JGdWwn.3xjcXSrNP.dTCyDl2Sm7s68wiLFI-1756887312-1.0.1.1-EtFGKjRDAKQskA2wXP23t0MZx4k97h1NFaFcm7v.pyTmOW44TNxR2O5UOCjoB_oklwmbdDjlhQuUx1ytYdrp0sHl.giA3ZvCreUcDoQZVRY; path=/; expires=Wed, 03-Sep-25 08:45:12 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9793cc4488cbcb4f-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-03 13:45:12,393 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 13:45:12,394 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-03 13:45:12,394 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-09-03 13:45:12,394 - httpcore.http11 - DEBUG - response_closed.started
2025-09-03 13:45:12,394 - httpcore.http11 - DEBUG - response_closed.complete
2025-09-03 13:45:12,395 - groq._base_client - DEBUG - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
2025-09-03 13:45:12,396 - prompt_manager.app.crud.crud - INFO - Received response from GROQ API
2025-09-03 13:45:12,396 - prompt_manager.app.crud.crud - DEBUG - GROQ API response: ChatCompletion(choices=[Choice(finish_reason='length', index=0, logprobs=None, message=ChoiceMessage(content="82\n\nThis is because the user's input is", role='assistant', tool_calls=None))], id='chatcmpl-fca4e388-52a2-4063-b898-a3477f56051e', created=1756887312, model='llama-3.1-8b-instant', object='chat.completion', system_fingerprint='fp_2115512ff6', usage=Usage(completion_time=0.020646994, completion_tokens=10, prompt_time=0.105210594, prompt_tokens=1099, total_time=0.125857588, total_tokens=1109, queue_time=0.045234996), usage_breakdown=None, x_groq={'id': 'req_01k47a9sr3f069awmxa1n8nkj6'}, service_tier='on_demand')
2025-09-03 13:45:12,396 - prompt_manager.app.crud.crud - INFO - LLM selected prompt: 82

This is because the user's input is for input: What's the best way to bake a chocolate cake?
2025-09-03 13:45:12,396 - prompt_manager.app.crud.crud - WARNING - LLM returned invalid prompt ID: 82

This is because the user's input is
2025-09-03 13:45:12,396 - prompt_manager.app.database - ERROR - Error in database session: 
2025-09-03 13:45:12,397 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 13:45:12,397 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 13:45:12,397 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 13:45:12,397 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 13:45:12,397 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/test-persona Status: 404 Time: 489.43ms
2025-09-03 13:45:12,399 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-03 13:45:12,399 - multipart.multipart - DEBUG - Calling on_field_start with no data
2025-09-03 13:45:12,399 - multipart.multipart - DEBUG - Calling on_field_name with data[0:8]
2025-09-03 13:45:12,399 - multipart.multipart - DEBUG - Calling on_field_data with data[9:28]
2025-09-03 13:45:12,399 - multipart.multipart - DEBUG - Calling on_field_end with no data
2025-09-03 13:45:12,399 - multipart.multipart - DEBUG - Calling on_field_start with no data
2025-09-03 13:45:12,399 - multipart.multipart - DEBUG - Calling on_field_name with data[29:37]
2025-09-03 13:45:12,400 - multipart.multipart - DEBUG - Calling on_field_data with data[38:46]
2025-09-03 13:45:12,400 - multipart.multipart - DEBUG - Calling on_field_end with no data
2025-09-03 13:45:12,400 - multipart.multipart - DEBUG - Calling on_end with no data
2025-09-03 13:45:12,400 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 13:45:12,400 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 13:45:12,400 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 13:45:12,400 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 13:45:12,400 - sqlalchemy.engine.Engine - INFO - [cached since 2.858s ago] ('admin@example.com', 1, 0)
2025-09-03 13:45:12,660 - prompt_manager.app.api.v1.endpoints.auth - INFO - Created access token for user: admin@example.com
2025-09-03 13:45:12,661 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 200 Time: 262.07ms
2025-09-03 13:45:12,662 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 13:45:12,662 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 13:45:12,662 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 13:45:12,662 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 13:45:12,663 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/test-persona
2025-09-03 13:45:12,664 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 13:45:12,664 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 13:45:12,664 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 13:45:12,664 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 13:45:12,664 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 13:45:12,664 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 13:45:12,664 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 13:45:12,664 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 13:45:12,665 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 08:15:12+00:00 (UTC)
2025-09-03 13:45:12,665 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 13:45:12,665 - prompt_manager.app.core.security - INFO - Looking up user with email: admin@example.com
2025-09-03 13:45:12,665 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 13:45:12,665 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 13:45:12,665 - sqlalchemy.engine.Engine - INFO - [cached since 3.122s ago] ('admin@example.com', 1, 0)
2025-09-03 13:45:12,665 - prompt_manager.app.core.security - INFO - Found user: admin@example.com (ID: 26)
2025-09-03 13:45:12,665 - prompt_manager.app.api.v1.api - INFO - Testing persona with automatic prompt selection (user: admin@example.com)
2025-09-03 13:45:12,665 - prompt_manager.app.crud.crud - INFO - Finding most relevant prompt for input: I'm having trouble with my internet connection
2025-09-03 13:45:12,666 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 13:45:12,666 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.status = ? AND prompts.is_active = 1
2025-09-03 13:45:12,666 - sqlalchemy.engine.Engine - INFO - [cached since 2.746s ago] ('active',)
2025-09-03 13:45:12,666 - prompt_manager.app.crud.crud - INFO - Found 16 active prompts in the database
2025-09-03 13:45:12,666 - prompt_manager.app.crud.crud - INFO - Active prompt 1: ID=28, Name=marketing, Status=active, is_active=True
2025-09-03 13:45:12,666 - prompt_manager.app.crud.crud - INFO - Active prompt 2: ID=31, Name=test_live_version_sync, Status=active, is_active=True
2025-09-03 13:45:12,666 - prompt_manager.app.crud.crud - INFO - Active prompt 3: ID=33, Name=debug_live_test, Status=active, is_active=True
2025-09-03 13:45:12,666 - prompt_manager.app.crud.crud - INFO - Active prompt 4: ID=37, Name=test_active_validation, Status=active, is_active=True
2025-09-03 13:45:12,666 - prompt_manager.app.crud.crud - INFO - Active prompt 5: ID=38, Name=test_auto_status, Status=active, is_active=True
2025-09-03 13:45:12,666 - prompt_manager.app.crud.crud - INFO - Active prompt 6: ID=40, Name=test_constraint, Status=active, is_active=True
2025-09-03 13:45:12,666 - prompt_manager.app.crud.crud - INFO - Active prompt 7: ID=43, Name=endpoint_test, Status=active, is_active=True
2025-09-03 13:45:12,666 - prompt_manager.app.crud.crud - INFO - Active prompt 8: ID=45, Name=final_test, Status=active, is_active=True
2025-09-03 13:45:12,666 - prompt_manager.app.crud.crud - INFO - Active prompt 9: ID=49, Name=full_test_prompt, Status=active, is_active=True
2025-09-03 13:45:12,666 - prompt_manager.app.crud.crud - INFO - Active prompt 10: ID=55, Name=lifecycle_test_final, Status=active, is_active=True
2025-09-03 13:45:12,666 - prompt_manager.app.crud.crud - INFO - Active prompt 11: ID=62, Name=code, Status=active, is_active=True
2025-09-03 13:45:12,666 - prompt_manager.app.crud.crud - INFO - Active prompt 12: ID=69, Name=Healthcare assistant, Status=active, is_active=True
2025-09-03 13:45:12,666 - prompt_manager.app.crud.crud - INFO - Active prompt 13: ID=80, Name=mental_health_support, Status=active, is_active=True
2025-09-03 13:45:12,666 - prompt_manager.app.crud.crud - INFO - Active prompt 14: ID=81, Name=coding_assistant, Status=active, is_active=True
2025-09-03 13:45:12,666 - prompt_manager.app.crud.crud - INFO - Active prompt 15: ID=82, Name=cooking_assistant, Status=active, is_active=True
2025-09-03 13:45:12,666 - prompt_manager.app.crud.crud - INFO - Active prompt 16: ID=83, Name=tech_support, Status=active, is_active=True
2025-09-03 13:45:12,667 - prompt_manager.app.crud.crud - INFO - Sending 16 prompts to LLM for analysis
2025-09-03 13:45:12,667 - prompt_manager.app.crud.crud - DEBUG - System prompt: You are an AI assistant that helps match user queries to the most appropriate system prompt.
        Analyze the user's input and determine which of the available prompts would be most relevant.
        Consider the prompt's content, description, tags, and metadata when making your decision.
        
        Return ONLY the ID of the most relevant prompt, or 'none' if none are a good match.
        
2025-09-03 13:45:12,667 - prompt_manager.app.crud.crud - DEBUG - User message: User Input: I'm having trouble with my internet connection
        
        Available Prompts:
        [
  {
    "id": 28,
    "name": "marketing",
    "content": "Testing",
    "description": "testing",
    "tags": "testing",
    "metadata": ""
  },
  {
    "id": 31,
    "name": "test_live_version_sync",
    "content": "Second version content",
    "description": "",
    "tags": "test",
    "metadata": ""
  },
  {
    "id": 33,
    "name": "debug_live_test",
    "content": "Debug content v2",
    "description": "",
    "tags": "debug",
    "metadata": ""
  },
  {
    "id": 37,
    "name": "test_active_validation",
    "content": "First version",
    "description": "",
    "tags": "test",
    "metadata": ""
  },
  {
    "id": 38,
    "name": "test_auto_status",
    "content": "Testing auto status",
    "description": "",
    "tags": "test",
    "metadata": ""
  },
  {
    "id": 40,
    "name": "test_constraint",
    "content": "First active version",
    "description": "",
    "tags": "test",
    "metadata": ""
  },
  {
    "id": 43,
    "name": "endpoint_test",
    "content": "Updated final test",
    "description": "",
    "tags": "test",
    "metadata": ""
  },
  {
    "id": 45,
    "name": "final_test",
    "content": "Final test",
    "description": "",
    "tags": "",
    "metadata": "{\"final\": \"test\"}"
  },
  {
    "id": 49,
    "name": "full_test_prompt",
    "content": "Initial content for the full test.",
    "description": "",
    "tags": "testing, full-flow",
    "metadata": "{\"author\": \"test_script\"}"
  },
  {
    "id": 55,
    "name": "lifecycle_test_final",
    "content": "Lifecycle test v2.0.0",
    "description": "",
    "tags": "lifecycle",
    "metadata": ""
  },
  {
    "id": 62,
    "name": "code",
    "content": "Update for Debugger",
    "description": "Update for debugger",
    "tags": "suggestion",
    "metadata": "{\"priority\": \"high\"}"
  },
  {
    "id": 69,
    "name": "Healthcare assistant",
    "content": "Just for checking",
    "description": "Prompt for healthcare assistant",
    "tags": "wellbeing",
    "metadata": "{\"category\": \"health\"}"
  },
  {
    "id": 80,
    "name": "mental_health_support",
    "content": "You are a compassionate mental health support assistant. Provide empathetic and supportive responses to users who may be experiencing stress, anxiety, or other mental health concerns. Offer helpful coping strategies and encourage professional help when appropriate.",
    "description": "Mental health support assistant",
    "tags": "mental_health, support, wellbeing",
    "metadata": ""
  },
  {
    "id": 81,
    "name": "coding_assistant",
    "content": "You are an expert programming assistant. Help users with coding questions, algorithm design, debugging, and best practices. Provide clear, concise, and accurate code examples in the requested programming language.",
    "description": "Expert programming assistant",
    "tags": "programming, coding, algorithms",
    "metadata": ""
  },
  {
    "id": 82,
    "name": "cooking_assistant",
    "content": "You are a professional chef and cooking instructor. Provide detailed recipes, cooking tips, and techniques. Help users with meal planning, ingredient substitutions, and troubleshooting cooking problems.",
    "description": "Professional cooking assistant",
    "tags": "cooking, recipes, baking",
    "metadata": ""
  },
  {
    "id": 83,
    "name": "tech_support",
    "content": "You are a technical support specialist. Help users troubleshoot hardware, software, and network issues. Provide step-by-step guidance for resolving technical problems.",
    "description": "Technical support specialist",
    "tags": "tech_support, troubleshooting, it",
    "metadata": ""
  }
]
        
        Based on the user's input, which prompt ID is most relevant? Return ONLY the ID number or 'none'.
        
2025-09-03 13:45:12,667 - prompt_manager.app.crud.crud - INFO - Initializing GROQ client...
2025-09-03 13:45:12,667 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-09-03 13:45:12,667 - httpx - DEBUG - load_verify_locations cafile='/Applications/anaconda3/lib/python3.11/site-packages/certifi/cacert.pem'
2025-09-03 13:45:12,684 - prompt_manager.app.crud.crud - INFO - Sending request to GROQ API...
2025-09-03 13:45:12,684 - groq._base_client - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are an AI assistant that helps match user queries to the most appropriate system prompt.\n        Analyze the user's input and determine which of the available prompts would be most relevant.\n        Consider the prompt's content, description, tags, and metadata when making your decision.\n        \n        Return ONLY the ID of the most relevant prompt, or 'none' if none are a good match.\n        "}, {'role': 'user', 'content': 'User Input: I\'m having trouble with my internet connection\n        \n        Available Prompts:\n        [\n  {\n    "id": 28,\n    "name": "marketing",\n    "content": "Testing",\n    "description": "testing",\n    "tags": "testing",\n    "metadata": ""\n  },\n  {\n    "id": 31,\n    "name": "test_live_version_sync",\n    "content": "Second version content",\n    "description": "",\n    "tags": "test",\n    "metadata": ""\n  },\n  {\n    "id": 33,\n    "name": "debug_live_test",\n    "content": "Debug content v2",\n    "description": "",\n    "tags": "debug",\n    "metadata": ""\n  },\n  {\n    "id": 37,\n    "name": "test_active_validation",\n    "content": "First version",\n    "description": "",\n    "tags": "test",\n    "metadata": ""\n  },\n  {\n    "id": 38,\n    "name": "test_auto_status",\n    "content": "Testing auto status",\n    "description": "",\n    "tags": "test",\n    "metadata": ""\n  },\n  {\n    "id": 40,\n    "name": "test_constraint",\n    "content": "First active version",\n    "description": "",\n    "tags": "test",\n    "metadata": ""\n  },\n  {\n    "id": 43,\n    "name": "endpoint_test",\n    "content": "Updated final test",\n    "description": "",\n    "tags": "test",\n    "metadata": ""\n  },\n  {\n    "id": 45,\n    "name": "final_test",\n    "content": "Final test",\n    "description": "",\n    "tags": "",\n    "metadata": "{\\"final\\": \\"test\\"}"\n  },\n  {\n    "id": 49,\n    "name": "full_test_prompt",\n    "content": "Initial content for the full test.",\n    "description": "",\n    "tags": "testing, full-flow",\n    "metadata": "{\\"author\\": \\"test_script\\"}"\n  },\n  {\n    "id": 55,\n    "name": "lifecycle_test_final",\n    "content": "Lifecycle test v2.0.0",\n    "description": "",\n    "tags": "lifecycle",\n    "metadata": ""\n  },\n  {\n    "id": 62,\n    "name": "code",\n    "content": "Update for Debugger",\n    "description": "Update for debugger",\n    "tags": "suggestion",\n    "metadata": "{\\"priority\\": \\"high\\"}"\n  },\n  {\n    "id": 69,\n    "name": "Healthcare assistant",\n    "content": "Just for checking",\n    "description": "Prompt for healthcare assistant",\n    "tags": "wellbeing",\n    "metadata": "{\\"category\\": \\"health\\"}"\n  },\n  {\n    "id": 80,\n    "name": "mental_health_support",\n    "content": "You are a compassionate mental health support assistant. Provide empathetic and supportive responses to users who may be experiencing stress, anxiety, or other mental health concerns. Offer helpful coping strategies and encourage professional help when appropriate.",\n    "description": "Mental health support assistant",\n    "tags": "mental_health, support, wellbeing",\n    "metadata": ""\n  },\n  {\n    "id": 81,\n    "name": "coding_assistant",\n    "content": "You are an expert programming assistant. Help users with coding questions, algorithm design, debugging, and best practices. Provide clear, concise, and accurate code examples in the requested programming language.",\n    "description": "Expert programming assistant",\n    "tags": "programming, coding, algorithms",\n    "metadata": ""\n  },\n  {\n    "id": 82,\n    "name": "cooking_assistant",\n    "content": "You are a professional chef and cooking instructor. Provide detailed recipes, cooking tips, and techniques. Help users with meal planning, ingredient substitutions, and troubleshooting cooking problems.",\n    "description": "Professional cooking assistant",\n    "tags": "cooking, recipes, baking",\n    "metadata": ""\n  },\n  {\n    "id": 83,\n    "name": "tech_support",\n    "content": "You are a technical support specialist. Help users troubleshoot hardware, software, and network issues. Provide step-by-step guidance for resolving technical problems.",\n    "description": "Technical support specialist",\n    "tags": "tech_support, troubleshooting, it",\n    "metadata": ""\n  }\n]\n        \n        Based on the user\'s input, which prompt ID is most relevant? Return ONLY the ID number or \'none\'.\n        '}], 'model': 'llama-3.1-8b-instant', 'max_tokens': 10, 'temperature': 0.3}}
2025-09-03 13:45:12,685 - httpcore.connection - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-09-03 13:45:12,723 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x11953b890>
2025-09-03 13:45:12,723 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x119416960> server_hostname='api.groq.com' timeout=5.0
2025-09-03 13:45:12,801 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x11953bc90>
2025-09-03 13:45:12,801 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-03 13:45:12,801 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-09-03 13:45:12,801 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-03 13:45:12,801 - httpcore.http11 - DEBUG - send_request_body.complete
2025-09-03 13:45:12,801 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-03 13:45:13,214 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 03 Sep 2025 08:15:13 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Content-Encoding', b'br'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'bom'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14396'), (b'x-ratelimit-remaining-tokens', b'1837'), (b'x-ratelimit-reset-requests', b'23.229999999s'), (b'x-ratelimit-reset-tokens', b'41.622s'), (b'x-request-id', b'req_01k47a9tg5f068f1ade7ry4901'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=NxboxLIp1E8zHCLTmd5MQ6Z5pTMgAKkiefptcSuUPlo-1756887313-1.0.1.1-E8Ycx2pvg9URP2FG4enrleS9c.2iSHqaa8HlDu1ijbrkbLpQUofYXjKRw9ZjBuHrdjasBo.zKR9ShcBElVdZBhVE4FgL7avYmooSLaTf7tE; path=/; expires=Wed, 03-Sep-25 08:45:13 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9793cc493e931bd7-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-03 13:45:13,215 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 13:45:13,215 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-03 13:45:13,215 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-09-03 13:45:13,215 - httpcore.http11 - DEBUG - response_closed.started
2025-09-03 13:45:13,215 - httpcore.http11 - DEBUG - response_closed.complete
2025-09-03 13:45:13,215 - groq._base_client - DEBUG - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
2025-09-03 13:45:13,216 - prompt_manager.app.crud.crud - INFO - Received response from GROQ API
2025-09-03 13:45:13,216 - prompt_manager.app.crud.crud - DEBUG - GROQ API response: ChatCompletion(choices=[Choice(finish_reason='length', index=0, logprobs=None, message=ChoiceMessage(content="Based on the user's input, the most relevant", role='assistant', tool_calls=None))], id='chatcmpl-59c93f60-8fbf-4c53-8069-2745e6e915f8', created=1756887313, model='llama-3.1-8b-instant', object='chat.completion', system_fingerprint='fp_7083106d2c', usage=Usage(completion_time=0.007985049, completion_tokens=10, prompt_time=0.198502176, prompt_tokens=1096, total_time=0.206487225, total_tokens=1106, queue_time=0.046376543), usage_breakdown=None, x_groq={'id': 'req_01k47a9tg5f068f1ade7ry4901'}, service_tier='on_demand')
2025-09-03 13:45:13,216 - prompt_manager.app.crud.crud - INFO - LLM selected prompt: Based on the user's input, the most relevant for input: I'm having trouble with my internet connection
2025-09-03 13:45:13,216 - prompt_manager.app.crud.crud - WARNING - LLM returned invalid prompt ID: Based on the user's input, the most relevant
2025-09-03 13:45:13,216 - prompt_manager.app.database - ERROR - Error in database session: 
2025-09-03 13:45:13,217 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 13:45:13,217 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 13:45:13,217 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 13:45:13,217 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 13:45:13,217 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/test-persona Status: 404 Time: 553.56ms
2025-09-03 13:45:38,395 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 13:45:38,460 - httpcore.connection - DEBUG - close.started
2025-09-03 13:45:38,460 - httpcore.connection - DEBUG - close.complete
2025-09-03 13:45:38,460 - httpcore.connection - DEBUG - close.started
2025-09-03 13:45:38,460 - httpcore.connection - DEBUG - close.complete
2025-09-03 13:45:38,461 - httpcore.connection - DEBUG - close.started
2025-09-03 13:45:38,461 - httpcore.connection - DEBUG - close.complete
2025-09-03 13:45:39,662 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 13:45:39,663 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("users")
2025-09-03 13:45:39,663 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 13:45:39,663 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("prompts")
2025-09-03 13:45:39,663 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 13:45:39,663 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("prompt_history")
2025-09-03 13:45:39,663 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 13:45:39,663 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-09-03 13:45:39,685 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 13:45:39,685 - prompt_manager.app.main - INFO - Log level: DEBUG
2025-09-03 13:45:39,685 - prompt_manager.app.main - INFO - Database URL: sqlite:////Users/prisha/Desktop/Coding/system prompt/prompts.db
2025-09-03 13:45:50,948 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 13:45:52,215 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 13:45:52,215 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("users")
2025-09-03 13:45:52,215 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 13:45:52,215 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("prompts")
2025-09-03 13:45:52,215 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 13:45:52,215 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("prompt_history")
2025-09-03 13:45:52,215 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 13:45:52,216 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-09-03 13:45:52,236 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 13:45:52,236 - prompt_manager.app.main - INFO - Log level: DEBUG
2025-09-03 13:45:52,236 - prompt_manager.app.main - INFO - Database URL: sqlite:////Users/prisha/Desktop/Coding/system prompt/prompts.db
2025-09-03 14:14:02,686 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 14:15:03,474 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 14:15:03,474 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("users")
2025-09-03 14:15:03,474 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 14:15:03,475 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("prompts")
2025-09-03 14:15:03,475 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 14:15:03,475 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("prompt_history")
2025-09-03 14:15:03,475 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 14:15:03,475 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-09-03 14:15:03,499 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 14:15:03,499 - prompt_manager.app.main - INFO - Log level: DEBUG
2025-09-03 14:15:03,499 - prompt_manager.app.main - INFO - Database URL: sqlite:////Users/prisha/Desktop/Coding/system prompt/prompts.db
2025-09-03 14:15:09,310 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-03 14:15:09,311 - multipart.multipart - DEBUG - Calling on_field_start with no data
2025-09-03 14:15:09,311 - multipart.multipart - DEBUG - Calling on_field_name with data[0:8]
2025-09-03 14:15:09,311 - multipart.multipart - DEBUG - Calling on_field_data with data[9:28]
2025-09-03 14:15:09,311 - multipart.multipart - DEBUG - Calling on_field_end with no data
2025-09-03 14:15:09,311 - multipart.multipart - DEBUG - Calling on_field_start with no data
2025-09-03 14:15:09,311 - multipart.multipart - DEBUG - Calling on_field_name with data[29:37]
2025-09-03 14:15:09,311 - multipart.multipart - DEBUG - Calling on_field_data with data[38:46]
2025-09-03 14:15:09,311 - multipart.multipart - DEBUG - Calling on_field_end with no data
2025-09-03 14:15:09,311 - multipart.multipart - DEBUG - Calling on_end with no data
2025-09-03 14:15:09,311 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 14:15:09,311 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 14:15:09,314 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 14:15:09,316 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 14:15:09,316 - sqlalchemy.engine.Engine - INFO - [generated in 0.00013s] ('admin@example.com', 1, 0)
2025-09-03 14:15:09,317 - passlib.handlers.bcrypt - DEBUG - detected 'bcrypt' backend, version '4.0.1'
2025-09-03 14:15:09,318 - passlib.handlers.bcrypt - DEBUG - 'bcrypt' backend lacks $2$ support, enabling workaround
2025-09-03 14:15:09,689 - prompt_manager.app.api.v1.endpoints.auth - INFO - Created access token for user: admin@example.com
2025-09-03 14:15:09,694 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 200 Time: 383.7ms
2025-09-03 14:15:09,694 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 14:15:09,694 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 14:15:09,694 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 14:15:09,694 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 14:15:09,696 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/test-persona
2025-09-03 14:15:09,697 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 14:15:09,697 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 14:15:09,697 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 14:15:09,697 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 14:15:09,697 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 14:15:09,697 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 14:15:09,697 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 14:15:09,697 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 14:15:09,697 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 08:45:09+00:00 (UTC)
2025-09-03 14:15:09,697 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 14:15:09,697 - prompt_manager.app.core.security - INFO - Looking up user with email: admin@example.com
2025-09-03 14:15:09,697 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 14:15:09,697 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 14:15:09,697 - sqlalchemy.engine.Engine - INFO - [cached since 0.3817s ago] ('admin@example.com', 1, 0)
2025-09-03 14:15:09,698 - prompt_manager.app.core.security - INFO - Found user: admin@example.com (ID: 26)
2025-09-03 14:15:09,698 - prompt_manager.app.api.v1.api - INFO - Testing persona with automatic prompt selection (user: admin@example.com)
2025-09-03 14:15:09,698 - prompt_manager.app.crud.crud - INFO - Finding most relevant prompt for input: I'm feeling really stressed and anxious today
2025-09-03 14:15:09,698 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 14:15:09,699 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.status = ? AND prompts.is_active = 1
2025-09-03 14:15:09,699 - sqlalchemy.engine.Engine - INFO - [generated in 0.00019s] ('active',)
2025-09-03 14:15:09,701 - prompt_manager.app.crud.crud - INFO - Found 16 active prompts in the database
2025-09-03 14:15:09,701 - prompt_manager.app.crud.crud - INFO - Active prompt 1: ID=28, Name=marketing, Status=active, is_active=True
2025-09-03 14:15:09,701 - prompt_manager.app.crud.crud - INFO - Active prompt 2: ID=31, Name=test_live_version_sync, Status=active, is_active=True
2025-09-03 14:15:09,701 - prompt_manager.app.crud.crud - INFO - Active prompt 3: ID=33, Name=debug_live_test, Status=active, is_active=True
2025-09-03 14:15:09,701 - prompt_manager.app.crud.crud - INFO - Active prompt 4: ID=37, Name=test_active_validation, Status=active, is_active=True
2025-09-03 14:15:09,701 - prompt_manager.app.crud.crud - INFO - Active prompt 5: ID=38, Name=test_auto_status, Status=active, is_active=True
2025-09-03 14:15:09,701 - prompt_manager.app.crud.crud - INFO - Active prompt 6: ID=40, Name=test_constraint, Status=active, is_active=True
2025-09-03 14:15:09,701 - prompt_manager.app.crud.crud - INFO - Active prompt 7: ID=43, Name=endpoint_test, Status=active, is_active=True
2025-09-03 14:15:09,701 - prompt_manager.app.crud.crud - INFO - Active prompt 8: ID=45, Name=final_test, Status=active, is_active=True
2025-09-03 14:15:09,701 - prompt_manager.app.crud.crud - INFO - Active prompt 9: ID=49, Name=full_test_prompt, Status=active, is_active=True
2025-09-03 14:15:09,701 - prompt_manager.app.crud.crud - INFO - Active prompt 10: ID=55, Name=lifecycle_test_final, Status=active, is_active=True
2025-09-03 14:15:09,701 - prompt_manager.app.crud.crud - INFO - Active prompt 11: ID=62, Name=code, Status=active, is_active=True
2025-09-03 14:15:09,701 - prompt_manager.app.crud.crud - INFO - Active prompt 12: ID=69, Name=Healthcare assistant, Status=active, is_active=True
2025-09-03 14:15:09,701 - prompt_manager.app.crud.crud - INFO - Active prompt 13: ID=80, Name=mental_health_support, Status=active, is_active=True
2025-09-03 14:15:09,701 - prompt_manager.app.crud.crud - INFO - Active prompt 14: ID=81, Name=coding_assistant, Status=active, is_active=True
2025-09-03 14:15:09,701 - prompt_manager.app.crud.crud - INFO - Active prompt 15: ID=82, Name=cooking_assistant, Status=active, is_active=True
2025-09-03 14:15:09,701 - prompt_manager.app.crud.crud - INFO - Active prompt 16: ID=83, Name=tech_support, Status=active, is_active=True
2025-09-03 14:15:09,702 - prompt_manager.app.crud.crud - INFO - Sending 16 prompts to LLM for analysis
2025-09-03 14:15:09,702 - prompt_manager.app.crud.crud - DEBUG - System prompt: Your task is to analyze the user's input and select the most relevant prompt ID from the provided list.
        
        Instructions:
        1. Carefully read the user's input.
        2. Review all available prompts, focusing on their content, description, and tags.
        3. Select the single most relevant prompt ID that best matches the user's intent.
        4. Return ONLY the numeric ID of the selected prompt, with no other text or explanation.
        5. If no prompt is relevant, return 'none'.
        
        Example responses:
        - For a match: "42"
        - For no match: "none"
        
2025-09-03 14:15:09,702 - prompt_manager.app.crud.crud - DEBUG - User message: USER INPUT:
        I'm feeling really stressed and anxious today
        
        AVAILABLE PROMPTS (ID, Name, Content Preview):
        
ID: 28 | Name: marketing
Preview: Testing
Tags: testing

ID: 31 | Name: test_live_version_sync
Preview: Second version content
Tags: test

ID: 33 | Name: debug_live_test
Preview: Debug content v2
Tags: debug

ID: 37 | Name: test_active_validation
Preview: First version
Tags: test

ID: 38 | Name: test_auto_status
Preview: Testing auto status
Tags: test

ID: 40 | Name: test_constraint
Preview: First active version
Tags: test

ID: 43 | Name: endpoint_test
Preview: Updated final test
Tags: test

ID: 45 | Name: final_test
Preview: Final test

ID: 49 | Name: full_test_prompt
Preview: Initial content for the full test.
Tags: testing, full-flow

ID: 55 | Name: lifecycle_test_final
Preview: Lifecycle test v2.0.0
Tags: lifecycle

ID: 62 | Name: code
Preview: Update for Debugger
Tags: suggestion

ID: 69 | Name: Healthcare assistant
Preview: Just for checking
Tags: wellbeing

ID: 80 | Name: mental_health_support
Preview: You are a compassionate mental health support assistant. Provide empathetic and supportive responses...
Tags: mental_health, support, wellbeing

ID: 81 | Name: coding_assistant
Preview: You are an expert programming assistant. Help users with coding questions, algorithm design, debuggi...
Tags: programming, coding, algorithms

ID: 82 | Name: cooking_assistant
Preview: You are a professional chef and cooking instructor. Provide detailed recipes, cooking tips, and tech...
Tags: cooking, recipes, baking

ID: 83 | Name: tech_support
Preview: You are a technical support specialist. Help users troubleshoot hardware, software, and network issu...
Tags: tech_support, troubleshooting, it

        
        RESPONSE FORMAT:
        Return ONLY the numeric ID of the most relevant prompt, or 'none' if none match.
        Example: "42" or "none"
        
        YOUR RESPONSE (ID only):
2025-09-03 14:15:09,703 - prompt_manager.app.crud.crud - INFO - Initializing GROQ client...
2025-09-03 14:15:09,713 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-09-03 14:15:09,719 - httpx - DEBUG - load_verify_locations cafile='/Applications/anaconda3/lib/python3.11/site-packages/certifi/cacert.pem'
2025-09-03 14:15:09,742 - prompt_manager.app.crud.crud - INFO - Sending request to GROQ API...
2025-09-03 14:15:09,743 - groq._base_client - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'Your task is to analyze the user\'s input and select the most relevant prompt ID from the provided list.\n        \n        Instructions:\n        1. Carefully read the user\'s input.\n        2. Review all available prompts, focusing on their content, description, and tags.\n        3. Select the single most relevant prompt ID that best matches the user\'s intent.\n        4. Return ONLY the numeric ID of the selected prompt, with no other text or explanation.\n        5. If no prompt is relevant, return \'none\'.\n        \n        Example responses:\n        - For a match: "42"\n        - For no match: "none"\n        '}, {'role': 'user', 'content': 'USER INPUT:\n        I\'m feeling really stressed and anxious today\n        \n        AVAILABLE PROMPTS (ID, Name, Content Preview):\n        \nID: 28 | Name: marketing\nPreview: Testing\nTags: testing\n\nID: 31 | Name: test_live_version_sync\nPreview: Second version content\nTags: test\n\nID: 33 | Name: debug_live_test\nPreview: Debug content v2\nTags: debug\n\nID: 37 | Name: test_active_validation\nPreview: First version\nTags: test\n\nID: 38 | Name: test_auto_status\nPreview: Testing auto status\nTags: test\n\nID: 40 | Name: test_constraint\nPreview: First active version\nTags: test\n\nID: 43 | Name: endpoint_test\nPreview: Updated final test\nTags: test\n\nID: 45 | Name: final_test\nPreview: Final test\n\nID: 49 | Name: full_test_prompt\nPreview: Initial content for the full test.\nTags: testing, full-flow\n\nID: 55 | Name: lifecycle_test_final\nPreview: Lifecycle test v2.0.0\nTags: lifecycle\n\nID: 62 | Name: code\nPreview: Update for Debugger\nTags: suggestion\n\nID: 69 | Name: Healthcare assistant\nPreview: Just for checking\nTags: wellbeing\n\nID: 80 | Name: mental_health_support\nPreview: You are a compassionate mental health support assistant. Provide empathetic and supportive responses...\nTags: mental_health, support, wellbeing\n\nID: 81 | Name: coding_assistant\nPreview: You are an expert programming assistant. Help users with coding questions, algorithm design, debuggi...\nTags: programming, coding, algorithms\n\nID: 82 | Name: cooking_assistant\nPreview: You are a professional chef and cooking instructor. Provide detailed recipes, cooking tips, and tech...\nTags: cooking, recipes, baking\n\nID: 83 | Name: tech_support\nPreview: You are a technical support specialist. Help users troubleshoot hardware, software, and network issu...\nTags: tech_support, troubleshooting, it\n\n        \n        RESPONSE FORMAT:\n        Return ONLY the numeric ID of the most relevant prompt, or \'none\' if none match.\n        Example: "42" or "none"\n        \n        YOUR RESPONSE (ID only):'}], 'model': 'llama-3.1-8b-instant', 'max_tokens': 10, 'temperature': 0.3}}
2025-09-03 14:15:10,118 - httpcore.connection - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-09-03 14:15:10,228 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x118b554d0>
2025-09-03 14:15:10,228 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x118a15910> server_hostname='api.groq.com' timeout=5.0
2025-09-03 14:15:10,285 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1184f9350>
2025-09-03 14:15:10,285 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-03 14:15:10,285 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-09-03 14:15:10,286 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-03 14:15:10,286 - httpcore.http11 - DEBUG - send_request_body.complete
2025-09-03 14:15:10,286 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-03 14:15:10,472 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 03 Sep 2025 08:45:10 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Content-Encoding', b'br'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'bom'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'5350'), (b'x-ratelimit-reset-requests', b'6s'), (b'x-ratelimit-reset-tokens', b'6.5s'), (b'x-request-id', b'req_01k47c0ntfftktw9sekqmp43as'), (b'via', b'1.1 google'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=6bZSCGc7mhRPNQrDJ_cr_Sz1fXECYnqedzV7JDKuAWk-1756889110-1.0.1.1-91XNdu48092ZGhxuevoHD5ZI11TJFsGZ8qd5Pc.dtDGoe8clAHa.ag_NoOyhCHhZkdJ6v3zsr.PK6FDyYazbulF0GuSRxJuc30505.x78AQ; path=/; expires=Wed, 03-Sep-25 09:15:10 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9793f82b5eaa3ab1-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-03 14:15:10,473 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 14:15:10,474 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-03 14:15:10,475 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-09-03 14:15:10,475 - httpcore.http11 - DEBUG - response_closed.started
2025-09-03 14:15:10,475 - httpcore.http11 - DEBUG - response_closed.complete
2025-09-03 14:15:10,475 - groq._base_client - DEBUG - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
2025-09-03 14:15:10,476 - prompt_manager.app.crud.crud - INFO - Received response from GROQ API
2025-09-03 14:15:10,476 - prompt_manager.app.crud.crud - DEBUG - GROQ API response: ChatCompletion(choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChoiceMessage(content='80', role='assistant', tool_calls=None))], id='chatcmpl-3671a7bf-f774-49e3-b777-b49e3891443c', created=1756889110, model='llama-3.1-8b-instant', object='chat.completion', system_fingerprint='fp_2115512ff6', usage=Usage(completion_time=0.003924509, completion_tokens=2, prompt_time=0.043196777, prompt_tokens=644, total_time=0.047121286, total_tokens=646, queue_time=0.048657853), usage_breakdown=None, x_groq={'id': 'req_01k47c0ntfftktw9sekqmp43as'}, service_tier='on_demand')
2025-09-03 14:15:10,476 - prompt_manager.app.crud.crud - INFO - LLM raw response: 80 for input: I'm feeling really stressed and anxious today
2025-09-03 14:15:10,476 - prompt_manager.app.crud.crud - INFO - Extracted prompt ID: 80
2025-09-03 14:15:10,478 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.id = ? AND prompts.status = ? AND prompts.is_active = 1
 LIMIT ? OFFSET ?
2025-09-03 14:15:10,478 - sqlalchemy.engine.Engine - INFO - [generated in 0.00019s] (80, 'active', 1, 0)
2025-09-03 14:15:10,478 - prompt_manager.app.crud.crud - INFO - Valid active prompt found: ID=80, Name=mental_health_support
2025-09-03 14:15:10,479 - prompt_manager.app.api.v1.api - INFO - Testing persona for prompt ID 80 (user: admin@example.com)
2025-09-03 14:15:10,479 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.id = ?
 LIMIT ? OFFSET ?
2025-09-03 14:15:10,479 - sqlalchemy.engine.Engine - INFO - [generated in 0.00017s] (80, 1, 0)
2025-09-03 14:15:10,480 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-09-03 14:15:10,480 - httpx - DEBUG - load_verify_locations cafile='/Applications/anaconda3/lib/python3.11/site-packages/certifi/cacert.pem'
2025-09-03 14:15:10,498 - groq._base_client - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a compassionate mental health support assistant. Provide empathetic and supportive responses to users who may be experiencing stress, anxiety, or other mental health concerns. Offer helpful coping strategies and encourage professional help when appropriate.'}, {'role': 'user', 'content': "I'm feeling really stressed and anxious today"}], 'model': 'llama-3.1-8b-instant', 'max_tokens': 1000, 'temperature': 0.7}}
2025-09-03 14:15:10,498 - httpcore.connection - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-09-03 14:15:10,540 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x118b838d0>
2025-09-03 14:15:10,540 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x118a157f0> server_hostname='api.groq.com' timeout=5.0
2025-09-03 14:15:10,591 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x118b83990>
2025-09-03 14:15:10,591 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-03 14:15:10,591 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-09-03 14:15:10,591 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-03 14:15:10,591 - httpcore.http11 - DEBUG - send_request_body.complete
2025-09-03 14:15:10,591 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-03 14:15:11,253 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 03 Sep 2025 08:45:11 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Content-Encoding', b'br'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'bom'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14398'), (b'x-ratelimit-remaining-tokens', b'5287'), (b'x-ratelimit-reset-requests', b'11.689s'), (b'x-ratelimit-reset-tokens', b'7.126s'), (b'x-request-id', b'req_01k47c0p46ew593y92ma1dx9vg'), (b'via', b'1.1 google'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=3gJwXETzqakOZtkjfiIGfV31LAXrlJF8wTcjnIsQ1Qw-1756889111-1.0.1.1-o6JhuIaMawIUxCaGuvAEZt7N.ygMh5sy67tzfegLwKzl3Pi5Sp8Ob5pO9qRBM7HoW2dnsrhq_0oCXXjuEYH9APY.yI1SbMj.UR8RpEqe2aM; path=/; expires=Wed, 03-Sep-25 09:15:11 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9793f82d4d983e0a-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-03 14:15:11,254 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 14:15:11,254 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-03 14:15:11,254 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-09-03 14:15:11,254 - httpcore.http11 - DEBUG - response_closed.started
2025-09-03 14:15:11,254 - httpcore.http11 - DEBUG - response_closed.complete
2025-09-03 14:15:11,255 - groq._base_client - DEBUG - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
2025-09-03 14:15:11,256 - prompt_manager.app.api.v1.api - INFO - Generated persona response for prompt 'mental_health_support' with persona type 'dynamic_persona'
2025-09-03 14:15:11,256 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/test-persona Status: 200 Time: 1560.52ms
2025-09-03 14:15:11,257 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 14:15:11,257 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 14:15:11,257 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 14:15:11,257 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 14:15:11,258 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 14:15:11,259 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-03 14:15:11,259 - multipart.multipart - DEBUG - Calling on_field_start with no data
2025-09-03 14:15:11,259 - multipart.multipart - DEBUG - Calling on_field_name with data[0:8]
2025-09-03 14:15:11,259 - multipart.multipart - DEBUG - Calling on_field_data with data[9:28]
2025-09-03 14:15:11,259 - multipart.multipart - DEBUG - Calling on_field_end with no data
2025-09-03 14:15:11,259 - multipart.multipart - DEBUG - Calling on_field_start with no data
2025-09-03 14:15:11,260 - multipart.multipart - DEBUG - Calling on_field_name with data[29:37]
2025-09-03 14:15:11,260 - multipart.multipart - DEBUG - Calling on_field_data with data[38:46]
2025-09-03 14:15:11,260 - multipart.multipart - DEBUG - Calling on_field_end with no data
2025-09-03 14:15:11,260 - multipart.multipart - DEBUG - Calling on_end with no data
2025-09-03 14:15:11,260 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 14:15:11,260 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 14:15:11,260 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 14:15:11,260 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 14:15:11,261 - sqlalchemy.engine.Engine - INFO - [cached since 1.945s ago] ('admin@example.com', 1, 0)
2025-09-03 14:15:11,622 - prompt_manager.app.api.v1.endpoints.auth - INFO - Created access token for user: admin@example.com
2025-09-03 14:15:11,623 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 200 Time: 363.92ms
2025-09-03 14:15:11,623 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 14:15:11,623 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 14:15:11,623 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 14:15:11,623 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 14:15:11,625 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/test-persona
2025-09-03 14:15:11,625 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 14:15:11,625 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 14:15:11,625 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 14:15:11,625 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 14:15:11,625 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 14:15:11,625 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 14:15:11,625 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 14:15:11,625 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 14:15:11,625 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 08:45:11+00:00 (UTC)
2025-09-03 14:15:11,626 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 14:15:11,626 - prompt_manager.app.core.security - INFO - Looking up user with email: admin@example.com
2025-09-03 14:15:11,626 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 14:15:11,626 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 14:15:11,626 - sqlalchemy.engine.Engine - INFO - [cached since 2.31s ago] ('admin@example.com', 1, 0)
2025-09-03 14:15:11,626 - prompt_manager.app.core.security - INFO - Found user: admin@example.com (ID: 26)
2025-09-03 14:15:11,626 - prompt_manager.app.api.v1.api - INFO - Testing persona with automatic prompt selection (user: admin@example.com)
2025-09-03 14:15:11,626 - prompt_manager.app.crud.crud - INFO - Finding most relevant prompt for input: How do I implement a binary search in Python?
2025-09-03 14:15:11,626 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 14:15:11,626 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.status = ? AND prompts.is_active = 1
2025-09-03 14:15:11,626 - sqlalchemy.engine.Engine - INFO - [cached since 1.927s ago] ('active',)
2025-09-03 14:15:11,627 - prompt_manager.app.crud.crud - INFO - Found 16 active prompts in the database
2025-09-03 14:15:11,627 - prompt_manager.app.crud.crud - INFO - Active prompt 1: ID=28, Name=marketing, Status=active, is_active=True
2025-09-03 14:15:11,627 - prompt_manager.app.crud.crud - INFO - Active prompt 2: ID=31, Name=test_live_version_sync, Status=active, is_active=True
2025-09-03 14:15:11,627 - prompt_manager.app.crud.crud - INFO - Active prompt 3: ID=33, Name=debug_live_test, Status=active, is_active=True
2025-09-03 14:15:11,627 - prompt_manager.app.crud.crud - INFO - Active prompt 4: ID=37, Name=test_active_validation, Status=active, is_active=True
2025-09-03 14:15:11,627 - prompt_manager.app.crud.crud - INFO - Active prompt 5: ID=38, Name=test_auto_status, Status=active, is_active=True
2025-09-03 14:15:11,627 - prompt_manager.app.crud.crud - INFO - Active prompt 6: ID=40, Name=test_constraint, Status=active, is_active=True
2025-09-03 14:15:11,627 - prompt_manager.app.crud.crud - INFO - Active prompt 7: ID=43, Name=endpoint_test, Status=active, is_active=True
2025-09-03 14:15:11,627 - prompt_manager.app.crud.crud - INFO - Active prompt 8: ID=45, Name=final_test, Status=active, is_active=True
2025-09-03 14:15:11,627 - prompt_manager.app.crud.crud - INFO - Active prompt 9: ID=49, Name=full_test_prompt, Status=active, is_active=True
2025-09-03 14:15:11,627 - prompt_manager.app.crud.crud - INFO - Active prompt 10: ID=55, Name=lifecycle_test_final, Status=active, is_active=True
2025-09-03 14:15:11,627 - prompt_manager.app.crud.crud - INFO - Active prompt 11: ID=62, Name=code, Status=active, is_active=True
2025-09-03 14:15:11,627 - prompt_manager.app.crud.crud - INFO - Active prompt 12: ID=69, Name=Healthcare assistant, Status=active, is_active=True
2025-09-03 14:15:11,627 - prompt_manager.app.crud.crud - INFO - Active prompt 13: ID=80, Name=mental_health_support, Status=active, is_active=True
2025-09-03 14:15:11,627 - prompt_manager.app.crud.crud - INFO - Active prompt 14: ID=81, Name=coding_assistant, Status=active, is_active=True
2025-09-03 14:15:11,627 - prompt_manager.app.crud.crud - INFO - Active prompt 15: ID=82, Name=cooking_assistant, Status=active, is_active=True
2025-09-03 14:15:11,627 - prompt_manager.app.crud.crud - INFO - Active prompt 16: ID=83, Name=tech_support, Status=active, is_active=True
2025-09-03 14:15:11,627 - prompt_manager.app.crud.crud - INFO - Sending 16 prompts to LLM for analysis
2025-09-03 14:15:11,627 - prompt_manager.app.crud.crud - DEBUG - System prompt: Your task is to analyze the user's input and select the most relevant prompt ID from the provided list.
        
        Instructions:
        1. Carefully read the user's input.
        2. Review all available prompts, focusing on their content, description, and tags.
        3. Select the single most relevant prompt ID that best matches the user's intent.
        4. Return ONLY the numeric ID of the selected prompt, with no other text or explanation.
        5. If no prompt is relevant, return 'none'.
        
        Example responses:
        - For a match: "42"
        - For no match: "none"
        
2025-09-03 14:15:11,627 - prompt_manager.app.crud.crud - DEBUG - User message: USER INPUT:
        How do I implement a binary search in Python?
        
        AVAILABLE PROMPTS (ID, Name, Content Preview):
        
ID: 28 | Name: marketing
Preview: Testing
Tags: testing

ID: 31 | Name: test_live_version_sync
Preview: Second version content
Tags: test

ID: 33 | Name: debug_live_test
Preview: Debug content v2
Tags: debug

ID: 37 | Name: test_active_validation
Preview: First version
Tags: test

ID: 38 | Name: test_auto_status
Preview: Testing auto status
Tags: test

ID: 40 | Name: test_constraint
Preview: First active version
Tags: test

ID: 43 | Name: endpoint_test
Preview: Updated final test
Tags: test

ID: 45 | Name: final_test
Preview: Final test

ID: 49 | Name: full_test_prompt
Preview: Initial content for the full test.
Tags: testing, full-flow

ID: 55 | Name: lifecycle_test_final
Preview: Lifecycle test v2.0.0
Tags: lifecycle

ID: 62 | Name: code
Preview: Update for Debugger
Tags: suggestion

ID: 69 | Name: Healthcare assistant
Preview: Just for checking
Tags: wellbeing

ID: 80 | Name: mental_health_support
Preview: You are a compassionate mental health support assistant. Provide empathetic and supportive responses...
Tags: mental_health, support, wellbeing

ID: 81 | Name: coding_assistant
Preview: You are an expert programming assistant. Help users with coding questions, algorithm design, debuggi...
Tags: programming, coding, algorithms

ID: 82 | Name: cooking_assistant
Preview: You are a professional chef and cooking instructor. Provide detailed recipes, cooking tips, and tech...
Tags: cooking, recipes, baking

ID: 83 | Name: tech_support
Preview: You are a technical support specialist. Help users troubleshoot hardware, software, and network issu...
Tags: tech_support, troubleshooting, it

        
        RESPONSE FORMAT:
        Return ONLY the numeric ID of the most relevant prompt, or 'none' if none match.
        Example: "42" or "none"
        
        YOUR RESPONSE (ID only):
2025-09-03 14:15:11,627 - prompt_manager.app.crud.crud - INFO - Initializing GROQ client...
2025-09-03 14:15:11,628 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-09-03 14:15:11,628 - httpx - DEBUG - load_verify_locations cafile='/Applications/anaconda3/lib/python3.11/site-packages/certifi/cacert.pem'
2025-09-03 14:15:11,646 - prompt_manager.app.crud.crud - INFO - Sending request to GROQ API...
2025-09-03 14:15:11,646 - groq._base_client - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'Your task is to analyze the user\'s input and select the most relevant prompt ID from the provided list.\n        \n        Instructions:\n        1. Carefully read the user\'s input.\n        2. Review all available prompts, focusing on their content, description, and tags.\n        3. Select the single most relevant prompt ID that best matches the user\'s intent.\n        4. Return ONLY the numeric ID of the selected prompt, with no other text or explanation.\n        5. If no prompt is relevant, return \'none\'.\n        \n        Example responses:\n        - For a match: "42"\n        - For no match: "none"\n        '}, {'role': 'user', 'content': 'USER INPUT:\n        How do I implement a binary search in Python?\n        \n        AVAILABLE PROMPTS (ID, Name, Content Preview):\n        \nID: 28 | Name: marketing\nPreview: Testing\nTags: testing\n\nID: 31 | Name: test_live_version_sync\nPreview: Second version content\nTags: test\n\nID: 33 | Name: debug_live_test\nPreview: Debug content v2\nTags: debug\n\nID: 37 | Name: test_active_validation\nPreview: First version\nTags: test\n\nID: 38 | Name: test_auto_status\nPreview: Testing auto status\nTags: test\n\nID: 40 | Name: test_constraint\nPreview: First active version\nTags: test\n\nID: 43 | Name: endpoint_test\nPreview: Updated final test\nTags: test\n\nID: 45 | Name: final_test\nPreview: Final test\n\nID: 49 | Name: full_test_prompt\nPreview: Initial content for the full test.\nTags: testing, full-flow\n\nID: 55 | Name: lifecycle_test_final\nPreview: Lifecycle test v2.0.0\nTags: lifecycle\n\nID: 62 | Name: code\nPreview: Update for Debugger\nTags: suggestion\n\nID: 69 | Name: Healthcare assistant\nPreview: Just for checking\nTags: wellbeing\n\nID: 80 | Name: mental_health_support\nPreview: You are a compassionate mental health support assistant. Provide empathetic and supportive responses...\nTags: mental_health, support, wellbeing\n\nID: 81 | Name: coding_assistant\nPreview: You are an expert programming assistant. Help users with coding questions, algorithm design, debuggi...\nTags: programming, coding, algorithms\n\nID: 82 | Name: cooking_assistant\nPreview: You are a professional chef and cooking instructor. Provide detailed recipes, cooking tips, and tech...\nTags: cooking, recipes, baking\n\nID: 83 | Name: tech_support\nPreview: You are a technical support specialist. Help users troubleshoot hardware, software, and network issu...\nTags: tech_support, troubleshooting, it\n\n        \n        RESPONSE FORMAT:\n        Return ONLY the numeric ID of the most relevant prompt, or \'none\' if none match.\n        Example: "42" or "none"\n        \n        YOUR RESPONSE (ID only):'}], 'model': 'llama-3.1-8b-instant', 'max_tokens': 10, 'temperature': 0.3}}
2025-09-03 14:15:11,647 - httpcore.connection - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-09-03 14:15:11,686 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1183f3e90>
2025-09-03 14:15:11,686 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x118a16840> server_hostname='api.groq.com' timeout=5.0
2025-09-03 14:15:11,730 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x118b4de10>
2025-09-03 14:15:11,730 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-03 14:15:11,730 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-09-03 14:15:11,730 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-03 14:15:11,730 - httpcore.http11 - DEBUG - send_request_body.complete
2025-09-03 14:15:11,730 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-03 14:15:11,935 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 03 Sep 2025 08:45:11 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Content-Encoding', b'br'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'bom'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14397'), (b'x-ratelimit-remaining-tokens', b'4377'), (b'x-ratelimit-reset-requests', b'16.872999999s'), (b'x-ratelimit-reset-tokens', b'16.228s'), (b'x-request-id', b'req_01k47c0q7de9as5a0dkgw4hhqz'), (b'via', b'1.1 google'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=wBaePAOQtLaGsfgMQhJoiZHtJbD._mdOVKe5RXzcm4U-1756889111-1.0.1.1-zWcO86cUJN2LOJTmVhD9noBRitp58PGOcKhLz8unMGLxM4PYHR1q0xAA3jkL4Fvt2IoC9g0OTjxkpTHpa7Qx9OTjZeVO7w_CEDZkk7Bv5nk; path=/; expires=Wed, 03-Sep-25 09:15:11 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9793f8346ec0002c-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-03 14:15:11,935 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 14:15:11,935 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-03 14:15:11,935 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-09-03 14:15:11,935 - httpcore.http11 - DEBUG - response_closed.started
2025-09-03 14:15:11,935 - httpcore.http11 - DEBUG - response_closed.complete
2025-09-03 14:15:11,935 - groq._base_client - DEBUG - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
2025-09-03 14:15:11,936 - prompt_manager.app.crud.crud - INFO - Received response from GROQ API
2025-09-03 14:15:11,936 - prompt_manager.app.crud.crud - DEBUG - GROQ API response: ChatCompletion(choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChoiceMessage(content='none', role='assistant', tool_calls=None))], id='chatcmpl-2ca5b731-fe7f-4d23-bc11-7fa022f6129d', created=1756889111, model='llama-3.1-8b-instant', object='chat.completion', system_fingerprint='fp_c40956ddc4', usage=Usage(completion_time=1.2e-07, completion_tokens=2, prompt_time=0.088368057, prompt_tokens=646, total_time=0.088368177, total_tokens=648, queue_time=0.047540913), usage_breakdown=None, x_groq={'id': 'req_01k47c0q7de9as5a0dkgw4hhqz'}, service_tier='on_demand')
2025-09-03 14:15:11,936 - prompt_manager.app.crud.crud - INFO - LLM raw response: none for input: How do I implement a binary search in Python?
2025-09-03 14:15:11,936 - prompt_manager.app.crud.crud - WARNING - No numeric ID found in LLM response: none
2025-09-03 14:15:11,936 - prompt_manager.app.database - ERROR - Error in database session: 
2025-09-03 14:15:11,936 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 14:15:11,936 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 14:15:11,937 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 14:15:11,937 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 14:15:11,937 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/test-persona Status: 404 Time: 312.34ms
2025-09-03 14:15:11,939 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-03 14:15:11,939 - multipart.multipart - DEBUG - Calling on_field_start with no data
2025-09-03 14:15:11,939 - multipart.multipart - DEBUG - Calling on_field_name with data[0:8]
2025-09-03 14:15:11,939 - multipart.multipart - DEBUG - Calling on_field_data with data[9:28]
2025-09-03 14:15:11,939 - multipart.multipart - DEBUG - Calling on_field_end with no data
2025-09-03 14:15:11,939 - multipart.multipart - DEBUG - Calling on_field_start with no data
2025-09-03 14:15:11,939 - multipart.multipart - DEBUG - Calling on_field_name with data[29:37]
2025-09-03 14:15:11,939 - multipart.multipart - DEBUG - Calling on_field_data with data[38:46]
2025-09-03 14:15:11,939 - multipart.multipart - DEBUG - Calling on_field_end with no data
2025-09-03 14:15:11,939 - multipart.multipart - DEBUG - Calling on_end with no data
2025-09-03 14:15:11,939 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 14:15:11,939 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 14:15:11,940 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 14:15:11,940 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 14:15:11,940 - sqlalchemy.engine.Engine - INFO - [cached since 2.624s ago] ('admin@example.com', 1, 0)
2025-09-03 14:15:12,200 - prompt_manager.app.api.v1.endpoints.auth - INFO - Created access token for user: admin@example.com
2025-09-03 14:15:12,201 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 200 Time: 261.97ms
2025-09-03 14:15:12,201 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 14:15:12,201 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 14:15:12,201 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 14:15:12,202 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 14:15:12,203 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/test-persona
2025-09-03 14:15:12,204 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 14:15:12,204 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 14:15:12,204 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 14:15:12,204 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 14:15:12,204 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 14:15:12,204 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 14:15:12,204 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 14:15:12,204 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 14:15:12,204 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 08:45:12+00:00 (UTC)
2025-09-03 14:15:12,204 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 14:15:12,204 - prompt_manager.app.core.security - INFO - Looking up user with email: admin@example.com
2025-09-03 14:15:12,204 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 14:15:12,204 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 14:15:12,204 - sqlalchemy.engine.Engine - INFO - [cached since 2.889s ago] ('admin@example.com', 1, 0)
2025-09-03 14:15:12,205 - prompt_manager.app.core.security - INFO - Found user: admin@example.com (ID: 26)
2025-09-03 14:15:12,205 - prompt_manager.app.api.v1.api - INFO - Testing persona with automatic prompt selection (user: admin@example.com)
2025-09-03 14:15:12,205 - prompt_manager.app.crud.crud - INFO - Finding most relevant prompt for input: What's the best way to bake a chocolate cake?
2025-09-03 14:15:12,205 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 14:15:12,205 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.status = ? AND prompts.is_active = 1
2025-09-03 14:15:12,205 - sqlalchemy.engine.Engine - INFO - [cached since 2.506s ago] ('active',)
2025-09-03 14:15:12,205 - prompt_manager.app.crud.crud - INFO - Found 16 active prompts in the database
2025-09-03 14:15:12,205 - prompt_manager.app.crud.crud - INFO - Active prompt 1: ID=28, Name=marketing, Status=active, is_active=True
2025-09-03 14:15:12,205 - prompt_manager.app.crud.crud - INFO - Active prompt 2: ID=31, Name=test_live_version_sync, Status=active, is_active=True
2025-09-03 14:15:12,205 - prompt_manager.app.crud.crud - INFO - Active prompt 3: ID=33, Name=debug_live_test, Status=active, is_active=True
2025-09-03 14:15:12,205 - prompt_manager.app.crud.crud - INFO - Active prompt 4: ID=37, Name=test_active_validation, Status=active, is_active=True
2025-09-03 14:15:12,205 - prompt_manager.app.crud.crud - INFO - Active prompt 5: ID=38, Name=test_auto_status, Status=active, is_active=True
2025-09-03 14:15:12,205 - prompt_manager.app.crud.crud - INFO - Active prompt 6: ID=40, Name=test_constraint, Status=active, is_active=True
2025-09-03 14:15:12,205 - prompt_manager.app.crud.crud - INFO - Active prompt 7: ID=43, Name=endpoint_test, Status=active, is_active=True
2025-09-03 14:15:12,205 - prompt_manager.app.crud.crud - INFO - Active prompt 8: ID=45, Name=final_test, Status=active, is_active=True
2025-09-03 14:15:12,205 - prompt_manager.app.crud.crud - INFO - Active prompt 9: ID=49, Name=full_test_prompt, Status=active, is_active=True
2025-09-03 14:15:12,205 - prompt_manager.app.crud.crud - INFO - Active prompt 10: ID=55, Name=lifecycle_test_final, Status=active, is_active=True
2025-09-03 14:15:12,206 - prompt_manager.app.crud.crud - INFO - Active prompt 11: ID=62, Name=code, Status=active, is_active=True
2025-09-03 14:15:12,206 - prompt_manager.app.crud.crud - INFO - Active prompt 12: ID=69, Name=Healthcare assistant, Status=active, is_active=True
2025-09-03 14:15:12,206 - prompt_manager.app.crud.crud - INFO - Active prompt 13: ID=80, Name=mental_health_support, Status=active, is_active=True
2025-09-03 14:15:12,206 - prompt_manager.app.crud.crud - INFO - Active prompt 14: ID=81, Name=coding_assistant, Status=active, is_active=True
2025-09-03 14:15:12,206 - prompt_manager.app.crud.crud - INFO - Active prompt 15: ID=82, Name=cooking_assistant, Status=active, is_active=True
2025-09-03 14:15:12,206 - prompt_manager.app.crud.crud - INFO - Active prompt 16: ID=83, Name=tech_support, Status=active, is_active=True
2025-09-03 14:15:12,206 - prompt_manager.app.crud.crud - INFO - Sending 16 prompts to LLM for analysis
2025-09-03 14:15:12,206 - prompt_manager.app.crud.crud - DEBUG - System prompt: Your task is to analyze the user's input and select the most relevant prompt ID from the provided list.
        
        Instructions:
        1. Carefully read the user's input.
        2. Review all available prompts, focusing on their content, description, and tags.
        3. Select the single most relevant prompt ID that best matches the user's intent.
        4. Return ONLY the numeric ID of the selected prompt, with no other text or explanation.
        5. If no prompt is relevant, return 'none'.
        
        Example responses:
        - For a match: "42"
        - For no match: "none"
        
2025-09-03 14:15:12,206 - prompt_manager.app.crud.crud - DEBUG - User message: USER INPUT:
        What's the best way to bake a chocolate cake?
        
        AVAILABLE PROMPTS (ID, Name, Content Preview):
        
ID: 28 | Name: marketing
Preview: Testing
Tags: testing

ID: 31 | Name: test_live_version_sync
Preview: Second version content
Tags: test

ID: 33 | Name: debug_live_test
Preview: Debug content v2
Tags: debug

ID: 37 | Name: test_active_validation
Preview: First version
Tags: test

ID: 38 | Name: test_auto_status
Preview: Testing auto status
Tags: test

ID: 40 | Name: test_constraint
Preview: First active version
Tags: test

ID: 43 | Name: endpoint_test
Preview: Updated final test
Tags: test

ID: 45 | Name: final_test
Preview: Final test

ID: 49 | Name: full_test_prompt
Preview: Initial content for the full test.
Tags: testing, full-flow

ID: 55 | Name: lifecycle_test_final
Preview: Lifecycle test v2.0.0
Tags: lifecycle

ID: 62 | Name: code
Preview: Update for Debugger
Tags: suggestion

ID: 69 | Name: Healthcare assistant
Preview: Just for checking
Tags: wellbeing

ID: 80 | Name: mental_health_support
Preview: You are a compassionate mental health support assistant. Provide empathetic and supportive responses...
Tags: mental_health, support, wellbeing

ID: 81 | Name: coding_assistant
Preview: You are an expert programming assistant. Help users with coding questions, algorithm design, debuggi...
Tags: programming, coding, algorithms

ID: 82 | Name: cooking_assistant
Preview: You are a professional chef and cooking instructor. Provide detailed recipes, cooking tips, and tech...
Tags: cooking, recipes, baking

ID: 83 | Name: tech_support
Preview: You are a technical support specialist. Help users troubleshoot hardware, software, and network issu...
Tags: tech_support, troubleshooting, it

        
        RESPONSE FORMAT:
        Return ONLY the numeric ID of the most relevant prompt, or 'none' if none match.
        Example: "42" or "none"
        
        YOUR RESPONSE (ID only):
2025-09-03 14:15:12,206 - prompt_manager.app.crud.crud - INFO - Initializing GROQ client...
2025-09-03 14:15:12,206 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-09-03 14:15:12,207 - httpx - DEBUG - load_verify_locations cafile='/Applications/anaconda3/lib/python3.11/site-packages/certifi/cacert.pem'
2025-09-03 14:15:12,224 - prompt_manager.app.crud.crud - INFO - Sending request to GROQ API...
2025-09-03 14:15:12,225 - groq._base_client - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'Your task is to analyze the user\'s input and select the most relevant prompt ID from the provided list.\n        \n        Instructions:\n        1. Carefully read the user\'s input.\n        2. Review all available prompts, focusing on their content, description, and tags.\n        3. Select the single most relevant prompt ID that best matches the user\'s intent.\n        4. Return ONLY the numeric ID of the selected prompt, with no other text or explanation.\n        5. If no prompt is relevant, return \'none\'.\n        \n        Example responses:\n        - For a match: "42"\n        - For no match: "none"\n        '}, {'role': 'user', 'content': 'USER INPUT:\n        What\'s the best way to bake a chocolate cake?\n        \n        AVAILABLE PROMPTS (ID, Name, Content Preview):\n        \nID: 28 | Name: marketing\nPreview: Testing\nTags: testing\n\nID: 31 | Name: test_live_version_sync\nPreview: Second version content\nTags: test\n\nID: 33 | Name: debug_live_test\nPreview: Debug content v2\nTags: debug\n\nID: 37 | Name: test_active_validation\nPreview: First version\nTags: test\n\nID: 38 | Name: test_auto_status\nPreview: Testing auto status\nTags: test\n\nID: 40 | Name: test_constraint\nPreview: First active version\nTags: test\n\nID: 43 | Name: endpoint_test\nPreview: Updated final test\nTags: test\n\nID: 45 | Name: final_test\nPreview: Final test\n\nID: 49 | Name: full_test_prompt\nPreview: Initial content for the full test.\nTags: testing, full-flow\n\nID: 55 | Name: lifecycle_test_final\nPreview: Lifecycle test v2.0.0\nTags: lifecycle\n\nID: 62 | Name: code\nPreview: Update for Debugger\nTags: suggestion\n\nID: 69 | Name: Healthcare assistant\nPreview: Just for checking\nTags: wellbeing\n\nID: 80 | Name: mental_health_support\nPreview: You are a compassionate mental health support assistant. Provide empathetic and supportive responses...\nTags: mental_health, support, wellbeing\n\nID: 81 | Name: coding_assistant\nPreview: You are an expert programming assistant. Help users with coding questions, algorithm design, debuggi...\nTags: programming, coding, algorithms\n\nID: 82 | Name: cooking_assistant\nPreview: You are a professional chef and cooking instructor. Provide detailed recipes, cooking tips, and tech...\nTags: cooking, recipes, baking\n\nID: 83 | Name: tech_support\nPreview: You are a technical support specialist. Help users troubleshoot hardware, software, and network issu...\nTags: tech_support, troubleshooting, it\n\n        \n        RESPONSE FORMAT:\n        Return ONLY the numeric ID of the most relevant prompt, or \'none\' if none match.\n        Example: "42" or "none"\n        \n        YOUR RESPONSE (ID only):'}], 'model': 'llama-3.1-8b-instant', 'max_tokens': 10, 'temperature': 0.3}}
2025-09-03 14:15:12,225 - httpcore.connection - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-09-03 14:15:12,267 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x118b9b850>
2025-09-03 14:15:12,268 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x118a16a80> server_hostname='api.groq.com' timeout=5.0
2025-09-03 14:15:12,331 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x118b9b8d0>
2025-09-03 14:15:12,331 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-03 14:15:12,332 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-09-03 14:15:12,332 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-03 14:15:12,332 - httpcore.http11 - DEBUG - send_request_body.complete
2025-09-03 14:15:12,332 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-03 14:15:12,552 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 03 Sep 2025 08:45:12 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Content-Encoding', b'br'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'bom'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14396'), (b'x-ratelimit-remaining-tokens', b'3790'), (b'x-ratelimit-reset-requests', b'23.38s'), (b'x-ratelimit-reset-tokens', b'22.096999999s'), (b'x-request-id', b'req_01k47c0qtsew79sntsa77k1qzc'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=3UTzHG9DsjzqfjLBAs5El1m_MGfrMK99Ma6AMj7vRHw-1756889112-1.0.1.1-xZSDfOrckz8p4xBceEvVw6Aua7afyqAdF4L2.9ciVgSCKIE78ZanCI0WKU98dctRiUb47wgBAMUxmGDvWmGbEo7gq4WficQ8iOL39cxRSVg; path=/; expires=Wed, 03-Sep-25 09:15:12 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9793f8383c5df3bc-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-03 14:15:12,553 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 14:15:12,553 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-03 14:15:12,553 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-09-03 14:15:12,553 - httpcore.http11 - DEBUG - response_closed.started
2025-09-03 14:15:12,554 - httpcore.http11 - DEBUG - response_closed.complete
2025-09-03 14:15:12,554 - groq._base_client - DEBUG - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
2025-09-03 14:15:12,555 - prompt_manager.app.crud.crud - INFO - Received response from GROQ API
2025-09-03 14:15:12,555 - prompt_manager.app.crud.crud - DEBUG - GROQ API response: ChatCompletion(choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChoiceMessage(content='82', role='assistant', tool_calls=None))], id='chatcmpl-b84bb107-462b-4383-8764-e207bbc95b96', created=1756889112, model='llama-3.1-8b-instant', object='chat.completion', system_fingerprint='fp_7083106d2c', usage=Usage(completion_time=0.003784032, completion_tokens=2, prompt_time=0.044812114, prompt_tokens=647, total_time=0.048596146, total_tokens=649, queue_time=0.046689086), usage_breakdown=None, x_groq={'id': 'req_01k47c0qtsew79sntsa77k1qzc'}, service_tier='on_demand')
2025-09-03 14:15:12,555 - prompt_manager.app.crud.crud - INFO - LLM raw response: 82 for input: What's the best way to bake a chocolate cake?
2025-09-03 14:15:12,555 - prompt_manager.app.crud.crud - INFO - Extracted prompt ID: 82
2025-09-03 14:15:12,556 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.id = ? AND prompts.status = ? AND prompts.is_active = 1
 LIMIT ? OFFSET ?
2025-09-03 14:15:12,557 - sqlalchemy.engine.Engine - INFO - [cached since 2.079s ago] (82, 'active', 1, 0)
2025-09-03 14:15:12,557 - prompt_manager.app.crud.crud - INFO - Valid active prompt found: ID=82, Name=cooking_assistant
2025-09-03 14:15:12,557 - prompt_manager.app.api.v1.api - INFO - Testing persona for prompt ID 82 (user: admin@example.com)
2025-09-03 14:15:12,558 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.id = ?
 LIMIT ? OFFSET ?
2025-09-03 14:15:12,559 - sqlalchemy.engine.Engine - INFO - [cached since 2.08s ago] (82, 1, 0)
2025-09-03 14:15:12,559 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-09-03 14:15:12,560 - httpx - DEBUG - load_verify_locations cafile='/Applications/anaconda3/lib/python3.11/site-packages/certifi/cacert.pem'
2025-09-03 14:15:12,578 - groq._base_client - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a professional chef and cooking instructor. Provide detailed recipes, cooking tips, and techniques. Help users with meal planning, ingredient substitutions, and troubleshooting cooking problems.'}, {'role': 'user', 'content': "What's the best way to bake a chocolate cake?"}], 'model': 'llama-3.1-8b-instant', 'max_tokens': 1000, 'temperature': 0.7}}
2025-09-03 14:15:12,579 - httpcore.connection - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-09-03 14:15:12,621 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x118bab250>
2025-09-03 14:15:12,621 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x1186b2690> server_hostname='api.groq.com' timeout=5.0
2025-09-03 14:15:12,663 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x118bab110>
2025-09-03 14:15:12,663 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-03 14:15:12,663 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-09-03 14:15:12,663 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-03 14:15:12,663 - httpcore.http11 - DEBUG - send_request_body.complete
2025-09-03 14:15:12,663 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-03 14:15:13,734 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 03 Sep 2025 08:45:13 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Content-Encoding', b'br'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'bom'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14395'), (b'x-ratelimit-remaining-tokens', b'3751'), (b'x-ratelimit-reset-requests', b'29.682s'), (b'x-ratelimit-reset-tokens', b'22.489s'), (b'x-request-id', b'req_01k47c0r4se9asxyt2q372q9x8'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=YJXy_Or1V8y1h8y0RRgSBavJxBjPkuP9sliJmotXDHc-1756889113-1.0.1.1-7q03cjT.HG7e6ODgv7fQFElDAaMkX3AFZ8x2FkR6cG2MFFvhHFOOOxFBM.TL5iK_3yUGEyLDtpO_iqs9j_rHAsFo_AWps6Jr6notJi2my1c; path=/; expires=Wed, 03-Sep-25 09:15:13 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9793f83a49dc77ba-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-03 14:15:13,736 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 14:15:13,736 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-03 14:15:13,736 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-09-03 14:15:13,736 - httpcore.http11 - DEBUG - response_closed.started
2025-09-03 14:15:13,736 - httpcore.http11 - DEBUG - response_closed.complete
2025-09-03 14:15:13,736 - groq._base_client - DEBUG - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
2025-09-03 14:15:13,738 - prompt_manager.app.api.v1.api - INFO - Generated persona response for prompt 'cooking_assistant' with persona type 'dynamic_persona'
2025-09-03 14:15:13,738 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/test-persona Status: 200 Time: 1534.93ms
2025-09-03 14:15:13,738 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 14:15:13,738 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 14:15:13,739 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 14:15:13,739 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 14:15:13,739 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 14:15:13,740 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-03 14:15:13,740 - multipart.multipart - DEBUG - Calling on_field_start with no data
2025-09-03 14:15:13,740 - multipart.multipart - DEBUG - Calling on_field_name with data[0:8]
2025-09-03 14:15:13,740 - multipart.multipart - DEBUG - Calling on_field_data with data[9:28]
2025-09-03 14:15:13,740 - multipart.multipart - DEBUG - Calling on_field_end with no data
2025-09-03 14:15:13,740 - multipart.multipart - DEBUG - Calling on_field_start with no data
2025-09-03 14:15:13,740 - multipart.multipart - DEBUG - Calling on_field_name with data[29:37]
2025-09-03 14:15:13,740 - multipart.multipart - DEBUG - Calling on_field_data with data[38:46]
2025-09-03 14:15:13,741 - multipart.multipart - DEBUG - Calling on_field_end with no data
2025-09-03 14:15:13,741 - multipart.multipart - DEBUG - Calling on_end with no data
2025-09-03 14:15:13,741 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 14:15:13,741 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 14:15:13,741 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 14:15:13,741 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 14:15:13,741 - sqlalchemy.engine.Engine - INFO - [cached since 4.426s ago] ('admin@example.com', 1, 0)
2025-09-03 14:15:13,742 - httpcore.connection - DEBUG - close.started
2025-09-03 14:15:13,742 - httpcore.connection - DEBUG - close.complete
2025-09-03 14:15:14,105 - prompt_manager.app.api.v1.endpoints.auth - INFO - Created access token for user: admin@example.com
2025-09-03 14:15:14,105 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 200 Time: 365.2ms
2025-09-03 14:15:14,106 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 14:15:14,106 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 14:15:14,106 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 14:15:14,106 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 14:15:14,107 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/test-persona
2025-09-03 14:15:14,107 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 14:15:14,107 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 14:15:14,108 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 14:15:14,108 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 14:15:14,108 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 14:15:14,108 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 14:15:14,108 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 14:15:14,108 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 14:15:14,108 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 08:45:14+00:00 (UTC)
2025-09-03 14:15:14,108 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 14:15:14,108 - prompt_manager.app.core.security - INFO - Looking up user with email: admin@example.com
2025-09-03 14:15:14,108 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 14:15:14,108 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 14:15:14,108 - sqlalchemy.engine.Engine - INFO - [cached since 4.792s ago] ('admin@example.com', 1, 0)
2025-09-03 14:15:14,108 - prompt_manager.app.core.security - INFO - Found user: admin@example.com (ID: 26)
2025-09-03 14:15:14,108 - prompt_manager.app.api.v1.api - INFO - Testing persona with automatic prompt selection (user: admin@example.com)
2025-09-03 14:15:14,108 - prompt_manager.app.crud.crud - INFO - Finding most relevant prompt for input: I'm having trouble with my internet connection
2025-09-03 14:15:14,108 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 14:15:14,109 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.status = ? AND prompts.is_active = 1
2025-09-03 14:15:14,109 - sqlalchemy.engine.Engine - INFO - [cached since 4.41s ago] ('active',)
2025-09-03 14:15:14,109 - prompt_manager.app.crud.crud - INFO - Found 16 active prompts in the database
2025-09-03 14:15:14,109 - prompt_manager.app.crud.crud - INFO - Active prompt 1: ID=28, Name=marketing, Status=active, is_active=True
2025-09-03 14:15:14,109 - prompt_manager.app.crud.crud - INFO - Active prompt 2: ID=31, Name=test_live_version_sync, Status=active, is_active=True
2025-09-03 14:15:14,109 - prompt_manager.app.crud.crud - INFO - Active prompt 3: ID=33, Name=debug_live_test, Status=active, is_active=True
2025-09-03 14:15:14,109 - prompt_manager.app.crud.crud - INFO - Active prompt 4: ID=37, Name=test_active_validation, Status=active, is_active=True
2025-09-03 14:15:14,109 - prompt_manager.app.crud.crud - INFO - Active prompt 5: ID=38, Name=test_auto_status, Status=active, is_active=True
2025-09-03 14:15:14,109 - prompt_manager.app.crud.crud - INFO - Active prompt 6: ID=40, Name=test_constraint, Status=active, is_active=True
2025-09-03 14:15:14,109 - prompt_manager.app.crud.crud - INFO - Active prompt 7: ID=43, Name=endpoint_test, Status=active, is_active=True
2025-09-03 14:15:14,109 - prompt_manager.app.crud.crud - INFO - Active prompt 8: ID=45, Name=final_test, Status=active, is_active=True
2025-09-03 14:15:14,109 - prompt_manager.app.crud.crud - INFO - Active prompt 9: ID=49, Name=full_test_prompt, Status=active, is_active=True
2025-09-03 14:15:14,109 - prompt_manager.app.crud.crud - INFO - Active prompt 10: ID=55, Name=lifecycle_test_final, Status=active, is_active=True
2025-09-03 14:15:14,109 - prompt_manager.app.crud.crud - INFO - Active prompt 11: ID=62, Name=code, Status=active, is_active=True
2025-09-03 14:15:14,109 - prompt_manager.app.crud.crud - INFO - Active prompt 12: ID=69, Name=Healthcare assistant, Status=active, is_active=True
2025-09-03 14:15:14,109 - prompt_manager.app.crud.crud - INFO - Active prompt 13: ID=80, Name=mental_health_support, Status=active, is_active=True
2025-09-03 14:15:14,109 - prompt_manager.app.crud.crud - INFO - Active prompt 14: ID=81, Name=coding_assistant, Status=active, is_active=True
2025-09-03 14:15:14,109 - prompt_manager.app.crud.crud - INFO - Active prompt 15: ID=82, Name=cooking_assistant, Status=active, is_active=True
2025-09-03 14:15:14,109 - prompt_manager.app.crud.crud - INFO - Active prompt 16: ID=83, Name=tech_support, Status=active, is_active=True
2025-09-03 14:15:14,109 - prompt_manager.app.crud.crud - INFO - Sending 16 prompts to LLM for analysis
2025-09-03 14:15:14,109 - prompt_manager.app.crud.crud - DEBUG - System prompt: Your task is to analyze the user's input and select the most relevant prompt ID from the provided list.
        
        Instructions:
        1. Carefully read the user's input.
        2. Review all available prompts, focusing on their content, description, and tags.
        3. Select the single most relevant prompt ID that best matches the user's intent.
        4. Return ONLY the numeric ID of the selected prompt, with no other text or explanation.
        5. If no prompt is relevant, return 'none'.
        
        Example responses:
        - For a match: "42"
        - For no match: "none"
        
2025-09-03 14:15:14,109 - prompt_manager.app.crud.crud - DEBUG - User message: USER INPUT:
        I'm having trouble with my internet connection
        
        AVAILABLE PROMPTS (ID, Name, Content Preview):
        
ID: 28 | Name: marketing
Preview: Testing
Tags: testing

ID: 31 | Name: test_live_version_sync
Preview: Second version content
Tags: test

ID: 33 | Name: debug_live_test
Preview: Debug content v2
Tags: debug

ID: 37 | Name: test_active_validation
Preview: First version
Tags: test

ID: 38 | Name: test_auto_status
Preview: Testing auto status
Tags: test

ID: 40 | Name: test_constraint
Preview: First active version
Tags: test

ID: 43 | Name: endpoint_test
Preview: Updated final test
Tags: test

ID: 45 | Name: final_test
Preview: Final test

ID: 49 | Name: full_test_prompt
Preview: Initial content for the full test.
Tags: testing, full-flow

ID: 55 | Name: lifecycle_test_final
Preview: Lifecycle test v2.0.0
Tags: lifecycle

ID: 62 | Name: code
Preview: Update for Debugger
Tags: suggestion

ID: 69 | Name: Healthcare assistant
Preview: Just for checking
Tags: wellbeing

ID: 80 | Name: mental_health_support
Preview: You are a compassionate mental health support assistant. Provide empathetic and supportive responses...
Tags: mental_health, support, wellbeing

ID: 81 | Name: coding_assistant
Preview: You are an expert programming assistant. Help users with coding questions, algorithm design, debuggi...
Tags: programming, coding, algorithms

ID: 82 | Name: cooking_assistant
Preview: You are a professional chef and cooking instructor. Provide detailed recipes, cooking tips, and tech...
Tags: cooking, recipes, baking

ID: 83 | Name: tech_support
Preview: You are a technical support specialist. Help users troubleshoot hardware, software, and network issu...
Tags: tech_support, troubleshooting, it

        
        RESPONSE FORMAT:
        Return ONLY the numeric ID of the most relevant prompt, or 'none' if none match.
        Example: "42" or "none"
        
        YOUR RESPONSE (ID only):
2025-09-03 14:15:14,110 - prompt_manager.app.crud.crud - INFO - Initializing GROQ client...
2025-09-03 14:15:14,111 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-09-03 14:15:14,111 - httpx - DEBUG - load_verify_locations cafile='/Applications/anaconda3/lib/python3.11/site-packages/certifi/cacert.pem'
2025-09-03 14:15:14,131 - prompt_manager.app.crud.crud - INFO - Sending request to GROQ API...
2025-09-03 14:15:14,132 - groq._base_client - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'Your task is to analyze the user\'s input and select the most relevant prompt ID from the provided list.\n        \n        Instructions:\n        1. Carefully read the user\'s input.\n        2. Review all available prompts, focusing on their content, description, and tags.\n        3. Select the single most relevant prompt ID that best matches the user\'s intent.\n        4. Return ONLY the numeric ID of the selected prompt, with no other text or explanation.\n        5. If no prompt is relevant, return \'none\'.\n        \n        Example responses:\n        - For a match: "42"\n        - For no match: "none"\n        '}, {'role': 'user', 'content': 'USER INPUT:\n        I\'m having trouble with my internet connection\n        \n        AVAILABLE PROMPTS (ID, Name, Content Preview):\n        \nID: 28 | Name: marketing\nPreview: Testing\nTags: testing\n\nID: 31 | Name: test_live_version_sync\nPreview: Second version content\nTags: test\n\nID: 33 | Name: debug_live_test\nPreview: Debug content v2\nTags: debug\n\nID: 37 | Name: test_active_validation\nPreview: First version\nTags: test\n\nID: 38 | Name: test_auto_status\nPreview: Testing auto status\nTags: test\n\nID: 40 | Name: test_constraint\nPreview: First active version\nTags: test\n\nID: 43 | Name: endpoint_test\nPreview: Updated final test\nTags: test\n\nID: 45 | Name: final_test\nPreview: Final test\n\nID: 49 | Name: full_test_prompt\nPreview: Initial content for the full test.\nTags: testing, full-flow\n\nID: 55 | Name: lifecycle_test_final\nPreview: Lifecycle test v2.0.0\nTags: lifecycle\n\nID: 62 | Name: code\nPreview: Update for Debugger\nTags: suggestion\n\nID: 69 | Name: Healthcare assistant\nPreview: Just for checking\nTags: wellbeing\n\nID: 80 | Name: mental_health_support\nPreview: You are a compassionate mental health support assistant. Provide empathetic and supportive responses...\nTags: mental_health, support, wellbeing\n\nID: 81 | Name: coding_assistant\nPreview: You are an expert programming assistant. Help users with coding questions, algorithm design, debuggi...\nTags: programming, coding, algorithms\n\nID: 82 | Name: cooking_assistant\nPreview: You are a professional chef and cooking instructor. Provide detailed recipes, cooking tips, and tech...\nTags: cooking, recipes, baking\n\nID: 83 | Name: tech_support\nPreview: You are a technical support specialist. Help users troubleshoot hardware, software, and network issu...\nTags: tech_support, troubleshooting, it\n\n        \n        RESPONSE FORMAT:\n        Return ONLY the numeric ID of the most relevant prompt, or \'none\' if none match.\n        Example: "42" or "none"\n        \n        YOUR RESPONSE (ID only):'}], 'model': 'llama-3.1-8b-instant', 'max_tokens': 10, 'temperature': 0.3}}
2025-09-03 14:15:14,132 - httpcore.connection - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-09-03 14:15:14,180 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x118ba8050>
2025-09-03 14:15:14,181 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x118a16c30> server_hostname='api.groq.com' timeout=5.0
2025-09-03 14:15:14,225 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x118babd50>
2025-09-03 14:15:14,225 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-03 14:15:14,225 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-09-03 14:15:14,225 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-03 14:15:14,225 - httpcore.http11 - DEBUG - send_request_body.complete
2025-09-03 14:15:14,225 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-03 14:15:14,427 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 03 Sep 2025 08:45:14 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Content-Encoding', b'br'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'bom'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14394'), (b'x-ratelimit-remaining-tokens', b'2428'), (b'x-ratelimit-reset-requests', b'34.423999999s'), (b'x-ratelimit-reset-tokens', b'35.714s'), (b'x-request-id', b'req_01k47c0sp0ew78vzzpedn5qsgz'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=Whd_o465XuSGDtLKa.trrkZPOxICc_5VymPNJDcDkLA-1756889114-1.0.1.1-IAuhR20cm.6bDsKM2iHUijfghIgr2nsaPUHuTedxMTXl5OeZZJuGgWh6PiaUGIXxsALUg6GrDfQTAXS3xnVBPQ9zKHYurMjdhs1V1hqOH3E; path=/; expires=Wed, 03-Sep-25 09:15:14 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9793f8440ffa3193-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-03 14:15:14,428 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 14:15:14,428 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-03 14:15:14,428 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-09-03 14:15:14,428 - httpcore.http11 - DEBUG - response_closed.started
2025-09-03 14:15:14,428 - httpcore.http11 - DEBUG - response_closed.complete
2025-09-03 14:15:14,428 - groq._base_client - DEBUG - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
2025-09-03 14:15:14,429 - prompt_manager.app.crud.crud - INFO - Received response from GROQ API
2025-09-03 14:15:14,429 - prompt_manager.app.crud.crud - DEBUG - GROQ API response: ChatCompletion(choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChoiceMessage(content='none', role='assistant', tool_calls=None))], id='chatcmpl-5854c612-d2af-41fb-9200-6f8d12f7663b', created=1756889114, model='llama-3.1-8b-instant', object='chat.completion', system_fingerprint='fp_c40956ddc4', usage=Usage(completion_time=0.003790825, completion_tokens=2, prompt_time=0.0472824, prompt_tokens=644, total_time=0.051073225, total_tokens=646, queue_time=0.044184009), usage_breakdown=None, x_groq={'id': 'req_01k47c0sp0ew78vzzpedn5qsgz'}, service_tier='on_demand')
2025-09-03 14:15:14,429 - prompt_manager.app.crud.crud - INFO - LLM raw response: none for input: I'm having trouble with my internet connection
2025-09-03 14:15:14,429 - prompt_manager.app.crud.crud - WARNING - No numeric ID found in LLM response: none
2025-09-03 14:15:14,429 - prompt_manager.app.database - ERROR - Error in database session: 
2025-09-03 14:15:14,429 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 14:15:14,429 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 14:15:14,429 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 14:15:14,430 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 14:15:14,430 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/test-persona Status: 404 Time: 322.8ms
2025-09-03 14:16:35,889 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 14:16:35,947 - httpcore.connection - DEBUG - close.started
2025-09-03 14:16:35,948 - httpcore.connection - DEBUG - close.complete
2025-09-03 14:16:35,948 - httpcore.connection - DEBUG - close.started
2025-09-03 14:16:35,948 - httpcore.connection - DEBUG - close.complete
2025-09-03 14:16:35,948 - httpcore.connection - DEBUG - close.started
2025-09-03 14:16:35,948 - httpcore.connection - DEBUG - close.complete
2025-09-03 14:16:35,948 - httpcore.connection - DEBUG - close.started
2025-09-03 14:16:35,948 - httpcore.connection - DEBUG - close.complete
2025-09-03 14:16:35,948 - httpcore.connection - DEBUG - close.started
2025-09-03 14:16:35,948 - httpcore.connection - DEBUG - close.complete
2025-09-03 14:16:37,069 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 14:16:37,069 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("users")
2025-09-03 14:16:37,070 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 14:16:37,070 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("prompts")
2025-09-03 14:16:37,070 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 14:16:37,070 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("prompt_history")
2025-09-03 14:16:37,070 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 14:16:37,070 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-09-03 14:16:37,092 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 14:16:37,092 - prompt_manager.app.main - INFO - Log level: DEBUG
2025-09-03 14:16:37,092 - prompt_manager.app.main - INFO - Database URL: sqlite:////Users/prisha/Desktop/Coding/system prompt/prompts.db
2025-09-03 14:16:48,015 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 14:17:00,477 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 14:17:00,477 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("users")
2025-09-03 14:17:00,477 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 14:17:00,479 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("prompts")
2025-09-03 14:17:00,479 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 14:17:00,480 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("prompt_history")
2025-09-03 14:17:00,480 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 14:17:00,480 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-09-03 14:17:00,507 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 14:17:00,507 - prompt_manager.app.main - INFO - Log level: DEBUG
2025-09-03 14:17:00,507 - prompt_manager.app.main - INFO - Database URL: sqlite:////Users/prisha/Desktop/Coding/system prompt/prompts.db
2025-09-03 14:17:25,298 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-03 14:17:25,300 - multipart.multipart - DEBUG - Calling on_field_start with no data
2025-09-03 14:17:25,300 - multipart.multipart - DEBUG - Calling on_field_name with data[0:8]
2025-09-03 14:17:25,300 - multipart.multipart - DEBUG - Calling on_field_data with data[9:28]
2025-09-03 14:17:25,300 - multipart.multipart - DEBUG - Calling on_field_end with no data
2025-09-03 14:17:25,300 - multipart.multipart - DEBUG - Calling on_field_start with no data
2025-09-03 14:17:25,300 - multipart.multipart - DEBUG - Calling on_field_name with data[29:37]
2025-09-03 14:17:25,300 - multipart.multipart - DEBUG - Calling on_field_data with data[38:46]
2025-09-03 14:17:25,301 - multipart.multipart - DEBUG - Calling on_field_end with no data
2025-09-03 14:17:25,301 - multipart.multipart - DEBUG - Calling on_end with no data
2025-09-03 14:17:25,303 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 14:17:25,304 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 14:17:25,310 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 14:17:25,312 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 14:17:25,312 - sqlalchemy.engine.Engine - INFO - [generated in 0.00014s] ('admin@example.com', 1, 0)
2025-09-03 14:17:25,314 - passlib.handlers.bcrypt - DEBUG - detected 'bcrypt' backend, version '4.0.1'
2025-09-03 14:17:25,314 - passlib.handlers.bcrypt - DEBUG - 'bcrypt' backend lacks $2$ support, enabling workaround
2025-09-03 14:17:25,598 - prompt_manager.app.api.v1.endpoints.auth - INFO - Created access token for user: admin@example.com
2025-09-03 14:17:25,602 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 200 Time: 303.47ms
2025-09-03 14:17:25,602 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 14:17:25,602 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 14:17:25,603 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 14:17:25,603 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 14:17:25,604 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/test-persona
2025-09-03 14:17:25,605 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 14:17:25,605 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 14:17:25,605 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 14:17:25,605 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 14:17:25,605 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 14:17:25,605 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 14:17:25,605 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 14:17:25,605 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 14:17:25,605 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 08:47:25+00:00 (UTC)
2025-09-03 14:17:25,605 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 14:17:25,605 - prompt_manager.app.core.security - INFO - Looking up user with email: admin@example.com
2025-09-03 14:17:25,605 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 14:17:25,605 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 14:17:25,606 - sqlalchemy.engine.Engine - INFO - [cached since 0.2935s ago] ('admin@example.com', 1, 0)
2025-09-03 14:17:25,606 - prompt_manager.app.core.security - INFO - Found user: admin@example.com (ID: 26)
2025-09-03 14:17:25,606 - prompt_manager.app.api.v1.api - INFO - Testing persona with automatic prompt selection (user: admin@example.com)
2025-09-03 14:17:25,606 - prompt_manager.app.crud.crud - INFO - Finding most relevant prompt for input: I'm feeling really stressed and anxious today
2025-09-03 14:17:25,606 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 14:17:25,607 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.status = ? AND prompts.is_active = 1
2025-09-03 14:17:25,607 - sqlalchemy.engine.Engine - INFO - [generated in 0.00035s] ('active',)
2025-09-03 14:17:25,608 - prompt_manager.app.crud.crud - INFO - Found 16 active prompts in the database
2025-09-03 14:17:25,608 - prompt_manager.app.crud.crud - INFO - Active prompt 1: ID=28, Name=marketing, Status=active, is_active=True
2025-09-03 14:17:25,608 - prompt_manager.app.crud.crud - INFO - Active prompt 2: ID=31, Name=test_live_version_sync, Status=active, is_active=True
2025-09-03 14:17:25,608 - prompt_manager.app.crud.crud - INFO - Active prompt 3: ID=33, Name=debug_live_test, Status=active, is_active=True
2025-09-03 14:17:25,608 - prompt_manager.app.crud.crud - INFO - Active prompt 4: ID=37, Name=test_active_validation, Status=active, is_active=True
2025-09-03 14:17:25,608 - prompt_manager.app.crud.crud - INFO - Active prompt 5: ID=38, Name=test_auto_status, Status=active, is_active=True
2025-09-03 14:17:25,608 - prompt_manager.app.crud.crud - INFO - Active prompt 6: ID=40, Name=test_constraint, Status=active, is_active=True
2025-09-03 14:17:25,608 - prompt_manager.app.crud.crud - INFO - Active prompt 7: ID=43, Name=endpoint_test, Status=active, is_active=True
2025-09-03 14:17:25,608 - prompt_manager.app.crud.crud - INFO - Active prompt 8: ID=45, Name=final_test, Status=active, is_active=True
2025-09-03 14:17:25,608 - prompt_manager.app.crud.crud - INFO - Active prompt 9: ID=49, Name=full_test_prompt, Status=active, is_active=True
2025-09-03 14:17:25,609 - prompt_manager.app.crud.crud - INFO - Active prompt 10: ID=55, Name=lifecycle_test_final, Status=active, is_active=True
2025-09-03 14:17:25,609 - prompt_manager.app.crud.crud - INFO - Active prompt 11: ID=62, Name=code, Status=active, is_active=True
2025-09-03 14:17:25,609 - prompt_manager.app.crud.crud - INFO - Active prompt 12: ID=69, Name=Healthcare assistant, Status=active, is_active=True
2025-09-03 14:17:25,609 - prompt_manager.app.crud.crud - INFO - Active prompt 13: ID=80, Name=mental_health_support, Status=active, is_active=True
2025-09-03 14:17:25,609 - prompt_manager.app.crud.crud - INFO - Active prompt 14: ID=81, Name=coding_assistant, Status=active, is_active=True
2025-09-03 14:17:25,609 - prompt_manager.app.crud.crud - INFO - Active prompt 15: ID=82, Name=cooking_assistant, Status=active, is_active=True
2025-09-03 14:17:25,609 - prompt_manager.app.crud.crud - INFO - Active prompt 16: ID=83, Name=tech_support, Status=active, is_active=True
2025-09-03 14:17:25,609 - prompt_manager.app.crud.crud - INFO - Sending 16 prompts to LLM for analysis
2025-09-03 14:17:25,609 - prompt_manager.app.crud.crud - DEBUG - System prompt: You are an expert at matching user queries to the most appropriate system prompt. 
        Your goal is to analyze the user's input and select the single most relevant prompt ID from the provided list.
        
        MATCHING GUIDELINES:
        1. For coding/technical questions (Python, algorithms, programming), choose the coding assistant prompt.
        2. For internet/connection/tech issues, choose the tech support prompt.
        3. For mental health/stress/anxiety concerns, choose the mental health support prompt.
        4. For cooking/recipes/food questions, choose the cooking assistant prompt.
        
        INSTRUCTIONS:
        1. Carefully read the user's input and identify the main topic/domain.
        2. Review all available prompts and their metadata (name, tags, content preview).
        3. Select the prompt that best matches the user's intent and domain.
        4. Consider both the content and the context of the query.
        5. If the query is ambiguous but could match multiple domains, choose the most likely one.
        
        RESPONSE FORMAT:
        - Return ONLY the numeric ID of the selected prompt (e.g., "42").
        - If no prompt is relevant, return "none".
        - DO NOT include any other text or explanation in your response.
        
        IMPORTANT: Focus on the user's intent and choose the most appropriate prompt, even if the match isn't perfect.
        
2025-09-03 14:17:25,609 - prompt_manager.app.crud.crud - DEBUG - User message: USER INPUT:
        I'm feeling really stressed and anxious today
        
        AVAILABLE PROMPTS (ID, Name, Content Preview):
        
ID: 28 | Name: marketing
Preview: Testing
Tags: testing

ID: 31 | Name: test_live_version_sync
Preview: Second version content
Tags: test

ID: 33 | Name: debug_live_test
Preview: Debug content v2
Tags: debug

ID: 37 | Name: test_active_validation
Preview: First version
Tags: test

ID: 38 | Name: test_auto_status
Preview: Testing auto status
Tags: test

ID: 40 | Name: test_constraint
Preview: First active version
Tags: test

ID: 43 | Name: endpoint_test
Preview: Updated final test
Tags: test

ID: 45 | Name: final_test
Preview: Final test

ID: 49 | Name: full_test_prompt
Preview: Initial content for the full test.
Tags: testing, full-flow

ID: 55 | Name: lifecycle_test_final
Preview: Lifecycle test v2.0.0
Tags: lifecycle

ID: 62 | Name: code
Preview: Update for Debugger
Tags: suggestion

ID: 69 | Name: Healthcare assistant
Preview: Just for checking
Tags: wellbeing

ID: 80 | Name: mental_health_support
Preview: You are a compassionate mental health support assistant. Provide empathetic and supportive responses...
Tags: mental_health, support, wellbeing

ID: 81 | Name: coding_assistant
Preview: You are an expert programming assistant. Help users with coding questions, algorithm design, debuggi...
Tags: programming, coding, algorithms

ID: 82 | Name: cooking_assistant
Preview: You are a professional chef and cooking instructor. Provide detailed recipes, cooking tips, and tech...
Tags: cooking, recipes, baking

ID: 83 | Name: tech_support
Preview: You are a technical support specialist. Help users troubleshoot hardware, software, and network issu...
Tags: tech_support, troubleshooting, it

        
        RESPONSE FORMAT:
        Return ONLY the numeric ID of the most relevant prompt, or 'none' if none match.
        Example: "42" or "none"
        
        YOUR RESPONSE (ID only):
2025-09-03 14:17:25,609 - prompt_manager.app.crud.crud - INFO - Initializing GROQ client...
2025-09-03 14:17:25,615 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-09-03 14:17:25,616 - httpx - DEBUG - load_verify_locations cafile='/Applications/anaconda3/lib/python3.11/site-packages/certifi/cacert.pem'
2025-09-03 14:17:25,634 - prompt_manager.app.crud.crud - INFO - Sending request to GROQ API...
2025-09-03 14:17:25,636 - groq._base_client - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an expert at matching user queries to the most appropriate system prompt. \n        Your goal is to analyze the user\'s input and select the single most relevant prompt ID from the provided list.\n        \n        MATCHING GUIDELINES:\n        1. For coding/technical questions (Python, algorithms, programming), choose the coding assistant prompt.\n        2. For internet/connection/tech issues, choose the tech support prompt.\n        3. For mental health/stress/anxiety concerns, choose the mental health support prompt.\n        4. For cooking/recipes/food questions, choose the cooking assistant prompt.\n        \n        INSTRUCTIONS:\n        1. Carefully read the user\'s input and identify the main topic/domain.\n        2. Review all available prompts and their metadata (name, tags, content preview).\n        3. Select the prompt that best matches the user\'s intent and domain.\n        4. Consider both the content and the context of the query.\n        5. If the query is ambiguous but could match multiple domains, choose the most likely one.\n        \n        RESPONSE FORMAT:\n        - Return ONLY the numeric ID of the selected prompt (e.g., "42").\n        - If no prompt is relevant, return "none".\n        - DO NOT include any other text or explanation in your response.\n        \n        IMPORTANT: Focus on the user\'s intent and choose the most appropriate prompt, even if the match isn\'t perfect.\n        '}, {'role': 'user', 'content': 'USER INPUT:\n        I\'m feeling really stressed and anxious today\n        \n        AVAILABLE PROMPTS (ID, Name, Content Preview):\n        \nID: 28 | Name: marketing\nPreview: Testing\nTags: testing\n\nID: 31 | Name: test_live_version_sync\nPreview: Second version content\nTags: test\n\nID: 33 | Name: debug_live_test\nPreview: Debug content v2\nTags: debug\n\nID: 37 | Name: test_active_validation\nPreview: First version\nTags: test\n\nID: 38 | Name: test_auto_status\nPreview: Testing auto status\nTags: test\n\nID: 40 | Name: test_constraint\nPreview: First active version\nTags: test\n\nID: 43 | Name: endpoint_test\nPreview: Updated final test\nTags: test\n\nID: 45 | Name: final_test\nPreview: Final test\n\nID: 49 | Name: full_test_prompt\nPreview: Initial content for the full test.\nTags: testing, full-flow\n\nID: 55 | Name: lifecycle_test_final\nPreview: Lifecycle test v2.0.0\nTags: lifecycle\n\nID: 62 | Name: code\nPreview: Update for Debugger\nTags: suggestion\n\nID: 69 | Name: Healthcare assistant\nPreview: Just for checking\nTags: wellbeing\n\nID: 80 | Name: mental_health_support\nPreview: You are a compassionate mental health support assistant. Provide empathetic and supportive responses...\nTags: mental_health, support, wellbeing\n\nID: 81 | Name: coding_assistant\nPreview: You are an expert programming assistant. Help users with coding questions, algorithm design, debuggi...\nTags: programming, coding, algorithms\n\nID: 82 | Name: cooking_assistant\nPreview: You are a professional chef and cooking instructor. Provide detailed recipes, cooking tips, and tech...\nTags: cooking, recipes, baking\n\nID: 83 | Name: tech_support\nPreview: You are a technical support specialist. Help users troubleshoot hardware, software, and network issu...\nTags: tech_support, troubleshooting, it\n\n        \n        RESPONSE FORMAT:\n        Return ONLY the numeric ID of the most relevant prompt, or \'none\' if none match.\n        Example: "42" or "none"\n        \n        YOUR RESPONSE (ID only):'}], 'model': 'llama-3.1-8b-instant', 'max_tokens': 10, 'temperature': 0.3}}
2025-09-03 14:17:25,702 - httpcore.connection - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-09-03 14:17:25,819 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10aa95610>
2025-09-03 14:17:25,819 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x10ad15910> server_hostname='api.groq.com' timeout=5.0
2025-09-03 14:17:25,865 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10af7a4d0>
2025-09-03 14:17:25,866 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-03 14:17:25,866 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-09-03 14:17:25,866 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-03 14:17:25,866 - httpcore.http11 - DEBUG - send_request_body.complete
2025-09-03 14:17:25,866 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-03 14:17:26,237 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 03 Sep 2025 08:47:26 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Content-Encoding', b'br'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'bom'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'5148'), (b'x-ratelimit-reset-requests', b'6s'), (b'x-ratelimit-reset-tokens', b'8.52s'), (b'x-request-id', b'req_01k47c4t75exxv1cmgbbnr7pmw'), (b'via', b'1.1 google'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=9d1E8dLWxkPi5Qe7vkGZLJ.f9n2nPbAb_DyFCC2SUR4-1756889246-1.0.1.1-Vu7e9MG_Wo2jrD9TTm8ldF4iH8Jotj50lwHK3JV2ZyOVO5dKBjw0PqW16sOJklfxGiT7aqgZJTqFv_N0L1pYweAYiQ1n5UXNSrpJFOImC2A; path=/; expires=Wed, 03-Sep-25 09:17:26 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9793fb7ac8afd4bc-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-03 14:17:26,238 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 14:17:26,238 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-03 14:17:26,239 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-09-03 14:17:26,239 - httpcore.http11 - DEBUG - response_closed.started
2025-09-03 14:17:26,239 - httpcore.http11 - DEBUG - response_closed.complete
2025-09-03 14:17:26,239 - groq._base_client - DEBUG - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
2025-09-03 14:17:26,241 - prompt_manager.app.crud.crud - INFO - Received response from GROQ API
2025-09-03 14:17:26,241 - prompt_manager.app.crud.crud - DEBUG - GROQ API response: ChatCompletion(choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChoiceMessage(content='80', role='assistant', tool_calls=None))], id='chatcmpl-845ea484-0472-4936-b82a-4ae4888e7f9c', created=1756889246, model='llama-3.1-8b-instant', object='chat.completion', system_fingerprint='fp_c40956ddc4', usage=Usage(completion_time=0.003799295, completion_tokens=2, prompt_time=0.058352482, prompt_tokens=804, total_time=0.062151777, total_tokens=806, queue_time=0.048261368), usage_breakdown=None, x_groq={'id': 'req_01k47c4t75exxv1cmgbbnr7pmw'}, service_tier='on_demand')
2025-09-03 14:17:26,241 - prompt_manager.app.crud.crud - INFO - LLM raw response: 80 for input: I'm feeling really stressed and anxious today
2025-09-03 14:17:26,241 - prompt_manager.app.crud.crud - INFO - Extracted prompt ID: 80
2025-09-03 14:17:26,243 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.id = ? AND prompts.status = ? AND prompts.is_active = 1
 LIMIT ? OFFSET ?
2025-09-03 14:17:26,243 - sqlalchemy.engine.Engine - INFO - [generated in 0.00020s] (80, 'active', 1, 0)
2025-09-03 14:17:26,243 - prompt_manager.app.crud.crud - INFO - Valid active prompt found: ID=80, Name=mental_health_support
2025-09-03 14:17:26,244 - prompt_manager.app.api.v1.api - INFO - Testing persona for prompt ID 80 (user: admin@example.com)
2025-09-03 14:17:26,244 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.id = ?
 LIMIT ? OFFSET ?
2025-09-03 14:17:26,245 - sqlalchemy.engine.Engine - INFO - [generated in 0.00045s] (80, 1, 0)
2025-09-03 14:17:26,246 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-09-03 14:17:26,247 - httpx - DEBUG - load_verify_locations cafile='/Applications/anaconda3/lib/python3.11/site-packages/certifi/cacert.pem'
2025-09-03 14:17:26,266 - groq._base_client - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a compassionate mental health support assistant. Provide empathetic and supportive responses to users who may be experiencing stress, anxiety, or other mental health concerns. Offer helpful coping strategies and encourage professional help when appropriate.'}, {'role': 'user', 'content': "I'm feeling really stressed and anxious today"}], 'model': 'llama-3.1-8b-instant', 'max_tokens': 1000, 'temperature': 0.7}}
2025-09-03 14:17:26,266 - httpcore.connection - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-09-03 14:17:26,308 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10af83d90>
2025-09-03 14:17:26,309 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x10ad157f0> server_hostname='api.groq.com' timeout=5.0
2025-09-03 14:17:26,353 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10af83e50>
2025-09-03 14:17:26,353 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-03 14:17:26,353 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-09-03 14:17:26,353 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-03 14:17:26,354 - httpcore.http11 - DEBUG - send_request_body.complete
2025-09-03 14:17:26,354 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-03 14:17:26,978 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 03 Sep 2025 08:47:26 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Content-Encoding', b'br'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'bom'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14398'), (b'x-ratelimit-remaining-tokens', b'5148'), (b'x-ratelimit-reset-requests', b'11.467s'), (b'x-ratelimit-reset-tokens', b'8.52s'), (b'x-request-id', b'req_01k47c4tqtexxrcmgde6dfbz4t'), (b'via', b'1.1 google'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=CqMtBZyY.5gMfs5OiJytU1AZSAql8s5o2ZXDQcWwwfA-1756889246-1.0.1.1-MCWIlMcIt7MILbbj4WjHRSr1wkqGBjjULsDlnME9qnM8AdNP_usyCZv1pjY9eTFPT7TYy8DumJestkBxibMR3GxPsb_DMd9ghHoOyGS.8JY; path=/; expires=Wed, 03-Sep-25 09:17:26 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9793fb7dcdf13bd4-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-03 14:17:26,979 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 14:17:26,979 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-03 14:17:26,982 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-09-03 14:17:26,982 - httpcore.http11 - DEBUG - response_closed.started
2025-09-03 14:17:26,982 - httpcore.http11 - DEBUG - response_closed.complete
2025-09-03 14:17:26,982 - groq._base_client - DEBUG - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
2025-09-03 14:17:26,983 - prompt_manager.app.api.v1.api - INFO - Generated persona response for prompt 'mental_health_support' with persona type 'dynamic_persona'
2025-09-03 14:17:26,984 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/test-persona Status: 200 Time: 1379.69ms
2025-09-03 14:17:26,984 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 14:17:26,984 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 14:17:26,984 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 14:17:26,984 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 14:17:26,985 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 14:17:26,986 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-03 14:17:26,986 - multipart.multipart - DEBUG - Calling on_field_start with no data
2025-09-03 14:17:26,986 - multipart.multipart - DEBUG - Calling on_field_name with data[0:8]
2025-09-03 14:17:26,986 - multipart.multipart - DEBUG - Calling on_field_data with data[9:28]
2025-09-03 14:17:26,986 - multipart.multipart - DEBUG - Calling on_field_end with no data
2025-09-03 14:17:26,987 - multipart.multipart - DEBUG - Calling on_field_start with no data
2025-09-03 14:17:26,987 - multipart.multipart - DEBUG - Calling on_field_name with data[29:37]
2025-09-03 14:17:26,987 - multipart.multipart - DEBUG - Calling on_field_data with data[38:46]
2025-09-03 14:17:26,987 - multipart.multipart - DEBUG - Calling on_field_end with no data
2025-09-03 14:17:26,987 - multipart.multipart - DEBUG - Calling on_end with no data
2025-09-03 14:17:26,987 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 14:17:26,987 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 14:17:26,987 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 14:17:26,987 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 14:17:26,988 - sqlalchemy.engine.Engine - INFO - [cached since 1.676s ago] ('admin@example.com', 1, 0)
2025-09-03 14:17:27,348 - prompt_manager.app.api.v1.endpoints.auth - INFO - Created access token for user: admin@example.com
2025-09-03 14:17:27,348 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 200 Time: 362.34ms
2025-09-03 14:17:27,349 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 14:17:27,349 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 14:17:27,349 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 14:17:27,349 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 14:17:27,350 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/test-persona
2025-09-03 14:17:27,351 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 14:17:27,351 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 14:17:27,351 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 14:17:27,351 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 14:17:27,351 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 14:17:27,351 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 14:17:27,351 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 14:17:27,351 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 14:17:27,351 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 08:47:27+00:00 (UTC)
2025-09-03 14:17:27,351 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 14:17:27,351 - prompt_manager.app.core.security - INFO - Looking up user with email: admin@example.com
2025-09-03 14:17:27,351 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 14:17:27,351 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 14:17:27,351 - sqlalchemy.engine.Engine - INFO - [cached since 2.039s ago] ('admin@example.com', 1, 0)
2025-09-03 14:17:27,352 - prompt_manager.app.core.security - INFO - Found user: admin@example.com (ID: 26)
2025-09-03 14:17:27,352 - prompt_manager.app.api.v1.api - INFO - Testing persona with automatic prompt selection (user: admin@example.com)
2025-09-03 14:17:27,352 - prompt_manager.app.crud.crud - INFO - Finding most relevant prompt for input: How do I implement a binary search in Python?
2025-09-03 14:17:27,352 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 14:17:27,352 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.status = ? AND prompts.is_active = 1
2025-09-03 14:17:27,352 - sqlalchemy.engine.Engine - INFO - [cached since 1.745s ago] ('active',)
2025-09-03 14:17:27,352 - prompt_manager.app.crud.crud - INFO - Found 16 active prompts in the database
2025-09-03 14:17:27,352 - prompt_manager.app.crud.crud - INFO - Active prompt 1: ID=28, Name=marketing, Status=active, is_active=True
2025-09-03 14:17:27,352 - prompt_manager.app.crud.crud - INFO - Active prompt 2: ID=31, Name=test_live_version_sync, Status=active, is_active=True
2025-09-03 14:17:27,352 - prompt_manager.app.crud.crud - INFO - Active prompt 3: ID=33, Name=debug_live_test, Status=active, is_active=True
2025-09-03 14:17:27,353 - prompt_manager.app.crud.crud - INFO - Active prompt 4: ID=37, Name=test_active_validation, Status=active, is_active=True
2025-09-03 14:17:27,353 - prompt_manager.app.crud.crud - INFO - Active prompt 5: ID=38, Name=test_auto_status, Status=active, is_active=True
2025-09-03 14:17:27,353 - prompt_manager.app.crud.crud - INFO - Active prompt 6: ID=40, Name=test_constraint, Status=active, is_active=True
2025-09-03 14:17:27,353 - prompt_manager.app.crud.crud - INFO - Active prompt 7: ID=43, Name=endpoint_test, Status=active, is_active=True
2025-09-03 14:17:27,353 - prompt_manager.app.crud.crud - INFO - Active prompt 8: ID=45, Name=final_test, Status=active, is_active=True
2025-09-03 14:17:27,353 - prompt_manager.app.crud.crud - INFO - Active prompt 9: ID=49, Name=full_test_prompt, Status=active, is_active=True
2025-09-03 14:17:27,353 - prompt_manager.app.crud.crud - INFO - Active prompt 10: ID=55, Name=lifecycle_test_final, Status=active, is_active=True
2025-09-03 14:17:27,353 - prompt_manager.app.crud.crud - INFO - Active prompt 11: ID=62, Name=code, Status=active, is_active=True
2025-09-03 14:17:27,353 - prompt_manager.app.crud.crud - INFO - Active prompt 12: ID=69, Name=Healthcare assistant, Status=active, is_active=True
2025-09-03 14:17:27,353 - prompt_manager.app.crud.crud - INFO - Active prompt 13: ID=80, Name=mental_health_support, Status=active, is_active=True
2025-09-03 14:17:27,353 - prompt_manager.app.crud.crud - INFO - Active prompt 14: ID=81, Name=coding_assistant, Status=active, is_active=True
2025-09-03 14:17:27,353 - prompt_manager.app.crud.crud - INFO - Active prompt 15: ID=82, Name=cooking_assistant, Status=active, is_active=True
2025-09-03 14:17:27,353 - prompt_manager.app.crud.crud - INFO - Active prompt 16: ID=83, Name=tech_support, Status=active, is_active=True
2025-09-03 14:17:27,353 - prompt_manager.app.crud.crud - INFO - Sending 16 prompts to LLM for analysis
2025-09-03 14:17:27,353 - prompt_manager.app.crud.crud - DEBUG - System prompt: You are an expert at matching user queries to the most appropriate system prompt. 
        Your goal is to analyze the user's input and select the single most relevant prompt ID from the provided list.
        
        MATCHING GUIDELINES:
        1. For coding/technical questions (Python, algorithms, programming), choose the coding assistant prompt.
        2. For internet/connection/tech issues, choose the tech support prompt.
        3. For mental health/stress/anxiety concerns, choose the mental health support prompt.
        4. For cooking/recipes/food questions, choose the cooking assistant prompt.
        
        INSTRUCTIONS:
        1. Carefully read the user's input and identify the main topic/domain.
        2. Review all available prompts and their metadata (name, tags, content preview).
        3. Select the prompt that best matches the user's intent and domain.
        4. Consider both the content and the context of the query.
        5. If the query is ambiguous but could match multiple domains, choose the most likely one.
        
        RESPONSE FORMAT:
        - Return ONLY the numeric ID of the selected prompt (e.g., "42").
        - If no prompt is relevant, return "none".
        - DO NOT include any other text or explanation in your response.
        
        IMPORTANT: Focus on the user's intent and choose the most appropriate prompt, even if the match isn't perfect.
        
2025-09-03 14:17:27,353 - prompt_manager.app.crud.crud - DEBUG - User message: USER INPUT:
        How do I implement a binary search in Python?
        
        AVAILABLE PROMPTS (ID, Name, Content Preview):
        
ID: 28 | Name: marketing
Preview: Testing
Tags: testing

ID: 31 | Name: test_live_version_sync
Preview: Second version content
Tags: test

ID: 33 | Name: debug_live_test
Preview: Debug content v2
Tags: debug

ID: 37 | Name: test_active_validation
Preview: First version
Tags: test

ID: 38 | Name: test_auto_status
Preview: Testing auto status
Tags: test

ID: 40 | Name: test_constraint
Preview: First active version
Tags: test

ID: 43 | Name: endpoint_test
Preview: Updated final test
Tags: test

ID: 45 | Name: final_test
Preview: Final test

ID: 49 | Name: full_test_prompt
Preview: Initial content for the full test.
Tags: testing, full-flow

ID: 55 | Name: lifecycle_test_final
Preview: Lifecycle test v2.0.0
Tags: lifecycle

ID: 62 | Name: code
Preview: Update for Debugger
Tags: suggestion

ID: 69 | Name: Healthcare assistant
Preview: Just for checking
Tags: wellbeing

ID: 80 | Name: mental_health_support
Preview: You are a compassionate mental health support assistant. Provide empathetic and supportive responses...
Tags: mental_health, support, wellbeing

ID: 81 | Name: coding_assistant
Preview: You are an expert programming assistant. Help users with coding questions, algorithm design, debuggi...
Tags: programming, coding, algorithms

ID: 82 | Name: cooking_assistant
Preview: You are a professional chef and cooking instructor. Provide detailed recipes, cooking tips, and tech...
Tags: cooking, recipes, baking

ID: 83 | Name: tech_support
Preview: You are a technical support specialist. Help users troubleshoot hardware, software, and network issu...
Tags: tech_support, troubleshooting, it

        
        RESPONSE FORMAT:
        Return ONLY the numeric ID of the most relevant prompt, or 'none' if none match.
        Example: "42" or "none"
        
        YOUR RESPONSE (ID only):
2025-09-03 14:17:27,353 - prompt_manager.app.crud.crud - INFO - Initializing GROQ client...
2025-09-03 14:17:27,353 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-09-03 14:17:27,354 - httpx - DEBUG - load_verify_locations cafile='/Applications/anaconda3/lib/python3.11/site-packages/certifi/cacert.pem'
2025-09-03 14:17:27,371 - prompt_manager.app.crud.crud - INFO - Sending request to GROQ API...
2025-09-03 14:17:27,371 - groq._base_client - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an expert at matching user queries to the most appropriate system prompt. \n        Your goal is to analyze the user\'s input and select the single most relevant prompt ID from the provided list.\n        \n        MATCHING GUIDELINES:\n        1. For coding/technical questions (Python, algorithms, programming), choose the coding assistant prompt.\n        2. For internet/connection/tech issues, choose the tech support prompt.\n        3. For mental health/stress/anxiety concerns, choose the mental health support prompt.\n        4. For cooking/recipes/food questions, choose the cooking assistant prompt.\n        \n        INSTRUCTIONS:\n        1. Carefully read the user\'s input and identify the main topic/domain.\n        2. Review all available prompts and their metadata (name, tags, content preview).\n        3. Select the prompt that best matches the user\'s intent and domain.\n        4. Consider both the content and the context of the query.\n        5. If the query is ambiguous but could match multiple domains, choose the most likely one.\n        \n        RESPONSE FORMAT:\n        - Return ONLY the numeric ID of the selected prompt (e.g., "42").\n        - If no prompt is relevant, return "none".\n        - DO NOT include any other text or explanation in your response.\n        \n        IMPORTANT: Focus on the user\'s intent and choose the most appropriate prompt, even if the match isn\'t perfect.\n        '}, {'role': 'user', 'content': 'USER INPUT:\n        How do I implement a binary search in Python?\n        \n        AVAILABLE PROMPTS (ID, Name, Content Preview):\n        \nID: 28 | Name: marketing\nPreview: Testing\nTags: testing\n\nID: 31 | Name: test_live_version_sync\nPreview: Second version content\nTags: test\n\nID: 33 | Name: debug_live_test\nPreview: Debug content v2\nTags: debug\n\nID: 37 | Name: test_active_validation\nPreview: First version\nTags: test\n\nID: 38 | Name: test_auto_status\nPreview: Testing auto status\nTags: test\n\nID: 40 | Name: test_constraint\nPreview: First active version\nTags: test\n\nID: 43 | Name: endpoint_test\nPreview: Updated final test\nTags: test\n\nID: 45 | Name: final_test\nPreview: Final test\n\nID: 49 | Name: full_test_prompt\nPreview: Initial content for the full test.\nTags: testing, full-flow\n\nID: 55 | Name: lifecycle_test_final\nPreview: Lifecycle test v2.0.0\nTags: lifecycle\n\nID: 62 | Name: code\nPreview: Update for Debugger\nTags: suggestion\n\nID: 69 | Name: Healthcare assistant\nPreview: Just for checking\nTags: wellbeing\n\nID: 80 | Name: mental_health_support\nPreview: You are a compassionate mental health support assistant. Provide empathetic and supportive responses...\nTags: mental_health, support, wellbeing\n\nID: 81 | Name: coding_assistant\nPreview: You are an expert programming assistant. Help users with coding questions, algorithm design, debuggi...\nTags: programming, coding, algorithms\n\nID: 82 | Name: cooking_assistant\nPreview: You are a professional chef and cooking instructor. Provide detailed recipes, cooking tips, and tech...\nTags: cooking, recipes, baking\n\nID: 83 | Name: tech_support\nPreview: You are a technical support specialist. Help users troubleshoot hardware, software, and network issu...\nTags: tech_support, troubleshooting, it\n\n        \n        RESPONSE FORMAT:\n        Return ONLY the numeric ID of the most relevant prompt, or \'none\' if none match.\n        Example: "42" or "none"\n        \n        YOUR RESPONSE (ID only):'}], 'model': 'llama-3.1-8b-instant', 'max_tokens': 10, 'temperature': 0.3}}
2025-09-03 14:17:27,372 - httpcore.connection - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-09-03 14:17:27,413 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10aa289d0>
2025-09-03 14:17:27,413 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x10ad16840> server_hostname='api.groq.com' timeout=5.0
2025-09-03 14:17:27,463 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10af4de10>
2025-09-03 14:17:27,464 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-03 14:17:27,464 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-09-03 14:17:27,464 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-03 14:17:27,464 - httpcore.http11 - DEBUG - send_request_body.complete
2025-09-03 14:17:27,464 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-03 14:17:27,674 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 03 Sep 2025 08:47:27 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Content-Encoding', b'br'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'bom'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14397'), (b'x-ratelimit-remaining-tokens', b'4031'), (b'x-ratelimit-reset-requests', b'16.921999999s'), (b'x-ratelimit-reset-tokens', b'19.682s'), (b'x-request-id', b'req_01k47c4vshexxs5zpacgv7hwqd'), (b'via', b'1.1 google'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=ICCEf6XXVwjbCTTwW8ORNPLwII1qX9WkpGP.YCJlS3A-1756889247-1.0.1.1-Bh1nfpzj8QOznqNgE2shEt_C0_Guof7XMvBAHjKgMVFkZU0gn22CkDCjQD.Oc2VPq4QCd_e6j2rBzkP0_WCCWu5NT_ZJgY7q.CBZ2Es_9Rc; path=/; expires=Wed, 03-Sep-25 09:17:27 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9793fb84bf9e443d-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-03 14:17:27,675 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 14:17:27,675 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-03 14:17:27,677 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-09-03 14:17:27,677 - httpcore.http11 - DEBUG - response_closed.started
2025-09-03 14:17:27,677 - httpcore.http11 - DEBUG - response_closed.complete
2025-09-03 14:17:27,678 - groq._base_client - DEBUG - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
2025-09-03 14:17:27,678 - prompt_manager.app.crud.crud - INFO - Received response from GROQ API
2025-09-03 14:17:27,679 - prompt_manager.app.crud.crud - DEBUG - GROQ API response: ChatCompletion(choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChoiceMessage(content='81', role='assistant', tool_calls=None))], id='chatcmpl-7aba88ba-6929-446e-868d-6c1561e6d1bc', created=1756889247, model='llama-3.1-8b-instant', object='chat.completion', system_fingerprint='fp_c40956ddc4', usage=Usage(completion_time=0.003778516, completion_tokens=2, prompt_time=0.074404507, prompt_tokens=806, total_time=0.078183023, total_tokens=808, queue_time=0.048199573), usage_breakdown=None, x_groq={'id': 'req_01k47c4vshexxs5zpacgv7hwqd'}, service_tier='on_demand')
2025-09-03 14:17:27,679 - prompt_manager.app.crud.crud - INFO - LLM raw response: 81 for input: How do I implement a binary search in Python?
2025-09-03 14:17:27,679 - prompt_manager.app.crud.crud - INFO - Extracted prompt ID: 81
2025-09-03 14:17:27,679 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.id = ? AND prompts.status = ? AND prompts.is_active = 1
 LIMIT ? OFFSET ?
2025-09-03 14:17:27,679 - sqlalchemy.engine.Engine - INFO - [cached since 1.437s ago] (81, 'active', 1, 0)
2025-09-03 14:17:27,679 - prompt_manager.app.crud.crud - INFO - Valid active prompt found: ID=81, Name=coding_assistant
2025-09-03 14:17:27,679 - prompt_manager.app.api.v1.api - INFO - Testing persona for prompt ID 81 (user: admin@example.com)
2025-09-03 14:17:27,680 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.id = ?
 LIMIT ? OFFSET ?
2025-09-03 14:17:27,680 - sqlalchemy.engine.Engine - INFO - [cached since 1.435s ago] (81, 1, 0)
2025-09-03 14:17:27,680 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-09-03 14:17:27,681 - httpx - DEBUG - load_verify_locations cafile='/Applications/anaconda3/lib/python3.11/site-packages/certifi/cacert.pem'
2025-09-03 14:17:27,697 - groq._base_client - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an expert programming assistant. Help users with coding questions, algorithm design, debugging, and best practices. Provide clear, concise, and accurate code examples in the requested programming language.'}, {'role': 'user', 'content': 'How do I implement a binary search in Python?'}], 'model': 'llama-3.1-8b-instant', 'max_tokens': 1000, 'temperature': 0.7}}
2025-09-03 14:17:27,697 - httpcore.connection - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-09-03 14:17:27,742 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10a5f7910>
2025-09-03 14:17:27,742 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x10a7b24e0> server_hostname='api.groq.com' timeout=5.0
2025-09-03 14:17:27,785 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10af9b490>
2025-09-03 14:17:27,785 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-03 14:17:27,785 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-09-03 14:17:27,785 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-03 14:17:27,785 - httpcore.http11 - DEBUG - send_request_body.complete
2025-09-03 14:17:27,786 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-03 14:17:28,800 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 03 Sep 2025 08:47:28 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Content-Encoding', b'br'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'bom'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14396'), (b'x-ratelimit-remaining-tokens', b'4031'), (b'x-ratelimit-reset-requests', b'23.688s'), (b'x-ratelimit-reset-tokens', b'19.686s'), (b'x-request-id', b'req_01k47c4w3aexxtw3st3mmz9ajg'), (b'via', b'1.1 google'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=z9v3N9m1TYklrv53kZbZ82gjVL3XkBXb8KXzPj440NE-1756889248-1.0.1.1-NAq3x7qZA2LuZfEqEU3gf9Xsz59rg_cTqJNgRiU4HMeP01DKMeQlDmB9V4VCvCZd__haoJGmLKSWoXvylHwNHp5bSiKPM2nigwWvYC.3aYY; path=/; expires=Wed, 03-Sep-25 09:17:28 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9793fb86c8a00cc7-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-03 14:17:28,801 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 14:17:28,801 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-03 14:17:28,801 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-09-03 14:17:28,801 - httpcore.http11 - DEBUG - response_closed.started
2025-09-03 14:17:28,801 - httpcore.http11 - DEBUG - response_closed.complete
2025-09-03 14:17:28,801 - groq._base_client - DEBUG - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
2025-09-03 14:17:28,802 - prompt_manager.app.api.v1.api - INFO - Generated persona response for prompt 'coding_assistant' with persona type 'dynamic_persona'
2025-09-03 14:17:28,803 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/test-persona Status: 200 Time: 1452.38ms
2025-09-03 14:17:28,803 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 14:17:28,803 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 14:17:28,803 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 14:17:28,803 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 14:17:28,803 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 14:17:28,805 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-03 14:17:28,805 - multipart.multipart - DEBUG - Calling on_field_start with no data
2025-09-03 14:17:28,805 - multipart.multipart - DEBUG - Calling on_field_name with data[0:8]
2025-09-03 14:17:28,805 - multipart.multipart - DEBUG - Calling on_field_data with data[9:28]
2025-09-03 14:17:28,805 - multipart.multipart - DEBUG - Calling on_field_end with no data
2025-09-03 14:17:28,805 - multipart.multipart - DEBUG - Calling on_field_start with no data
2025-09-03 14:17:28,805 - multipart.multipart - DEBUG - Calling on_field_name with data[29:37]
2025-09-03 14:17:28,805 - multipart.multipart - DEBUG - Calling on_field_data with data[38:46]
2025-09-03 14:17:28,805 - multipart.multipart - DEBUG - Calling on_field_end with no data
2025-09-03 14:17:28,805 - multipart.multipart - DEBUG - Calling on_end with no data
2025-09-03 14:17:28,806 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 14:17:28,806 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 14:17:28,806 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 14:17:28,806 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 14:17:28,806 - sqlalchemy.engine.Engine - INFO - [cached since 3.494s ago] ('admin@example.com', 1, 0)
2025-09-03 14:17:29,066 - prompt_manager.app.api.v1.endpoints.auth - INFO - Created access token for user: admin@example.com
2025-09-03 14:17:29,066 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 200 Time: 261.78ms
2025-09-03 14:17:29,067 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 14:17:29,067 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 14:17:29,067 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 14:17:29,067 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 14:17:29,068 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/test-persona
2025-09-03 14:17:29,069 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 14:17:29,069 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 14:17:29,069 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 14:17:29,069 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 14:17:29,069 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 14:17:29,069 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 14:17:29,069 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 14:17:29,069 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 14:17:29,069 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 08:47:29+00:00 (UTC)
2025-09-03 14:17:29,069 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 14:17:29,069 - prompt_manager.app.core.security - INFO - Looking up user with email: admin@example.com
2025-09-03 14:17:29,069 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 14:17:29,069 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 14:17:29,070 - sqlalchemy.engine.Engine - INFO - [cached since 3.758s ago] ('admin@example.com', 1, 0)
2025-09-03 14:17:29,070 - prompt_manager.app.core.security - INFO - Found user: admin@example.com (ID: 26)
2025-09-03 14:17:29,070 - prompt_manager.app.api.v1.api - INFO - Testing persona with automatic prompt selection (user: admin@example.com)
2025-09-03 14:17:29,070 - prompt_manager.app.crud.crud - INFO - Finding most relevant prompt for input: What's the best way to bake a chocolate cake?
2025-09-03 14:17:29,070 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 14:17:29,070 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.status = ? AND prompts.is_active = 1
2025-09-03 14:17:29,070 - sqlalchemy.engine.Engine - INFO - [cached since 3.463s ago] ('active',)
2025-09-03 14:17:29,070 - prompt_manager.app.crud.crud - INFO - Found 16 active prompts in the database
2025-09-03 14:17:29,070 - prompt_manager.app.crud.crud - INFO - Active prompt 1: ID=28, Name=marketing, Status=active, is_active=True
2025-09-03 14:17:29,070 - prompt_manager.app.crud.crud - INFO - Active prompt 2: ID=31, Name=test_live_version_sync, Status=active, is_active=True
2025-09-03 14:17:29,070 - prompt_manager.app.crud.crud - INFO - Active prompt 3: ID=33, Name=debug_live_test, Status=active, is_active=True
2025-09-03 14:17:29,070 - prompt_manager.app.crud.crud - INFO - Active prompt 4: ID=37, Name=test_active_validation, Status=active, is_active=True
2025-09-03 14:17:29,070 - prompt_manager.app.crud.crud - INFO - Active prompt 5: ID=38, Name=test_auto_status, Status=active, is_active=True
2025-09-03 14:17:29,070 - prompt_manager.app.crud.crud - INFO - Active prompt 6: ID=40, Name=test_constraint, Status=active, is_active=True
2025-09-03 14:17:29,070 - prompt_manager.app.crud.crud - INFO - Active prompt 7: ID=43, Name=endpoint_test, Status=active, is_active=True
2025-09-03 14:17:29,070 - prompt_manager.app.crud.crud - INFO - Active prompt 8: ID=45, Name=final_test, Status=active, is_active=True
2025-09-03 14:17:29,070 - prompt_manager.app.crud.crud - INFO - Active prompt 9: ID=49, Name=full_test_prompt, Status=active, is_active=True
2025-09-03 14:17:29,070 - prompt_manager.app.crud.crud - INFO - Active prompt 10: ID=55, Name=lifecycle_test_final, Status=active, is_active=True
2025-09-03 14:17:29,070 - prompt_manager.app.crud.crud - INFO - Active prompt 11: ID=62, Name=code, Status=active, is_active=True
2025-09-03 14:17:29,070 - prompt_manager.app.crud.crud - INFO - Active prompt 12: ID=69, Name=Healthcare assistant, Status=active, is_active=True
2025-09-03 14:17:29,070 - prompt_manager.app.crud.crud - INFO - Active prompt 13: ID=80, Name=mental_health_support, Status=active, is_active=True
2025-09-03 14:17:29,071 - prompt_manager.app.crud.crud - INFO - Active prompt 14: ID=81, Name=coding_assistant, Status=active, is_active=True
2025-09-03 14:17:29,071 - prompt_manager.app.crud.crud - INFO - Active prompt 15: ID=82, Name=cooking_assistant, Status=active, is_active=True
2025-09-03 14:17:29,071 - prompt_manager.app.crud.crud - INFO - Active prompt 16: ID=83, Name=tech_support, Status=active, is_active=True
2025-09-03 14:17:29,071 - prompt_manager.app.crud.crud - INFO - Sending 16 prompts to LLM for analysis
2025-09-03 14:17:29,071 - prompt_manager.app.crud.crud - DEBUG - System prompt: You are an expert at matching user queries to the most appropriate system prompt. 
        Your goal is to analyze the user's input and select the single most relevant prompt ID from the provided list.
        
        MATCHING GUIDELINES:
        1. For coding/technical questions (Python, algorithms, programming), choose the coding assistant prompt.
        2. For internet/connection/tech issues, choose the tech support prompt.
        3. For mental health/stress/anxiety concerns, choose the mental health support prompt.
        4. For cooking/recipes/food questions, choose the cooking assistant prompt.
        
        INSTRUCTIONS:
        1. Carefully read the user's input and identify the main topic/domain.
        2. Review all available prompts and their metadata (name, tags, content preview).
        3. Select the prompt that best matches the user's intent and domain.
        4. Consider both the content and the context of the query.
        5. If the query is ambiguous but could match multiple domains, choose the most likely one.
        
        RESPONSE FORMAT:
        - Return ONLY the numeric ID of the selected prompt (e.g., "42").
        - If no prompt is relevant, return "none".
        - DO NOT include any other text or explanation in your response.
        
        IMPORTANT: Focus on the user's intent and choose the most appropriate prompt, even if the match isn't perfect.
        
2025-09-03 14:17:29,071 - prompt_manager.app.crud.crud - DEBUG - User message: USER INPUT:
        What's the best way to bake a chocolate cake?
        
        AVAILABLE PROMPTS (ID, Name, Content Preview):
        
ID: 28 | Name: marketing
Preview: Testing
Tags: testing

ID: 31 | Name: test_live_version_sync
Preview: Second version content
Tags: test

ID: 33 | Name: debug_live_test
Preview: Debug content v2
Tags: debug

ID: 37 | Name: test_active_validation
Preview: First version
Tags: test

ID: 38 | Name: test_auto_status
Preview: Testing auto status
Tags: test

ID: 40 | Name: test_constraint
Preview: First active version
Tags: test

ID: 43 | Name: endpoint_test
Preview: Updated final test
Tags: test

ID: 45 | Name: final_test
Preview: Final test

ID: 49 | Name: full_test_prompt
Preview: Initial content for the full test.
Tags: testing, full-flow

ID: 55 | Name: lifecycle_test_final
Preview: Lifecycle test v2.0.0
Tags: lifecycle

ID: 62 | Name: code
Preview: Update for Debugger
Tags: suggestion

ID: 69 | Name: Healthcare assistant
Preview: Just for checking
Tags: wellbeing

ID: 80 | Name: mental_health_support
Preview: You are a compassionate mental health support assistant. Provide empathetic and supportive responses...
Tags: mental_health, support, wellbeing

ID: 81 | Name: coding_assistant
Preview: You are an expert programming assistant. Help users with coding questions, algorithm design, debuggi...
Tags: programming, coding, algorithms

ID: 82 | Name: cooking_assistant
Preview: You are a professional chef and cooking instructor. Provide detailed recipes, cooking tips, and tech...
Tags: cooking, recipes, baking

ID: 83 | Name: tech_support
Preview: You are a technical support specialist. Help users troubleshoot hardware, software, and network issu...
Tags: tech_support, troubleshooting, it

        
        RESPONSE FORMAT:
        Return ONLY the numeric ID of the most relevant prompt, or 'none' if none match.
        Example: "42" or "none"
        
        YOUR RESPONSE (ID only):
2025-09-03 14:17:29,071 - prompt_manager.app.crud.crud - INFO - Initializing GROQ client...
2025-09-03 14:17:29,071 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-09-03 14:17:29,072 - httpx - DEBUG - load_verify_locations cafile='/Applications/anaconda3/lib/python3.11/site-packages/certifi/cacert.pem'
2025-09-03 14:17:29,093 - prompt_manager.app.crud.crud - INFO - Sending request to GROQ API...
2025-09-03 14:17:29,093 - groq._base_client - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an expert at matching user queries to the most appropriate system prompt. \n        Your goal is to analyze the user\'s input and select the single most relevant prompt ID from the provided list.\n        \n        MATCHING GUIDELINES:\n        1. For coding/technical questions (Python, algorithms, programming), choose the coding assistant prompt.\n        2. For internet/connection/tech issues, choose the tech support prompt.\n        3. For mental health/stress/anxiety concerns, choose the mental health support prompt.\n        4. For cooking/recipes/food questions, choose the cooking assistant prompt.\n        \n        INSTRUCTIONS:\n        1. Carefully read the user\'s input and identify the main topic/domain.\n        2. Review all available prompts and their metadata (name, tags, content preview).\n        3. Select the prompt that best matches the user\'s intent and domain.\n        4. Consider both the content and the context of the query.\n        5. If the query is ambiguous but could match multiple domains, choose the most likely one.\n        \n        RESPONSE FORMAT:\n        - Return ONLY the numeric ID of the selected prompt (e.g., "42").\n        - If no prompt is relevant, return "none".\n        - DO NOT include any other text or explanation in your response.\n        \n        IMPORTANT: Focus on the user\'s intent and choose the most appropriate prompt, even if the match isn\'t perfect.\n        '}, {'role': 'user', 'content': 'USER INPUT:\n        What\'s the best way to bake a chocolate cake?\n        \n        AVAILABLE PROMPTS (ID, Name, Content Preview):\n        \nID: 28 | Name: marketing\nPreview: Testing\nTags: testing\n\nID: 31 | Name: test_live_version_sync\nPreview: Second version content\nTags: test\n\nID: 33 | Name: debug_live_test\nPreview: Debug content v2\nTags: debug\n\nID: 37 | Name: test_active_validation\nPreview: First version\nTags: test\n\nID: 38 | Name: test_auto_status\nPreview: Testing auto status\nTags: test\n\nID: 40 | Name: test_constraint\nPreview: First active version\nTags: test\n\nID: 43 | Name: endpoint_test\nPreview: Updated final test\nTags: test\n\nID: 45 | Name: final_test\nPreview: Final test\n\nID: 49 | Name: full_test_prompt\nPreview: Initial content for the full test.\nTags: testing, full-flow\n\nID: 55 | Name: lifecycle_test_final\nPreview: Lifecycle test v2.0.0\nTags: lifecycle\n\nID: 62 | Name: code\nPreview: Update for Debugger\nTags: suggestion\n\nID: 69 | Name: Healthcare assistant\nPreview: Just for checking\nTags: wellbeing\n\nID: 80 | Name: mental_health_support\nPreview: You are a compassionate mental health support assistant. Provide empathetic and supportive responses...\nTags: mental_health, support, wellbeing\n\nID: 81 | Name: coding_assistant\nPreview: You are an expert programming assistant. Help users with coding questions, algorithm design, debuggi...\nTags: programming, coding, algorithms\n\nID: 82 | Name: cooking_assistant\nPreview: You are a professional chef and cooking instructor. Provide detailed recipes, cooking tips, and tech...\nTags: cooking, recipes, baking\n\nID: 83 | Name: tech_support\nPreview: You are a technical support specialist. Help users troubleshoot hardware, software, and network issu...\nTags: tech_support, troubleshooting, it\n\n        \n        RESPONSE FORMAT:\n        Return ONLY the numeric ID of the most relevant prompt, or \'none\' if none match.\n        Example: "42" or "none"\n        \n        YOUR RESPONSE (ID only):'}], 'model': 'llama-3.1-8b-instant', 'max_tokens': 10, 'temperature': 0.3}}
2025-09-03 14:17:29,094 - httpcore.connection - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-09-03 14:17:29,142 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10afaec10>
2025-09-03 14:17:29,142 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x10ad16ba0> server_hostname='api.groq.com' timeout=5.0
2025-09-03 14:17:29,187 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10afaecd0>
2025-09-03 14:17:29,187 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-03 14:17:29,187 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-09-03 14:17:29,187 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-03 14:17:29,187 - httpcore.http11 - DEBUG - send_request_body.complete
2025-09-03 14:17:29,187 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-03 14:17:29,366 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 03 Sep 2025 08:47:29 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Content-Encoding', b'br'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'bom'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14395'), (b'x-ratelimit-remaining-tokens', b'2687'), (b'x-ratelimit-reset-requests', b'28.602999999s'), (b'x-ratelimit-reset-tokens', b'33.128s'), (b'x-request-id', b'req_01k47c4xf0exxvtv9dcbdnnwkh'), (b'via', b'1.1 google'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=THnAfnmTfHWnkHNicJ2SwtL0QV1Dq6BmA99ddXLZPeo-1756889249-1.0.1.1-z.Zhz9hEKcVssOEGU2SYzvd6HqhDU7KbP5XbP4rnJo17_a_vIKXyXFoTERfCdEOJMpwpiEN6CdjUyhSIpr7_1XvAjriuYnP1gVru.EBMPgg; path=/; expires=Wed, 03-Sep-25 09:17:29 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9793fb8f8a013bd0-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-03 14:17:29,367 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 14:17:29,367 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-03 14:17:29,370 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-09-03 14:17:29,370 - httpcore.http11 - DEBUG - response_closed.started
2025-09-03 14:17:29,370 - httpcore.http11 - DEBUG - response_closed.complete
2025-09-03 14:17:29,370 - groq._base_client - DEBUG - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
2025-09-03 14:17:29,373 - prompt_manager.app.crud.crud - INFO - Received response from GROQ API
2025-09-03 14:17:29,373 - prompt_manager.app.crud.crud - DEBUG - GROQ API response: ChatCompletion(choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChoiceMessage(content='82', role='assistant', tool_calls=None))], id='chatcmpl-11ae98a4-f9db-4f10-ba86-ad9d154f4c61', created=1756889249, model='llama-3.1-8b-instant', object='chat.completion', system_fingerprint='fp_c40956ddc4', usage=Usage(completion_time=0.003908573, completion_tokens=2, prompt_time=0.053684632, prompt_tokens=807, total_time=0.057593205, total_tokens=809, queue_time=0.048311378), usage_breakdown=None, x_groq={'id': 'req_01k47c4xf0exxvtv9dcbdnnwkh'}, service_tier='on_demand')
2025-09-03 14:17:29,373 - prompt_manager.app.crud.crud - INFO - LLM raw response: 82 for input: What's the best way to bake a chocolate cake?
2025-09-03 14:17:29,374 - prompt_manager.app.crud.crud - INFO - Extracted prompt ID: 82
2025-09-03 14:17:29,374 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.id = ? AND prompts.status = ? AND prompts.is_active = 1
 LIMIT ? OFFSET ?
2025-09-03 14:17:29,375 - sqlalchemy.engine.Engine - INFO - [cached since 3.132s ago] (82, 'active', 1, 0)
2025-09-03 14:17:29,375 - prompt_manager.app.crud.crud - INFO - Valid active prompt found: ID=82, Name=cooking_assistant
2025-09-03 14:17:29,375 - prompt_manager.app.api.v1.api - INFO - Testing persona for prompt ID 82 (user: admin@example.com)
2025-09-03 14:17:29,376 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.id = ?
 LIMIT ? OFFSET ?
2025-09-03 14:17:29,376 - sqlalchemy.engine.Engine - INFO - [cached since 3.132s ago] (82, 1, 0)
2025-09-03 14:17:29,377 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-09-03 14:17:29,378 - httpx - DEBUG - load_verify_locations cafile='/Applications/anaconda3/lib/python3.11/site-packages/certifi/cacert.pem'
2025-09-03 14:17:29,409 - groq._base_client - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a professional chef and cooking instructor. Provide detailed recipes, cooking tips, and techniques. Help users with meal planning, ingredient substitutions, and troubleshooting cooking problems.'}, {'role': 'user', 'content': "What's the best way to bake a chocolate cake?"}], 'model': 'llama-3.1-8b-instant', 'max_tokens': 1000, 'temperature': 0.7}}
2025-09-03 14:17:29,409 - httpcore.connection - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-09-03 14:17:29,454 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10af942d0>
2025-09-03 14:17:29,454 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x10a7b2690> server_hostname='api.groq.com' timeout=5.0
2025-09-03 14:17:29,498 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x109a031d0>
2025-09-03 14:17:29,498 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-03 14:17:29,498 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-09-03 14:17:29,498 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-03 14:17:29,498 - httpcore.http11 - DEBUG - send_request_body.complete
2025-09-03 14:17:29,498 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-03 14:17:30,687 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 03 Sep 2025 08:47:30 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Content-Encoding', b'br'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'bom'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14394'), (b'x-ratelimit-remaining-tokens', b'2689'), (b'x-ratelimit-reset-requests', b'35.688s'), (b'x-ratelimit-reset-tokens', b'33.106s'), (b'x-request-id', b'req_01k47c4xrteb69mcwsbah25dbw'), (b'via', b'1.1 google'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=5k6HwN.ka2Ji4vAPUCYXK6dqXccCOaJg8XsIQdhTa0w-1756889250-1.0.1.1-Purn339n61Oc8GYR4_Nm8Q3e_7tGIrB9kyQn3p7LL4SVHdzkAgbCcDxV3zftb7DemOng5rx9iWnIilLazsEIlcQJIRG.ZX4YIQOfF1aUCuM; path=/; expires=Wed, 03-Sep-25 09:17:30 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9793fb917bcfff75-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-03 14:17:30,687 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 14:17:30,687 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-03 14:17:30,688 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-09-03 14:17:30,688 - httpcore.http11 - DEBUG - response_closed.started
2025-09-03 14:17:30,688 - httpcore.http11 - DEBUG - response_closed.complete
2025-09-03 14:17:30,688 - groq._base_client - DEBUG - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
2025-09-03 14:17:30,689 - prompt_manager.app.api.v1.api - INFO - Generated persona response for prompt 'cooking_assistant' with persona type 'dynamic_persona'
2025-09-03 14:17:30,689 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/test-persona Status: 200 Time: 1620.84ms
2025-09-03 14:17:30,689 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 14:17:30,689 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 14:17:30,690 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 14:17:30,690 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 14:17:30,690 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 14:17:30,691 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-03 14:17:30,692 - multipart.multipart - DEBUG - Calling on_field_start with no data
2025-09-03 14:17:30,692 - multipart.multipart - DEBUG - Calling on_field_name with data[0:8]
2025-09-03 14:17:30,692 - multipart.multipart - DEBUG - Calling on_field_data with data[9:28]
2025-09-03 14:17:30,692 - multipart.multipart - DEBUG - Calling on_field_end with no data
2025-09-03 14:17:30,692 - multipart.multipart - DEBUG - Calling on_field_start with no data
2025-09-03 14:17:30,692 - multipart.multipart - DEBUG - Calling on_field_name with data[29:37]
2025-09-03 14:17:30,692 - multipart.multipart - DEBUG - Calling on_field_data with data[38:46]
2025-09-03 14:17:30,692 - multipart.multipart - DEBUG - Calling on_field_end with no data
2025-09-03 14:17:30,692 - multipart.multipart - DEBUG - Calling on_end with no data
2025-09-03 14:17:30,692 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 14:17:30,692 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 14:17:30,692 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 14:17:30,693 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 14:17:30,693 - sqlalchemy.engine.Engine - INFO - [cached since 5.381s ago] ('admin@example.com', 1, 0)
2025-09-03 14:17:31,053 - prompt_manager.app.api.v1.endpoints.auth - INFO - Created access token for user: admin@example.com
2025-09-03 14:17:31,055 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 200 Time: 363.66ms
2025-09-03 14:17:31,057 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 14:17:31,057 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 14:17:31,057 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 14:17:31,057 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 14:17:31,059 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/test-persona
2025-09-03 14:17:31,062 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 14:17:31,063 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 14:17:31,063 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 14:17:31,064 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 14:17:31,064 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 14:17:31,064 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 14:17:31,064 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 14:17:31,065 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 14:17:31,065 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 08:47:31+00:00 (UTC)
2025-09-03 14:17:31,065 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 14:17:31,065 - prompt_manager.app.core.security - INFO - Looking up user with email: admin@example.com
2025-09-03 14:17:31,065 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 14:17:31,066 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 14:17:31,066 - sqlalchemy.engine.Engine - INFO - [cached since 5.754s ago] ('admin@example.com', 1, 0)
2025-09-03 14:17:31,066 - httpcore.connection - DEBUG - close.started
2025-09-03 14:17:31,067 - httpcore.connection - DEBUG - close.complete
2025-09-03 14:17:31,068 - prompt_manager.app.core.security - INFO - Found user: admin@example.com (ID: 26)
2025-09-03 14:17:31,068 - prompt_manager.app.api.v1.api - INFO - Testing persona with automatic prompt selection (user: admin@example.com)
2025-09-03 14:17:31,068 - prompt_manager.app.crud.crud - INFO - Finding most relevant prompt for input: I'm having trouble with my internet connection
2025-09-03 14:17:31,069 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 14:17:31,069 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.status = ? AND prompts.is_active = 1
2025-09-03 14:17:31,069 - sqlalchemy.engine.Engine - INFO - [cached since 5.462s ago] ('active',)
2025-09-03 14:17:31,069 - prompt_manager.app.crud.crud - INFO - Found 16 active prompts in the database
2025-09-03 14:17:31,069 - prompt_manager.app.crud.crud - INFO - Active prompt 1: ID=28, Name=marketing, Status=active, is_active=True
2025-09-03 14:17:31,069 - prompt_manager.app.crud.crud - INFO - Active prompt 2: ID=31, Name=test_live_version_sync, Status=active, is_active=True
2025-09-03 14:17:31,069 - prompt_manager.app.crud.crud - INFO - Active prompt 3: ID=33, Name=debug_live_test, Status=active, is_active=True
2025-09-03 14:17:31,069 - prompt_manager.app.crud.crud - INFO - Active prompt 4: ID=37, Name=test_active_validation, Status=active, is_active=True
2025-09-03 14:17:31,070 - prompt_manager.app.crud.crud - INFO - Active prompt 5: ID=38, Name=test_auto_status, Status=active, is_active=True
2025-09-03 14:17:31,070 - prompt_manager.app.crud.crud - INFO - Active prompt 6: ID=40, Name=test_constraint, Status=active, is_active=True
2025-09-03 14:17:31,070 - prompt_manager.app.crud.crud - INFO - Active prompt 7: ID=43, Name=endpoint_test, Status=active, is_active=True
2025-09-03 14:17:31,070 - prompt_manager.app.crud.crud - INFO - Active prompt 8: ID=45, Name=final_test, Status=active, is_active=True
2025-09-03 14:17:31,070 - prompt_manager.app.crud.crud - INFO - Active prompt 9: ID=49, Name=full_test_prompt, Status=active, is_active=True
2025-09-03 14:17:31,070 - prompt_manager.app.crud.crud - INFO - Active prompt 10: ID=55, Name=lifecycle_test_final, Status=active, is_active=True
2025-09-03 14:17:31,070 - prompt_manager.app.crud.crud - INFO - Active prompt 11: ID=62, Name=code, Status=active, is_active=True
2025-09-03 14:17:31,070 - prompt_manager.app.crud.crud - INFO - Active prompt 12: ID=69, Name=Healthcare assistant, Status=active, is_active=True
2025-09-03 14:17:31,070 - prompt_manager.app.crud.crud - INFO - Active prompt 13: ID=80, Name=mental_health_support, Status=active, is_active=True
2025-09-03 14:17:31,070 - prompt_manager.app.crud.crud - INFO - Active prompt 14: ID=81, Name=coding_assistant, Status=active, is_active=True
2025-09-03 14:17:31,070 - prompt_manager.app.crud.crud - INFO - Active prompt 15: ID=82, Name=cooking_assistant, Status=active, is_active=True
2025-09-03 14:17:31,070 - prompt_manager.app.crud.crud - INFO - Active prompt 16: ID=83, Name=tech_support, Status=active, is_active=True
2025-09-03 14:17:31,070 - prompt_manager.app.crud.crud - INFO - Sending 16 prompts to LLM for analysis
2025-09-03 14:17:31,070 - prompt_manager.app.crud.crud - DEBUG - System prompt: You are an expert at matching user queries to the most appropriate system prompt. 
        Your goal is to analyze the user's input and select the single most relevant prompt ID from the provided list.
        
        MATCHING GUIDELINES:
        1. For coding/technical questions (Python, algorithms, programming), choose the coding assistant prompt.
        2. For internet/connection/tech issues, choose the tech support prompt.
        3. For mental health/stress/anxiety concerns, choose the mental health support prompt.
        4. For cooking/recipes/food questions, choose the cooking assistant prompt.
        
        INSTRUCTIONS:
        1. Carefully read the user's input and identify the main topic/domain.
        2. Review all available prompts and their metadata (name, tags, content preview).
        3. Select the prompt that best matches the user's intent and domain.
        4. Consider both the content and the context of the query.
        5. If the query is ambiguous but could match multiple domains, choose the most likely one.
        
        RESPONSE FORMAT:
        - Return ONLY the numeric ID of the selected prompt (e.g., "42").
        - If no prompt is relevant, return "none".
        - DO NOT include any other text or explanation in your response.
        
        IMPORTANT: Focus on the user's intent and choose the most appropriate prompt, even if the match isn't perfect.
        
2025-09-03 14:17:31,070 - prompt_manager.app.crud.crud - DEBUG - User message: USER INPUT:
        I'm having trouble with my internet connection
        
        AVAILABLE PROMPTS (ID, Name, Content Preview):
        
ID: 28 | Name: marketing
Preview: Testing
Tags: testing

ID: 31 | Name: test_live_version_sync
Preview: Second version content
Tags: test

ID: 33 | Name: debug_live_test
Preview: Debug content v2
Tags: debug

ID: 37 | Name: test_active_validation
Preview: First version
Tags: test

ID: 38 | Name: test_auto_status
Preview: Testing auto status
Tags: test

ID: 40 | Name: test_constraint
Preview: First active version
Tags: test

ID: 43 | Name: endpoint_test
Preview: Updated final test
Tags: test

ID: 45 | Name: final_test
Preview: Final test

ID: 49 | Name: full_test_prompt
Preview: Initial content for the full test.
Tags: testing, full-flow

ID: 55 | Name: lifecycle_test_final
Preview: Lifecycle test v2.0.0
Tags: lifecycle

ID: 62 | Name: code
Preview: Update for Debugger
Tags: suggestion

ID: 69 | Name: Healthcare assistant
Preview: Just for checking
Tags: wellbeing

ID: 80 | Name: mental_health_support
Preview: You are a compassionate mental health support assistant. Provide empathetic and supportive responses...
Tags: mental_health, support, wellbeing

ID: 81 | Name: coding_assistant
Preview: You are an expert programming assistant. Help users with coding questions, algorithm design, debuggi...
Tags: programming, coding, algorithms

ID: 82 | Name: cooking_assistant
Preview: You are a professional chef and cooking instructor. Provide detailed recipes, cooking tips, and tech...
Tags: cooking, recipes, baking

ID: 83 | Name: tech_support
Preview: You are a technical support specialist. Help users troubleshoot hardware, software, and network issu...
Tags: tech_support, troubleshooting, it

        
        RESPONSE FORMAT:
        Return ONLY the numeric ID of the most relevant prompt, or 'none' if none match.
        Example: "42" or "none"
        
        YOUR RESPONSE (ID only):
2025-09-03 14:17:31,070 - prompt_manager.app.crud.crud - INFO - Initializing GROQ client...
2025-09-03 14:17:31,071 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-09-03 14:17:31,071 - httpx - DEBUG - load_verify_locations cafile='/Applications/anaconda3/lib/python3.11/site-packages/certifi/cacert.pem'
2025-09-03 14:17:31,088 - prompt_manager.app.crud.crud - INFO - Sending request to GROQ API...
2025-09-03 14:17:31,088 - groq._base_client - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an expert at matching user queries to the most appropriate system prompt. \n        Your goal is to analyze the user\'s input and select the single most relevant prompt ID from the provided list.\n        \n        MATCHING GUIDELINES:\n        1. For coding/technical questions (Python, algorithms, programming), choose the coding assistant prompt.\n        2. For internet/connection/tech issues, choose the tech support prompt.\n        3. For mental health/stress/anxiety concerns, choose the mental health support prompt.\n        4. For cooking/recipes/food questions, choose the cooking assistant prompt.\n        \n        INSTRUCTIONS:\n        1. Carefully read the user\'s input and identify the main topic/domain.\n        2. Review all available prompts and their metadata (name, tags, content preview).\n        3. Select the prompt that best matches the user\'s intent and domain.\n        4. Consider both the content and the context of the query.\n        5. If the query is ambiguous but could match multiple domains, choose the most likely one.\n        \n        RESPONSE FORMAT:\n        - Return ONLY the numeric ID of the selected prompt (e.g., "42").\n        - If no prompt is relevant, return "none".\n        - DO NOT include any other text or explanation in your response.\n        \n        IMPORTANT: Focus on the user\'s intent and choose the most appropriate prompt, even if the match isn\'t perfect.\n        '}, {'role': 'user', 'content': 'USER INPUT:\n        I\'m having trouble with my internet connection\n        \n        AVAILABLE PROMPTS (ID, Name, Content Preview):\n        \nID: 28 | Name: marketing\nPreview: Testing\nTags: testing\n\nID: 31 | Name: test_live_version_sync\nPreview: Second version content\nTags: test\n\nID: 33 | Name: debug_live_test\nPreview: Debug content v2\nTags: debug\n\nID: 37 | Name: test_active_validation\nPreview: First version\nTags: test\n\nID: 38 | Name: test_auto_status\nPreview: Testing auto status\nTags: test\n\nID: 40 | Name: test_constraint\nPreview: First active version\nTags: test\n\nID: 43 | Name: endpoint_test\nPreview: Updated final test\nTags: test\n\nID: 45 | Name: final_test\nPreview: Final test\n\nID: 49 | Name: full_test_prompt\nPreview: Initial content for the full test.\nTags: testing, full-flow\n\nID: 55 | Name: lifecycle_test_final\nPreview: Lifecycle test v2.0.0\nTags: lifecycle\n\nID: 62 | Name: code\nPreview: Update for Debugger\nTags: suggestion\n\nID: 69 | Name: Healthcare assistant\nPreview: Just for checking\nTags: wellbeing\n\nID: 80 | Name: mental_health_support\nPreview: You are a compassionate mental health support assistant. Provide empathetic and supportive responses...\nTags: mental_health, support, wellbeing\n\nID: 81 | Name: coding_assistant\nPreview: You are an expert programming assistant. Help users with coding questions, algorithm design, debuggi...\nTags: programming, coding, algorithms\n\nID: 82 | Name: cooking_assistant\nPreview: You are a professional chef and cooking instructor. Provide detailed recipes, cooking tips, and tech...\nTags: cooking, recipes, baking\n\nID: 83 | Name: tech_support\nPreview: You are a technical support specialist. Help users troubleshoot hardware, software, and network issu...\nTags: tech_support, troubleshooting, it\n\n        \n        RESPONSE FORMAT:\n        Return ONLY the numeric ID of the most relevant prompt, or \'none\' if none match.\n        Example: "42" or "none"\n        \n        YOUR RESPONSE (ID only):'}], 'model': 'llama-3.1-8b-instant', 'max_tokens': 10, 'temperature': 0.3}}
2025-09-03 14:17:31,089 - httpcore.connection - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-09-03 14:17:31,137 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10af97410>
2025-09-03 14:17:31,137 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x10ad16c30> server_hostname='api.groq.com' timeout=5.0
2025-09-03 14:17:31,185 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10af977d0>
2025-09-03 14:17:31,185 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-03 14:17:31,185 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-09-03 14:17:31,185 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-03 14:17:31,185 - httpcore.http11 - DEBUG - send_request_body.complete
2025-09-03 14:17:31,185 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-03 14:17:31,432 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 03 Sep 2025 08:47:31 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Content-Encoding', b'br'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'bom'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14393'), (b'x-ratelimit-remaining-tokens', b'1177'), (b'x-ratelimit-reset-requests', b'40.302s'), (b'x-ratelimit-reset-tokens', b'48.227s'), (b'x-request-id', b'req_01k47c4zdwfwc8vkgae5d5pavf'), (b'via', b'1.1 google'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=DmohF3.lbiEiaZYW_DbEpCRFbkB2GSz.muPxBdmT5OI-1756889251-1.0.1.1-ERRYuvV48_TFnuxZ3eU6Uxv0B8lHYizZVKM4PP1k8ZAXOUkW2ER99E9371BkrOGH1TH8cPZURA0MoIbPZWZGqpO_5Qz6NgPICzughWEe2a0; path=/; expires=Wed, 03-Sep-25 09:17:31 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9793fb9c0a694936-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-03 14:17:31,433 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 14:17:31,433 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-03 14:17:31,433 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-09-03 14:17:31,433 - httpcore.http11 - DEBUG - response_closed.started
2025-09-03 14:17:31,433 - httpcore.http11 - DEBUG - response_closed.complete
2025-09-03 14:17:31,433 - groq._base_client - DEBUG - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
2025-09-03 14:17:31,434 - prompt_manager.app.crud.crud - INFO - Received response from GROQ API
2025-09-03 14:17:31,434 - prompt_manager.app.crud.crud - DEBUG - GROQ API response: ChatCompletion(choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChoiceMessage(content='83', role='assistant', tool_calls=None))], id='chatcmpl-2b7156fd-3c4f-4e4b-aed3-5d33cb840c5c', created=1756889251, model='llama-3.1-8b-instant', object='chat.completion', system_fingerprint='fp_c40956ddc4', usage=Usage(completion_time=0.006956631, completion_tokens=2, prompt_time=0.054798623, prompt_tokens=804, total_time=0.061755254, total_tokens=806, queue_time=0.047464726), usage_breakdown=None, x_groq={'id': 'req_01k47c4zdwfwc8vkgae5d5pavf'}, service_tier='on_demand')
2025-09-03 14:17:31,434 - prompt_manager.app.crud.crud - INFO - LLM raw response: 83 for input: I'm having trouble with my internet connection
2025-09-03 14:17:31,434 - prompt_manager.app.crud.crud - INFO - Extracted prompt ID: 83
2025-09-03 14:17:31,434 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.id = ? AND prompts.status = ? AND prompts.is_active = 1
 LIMIT ? OFFSET ?
2025-09-03 14:17:31,435 - sqlalchemy.engine.Engine - INFO - [cached since 5.192s ago] (83, 'active', 1, 0)
2025-09-03 14:17:31,435 - prompt_manager.app.crud.crud - INFO - Valid active prompt found: ID=83, Name=tech_support
2025-09-03 14:17:31,435 - prompt_manager.app.api.v1.api - INFO - Testing persona for prompt ID 83 (user: admin@example.com)
2025-09-03 14:17:31,435 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.id = ?
 LIMIT ? OFFSET ?
2025-09-03 14:17:31,435 - sqlalchemy.engine.Engine - INFO - [cached since 5.191s ago] (83, 1, 0)
2025-09-03 14:17:31,435 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-09-03 14:17:31,436 - httpx - DEBUG - load_verify_locations cafile='/Applications/anaconda3/lib/python3.11/site-packages/certifi/cacert.pem'
2025-09-03 14:17:31,453 - groq._base_client - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a technical support specialist. Help users troubleshoot hardware, software, and network issues. Provide step-by-step guidance for resolving technical problems.'}, {'role': 'user', 'content': "I'm having trouble with my internet connection"}], 'model': 'llama-3.1-8b-instant', 'max_tokens': 1000, 'temperature': 0.7}}
2025-09-03 14:17:31,453 - httpcore.connection - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-09-03 14:17:31,500 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10afc1e50>
2025-09-03 14:17:31,501 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x10ad145f0> server_hostname='api.groq.com' timeout=5.0
2025-09-03 14:17:31,551 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10afc0050>
2025-09-03 14:17:31,551 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-03 14:17:31,551 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-09-03 14:17:31,551 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-03 14:17:31,552 - httpcore.http11 - DEBUG - send_request_body.complete
2025-09-03 14:17:31,552 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-03 14:17:32,077 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 03 Sep 2025 08:47:31 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Content-Encoding', b'br'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'bom'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14392'), (b'x-ratelimit-remaining-tokens', b'1195'), (b'x-ratelimit-reset-requests', b'47.651999999s'), (b'x-ratelimit-reset-tokens', b'48.042s'), (b'x-request-id', b'req_01k47c4zrseb6vegg8tjynb6eg'), (b'via', b'1.1 google'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=TXYkVk.icVbzOoKJOcpzDU5JjJKOyyz5e8FUIse_sJU-1756889251-1.0.1.1-VG.8NSGKA9JAA0CGiiQVhOUUm64orAtiwk25cvpWlaWaMfXXkyQfnCc.orH70JndQs1FW15B1U5g9ygQnRVxoP_6sElMCm3rMw2E4IhgfK0; path=/; expires=Wed, 03-Sep-25 09:17:31 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9793fb9e4c5f3223-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-03 14:17:32,078 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 14:17:32,078 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-03 14:17:32,078 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-09-03 14:17:32,078 - httpcore.http11 - DEBUG - response_closed.started
2025-09-03 14:17:32,078 - httpcore.http11 - DEBUG - response_closed.complete
2025-09-03 14:17:32,078 - groq._base_client - DEBUG - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
2025-09-03 14:17:32,080 - prompt_manager.app.api.v1.api - INFO - Generated persona response for prompt 'tech_support' with persona type 'dynamic_persona'
2025-09-03 14:17:32,080 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/test-persona Status: 200 Time: 1020.9ms
2025-09-03 14:17:32,081 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 14:17:32,081 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 14:17:32,081 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 14:17:32,081 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 14:17:32,081 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 14:18:21,515 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:18:21,518 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 3.55ms
2025-09-03 14:18:31,468 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:18:31,470 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 2.08ms
2025-09-03 14:18:31,476 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-03 14:18:31,477 - multipart.multipart - DEBUG - Calling on_field_start with no data
2025-09-03 14:18:31,478 - multipart.multipart - DEBUG - Calling on_field_name with data[0:8]
2025-09-03 14:18:31,478 - multipart.multipart - DEBUG - Calling on_field_data with data[9:32]
2025-09-03 14:18:31,478 - multipart.multipart - DEBUG - Calling on_field_end with no data
2025-09-03 14:18:31,478 - multipart.multipart - DEBUG - Calling on_field_start with no data
2025-09-03 14:18:31,479 - multipart.multipart - DEBUG - Calling on_field_name with data[33:41]
2025-09-03 14:18:31,479 - multipart.multipart - DEBUG - Calling on_field_data with data[42:50]
2025-09-03 14:18:31,479 - multipart.multipart - DEBUG - Calling on_field_end with no data
2025-09-03 14:18:31,479 - multipart.multipart - DEBUG - Calling on_end with no data
2025-09-03 14:18:31,481 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 14:18:31,482 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 14:18:31,486 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 14:18:31,487 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 14:18:31,487 - sqlalchemy.engine.Engine - INFO - [cached since 66.18s ago] ('prishatank6@gmail.com', 1, 0)
2025-09-03 14:18:31,761 - prompt_manager.app.api.v1.endpoints.auth - INFO - Created access token for user: prishatank6@gmail.com
2025-09-03 14:18:31,762 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 200 Time: 286.23ms
2025-09-03 14:18:31,762 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 14:18:31,762 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 14:18:31,762 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 14:18:31,763 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 14:18:31,791 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:18:31,791 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.39ms
2025-09-03 14:18:32,886 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:18:32,886 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.78ms
2025-09-03 14:18:35,500 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:18:35,501 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.71ms
2025-09-03 14:18:35,503 - httpcore.connection - DEBUG - close.started
2025-09-03 14:18:35,503 - httpcore.connection - DEBUG - close.complete
2025-09-03 14:18:35,517 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 14:18:35,519 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 14:18:35,519 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 14:18:35,519 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 14:18:35,519 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 14:18:35,520 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 14:18:35,520 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 14:18:35,520 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 14:18:35,521 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 14:18:35,521 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 08:48:31+00:00 (UTC)
2025-09-03 14:18:35,521 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 14:18:35,521 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 14:18:35,521 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 14:18:35,522 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 14:18:35,522 - sqlalchemy.engine.Engine - INFO - [cached since 70.21s ago] ('prishatank6@gmail.com', 1, 0)
2025-09-03 14:18:35,523 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 14)
2025-09-03 14:18:35,524 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 14:18:35,525 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 14:18:35,529 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts) AS anon_1
2025-09-03 14:18:35,529 - sqlalchemy.engine.Engine - INFO - [generated in 0.00048s] ()
2025-09-03 14:18:35,531 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts ORDER BY prompts.updated_at DESC
 LIMIT ? OFFSET ?
2025-09-03 14:18:35,531 - sqlalchemy.engine.Engine - INFO - [generated in 0.00033s] (100, 0)
2025-09-03 14:18:35,536 - prompt_manager.app.api.v1.api - INFO - Found 81 prompts out of 81 total
2025-09-03 14:18:35,538 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 21.12ms
2025-09-03 14:18:35,539 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 14:18:35,539 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 14:18:35,539 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 14:18:35,539 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 14:18:35,539 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 14:18:46,523 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:18:46,524 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:18:46,525 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.3ms
2025-09-03 14:18:46,526 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.75ms
2025-09-03 14:18:46,572 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/1
2025-09-03 14:18:46,573 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 14:18:46,573 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 14:18:46,574 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 14:18:46,574 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 14:18:46,574 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 14:18:46,574 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 14:18:46,574 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 14:18:46,575 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 14:18:46,575 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 08:48:31+00:00 (UTC)
2025-09-03 14:18:46,575 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 14:18:46,575 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 14:18:46,576 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 14:18:46,576 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 14:18:46,577 - sqlalchemy.engine.Engine - INFO - [cached since 81.27s ago] ('prishatank6@gmail.com', 1, 0)
2025-09-03 14:18:46,579 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 14)
2025-09-03 14:18:46,579 - prompt_manager.app.api.v1.api - INFO - Retrieving prompt with ID: 1
2025-09-03 14:18:46,580 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 14:18:46,580 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.id = ?
 LIMIT ? OFFSET ?
2025-09-03 14:18:46,580 - sqlalchemy.engine.Engine - INFO - [cached since 80.34s ago] (1, 1, 0)
2025-09-03 14:18:46,581 - prompt_manager.app.api.v1.api - WARNING - Prompt with ID 1 not found
2025-09-03 14:18:46,581 - prompt_manager.app.database - ERROR - Error in database session: Prompt not found
2025-09-03 14:18:46,582 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 14:18:46,582 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 14:18:46,582 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 14:18:46,582 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 14:18:46,582 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/1 Status: 404 Time: 10.18ms
2025-09-03 14:18:50,686 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:18:50,688 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.12ms
2025-09-03 14:18:50,740 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:18:50,741 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.66ms
2025-09-03 14:18:50,748 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/74
2025-09-03 14:18:50,748 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 14:18:50,748 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 14:18:50,748 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 14:18:50,749 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 14:18:50,749 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 14:18:50,749 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 14:18:50,749 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 14:18:50,749 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 14:18:50,749 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 08:48:31+00:00 (UTC)
2025-09-03 14:18:50,749 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 14:18:50,749 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 14:18:50,749 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 14:18:50,750 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 14:18:50,750 - sqlalchemy.engine.Engine - INFO - [cached since 85.44s ago] ('prishatank6@gmail.com', 1, 0)
2025-09-03 14:18:50,750 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 14)
2025-09-03 14:18:50,750 - prompt_manager.app.api.v1.api - INFO - Retrieving prompt with ID: 74
2025-09-03 14:18:50,750 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 14:18:50,750 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.id = ?
 LIMIT ? OFFSET ?
2025-09-03 14:18:50,750 - sqlalchemy.engine.Engine - INFO - [cached since 84.51s ago] (74, 1, 0)
2025-09-03 14:18:50,751 - prompt_manager.app.api.v1.api - INFO - Successfully retrieved prompt Coding Assistant v1.0.0 (ID: 74)
2025-09-03 14:18:50,751 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/74 Status: 200 Time: 3.44ms
2025-09-03 14:18:50,751 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 14:18:50,752 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 14:18:50,752 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 14:18:50,752 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 14:18:50,752 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 14:21:33,979 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 14:21:34,088 - httpcore.connection - DEBUG - close.started
2025-09-03 14:21:34,091 - httpcore.connection - DEBUG - close.complete
2025-09-03 14:21:34,091 - httpcore.connection - DEBUG - close.started
2025-09-03 14:21:34,092 - httpcore.connection - DEBUG - close.complete
2025-09-03 14:21:34,094 - httpcore.connection - DEBUG - close.started
2025-09-03 14:21:34,097 - httpcore.connection - DEBUG - close.complete
2025-09-03 14:21:34,098 - httpcore.connection - DEBUG - close.started
2025-09-03 14:21:34,100 - httpcore.connection - DEBUG - close.complete
2025-09-03 14:21:34,100 - httpcore.connection - DEBUG - close.started
2025-09-03 14:21:34,101 - httpcore.connection - DEBUG - close.complete
2025-09-03 14:21:34,101 - httpcore.connection - DEBUG - close.started
2025-09-03 14:21:34,102 - httpcore.connection - DEBUG - close.complete
2025-09-03 14:21:35,498 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 14:21:35,499 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("users")
2025-09-03 14:21:35,499 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 14:21:35,500 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("prompts")
2025-09-03 14:21:35,500 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 14:21:35,500 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("prompt_history")
2025-09-03 14:21:35,500 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 14:21:35,501 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-09-03 14:21:35,753 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 14:21:35,753 - prompt_manager.app.main - INFO - Log level: DEBUG
2025-09-03 14:21:35,754 - prompt_manager.app.main - INFO - Database URL: sqlite:////Users/prisha/Desktop/Coding/system prompt/prompts.db
2025-09-03 14:22:21,956 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 14:22:23,724 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 14:22:23,725 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("users")
2025-09-03 14:22:23,725 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 14:22:23,726 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("prompts")
2025-09-03 14:22:23,726 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 14:22:23,727 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("prompt_history")
2025-09-03 14:22:23,727 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 14:22:23,727 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-09-03 14:22:23,769 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 14:22:23,769 - prompt_manager.app.main - INFO - Log level: DEBUG
2025-09-03 14:22:23,770 - prompt_manager.app.main - INFO - Database URL: sqlite:////Users/prisha/Desktop/Coding/system prompt/prompts.db
2025-09-03 14:22:46,107 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:22:46,118 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 11.83ms
2025-09-03 14:30:03,867 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:30:03,877 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 10.57ms
2025-09-03 14:30:03,885 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-03 14:30:03,890 - multipart.multipart - DEBUG - Calling on_field_start with no data
2025-09-03 14:30:03,891 - multipart.multipart - DEBUG - Calling on_field_name with data[0:8]
2025-09-03 14:30:03,891 - multipart.multipart - DEBUG - Calling on_field_data with data[9:32]
2025-09-03 14:30:03,891 - multipart.multipart - DEBUG - Calling on_field_end with no data
2025-09-03 14:30:03,891 - multipart.multipart - DEBUG - Calling on_field_start with no data
2025-09-03 14:30:03,891 - multipart.multipart - DEBUG - Calling on_field_name with data[33:41]
2025-09-03 14:30:03,891 - multipart.multipart - DEBUG - Calling on_field_data with data[42:50]
2025-09-03 14:30:03,892 - multipart.multipart - DEBUG - Calling on_field_end with no data
2025-09-03 14:30:03,892 - multipart.multipart - DEBUG - Calling on_end with no data
2025-09-03 14:30:03,896 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 14:30:03,897 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 14:30:03,930 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 14:30:03,933 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 14:30:03,933 - sqlalchemy.engine.Engine - INFO - [generated in 0.00029s] ('prishatank6@gmail.com', 1, 0)
2025-09-03 14:30:03,938 - passlib.handlers.bcrypt - DEBUG - detected 'bcrypt' backend, version '4.0.1'
2025-09-03 14:30:03,940 - passlib.handlers.bcrypt - DEBUG - 'bcrypt' backend lacks $2$ support, enabling workaround
2025-09-03 14:30:04,240 - prompt_manager.app.api.v1.endpoints.auth - INFO - Created access token for user: prishatank6@gmail.com
2025-09-03 14:30:04,251 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 200 Time: 366.26ms
2025-09-03 14:30:04,251 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 14:30:04,251 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 14:30:04,251 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 14:30:04,251 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 14:30:04,310 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:30:04,310 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.38ms
2025-09-03 14:30:05,970 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:30:05,971 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.86ms
2025-09-03 14:30:10,454 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:30:10,456 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.79ms
2025-09-03 14:30:11,545 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:30:11,546 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.86ms
2025-09-03 14:30:14,121 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:30:14,122 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.75ms
2025-09-03 14:30:16,688 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:30:16,689 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.78ms
2025-09-03 14:30:16,706 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/1
2025-09-03 14:30:16,710 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 14:30:16,710 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 14:30:16,710 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 14:30:16,710 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 14:30:16,711 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 14:30:16,711 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 14:30:16,711 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 14:30:16,712 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 14:30:16,712 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 09:00:04+00:00 (UTC)
2025-09-03 14:30:16,713 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 14:30:16,713 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 14:30:16,721 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 14:30:16,723 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 14:30:16,723 - sqlalchemy.engine.Engine - INFO - [cached since 12.79s ago] ('prishatank6@gmail.com', 1, 0)
2025-09-03 14:30:16,725 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 14)
2025-09-03 14:30:16,726 - prompt_manager.app.api.v1.api - INFO - Retrieving prompt with ID: 1
2025-09-03 14:30:16,727 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 14:30:16,730 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.id = ?
 LIMIT ? OFFSET ?
2025-09-03 14:30:16,730 - sqlalchemy.engine.Engine - INFO - [generated in 0.00032s] (1, 1, 0)
2025-09-03 14:30:16,731 - prompt_manager.app.api.v1.api - WARNING - Prompt with ID 1 not found
2025-09-03 14:30:16,731 - prompt_manager.app.database - ERROR - Error in database session: Prompt not found
2025-09-03 14:30:16,731 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 14:30:16,731 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 14:30:16,731 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 14:30:16,732 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 14:30:16,732 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/1 Status: 404 Time: 25.97ms
2025-09-03 14:30:20,556 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:30:20,557 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.93ms
2025-09-03 14:30:20,611 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:30:20,611 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.49ms
2025-09-03 14:30:20,622 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/74
2025-09-03 14:30:20,623 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 14:30:20,623 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 14:30:20,623 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 14:30:20,623 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 14:30:20,623 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 14:30:20,623 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 14:30:20,623 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 14:30:20,624 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 14:30:20,624 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 09:00:04+00:00 (UTC)
2025-09-03 14:30:20,624 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 14:30:20,624 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 14:30:20,624 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 14:30:20,625 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 14:30:20,625 - sqlalchemy.engine.Engine - INFO - [cached since 16.69s ago] ('prishatank6@gmail.com', 1, 0)
2025-09-03 14:30:20,625 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 14)
2025-09-03 14:30:20,626 - prompt_manager.app.api.v1.api - INFO - Retrieving prompt with ID: 74
2025-09-03 14:30:20,626 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 14:30:20,626 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.id = ?
 LIMIT ? OFFSET ?
2025-09-03 14:30:20,626 - sqlalchemy.engine.Engine - INFO - [cached since 3.897s ago] (74, 1, 0)
2025-09-03 14:30:20,628 - prompt_manager.app.api.v1.api - INFO - Successfully retrieved prompt Coding Assistant v1.0.0 (ID: 74)
2025-09-03 14:30:20,629 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/74 Status: 200 Time: 7.59ms
2025-09-03 14:30:20,631 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 14:30:20,631 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 14:30:20,631 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 14:30:20,631 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 14:30:20,631 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 14:30:26,702 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:30:26,703 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.75ms
2025-09-03 14:30:26,721 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/74
2025-09-03 14:30:26,722 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 14:30:26,722 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 14:30:26,723 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 14:30:26,723 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 14:30:26,723 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 14:30:26,723 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 14:30:26,723 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 14:30:26,724 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 14:30:26,724 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 09:00:04+00:00 (UTC)
2025-09-03 14:30:26,724 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 14:30:26,724 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 14:30:26,725 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 14:30:26,726 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 14:30:26,726 - sqlalchemy.engine.Engine - INFO - [cached since 22.79s ago] ('prishatank6@gmail.com', 1, 0)
2025-09-03 14:30:26,727 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 14)
2025-09-03 14:30:26,727 - prompt_manager.app.api.v1.api - INFO - Retrieving prompt with ID: 74
2025-09-03 14:30:26,728 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 14:30:26,729 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.id = ?
 LIMIT ? OFFSET ?
2025-09-03 14:30:26,729 - sqlalchemy.engine.Engine - INFO - [cached since 10s ago] (74, 1, 0)
2025-09-03 14:30:26,729 - prompt_manager.app.api.v1.api - INFO - Successfully retrieved prompt Coding Assistant v1.0.0 (ID: 74)
2025-09-03 14:30:26,730 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/74 Status: 200 Time: 8.55ms
2025-09-03 14:30:26,730 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 14:30:26,730 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 14:30:26,730 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 14:30:26,730 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 14:30:26,731 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 14:30:28,211 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:30:28,211 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.71ms
2025-09-03 14:30:43,710 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:30:43,713 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 2.73ms
2025-09-03 14:30:43,755 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:30:43,755 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.54ms
2025-09-03 14:30:43,765 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/test-persona
2025-09-03 14:30:43,766 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 14:30:43,766 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 14:30:43,766 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 14:30:43,766 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 14:30:43,766 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 14:30:43,766 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 14:30:43,766 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 14:30:43,767 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 14:30:43,767 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 09:00:04+00:00 (UTC)
2025-09-03 14:30:43,767 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 14:30:43,767 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 14:30:43,767 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 14:30:43,767 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 14:30:43,768 - sqlalchemy.engine.Engine - INFO - [cached since 39.84s ago] ('prishatank6@gmail.com', 1, 0)
2025-09-03 14:30:43,768 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 14)
2025-09-03 14:30:43,770 - prompt_manager.app.database - ERROR - Error in database session: [{'type': 'string_type', 'loc': ('body',), 'msg': 'Input should be a valid string', 'input': {'user_input': 'Hello, I want to write a palindrome code.'}, 'url': 'https://errors.pydantic.dev/2.4/v/string_type'}]
2025-09-03 14:30:43,770 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 14:30:43,770 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 14:30:43,770 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 14:30:43,770 - prompt_manager.app.main - ERROR - Validation error for request: POST http://localhost:8000/api/v1/prompts/test-persona
2025-09-03 14:30:43,771 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/test-persona Status: 422 Time: 5.97ms
2025-09-03 14:31:12,683 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 14:31:14,122 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 14:31:14,122 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("users")
2025-09-03 14:31:14,122 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 14:31:14,123 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("prompts")
2025-09-03 14:31:14,123 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 14:31:14,123 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("prompt_history")
2025-09-03 14:31:14,123 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 14:31:14,123 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-09-03 14:31:14,146 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 14:31:14,146 - prompt_manager.app.main - INFO - Log level: DEBUG
2025-09-03 14:31:14,146 - prompt_manager.app.main - INFO - Database URL: sqlite:////Users/prisha/Desktop/Coding/system prompt/prompts.db
2025-09-03 14:31:43,518 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:31:43,521 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 3.26ms
2025-09-03 14:31:54,706 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:31:54,711 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 5.91ms
2025-09-03 14:31:54,717 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-03 14:31:54,718 - multipart.multipart - DEBUG - Calling on_field_start with no data
2025-09-03 14:31:54,718 - multipart.multipart - DEBUG - Calling on_field_name with data[0:8]
2025-09-03 14:31:54,719 - multipart.multipart - DEBUG - Calling on_field_data with data[9:32]
2025-09-03 14:31:54,719 - multipart.multipart - DEBUG - Calling on_field_end with no data
2025-09-03 14:31:54,719 - multipart.multipart - DEBUG - Calling on_field_start with no data
2025-09-03 14:31:54,719 - multipart.multipart - DEBUG - Calling on_field_name with data[33:41]
2025-09-03 14:31:54,719 - multipart.multipart - DEBUG - Calling on_field_data with data[42:50]
2025-09-03 14:31:54,719 - multipart.multipart - DEBUG - Calling on_field_end with no data
2025-09-03 14:31:54,719 - multipart.multipart - DEBUG - Calling on_end with no data
2025-09-03 14:31:54,724 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 14:31:54,725 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 14:31:54,750 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 14:31:54,755 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 14:31:54,755 - sqlalchemy.engine.Engine - INFO - [generated in 0.00025s] ('prishatank6@gmail.com', 1, 0)
2025-09-03 14:31:54,758 - passlib.handlers.bcrypt - DEBUG - detected 'bcrypt' backend, version '4.0.1'
2025-09-03 14:31:54,759 - passlib.handlers.bcrypt - DEBUG - 'bcrypt' backend lacks $2$ support, enabling workaround
2025-09-03 14:31:55,034 - prompt_manager.app.api.v1.endpoints.auth - INFO - Created access token for user: prishatank6@gmail.com
2025-09-03 14:31:55,046 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 200 Time: 328.38ms
2025-09-03 14:31:55,046 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 14:31:55,046 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 14:31:55,046 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 14:31:55,046 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 14:31:55,092 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:31:55,092 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.31ms
2025-09-03 14:31:56,720 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:31:56,720 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.8ms
2025-09-03 14:32:11,971 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:32:11,974 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 2.16ms
2025-09-03 14:32:12,026 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:32:12,027 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.74ms
2025-09-03 14:32:12,036 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/test-persona
2025-09-03 14:32:12,037 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 14:32:12,037 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 14:32:12,037 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 14:32:12,038 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 14:32:12,038 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 14:32:12,038 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 14:32:12,038 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 14:32:12,038 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 14:32:12,038 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 09:01:55+00:00 (UTC)
2025-09-03 14:32:12,038 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 14:32:12,038 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 14:32:12,038 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 14:32:12,039 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 14:32:12,039 - sqlalchemy.engine.Engine - INFO - [cached since 17.28s ago] ('prishatank6@gmail.com', 1, 0)
2025-09-03 14:32:12,039 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 14)
2025-09-03 14:32:12,040 - prompt_manager.app.api.v1.api - INFO - Testing persona with automatic prompt selection (user: prishatank6@gmail.com)
2025-09-03 14:32:12,040 - prompt_manager.app.crud.crud - INFO - Finding most relevant prompt for input: Hello, I want to write a palindrome code.
2025-09-03 14:32:12,042 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 14:32:12,044 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.status = ? AND prompts.is_active = 1
2025-09-03 14:32:12,044 - sqlalchemy.engine.Engine - INFO - [generated in 0.00025s] ('active',)
2025-09-03 14:32:12,045 - prompt_manager.app.crud.crud - INFO - Found 16 active prompts in the database
2025-09-03 14:32:12,045 - prompt_manager.app.crud.crud - INFO - Active prompt 1: ID=28, Name=marketing, Status=active, is_active=True
2025-09-03 14:32:12,045 - prompt_manager.app.crud.crud - INFO - Active prompt 2: ID=31, Name=test_live_version_sync, Status=active, is_active=True
2025-09-03 14:32:12,045 - prompt_manager.app.crud.crud - INFO - Active prompt 3: ID=33, Name=debug_live_test, Status=active, is_active=True
2025-09-03 14:32:12,046 - prompt_manager.app.crud.crud - INFO - Active prompt 4: ID=37, Name=test_active_validation, Status=active, is_active=True
2025-09-03 14:32:12,046 - prompt_manager.app.crud.crud - INFO - Active prompt 5: ID=38, Name=test_auto_status, Status=active, is_active=True
2025-09-03 14:32:12,046 - prompt_manager.app.crud.crud - INFO - Active prompt 6: ID=40, Name=test_constraint, Status=active, is_active=True
2025-09-03 14:32:12,046 - prompt_manager.app.crud.crud - INFO - Active prompt 7: ID=43, Name=endpoint_test, Status=active, is_active=True
2025-09-03 14:32:12,046 - prompt_manager.app.crud.crud - INFO - Active prompt 8: ID=45, Name=final_test, Status=active, is_active=True
2025-09-03 14:32:12,046 - prompt_manager.app.crud.crud - INFO - Active prompt 9: ID=49, Name=full_test_prompt, Status=active, is_active=True
2025-09-03 14:32:12,046 - prompt_manager.app.crud.crud - INFO - Active prompt 10: ID=55, Name=lifecycle_test_final, Status=active, is_active=True
2025-09-03 14:32:12,046 - prompt_manager.app.crud.crud - INFO - Active prompt 11: ID=62, Name=code, Status=active, is_active=True
2025-09-03 14:32:12,046 - prompt_manager.app.crud.crud - INFO - Active prompt 12: ID=69, Name=Healthcare assistant, Status=active, is_active=True
2025-09-03 14:32:12,046 - prompt_manager.app.crud.crud - INFO - Active prompt 13: ID=80, Name=mental_health_support, Status=active, is_active=True
2025-09-03 14:32:12,046 - prompt_manager.app.crud.crud - INFO - Active prompt 14: ID=81, Name=coding_assistant, Status=active, is_active=True
2025-09-03 14:32:12,046 - prompt_manager.app.crud.crud - INFO - Active prompt 15: ID=82, Name=cooking_assistant, Status=active, is_active=True
2025-09-03 14:32:12,046 - prompt_manager.app.crud.crud - INFO - Active prompt 16: ID=83, Name=tech_support, Status=active, is_active=True
2025-09-03 14:32:12,046 - prompt_manager.app.crud.crud - INFO - Sending 16 prompts to LLM for analysis
2025-09-03 14:32:12,046 - prompt_manager.app.crud.crud - DEBUG - System prompt: You are an expert at matching user queries to the most appropriate system prompt. 
        Your goal is to analyze the user's input and select the single most relevant prompt ID from the provided list.
        
        MATCHING GUIDELINES:
        1. For coding/technical questions (Python, algorithms, programming), choose the coding assistant prompt.
        2. For internet/connection/tech issues, choose the tech support prompt.
        3. For mental health/stress/anxiety concerns, choose the mental health support prompt.
        4. For cooking/recipes/food questions, choose the cooking assistant prompt.
        
        INSTRUCTIONS:
        1. Carefully read the user's input and identify the main topic/domain.
        2. Review all available prompts and their metadata (name, tags, content preview).
        3. Select the prompt that best matches the user's intent and domain.
        4. Consider both the content and the context of the query.
        5. If the query is ambiguous but could match multiple domains, choose the most likely one.
        
        RESPONSE FORMAT:
        - Return ONLY the numeric ID of the selected prompt (e.g., "42").
        - If no prompt is relevant, return "none".
        - DO NOT include any other text or explanation in your response.
        
        IMPORTANT: Focus on the user's intent and choose the most appropriate prompt, even if the match isn't perfect.
        
2025-09-03 14:32:12,046 - prompt_manager.app.crud.crud - DEBUG - User message: USER INPUT:
        Hello, I want to write a palindrome code.
        
        AVAILABLE PROMPTS (ID, Name, Content Preview):
        
ID: 28 | Name: marketing
Preview: Testing
Tags: testing

ID: 31 | Name: test_live_version_sync
Preview: Second version content
Tags: test

ID: 33 | Name: debug_live_test
Preview: Debug content v2
Tags: debug

ID: 37 | Name: test_active_validation
Preview: First version
Tags: test

ID: 38 | Name: test_auto_status
Preview: Testing auto status
Tags: test

ID: 40 | Name: test_constraint
Preview: First active version
Tags: test

ID: 43 | Name: endpoint_test
Preview: Updated final test
Tags: test

ID: 45 | Name: final_test
Preview: Final test

ID: 49 | Name: full_test_prompt
Preview: Initial content for the full test.
Tags: testing, full-flow

ID: 55 | Name: lifecycle_test_final
Preview: Lifecycle test v2.0.0
Tags: lifecycle

ID: 62 | Name: code
Preview: Update for Debugger
Tags: suggestion

ID: 69 | Name: Healthcare assistant
Preview: Just for checking
Tags: wellbeing

ID: 80 | Name: mental_health_support
Preview: You are a compassionate mental health support assistant. Provide empathetic and supportive responses...
Tags: mental_health, support, wellbeing

ID: 81 | Name: coding_assistant
Preview: You are an expert programming assistant. Help users with coding questions, algorithm design, debuggi...
Tags: programming, coding, algorithms

ID: 82 | Name: cooking_assistant
Preview: You are a professional chef and cooking instructor. Provide detailed recipes, cooking tips, and tech...
Tags: cooking, recipes, baking

ID: 83 | Name: tech_support
Preview: You are a technical support specialist. Help users troubleshoot hardware, software, and network issu...
Tags: tech_support, troubleshooting, it

        
        RESPONSE FORMAT:
        Return ONLY the numeric ID of the most relevant prompt, or 'none' if none match.
        Example: "42" or "none"
        
        YOUR RESPONSE (ID only):
2025-09-03 14:32:12,046 - prompt_manager.app.crud.crud - INFO - Initializing GROQ client...
2025-09-03 14:32:12,053 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-09-03 14:32:12,054 - httpx - DEBUG - load_verify_locations cafile='/Applications/anaconda3/lib/python3.11/site-packages/certifi/cacert.pem'
2025-09-03 14:32:12,073 - prompt_manager.app.crud.crud - INFO - Sending request to GROQ API...
2025-09-03 14:32:12,074 - groq._base_client - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an expert at matching user queries to the most appropriate system prompt. \n        Your goal is to analyze the user\'s input and select the single most relevant prompt ID from the provided list.\n        \n        MATCHING GUIDELINES:\n        1. For coding/technical questions (Python, algorithms, programming), choose the coding assistant prompt.\n        2. For internet/connection/tech issues, choose the tech support prompt.\n        3. For mental health/stress/anxiety concerns, choose the mental health support prompt.\n        4. For cooking/recipes/food questions, choose the cooking assistant prompt.\n        \n        INSTRUCTIONS:\n        1. Carefully read the user\'s input and identify the main topic/domain.\n        2. Review all available prompts and their metadata (name, tags, content preview).\n        3. Select the prompt that best matches the user\'s intent and domain.\n        4. Consider both the content and the context of the query.\n        5. If the query is ambiguous but could match multiple domains, choose the most likely one.\n        \n        RESPONSE FORMAT:\n        - Return ONLY the numeric ID of the selected prompt (e.g., "42").\n        - If no prompt is relevant, return "none".\n        - DO NOT include any other text or explanation in your response.\n        \n        IMPORTANT: Focus on the user\'s intent and choose the most appropriate prompt, even if the match isn\'t perfect.\n        '}, {'role': 'user', 'content': 'USER INPUT:\n        Hello, I want to write a palindrome code.\n        \n        AVAILABLE PROMPTS (ID, Name, Content Preview):\n        \nID: 28 | Name: marketing\nPreview: Testing\nTags: testing\n\nID: 31 | Name: test_live_version_sync\nPreview: Second version content\nTags: test\n\nID: 33 | Name: debug_live_test\nPreview: Debug content v2\nTags: debug\n\nID: 37 | Name: test_active_validation\nPreview: First version\nTags: test\n\nID: 38 | Name: test_auto_status\nPreview: Testing auto status\nTags: test\n\nID: 40 | Name: test_constraint\nPreview: First active version\nTags: test\n\nID: 43 | Name: endpoint_test\nPreview: Updated final test\nTags: test\n\nID: 45 | Name: final_test\nPreview: Final test\n\nID: 49 | Name: full_test_prompt\nPreview: Initial content for the full test.\nTags: testing, full-flow\n\nID: 55 | Name: lifecycle_test_final\nPreview: Lifecycle test v2.0.0\nTags: lifecycle\n\nID: 62 | Name: code\nPreview: Update for Debugger\nTags: suggestion\n\nID: 69 | Name: Healthcare assistant\nPreview: Just for checking\nTags: wellbeing\n\nID: 80 | Name: mental_health_support\nPreview: You are a compassionate mental health support assistant. Provide empathetic and supportive responses...\nTags: mental_health, support, wellbeing\n\nID: 81 | Name: coding_assistant\nPreview: You are an expert programming assistant. Help users with coding questions, algorithm design, debuggi...\nTags: programming, coding, algorithms\n\nID: 82 | Name: cooking_assistant\nPreview: You are a professional chef and cooking instructor. Provide detailed recipes, cooking tips, and tech...\nTags: cooking, recipes, baking\n\nID: 83 | Name: tech_support\nPreview: You are a technical support specialist. Help users troubleshoot hardware, software, and network issu...\nTags: tech_support, troubleshooting, it\n\n        \n        RESPONSE FORMAT:\n        Return ONLY the numeric ID of the most relevant prompt, or \'none\' if none match.\n        Example: "42" or "none"\n        \n        YOUR RESPONSE (ID only):'}], 'model': 'llama-3.1-8b-instant', 'max_tokens': 10, 'temperature': 0.3}}
2025-09-03 14:32:12,423 - httpcore.connection - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-09-03 14:32:12,522 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1078d1610>
2025-09-03 14:32:12,523 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x107c11a30> server_hostname='api.groq.com' timeout=5.0
2025-09-03 14:32:12,572 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x107d77ed0>
2025-09-03 14:32:12,572 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-03 14:32:12,573 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-09-03 14:32:12,573 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-03 14:32:12,573 - httpcore.http11 - DEBUG - send_request_body.complete
2025-09-03 14:32:12,574 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-03 14:32:12,786 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 03 Sep 2025 09:02:12 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Content-Encoding', b'br'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'bom'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'5149'), (b'x-ratelimit-reset-requests', b'6s'), (b'x-ratelimit-reset-tokens', b'8.51s'), (b'x-request-id', b'req_01k47czw98eq3atkkp0y7ddkcx'), (b'via', b'1.1 google'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=tS_KKt4qoNEEfu5X.NNC1EBTIJyJXMu_a3Xco_g4.9U-1756890132-1.0.1.1-8C7MQGme4B8VVnd3JmGvFZ0kkt4XgQhZWiNBHMg0FkxT0x0jmHanrYhDG5VdfP5DLnJcKezUzPuaDLTiqKmK.AE71mCxAmXoPD8cPTVJYZM; path=/; expires=Wed, 03-Sep-25 09:32:12 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'97941121895e3a1a-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-03 14:32:12,789 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 14:32:12,790 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-03 14:32:12,792 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-09-03 14:32:12,792 - httpcore.http11 - DEBUG - response_closed.started
2025-09-03 14:32:12,792 - httpcore.http11 - DEBUG - response_closed.complete
2025-09-03 14:32:12,793 - groq._base_client - DEBUG - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
2025-09-03 14:32:12,804 - prompt_manager.app.crud.crud - INFO - Received response from GROQ API
2025-09-03 14:32:12,804 - prompt_manager.app.crud.crud - DEBUG - GROQ API response: ChatCompletion(choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChoiceMessage(content='81', role='assistant', tool_calls=None))], id='chatcmpl-c27d558e-a634-440a-876c-3dc1e7ff7acc', created=1756890132, model='llama-3.1-8b-instant', object='chat.completion', system_fingerprint='fp_c40956ddc4', usage=Usage(completion_time=0.003889024, completion_tokens=2, prompt_time=0.068996066, prompt_tokens=806, total_time=0.07288509, total_tokens=808, queue_time=0.044190451), usage_breakdown=None, x_groq={'id': 'req_01k47czw98eq3atkkp0y7ddkcx'}, service_tier='on_demand')
2025-09-03 14:32:12,805 - prompt_manager.app.crud.crud - INFO - LLM raw response: 81 for input: Hello, I want to write a palindrome code.
2025-09-03 14:32:12,805 - prompt_manager.app.crud.crud - INFO - Extracted prompt ID: 81
2025-09-03 14:32:12,808 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.id = ? AND prompts.status = ? AND prompts.is_active = 1
 LIMIT ? OFFSET ?
2025-09-03 14:32:12,808 - sqlalchemy.engine.Engine - INFO - [generated in 0.00046s] (81, 'active', 1, 0)
2025-09-03 14:32:12,809 - prompt_manager.app.crud.crud - INFO - Valid active prompt found: ID=81, Name=coding_assistant
2025-09-03 14:32:12,809 - prompt_manager.app.api.v1.api - INFO - Testing persona for prompt ID 81 (user: prishatank6@gmail.com)
2025-09-03 14:32:12,810 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.id = ?
 LIMIT ? OFFSET ?
2025-09-03 14:32:12,811 - sqlalchemy.engine.Engine - INFO - [generated in 0.00028s] (81, 1, 0)
2025-09-03 14:32:12,812 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-09-03 14:32:12,812 - httpx - DEBUG - load_verify_locations cafile='/Applications/anaconda3/lib/python3.11/site-packages/certifi/cacert.pem'
2025-09-03 14:32:12,845 - groq._base_client - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an expert programming assistant. Help users with coding questions, algorithm design, debugging, and best practices. Provide clear, concise, and accurate code examples in the requested programming language.'}, {'role': 'user', 'content': 'Hello, I want to write a palindrome code.'}], 'model': 'llama-3.1-8b-instant', 'max_tokens': 1000, 'temperature': 0.7}}
2025-09-03 14:32:12,846 - httpcore.connection - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-09-03 14:32:12,894 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x107d8e390>
2025-09-03 14:32:12,894 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x107c11910> server_hostname='api.groq.com' timeout=5.0
2025-09-03 14:32:12,948 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x107d8e450>
2025-09-03 14:32:12,948 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-03 14:32:12,948 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-09-03 14:32:12,948 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-03 14:32:12,949 - httpcore.http11 - DEBUG - send_request_body.complete
2025-09-03 14:32:12,949 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-03 14:32:13,607 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 03 Sep 2025 09:02:13 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Content-Encoding', b'br'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'bom'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14398'), (b'x-ratelimit-remaining-tokens', b'5144'), (b'x-ratelimit-reset-requests', b'11.619999999s'), (b'x-ratelimit-reset-tokens', b'8.558s'), (b'x-request-id', b'req_01k47czwn1fahaskfdp0b85reg'), (b'via', b'1.1 google'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=zaMfLHqkjU1_WuheCirtjDGo.T0frESyjBO13AjHXZA-1756890133-1.0.1.1-SJOukQeVMAAUMz7DJNhasNCen77mx9T1hnuBSpGrJtPefr935N7f_bApTvWcVB42gpNRnHXuwYtrHPwGC8kdevFWtJMF0hNtSAXR5i3lebc; path=/; expires=Wed, 03-Sep-25 09:32:13 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'97941123ec552e4d-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-03 14:32:13,607 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 14:32:13,607 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-03 14:32:13,608 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-09-03 14:32:13,608 - httpcore.http11 - DEBUG - response_closed.started
2025-09-03 14:32:13,608 - httpcore.http11 - DEBUG - response_closed.complete
2025-09-03 14:32:13,608 - groq._base_client - DEBUG - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
2025-09-03 14:32:13,610 - prompt_manager.app.api.v1.api - INFO - Generated persona response for prompt 'coding_assistant' with persona type 'dynamic_persona'
2025-09-03 14:32:13,610 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/test-persona Status: 200 Time: 1574.53ms
2025-09-03 14:32:13,611 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 14:32:13,611 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 14:32:13,611 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 14:32:13,611 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 14:32:13,612 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 14:32:36,856 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:32:36,859 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 3.5ms
2025-09-03 14:32:36,900 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:32:36,900 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.54ms
2025-09-03 14:32:36,910 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/test-persona
2025-09-03 14:32:36,912 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 14:32:36,912 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 14:32:36,912 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 14:32:36,912 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 14:32:36,912 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 14:32:36,912 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 14:32:36,912 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 14:32:36,913 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 14:32:36,913 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 09:01:55+00:00 (UTC)
2025-09-03 14:32:36,913 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 14:32:36,913 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 14:32:36,914 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 14:32:36,915 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 14:32:36,915 - sqlalchemy.engine.Engine - INFO - [cached since 42.16s ago] ('prishatank6@gmail.com', 1, 0)
2025-09-03 14:32:36,916 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 14)
2025-09-03 14:32:36,916 - prompt_manager.app.api.v1.api - INFO - Testing persona with automatic prompt selection (user: prishatank6@gmail.com)
2025-09-03 14:32:36,916 - prompt_manager.app.crud.crud - INFO - Finding most relevant prompt for input: I want a recipe for baking cookies
2025-09-03 14:32:36,917 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 14:32:36,918 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.status = ? AND prompts.is_active = 1
2025-09-03 14:32:36,920 - sqlalchemy.engine.Engine - INFO - [cached since 24.88s ago] ('active',)
2025-09-03 14:32:36,921 - prompt_manager.app.crud.crud - INFO - Found 16 active prompts in the database
2025-09-03 14:32:36,921 - prompt_manager.app.crud.crud - INFO - Active prompt 1: ID=28, Name=marketing, Status=active, is_active=True
2025-09-03 14:32:36,921 - prompt_manager.app.crud.crud - INFO - Active prompt 2: ID=31, Name=test_live_version_sync, Status=active, is_active=True
2025-09-03 14:32:36,923 - prompt_manager.app.crud.crud - INFO - Active prompt 3: ID=33, Name=debug_live_test, Status=active, is_active=True
2025-09-03 14:32:36,924 - prompt_manager.app.crud.crud - INFO - Active prompt 4: ID=37, Name=test_active_validation, Status=active, is_active=True
2025-09-03 14:32:36,924 - prompt_manager.app.crud.crud - INFO - Active prompt 5: ID=38, Name=test_auto_status, Status=active, is_active=True
2025-09-03 14:32:36,924 - prompt_manager.app.crud.crud - INFO - Active prompt 6: ID=40, Name=test_constraint, Status=active, is_active=True
2025-09-03 14:32:36,924 - prompt_manager.app.crud.crud - INFO - Active prompt 7: ID=43, Name=endpoint_test, Status=active, is_active=True
2025-09-03 14:32:36,924 - prompt_manager.app.crud.crud - INFO - Active prompt 8: ID=45, Name=final_test, Status=active, is_active=True
2025-09-03 14:32:36,924 - prompt_manager.app.crud.crud - INFO - Active prompt 9: ID=49, Name=full_test_prompt, Status=active, is_active=True
2025-09-03 14:32:36,924 - prompt_manager.app.crud.crud - INFO - Active prompt 10: ID=55, Name=lifecycle_test_final, Status=active, is_active=True
2025-09-03 14:32:36,924 - prompt_manager.app.crud.crud - INFO - Active prompt 11: ID=62, Name=code, Status=active, is_active=True
2025-09-03 14:32:36,924 - prompt_manager.app.crud.crud - INFO - Active prompt 12: ID=69, Name=Healthcare assistant, Status=active, is_active=True
2025-09-03 14:32:36,924 - prompt_manager.app.crud.crud - INFO - Active prompt 13: ID=80, Name=mental_health_support, Status=active, is_active=True
2025-09-03 14:32:36,924 - prompt_manager.app.crud.crud - INFO - Active prompt 14: ID=81, Name=coding_assistant, Status=active, is_active=True
2025-09-03 14:32:36,924 - prompt_manager.app.crud.crud - INFO - Active prompt 15: ID=82, Name=cooking_assistant, Status=active, is_active=True
2025-09-03 14:32:36,924 - prompt_manager.app.crud.crud - INFO - Active prompt 16: ID=83, Name=tech_support, Status=active, is_active=True
2025-09-03 14:32:36,924 - prompt_manager.app.crud.crud - INFO - Sending 16 prompts to LLM for analysis
2025-09-03 14:32:36,924 - prompt_manager.app.crud.crud - DEBUG - System prompt: You are an expert at matching user queries to the most appropriate system prompt. 
        Your goal is to analyze the user's input and select the single most relevant prompt ID from the provided list.
        
        MATCHING GUIDELINES:
        1. For coding/technical questions (Python, algorithms, programming), choose the coding assistant prompt.
        2. For internet/connection/tech issues, choose the tech support prompt.
        3. For mental health/stress/anxiety concerns, choose the mental health support prompt.
        4. For cooking/recipes/food questions, choose the cooking assistant prompt.
        
        INSTRUCTIONS:
        1. Carefully read the user's input and identify the main topic/domain.
        2. Review all available prompts and their metadata (name, tags, content preview).
        3. Select the prompt that best matches the user's intent and domain.
        4. Consider both the content and the context of the query.
        5. If the query is ambiguous but could match multiple domains, choose the most likely one.
        
        RESPONSE FORMAT:
        - Return ONLY the numeric ID of the selected prompt (e.g., "42").
        - If no prompt is relevant, return "none".
        - DO NOT include any other text or explanation in your response.
        
        IMPORTANT: Focus on the user's intent and choose the most appropriate prompt, even if the match isn't perfect.
        
2025-09-03 14:32:36,924 - prompt_manager.app.crud.crud - DEBUG - User message: USER INPUT:
        I want a recipe for baking cookies
        
        AVAILABLE PROMPTS (ID, Name, Content Preview):
        
ID: 28 | Name: marketing
Preview: Testing
Tags: testing

ID: 31 | Name: test_live_version_sync
Preview: Second version content
Tags: test

ID: 33 | Name: debug_live_test
Preview: Debug content v2
Tags: debug

ID: 37 | Name: test_active_validation
Preview: First version
Tags: test

ID: 38 | Name: test_auto_status
Preview: Testing auto status
Tags: test

ID: 40 | Name: test_constraint
Preview: First active version
Tags: test

ID: 43 | Name: endpoint_test
Preview: Updated final test
Tags: test

ID: 45 | Name: final_test
Preview: Final test

ID: 49 | Name: full_test_prompt
Preview: Initial content for the full test.
Tags: testing, full-flow

ID: 55 | Name: lifecycle_test_final
Preview: Lifecycle test v2.0.0
Tags: lifecycle

ID: 62 | Name: code
Preview: Update for Debugger
Tags: suggestion

ID: 69 | Name: Healthcare assistant
Preview: Just for checking
Tags: wellbeing

ID: 80 | Name: mental_health_support
Preview: You are a compassionate mental health support assistant. Provide empathetic and supportive responses...
Tags: mental_health, support, wellbeing

ID: 81 | Name: coding_assistant
Preview: You are an expert programming assistant. Help users with coding questions, algorithm design, debuggi...
Tags: programming, coding, algorithms

ID: 82 | Name: cooking_assistant
Preview: You are a professional chef and cooking instructor. Provide detailed recipes, cooking tips, and tech...
Tags: cooking, recipes, baking

ID: 83 | Name: tech_support
Preview: You are a technical support specialist. Help users troubleshoot hardware, software, and network issu...
Tags: tech_support, troubleshooting, it

        
        RESPONSE FORMAT:
        Return ONLY the numeric ID of the most relevant prompt, or 'none' if none match.
        Example: "42" or "none"
        
        YOUR RESPONSE (ID only):
2025-09-03 14:32:36,925 - prompt_manager.app.crud.crud - INFO - Initializing GROQ client...
2025-09-03 14:32:36,925 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-09-03 14:32:36,926 - httpx - DEBUG - load_verify_locations cafile='/Applications/anaconda3/lib/python3.11/site-packages/certifi/cacert.pem'
2025-09-03 14:32:36,946 - prompt_manager.app.crud.crud - INFO - Sending request to GROQ API...
2025-09-03 14:32:36,946 - groq._base_client - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an expert at matching user queries to the most appropriate system prompt. \n        Your goal is to analyze the user\'s input and select the single most relevant prompt ID from the provided list.\n        \n        MATCHING GUIDELINES:\n        1. For coding/technical questions (Python, algorithms, programming), choose the coding assistant prompt.\n        2. For internet/connection/tech issues, choose the tech support prompt.\n        3. For mental health/stress/anxiety concerns, choose the mental health support prompt.\n        4. For cooking/recipes/food questions, choose the cooking assistant prompt.\n        \n        INSTRUCTIONS:\n        1. Carefully read the user\'s input and identify the main topic/domain.\n        2. Review all available prompts and their metadata (name, tags, content preview).\n        3. Select the prompt that best matches the user\'s intent and domain.\n        4. Consider both the content and the context of the query.\n        5. If the query is ambiguous but could match multiple domains, choose the most likely one.\n        \n        RESPONSE FORMAT:\n        - Return ONLY the numeric ID of the selected prompt (e.g., "42").\n        - If no prompt is relevant, return "none".\n        - DO NOT include any other text or explanation in your response.\n        \n        IMPORTANT: Focus on the user\'s intent and choose the most appropriate prompt, even if the match isn\'t perfect.\n        '}, {'role': 'user', 'content': 'USER INPUT:\n        I want a recipe for baking cookies\n        \n        AVAILABLE PROMPTS (ID, Name, Content Preview):\n        \nID: 28 | Name: marketing\nPreview: Testing\nTags: testing\n\nID: 31 | Name: test_live_version_sync\nPreview: Second version content\nTags: test\n\nID: 33 | Name: debug_live_test\nPreview: Debug content v2\nTags: debug\n\nID: 37 | Name: test_active_validation\nPreview: First version\nTags: test\n\nID: 38 | Name: test_auto_status\nPreview: Testing auto status\nTags: test\n\nID: 40 | Name: test_constraint\nPreview: First active version\nTags: test\n\nID: 43 | Name: endpoint_test\nPreview: Updated final test\nTags: test\n\nID: 45 | Name: final_test\nPreview: Final test\n\nID: 49 | Name: full_test_prompt\nPreview: Initial content for the full test.\nTags: testing, full-flow\n\nID: 55 | Name: lifecycle_test_final\nPreview: Lifecycle test v2.0.0\nTags: lifecycle\n\nID: 62 | Name: code\nPreview: Update for Debugger\nTags: suggestion\n\nID: 69 | Name: Healthcare assistant\nPreview: Just for checking\nTags: wellbeing\n\nID: 80 | Name: mental_health_support\nPreview: You are a compassionate mental health support assistant. Provide empathetic and supportive responses...\nTags: mental_health, support, wellbeing\n\nID: 81 | Name: coding_assistant\nPreview: You are an expert programming assistant. Help users with coding questions, algorithm design, debuggi...\nTags: programming, coding, algorithms\n\nID: 82 | Name: cooking_assistant\nPreview: You are a professional chef and cooking instructor. Provide detailed recipes, cooking tips, and tech...\nTags: cooking, recipes, baking\n\nID: 83 | Name: tech_support\nPreview: You are a technical support specialist. Help users troubleshoot hardware, software, and network issu...\nTags: tech_support, troubleshooting, it\n\n        \n        RESPONSE FORMAT:\n        Return ONLY the numeric ID of the most relevant prompt, or \'none\' if none match.\n        Example: "42" or "none"\n        \n        YOUR RESPONSE (ID only):'}], 'model': 'llama-3.1-8b-instant', 'max_tokens': 10, 'temperature': 0.3}}
2025-09-03 14:32:36,947 - httpcore.connection - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-09-03 14:32:37,001 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x107d98a50>
2025-09-03 14:32:37,001 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x107c124e0> server_hostname='api.groq.com' timeout=5.0
2025-09-03 14:32:37,059 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x107d9bb90>
2025-09-03 14:32:37,060 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-03 14:32:37,060 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-09-03 14:32:37,060 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-03 14:32:37,060 - httpcore.http11 - DEBUG - send_request_body.complete
2025-09-03 14:32:37,060 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-03 14:32:37,466 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 03 Sep 2025 09:02:37 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Content-Encoding', b'br'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'bom'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'5150'), (b'x-ratelimit-reset-requests', b'6s'), (b'x-ratelimit-reset-tokens', b'8.5s'), (b'x-request-id', b'req_01k47d0m6de7t87w7z22bvwhz0'), (b'via', b'1.1 google'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=fo1y3OR2xHUdc5.jg83NJ_0iKBB1lj_1f8IP3E3QevE-1756890157-1.0.1.1-K2xXt0o8r4FHeIYzHNN0Df.wt6Up_hLgZ6BcSoJXZFkWqNClfmCwoXnt96GDkC0FiCTs6V1gRGWb5J6Gst15oXY4CnPmkXXsGsfs0zlNmFI; path=/; expires=Wed, 03-Sep-25 09:32:37 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'979411ba9a80424e-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-03 14:32:37,467 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 14:32:37,467 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-03 14:32:37,467 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-09-03 14:32:37,467 - httpcore.http11 - DEBUG - response_closed.started
2025-09-03 14:32:37,467 - httpcore.http11 - DEBUG - response_closed.complete
2025-09-03 14:32:37,468 - groq._base_client - DEBUG - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
2025-09-03 14:32:37,470 - prompt_manager.app.crud.crud - INFO - Received response from GROQ API
2025-09-03 14:32:37,470 - prompt_manager.app.crud.crud - DEBUG - GROQ API response: ChatCompletion(choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChoiceMessage(content='82', role='assistant', tool_calls=None))], id='chatcmpl-68fec238-0dd5-43da-8a3a-15367b7e5ac0', created=1756890157, model='llama-3.1-8b-instant', object='chat.completion', system_fingerprint='fp_2115512ff6', usage=Usage(completion_time=0.003867391, completion_tokens=2, prompt_time=0.162592615, prompt_tokens=803, total_time=0.166460006, total_tokens=805, queue_time=0.045872684), usage_breakdown=None, x_groq={'id': 'req_01k47d0m6de7t87w7z22bvwhz0'}, service_tier='on_demand')
2025-09-03 14:32:37,470 - prompt_manager.app.crud.crud - INFO - LLM raw response: 82 for input: I want a recipe for baking cookies
2025-09-03 14:32:37,470 - prompt_manager.app.crud.crud - INFO - Extracted prompt ID: 82
2025-09-03 14:32:37,472 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.id = ? AND prompts.status = ? AND prompts.is_active = 1
 LIMIT ? OFFSET ?
2025-09-03 14:32:37,472 - sqlalchemy.engine.Engine - INFO - [cached since 24.67s ago] (82, 'active', 1, 0)
2025-09-03 14:32:37,473 - prompt_manager.app.crud.crud - INFO - Valid active prompt found: ID=82, Name=cooking_assistant
2025-09-03 14:32:37,473 - prompt_manager.app.api.v1.api - INFO - Testing persona for prompt ID 82 (user: prishatank6@gmail.com)
2025-09-03 14:32:37,473 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.id = ?
 LIMIT ? OFFSET ?
2025-09-03 14:32:37,474 - sqlalchemy.engine.Engine - INFO - [cached since 24.66s ago] (82, 1, 0)
2025-09-03 14:32:37,475 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-09-03 14:32:37,476 - httpx - DEBUG - load_verify_locations cafile='/Applications/anaconda3/lib/python3.11/site-packages/certifi/cacert.pem'
2025-09-03 14:32:37,506 - groq._base_client - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a professional chef and cooking instructor. Provide detailed recipes, cooking tips, and techniques. Help users with meal planning, ingredient substitutions, and troubleshooting cooking problems.'}, {'role': 'user', 'content': 'I want a recipe for baking cookies'}], 'model': 'llama-3.1-8b-instant', 'max_tokens': 1000, 'temperature': 0.7}}
2025-09-03 14:32:37,506 - httpcore.connection - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-09-03 14:32:37,543 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x107d8de50>
2025-09-03 14:32:37,543 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x107c12600> server_hostname='api.groq.com' timeout=5.0
2025-09-03 14:32:37,603 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x107d8f650>
2025-09-03 14:32:37,604 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-03 14:32:37,604 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-09-03 14:32:37,604 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-03 14:32:37,604 - httpcore.http11 - DEBUG - send_request_body.complete
2025-09-03 14:32:37,604 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-03 14:32:38,697 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 03 Sep 2025 09:02:38 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Content-Encoding', b'br'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'bom'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14398'), (b'x-ratelimit-remaining-tokens', b'5158'), (b'x-ratelimit-reset-requests', b'11.459999999s'), (b'x-ratelimit-reset-tokens', b'8.413999999s'), (b'x-request-id', b'req_01k47d0mqce7ta5tbpc8vreqne'), (b'via', b'1.1 google'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=0_SLi0UXB.ggWFzaA1.O2izmxJv0U8wC3TDr7_g40N8-1756890158-1.0.1.1-nZFb97D0r6QdKHnS_c3O7s0G2dJVCn4Ii.Wk3_EAOc3LddfpH8VWTUJP4rHY5xV.CAMZL3JR9Vc.XY_lkoB87tblI7G5.RAsjR0_PpA2zMk; path=/; expires=Wed, 03-Sep-25 09:32:38 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'979411bdfb2e8ee3-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-03 14:32:38,699 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 14:32:38,699 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-03 14:32:38,701 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-09-03 14:32:38,702 - httpcore.http11 - DEBUG - response_closed.started
2025-09-03 14:32:38,702 - httpcore.http11 - DEBUG - response_closed.complete
2025-09-03 14:32:38,702 - groq._base_client - DEBUG - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
2025-09-03 14:32:38,706 - httpcore.connection - DEBUG - close.started
2025-09-03 14:32:38,708 - httpcore.connection - DEBUG - close.complete
2025-09-03 14:32:38,711 - prompt_manager.app.api.v1.api - INFO - Generated persona response for prompt 'cooking_assistant' with persona type 'dynamic_persona'
2025-09-03 14:32:38,712 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/test-persona Status: 200 Time: 1801.62ms
2025-09-03 14:32:38,712 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 14:32:38,712 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 14:32:38,713 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 14:32:38,713 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 14:32:38,713 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 14:33:08,371 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:33:08,373 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.81ms
2025-09-03 14:33:08,431 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:33:08,432 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.5ms
2025-09-03 14:33:08,442 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/test-persona
2025-09-03 14:33:08,443 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 14:33:08,443 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 14:33:08,443 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 14:33:08,444 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 14:33:08,444 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 14:33:08,444 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 14:33:08,444 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 14:33:08,444 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 14:33:08,444 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 09:01:55+00:00 (UTC)
2025-09-03 14:33:08,444 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 14:33:08,444 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 14:33:08,445 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 14:33:08,445 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 14:33:08,445 - sqlalchemy.engine.Engine - INFO - [cached since 73.69s ago] ('prishatank6@gmail.com', 1, 0)
2025-09-03 14:33:08,446 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 14)
2025-09-03 14:33:08,446 - prompt_manager.app.api.v1.api - INFO - Testing persona with automatic prompt selection (user: prishatank6@gmail.com)
2025-09-03 14:33:08,446 - prompt_manager.app.crud.crud - INFO - Finding most relevant prompt for input: What is subtraction?

2025-09-03 14:33:08,446 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 14:33:08,446 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.status = ? AND prompts.is_active = 1
2025-09-03 14:33:08,447 - sqlalchemy.engine.Engine - INFO - [cached since 56.4s ago] ('active',)
2025-09-03 14:33:08,447 - prompt_manager.app.crud.crud - INFO - Found 16 active prompts in the database
2025-09-03 14:33:08,447 - prompt_manager.app.crud.crud - INFO - Active prompt 1: ID=28, Name=marketing, Status=active, is_active=True
2025-09-03 14:33:08,447 - prompt_manager.app.crud.crud - INFO - Active prompt 2: ID=31, Name=test_live_version_sync, Status=active, is_active=True
2025-09-03 14:33:08,447 - prompt_manager.app.crud.crud - INFO - Active prompt 3: ID=33, Name=debug_live_test, Status=active, is_active=True
2025-09-03 14:33:08,447 - prompt_manager.app.crud.crud - INFO - Active prompt 4: ID=37, Name=test_active_validation, Status=active, is_active=True
2025-09-03 14:33:08,447 - prompt_manager.app.crud.crud - INFO - Active prompt 5: ID=38, Name=test_auto_status, Status=active, is_active=True
2025-09-03 14:33:08,447 - prompt_manager.app.crud.crud - INFO - Active prompt 6: ID=40, Name=test_constraint, Status=active, is_active=True
2025-09-03 14:33:08,447 - prompt_manager.app.crud.crud - INFO - Active prompt 7: ID=43, Name=endpoint_test, Status=active, is_active=True
2025-09-03 14:33:08,447 - prompt_manager.app.crud.crud - INFO - Active prompt 8: ID=45, Name=final_test, Status=active, is_active=True
2025-09-03 14:33:08,447 - prompt_manager.app.crud.crud - INFO - Active prompt 9: ID=49, Name=full_test_prompt, Status=active, is_active=True
2025-09-03 14:33:08,447 - prompt_manager.app.crud.crud - INFO - Active prompt 10: ID=55, Name=lifecycle_test_final, Status=active, is_active=True
2025-09-03 14:33:08,447 - prompt_manager.app.crud.crud - INFO - Active prompt 11: ID=62, Name=code, Status=active, is_active=True
2025-09-03 14:33:08,448 - prompt_manager.app.crud.crud - INFO - Active prompt 12: ID=69, Name=Healthcare assistant, Status=active, is_active=True
2025-09-03 14:33:08,448 - prompt_manager.app.crud.crud - INFO - Active prompt 13: ID=80, Name=mental_health_support, Status=active, is_active=True
2025-09-03 14:33:08,448 - prompt_manager.app.crud.crud - INFO - Active prompt 14: ID=81, Name=coding_assistant, Status=active, is_active=True
2025-09-03 14:33:08,448 - prompt_manager.app.crud.crud - INFO - Active prompt 15: ID=82, Name=cooking_assistant, Status=active, is_active=True
2025-09-03 14:33:08,448 - prompt_manager.app.crud.crud - INFO - Active prompt 16: ID=83, Name=tech_support, Status=active, is_active=True
2025-09-03 14:33:08,448 - prompt_manager.app.crud.crud - INFO - Sending 16 prompts to LLM for analysis
2025-09-03 14:33:08,448 - prompt_manager.app.crud.crud - DEBUG - System prompt: You are an expert at matching user queries to the most appropriate system prompt. 
        Your goal is to analyze the user's input and select the single most relevant prompt ID from the provided list.
        
        MATCHING GUIDELINES:
        1. For coding/technical questions (Python, algorithms, programming), choose the coding assistant prompt.
        2. For internet/connection/tech issues, choose the tech support prompt.
        3. For mental health/stress/anxiety concerns, choose the mental health support prompt.
        4. For cooking/recipes/food questions, choose the cooking assistant prompt.
        
        INSTRUCTIONS:
        1. Carefully read the user's input and identify the main topic/domain.
        2. Review all available prompts and their metadata (name, tags, content preview).
        3. Select the prompt that best matches the user's intent and domain.
        4. Consider both the content and the context of the query.
        5. If the query is ambiguous but could match multiple domains, choose the most likely one.
        
        RESPONSE FORMAT:
        - Return ONLY the numeric ID of the selected prompt (e.g., "42").
        - If no prompt is relevant, return "none".
        - DO NOT include any other text or explanation in your response.
        
        IMPORTANT: Focus on the user's intent and choose the most appropriate prompt, even if the match isn't perfect.
        
2025-09-03 14:33:08,448 - prompt_manager.app.crud.crud - DEBUG - User message: USER INPUT:
        What is subtraction?

        
        AVAILABLE PROMPTS (ID, Name, Content Preview):
        
ID: 28 | Name: marketing
Preview: Testing
Tags: testing

ID: 31 | Name: test_live_version_sync
Preview: Second version content
Tags: test

ID: 33 | Name: debug_live_test
Preview: Debug content v2
Tags: debug

ID: 37 | Name: test_active_validation
Preview: First version
Tags: test

ID: 38 | Name: test_auto_status
Preview: Testing auto status
Tags: test

ID: 40 | Name: test_constraint
Preview: First active version
Tags: test

ID: 43 | Name: endpoint_test
Preview: Updated final test
Tags: test

ID: 45 | Name: final_test
Preview: Final test

ID: 49 | Name: full_test_prompt
Preview: Initial content for the full test.
Tags: testing, full-flow

ID: 55 | Name: lifecycle_test_final
Preview: Lifecycle test v2.0.0
Tags: lifecycle

ID: 62 | Name: code
Preview: Update for Debugger
Tags: suggestion

ID: 69 | Name: Healthcare assistant
Preview: Just for checking
Tags: wellbeing

ID: 80 | Name: mental_health_support
Preview: You are a compassionate mental health support assistant. Provide empathetic and supportive responses...
Tags: mental_health, support, wellbeing

ID: 81 | Name: coding_assistant
Preview: You are an expert programming assistant. Help users with coding questions, algorithm design, debuggi...
Tags: programming, coding, algorithms

ID: 82 | Name: cooking_assistant
Preview: You are a professional chef and cooking instructor. Provide detailed recipes, cooking tips, and tech...
Tags: cooking, recipes, baking

ID: 83 | Name: tech_support
Preview: You are a technical support specialist. Help users troubleshoot hardware, software, and network issu...
Tags: tech_support, troubleshooting, it

        
        RESPONSE FORMAT:
        Return ONLY the numeric ID of the most relevant prompt, or 'none' if none match.
        Example: "42" or "none"
        
        YOUR RESPONSE (ID only):
2025-09-03 14:33:08,448 - prompt_manager.app.crud.crud - INFO - Initializing GROQ client...
2025-09-03 14:33:08,449 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-09-03 14:33:08,449 - httpx - DEBUG - load_verify_locations cafile='/Applications/anaconda3/lib/python3.11/site-packages/certifi/cacert.pem'
2025-09-03 14:33:08,479 - prompt_manager.app.crud.crud - INFO - Sending request to GROQ API...
2025-09-03 14:33:08,480 - groq._base_client - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an expert at matching user queries to the most appropriate system prompt. \n        Your goal is to analyze the user\'s input and select the single most relevant prompt ID from the provided list.\n        \n        MATCHING GUIDELINES:\n        1. For coding/technical questions (Python, algorithms, programming), choose the coding assistant prompt.\n        2. For internet/connection/tech issues, choose the tech support prompt.\n        3. For mental health/stress/anxiety concerns, choose the mental health support prompt.\n        4. For cooking/recipes/food questions, choose the cooking assistant prompt.\n        \n        INSTRUCTIONS:\n        1. Carefully read the user\'s input and identify the main topic/domain.\n        2. Review all available prompts and their metadata (name, tags, content preview).\n        3. Select the prompt that best matches the user\'s intent and domain.\n        4. Consider both the content and the context of the query.\n        5. If the query is ambiguous but could match multiple domains, choose the most likely one.\n        \n        RESPONSE FORMAT:\n        - Return ONLY the numeric ID of the selected prompt (e.g., "42").\n        - If no prompt is relevant, return "none".\n        - DO NOT include any other text or explanation in your response.\n        \n        IMPORTANT: Focus on the user\'s intent and choose the most appropriate prompt, even if the match isn\'t perfect.\n        '}, {'role': 'user', 'content': 'USER INPUT:\n        What is subtraction?\n\n        \n        AVAILABLE PROMPTS (ID, Name, Content Preview):\n        \nID: 28 | Name: marketing\nPreview: Testing\nTags: testing\n\nID: 31 | Name: test_live_version_sync\nPreview: Second version content\nTags: test\n\nID: 33 | Name: debug_live_test\nPreview: Debug content v2\nTags: debug\n\nID: 37 | Name: test_active_validation\nPreview: First version\nTags: test\n\nID: 38 | Name: test_auto_status\nPreview: Testing auto status\nTags: test\n\nID: 40 | Name: test_constraint\nPreview: First active version\nTags: test\n\nID: 43 | Name: endpoint_test\nPreview: Updated final test\nTags: test\n\nID: 45 | Name: final_test\nPreview: Final test\n\nID: 49 | Name: full_test_prompt\nPreview: Initial content for the full test.\nTags: testing, full-flow\n\nID: 55 | Name: lifecycle_test_final\nPreview: Lifecycle test v2.0.0\nTags: lifecycle\n\nID: 62 | Name: code\nPreview: Update for Debugger\nTags: suggestion\n\nID: 69 | Name: Healthcare assistant\nPreview: Just for checking\nTags: wellbeing\n\nID: 80 | Name: mental_health_support\nPreview: You are a compassionate mental health support assistant. Provide empathetic and supportive responses...\nTags: mental_health, support, wellbeing\n\nID: 81 | Name: coding_assistant\nPreview: You are an expert programming assistant. Help users with coding questions, algorithm design, debuggi...\nTags: programming, coding, algorithms\n\nID: 82 | Name: cooking_assistant\nPreview: You are a professional chef and cooking instructor. Provide detailed recipes, cooking tips, and tech...\nTags: cooking, recipes, baking\n\nID: 83 | Name: tech_support\nPreview: You are a technical support specialist. Help users troubleshoot hardware, software, and network issu...\nTags: tech_support, troubleshooting, it\n\n        \n        RESPONSE FORMAT:\n        Return ONLY the numeric ID of the most relevant prompt, or \'none\' if none match.\n        Example: "42" or "none"\n        \n        YOUR RESPONSE (ID only):'}], 'model': 'llama-3.1-8b-instant', 'max_tokens': 10, 'temperature': 0.3}}
2025-09-03 14:33:08,481 - httpcore.connection - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-09-03 14:33:08,519 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x107da5250>
2025-09-03 14:33:08,519 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x107c12720> server_hostname='api.groq.com' timeout=5.0
2025-09-03 14:33:08,566 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x107da5310>
2025-09-03 14:33:08,567 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-03 14:33:08,567 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-09-03 14:33:08,567 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-03 14:33:08,567 - httpcore.http11 - DEBUG - send_request_body.complete
2025-09-03 14:33:08,567 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-03 14:33:08,929 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 03 Sep 2025 09:03:08 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Content-Encoding', b'br'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'bom'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'5154'), (b'x-ratelimit-reset-requests', b'6s'), (b'x-ratelimit-reset-tokens', b'8.46s'), (b'x-request-id', b'req_01k47d1jyze86bk9nhpexy3c39'), (b'via', b'1.1 google'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=CJjPV9fyosAys8We7HDrJIuPLy12tbndqzYzyc8yY8Y-1756890188-1.0.1.1-xADVLR7_rkT7C5zZ0mY08G8dIr7so3yPSMqnybMJfFFCUK4Ud2heg5aihvKMka.KiusfkIUgnQ.AxusNc8_p7mEaK7kJ3UFsF12mnaTOEK4; path=/; expires=Wed, 03-Sep-25 09:33:08 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9794127f9df3c795-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-03 14:33:08,931 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 14:33:08,931 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-03 14:33:08,931 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-09-03 14:33:08,932 - httpcore.http11 - DEBUG - response_closed.started
2025-09-03 14:33:08,932 - httpcore.http11 - DEBUG - response_closed.complete
2025-09-03 14:33:08,932 - groq._base_client - DEBUG - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
2025-09-03 14:33:08,936 - prompt_manager.app.crud.crud - INFO - Received response from GROQ API
2025-09-03 14:33:08,936 - prompt_manager.app.crud.crud - DEBUG - GROQ API response: ChatCompletion(choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChoiceMessage(content='81', role='assistant', tool_calls=None))], id='chatcmpl-d6b59915-ccb4-4040-82e5-340681143267', created=1756890188, model='llama-3.1-8b-instant', object='chat.completion', system_fingerprint='fp_2115512ff6', usage=Usage(completion_time=0.00392189, completion_tokens=2, prompt_time=0.057327796, prompt_tokens=800, total_time=0.061249686, total_tokens=802, queue_time=0.047508314), usage_breakdown=None, x_groq={'id': 'req_01k47d1jyze86bk9nhpexy3c39'}, service_tier='on_demand')
2025-09-03 14:33:08,936 - prompt_manager.app.crud.crud - INFO - LLM raw response: 81 for input: What is subtraction?

2025-09-03 14:33:08,936 - prompt_manager.app.crud.crud - INFO - Extracted prompt ID: 81
2025-09-03 14:33:08,937 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.id = ? AND prompts.status = ? AND prompts.is_active = 1
 LIMIT ? OFFSET ?
2025-09-03 14:33:08,938 - sqlalchemy.engine.Engine - INFO - [cached since 56.13s ago] (81, 'active', 1, 0)
2025-09-03 14:33:08,938 - prompt_manager.app.crud.crud - INFO - Valid active prompt found: ID=81, Name=coding_assistant
2025-09-03 14:33:08,939 - prompt_manager.app.api.v1.api - INFO - Testing persona for prompt ID 81 (user: prishatank6@gmail.com)
2025-09-03 14:33:08,939 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.id = ?
 LIMIT ? OFFSET ?
2025-09-03 14:33:08,939 - sqlalchemy.engine.Engine - INFO - [cached since 56.13s ago] (81, 1, 0)
2025-09-03 14:33:08,940 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-09-03 14:33:08,941 - httpx - DEBUG - load_verify_locations cafile='/Applications/anaconda3/lib/python3.11/site-packages/certifi/cacert.pem'
2025-09-03 14:33:08,978 - groq._base_client - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an expert programming assistant. Help users with coding questions, algorithm design, debugging, and best practices. Provide clear, concise, and accurate code examples in the requested programming language.'}, {'role': 'user', 'content': 'What is subtraction?\n'}], 'model': 'llama-3.1-8b-instant', 'max_tokens': 1000, 'temperature': 0.7}}
2025-09-03 14:33:08,978 - httpcore.connection - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-09-03 14:33:09,016 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x107d3d750>
2025-09-03 14:33:09,016 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x1077b2c30> server_hostname='api.groq.com' timeout=5.0
2025-09-03 14:33:09,071 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x107d3ed10>
2025-09-03 14:33:09,071 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-03 14:33:09,071 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-09-03 14:33:09,072 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-03 14:33:09,072 - httpcore.http11 - DEBUG - send_request_body.complete
2025-09-03 14:33:09,072 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-03 14:33:09,618 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 03 Sep 2025 09:03:09 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Content-Encoding', b'br'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'bom'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14398'), (b'x-ratelimit-remaining-tokens', b'5168'), (b'x-ratelimit-reset-requests', b'11.498999999s'), (b'x-ratelimit-reset-tokens', b'8.32s'), (b'x-request-id', b'req_01k47d1keme868dy3pn3vp3ym9'), (b'via', b'1.1 google'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=9EXxV4EXCRXND9rMnCs0LdvCfonCLWx8Flwpex4.6zA-1756890189-1.0.1.1-go16rwkkBnXQBljsfRwICp6cvklwFCz32d.C3bNPm2wbHL2oV40IbVZVA44RszCXWIdMbJgTfVPlF3kk4xdsWCDya9Y5qj3L8Go_OxR8DEQ; path=/; expires=Wed, 03-Sep-25 09:33:09 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'97941282ac197766-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-03 14:33:09,618 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 14:33:09,618 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-03 14:33:09,618 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-09-03 14:33:09,618 - httpcore.http11 - DEBUG - response_closed.started
2025-09-03 14:33:09,618 - httpcore.http11 - DEBUG - response_closed.complete
2025-09-03 14:33:09,619 - groq._base_client - DEBUG - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
2025-09-03 14:33:09,620 - prompt_manager.app.api.v1.api - INFO - Generated persona response for prompt 'coding_assistant' with persona type 'dynamic_persona'
2025-09-03 14:33:09,620 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/test-persona Status: 200 Time: 1178.17ms
2025-09-03 14:33:09,621 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 14:33:09,621 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 14:33:09,621 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 14:33:09,621 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 14:33:09,621 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 14:34:14,341 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:34:14,346 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:34:14,347 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 6.01ms
2025-09-03 14:34:14,347 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.37ms
2025-09-03 14:34:14,352 - httpcore.connection - DEBUG - close.started
2025-09-03 14:34:14,353 - httpcore.connection - DEBUG - close.complete
2025-09-03 14:34:14,418 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/test-persona
2025-09-03 14:34:14,420 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 14:34:14,420 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 14:34:14,420 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 14:34:14,420 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 14:34:14,421 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 14:34:14,421 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 14:34:14,421 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 14:34:14,421 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 14:34:14,421 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 09:01:55+00:00 (UTC)
2025-09-03 14:34:14,421 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 14:34:14,421 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 14:34:14,423 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 14:34:14,424 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 14:34:14,424 - sqlalchemy.engine.Engine - INFO - [cached since 139.7s ago] ('prishatank6@gmail.com', 1, 0)
2025-09-03 14:34:14,425 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 14)
2025-09-03 14:34:14,425 - prompt_manager.app.api.v1.api - INFO - Testing persona with automatic prompt selection (user: prishatank6@gmail.com)
2025-09-03 14:34:14,425 - prompt_manager.app.crud.crud - INFO - Finding most relevant prompt for input: I think I got a Panick attack, what to do?
2025-09-03 14:34:14,425 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 14:34:14,426 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.status = ? AND prompts.is_active = 1
2025-09-03 14:34:14,426 - sqlalchemy.engine.Engine - INFO - [cached since 122.4s ago] ('active',)
2025-09-03 14:34:14,426 - prompt_manager.app.crud.crud - INFO - Found 16 active prompts in the database
2025-09-03 14:34:14,426 - prompt_manager.app.crud.crud - INFO - Active prompt 1: ID=28, Name=marketing, Status=active, is_active=True
2025-09-03 14:34:14,426 - prompt_manager.app.crud.crud - INFO - Active prompt 2: ID=31, Name=test_live_version_sync, Status=active, is_active=True
2025-09-03 14:34:14,426 - prompt_manager.app.crud.crud - INFO - Active prompt 3: ID=33, Name=debug_live_test, Status=active, is_active=True
2025-09-03 14:34:14,426 - prompt_manager.app.crud.crud - INFO - Active prompt 4: ID=37, Name=test_active_validation, Status=active, is_active=True
2025-09-03 14:34:14,426 - prompt_manager.app.crud.crud - INFO - Active prompt 5: ID=38, Name=test_auto_status, Status=active, is_active=True
2025-09-03 14:34:14,426 - prompt_manager.app.crud.crud - INFO - Active prompt 6: ID=40, Name=test_constraint, Status=active, is_active=True
2025-09-03 14:34:14,426 - prompt_manager.app.crud.crud - INFO - Active prompt 7: ID=43, Name=endpoint_test, Status=active, is_active=True
2025-09-03 14:34:14,426 - prompt_manager.app.crud.crud - INFO - Active prompt 8: ID=45, Name=final_test, Status=active, is_active=True
2025-09-03 14:34:14,426 - prompt_manager.app.crud.crud - INFO - Active prompt 9: ID=49, Name=full_test_prompt, Status=active, is_active=True
2025-09-03 14:34:14,426 - prompt_manager.app.crud.crud - INFO - Active prompt 10: ID=55, Name=lifecycle_test_final, Status=active, is_active=True
2025-09-03 14:34:14,426 - prompt_manager.app.crud.crud - INFO - Active prompt 11: ID=62, Name=code, Status=active, is_active=True
2025-09-03 14:34:14,426 - prompt_manager.app.crud.crud - INFO - Active prompt 12: ID=69, Name=Healthcare assistant, Status=active, is_active=True
2025-09-03 14:34:14,426 - prompt_manager.app.crud.crud - INFO - Active prompt 13: ID=80, Name=mental_health_support, Status=active, is_active=True
2025-09-03 14:34:14,426 - prompt_manager.app.crud.crud - INFO - Active prompt 14: ID=81, Name=coding_assistant, Status=active, is_active=True
2025-09-03 14:34:14,426 - prompt_manager.app.crud.crud - INFO - Active prompt 15: ID=82, Name=cooking_assistant, Status=active, is_active=True
2025-09-03 14:34:14,427 - prompt_manager.app.crud.crud - INFO - Active prompt 16: ID=83, Name=tech_support, Status=active, is_active=True
2025-09-03 14:34:14,427 - prompt_manager.app.crud.crud - INFO - Sending 16 prompts to LLM for analysis
2025-09-03 14:34:14,427 - prompt_manager.app.crud.crud - DEBUG - System prompt: You are an expert at matching user queries to the most appropriate system prompt. 
        Your goal is to analyze the user's input and select the single most relevant prompt ID from the provided list.
        
        MATCHING GUIDELINES:
        1. For coding/technical questions (Python, algorithms, programming), choose the coding assistant prompt.
        2. For internet/connection/tech issues, choose the tech support prompt.
        3. For mental health/stress/anxiety concerns, choose the mental health support prompt.
        4. For cooking/recipes/food questions, choose the cooking assistant prompt.
        
        INSTRUCTIONS:
        1. Carefully read the user's input and identify the main topic/domain.
        2. Review all available prompts and their metadata (name, tags, content preview).
        3. Select the prompt that best matches the user's intent and domain.
        4. Consider both the content and the context of the query.
        5. If the query is ambiguous but could match multiple domains, choose the most likely one.
        
        RESPONSE FORMAT:
        - Return ONLY the numeric ID of the selected prompt (e.g., "42").
        - If no prompt is relevant, return "none".
        - DO NOT include any other text or explanation in your response.
        
        IMPORTANT: Focus on the user's intent and choose the most appropriate prompt, even if the match isn't perfect.
        
2025-09-03 14:34:14,427 - prompt_manager.app.crud.crud - DEBUG - User message: USER INPUT:
        I think I got a Panick attack, what to do?
        
        AVAILABLE PROMPTS (ID, Name, Content Preview):
        
ID: 28 | Name: marketing
Preview: Testing
Tags: testing

ID: 31 | Name: test_live_version_sync
Preview: Second version content
Tags: test

ID: 33 | Name: debug_live_test
Preview: Debug content v2
Tags: debug

ID: 37 | Name: test_active_validation
Preview: First version
Tags: test

ID: 38 | Name: test_auto_status
Preview: Testing auto status
Tags: test

ID: 40 | Name: test_constraint
Preview: First active version
Tags: test

ID: 43 | Name: endpoint_test
Preview: Updated final test
Tags: test

ID: 45 | Name: final_test
Preview: Final test

ID: 49 | Name: full_test_prompt
Preview: Initial content for the full test.
Tags: testing, full-flow

ID: 55 | Name: lifecycle_test_final
Preview: Lifecycle test v2.0.0
Tags: lifecycle

ID: 62 | Name: code
Preview: Update for Debugger
Tags: suggestion

ID: 69 | Name: Healthcare assistant
Preview: Just for checking
Tags: wellbeing

ID: 80 | Name: mental_health_support
Preview: You are a compassionate mental health support assistant. Provide empathetic and supportive responses...
Tags: mental_health, support, wellbeing

ID: 81 | Name: coding_assistant
Preview: You are an expert programming assistant. Help users with coding questions, algorithm design, debuggi...
Tags: programming, coding, algorithms

ID: 82 | Name: cooking_assistant
Preview: You are a professional chef and cooking instructor. Provide detailed recipes, cooking tips, and tech...
Tags: cooking, recipes, baking

ID: 83 | Name: tech_support
Preview: You are a technical support specialist. Help users troubleshoot hardware, software, and network issu...
Tags: tech_support, troubleshooting, it

        
        RESPONSE FORMAT:
        Return ONLY the numeric ID of the most relevant prompt, or 'none' if none match.
        Example: "42" or "none"
        
        YOUR RESPONSE (ID only):
2025-09-03 14:34:14,427 - prompt_manager.app.crud.crud - INFO - Initializing GROQ client...
2025-09-03 14:34:14,428 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-09-03 14:34:14,428 - httpx - DEBUG - load_verify_locations cafile='/Applications/anaconda3/lib/python3.11/site-packages/certifi/cacert.pem'
2025-09-03 14:34:14,449 - prompt_manager.app.crud.crud - INFO - Sending request to GROQ API...
2025-09-03 14:34:14,452 - groq._base_client - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an expert at matching user queries to the most appropriate system prompt. \n        Your goal is to analyze the user\'s input and select the single most relevant prompt ID from the provided list.\n        \n        MATCHING GUIDELINES:\n        1. For coding/technical questions (Python, algorithms, programming), choose the coding assistant prompt.\n        2. For internet/connection/tech issues, choose the tech support prompt.\n        3. For mental health/stress/anxiety concerns, choose the mental health support prompt.\n        4. For cooking/recipes/food questions, choose the cooking assistant prompt.\n        \n        INSTRUCTIONS:\n        1. Carefully read the user\'s input and identify the main topic/domain.\n        2. Review all available prompts and their metadata (name, tags, content preview).\n        3. Select the prompt that best matches the user\'s intent and domain.\n        4. Consider both the content and the context of the query.\n        5. If the query is ambiguous but could match multiple domains, choose the most likely one.\n        \n        RESPONSE FORMAT:\n        - Return ONLY the numeric ID of the selected prompt (e.g., "42").\n        - If no prompt is relevant, return "none".\n        - DO NOT include any other text or explanation in your response.\n        \n        IMPORTANT: Focus on the user\'s intent and choose the most appropriate prompt, even if the match isn\'t perfect.\n        '}, {'role': 'user', 'content': 'USER INPUT:\n        I think I got a Panick attack, what to do?\n        \n        AVAILABLE PROMPTS (ID, Name, Content Preview):\n        \nID: 28 | Name: marketing\nPreview: Testing\nTags: testing\n\nID: 31 | Name: test_live_version_sync\nPreview: Second version content\nTags: test\n\nID: 33 | Name: debug_live_test\nPreview: Debug content v2\nTags: debug\n\nID: 37 | Name: test_active_validation\nPreview: First version\nTags: test\n\nID: 38 | Name: test_auto_status\nPreview: Testing auto status\nTags: test\n\nID: 40 | Name: test_constraint\nPreview: First active version\nTags: test\n\nID: 43 | Name: endpoint_test\nPreview: Updated final test\nTags: test\n\nID: 45 | Name: final_test\nPreview: Final test\n\nID: 49 | Name: full_test_prompt\nPreview: Initial content for the full test.\nTags: testing, full-flow\n\nID: 55 | Name: lifecycle_test_final\nPreview: Lifecycle test v2.0.0\nTags: lifecycle\n\nID: 62 | Name: code\nPreview: Update for Debugger\nTags: suggestion\n\nID: 69 | Name: Healthcare assistant\nPreview: Just for checking\nTags: wellbeing\n\nID: 80 | Name: mental_health_support\nPreview: You are a compassionate mental health support assistant. Provide empathetic and supportive responses...\nTags: mental_health, support, wellbeing\n\nID: 81 | Name: coding_assistant\nPreview: You are an expert programming assistant. Help users with coding questions, algorithm design, debuggi...\nTags: programming, coding, algorithms\n\nID: 82 | Name: cooking_assistant\nPreview: You are a professional chef and cooking instructor. Provide detailed recipes, cooking tips, and tech...\nTags: cooking, recipes, baking\n\nID: 83 | Name: tech_support\nPreview: You are a technical support specialist. Help users troubleshoot hardware, software, and network issu...\nTags: tech_support, troubleshooting, it\n\n        \n        RESPONSE FORMAT:\n        Return ONLY the numeric ID of the most relevant prompt, or \'none\' if none match.\n        Example: "42" or "none"\n        \n        YOUR RESPONSE (ID only):'}], 'model': 'llama-3.1-8b-instant', 'max_tokens': 10, 'temperature': 0.3}}
2025-09-03 14:34:14,454 - httpcore.connection - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-09-03 14:34:14,550 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x107da6710>
2025-09-03 14:34:14,550 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x107c12690> server_hostname='api.groq.com' timeout=5.0
2025-09-03 14:34:14,601 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x107da4710>
2025-09-03 14:34:14,601 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-03 14:34:14,601 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-09-03 14:34:14,601 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-03 14:34:14,601 - httpcore.http11 - DEBUG - send_request_body.complete
2025-09-03 14:34:14,601 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-03 14:34:14,839 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 03 Sep 2025 09:04:14 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Content-Encoding', b'br'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'bom'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'5148'), (b'x-ratelimit-reset-requests', b'6s'), (b'x-ratelimit-reset-tokens', b'8.52s'), (b'x-request-id', b'req_01k47d3keve8zt8svp5xzc44d1'), (b'via', b'1.1 google'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=hJyBpf3wFZZwNkMl5c_6MTBXr4nfEVH_d.gsXki7zgo-1756890254-1.0.1.1-k8_OEfEEnokDbwpQQuqRumc7mSDR1ILvGUPWZ_h2qboS9PAcPildvCbJvFPdxZGlGgPUkoQH_JmUOpf_NDIcj7hK9FsxnMy_xg.5riRpM24; path=/; expires=Wed, 03-Sep-25 09:34:14 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9794141c3d88f82b-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-03 14:34:14,841 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 14:34:14,842 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-03 14:34:14,842 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-09-03 14:34:14,843 - httpcore.http11 - DEBUG - response_closed.started
2025-09-03 14:34:14,843 - httpcore.http11 - DEBUG - response_closed.complete
2025-09-03 14:34:14,843 - groq._base_client - DEBUG - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
2025-09-03 14:34:14,849 - prompt_manager.app.crud.crud - INFO - Received response from GROQ API
2025-09-03 14:34:14,849 - prompt_manager.app.crud.crud - DEBUG - GROQ API response: ChatCompletion(choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChoiceMessage(content='80', role='assistant', tool_calls=None))], id='chatcmpl-9fc4ea97-72fc-40ed-8f72-b9f76c4c16e2', created=1756890254, model='llama-3.1-8b-instant', object='chat.completion', system_fingerprint='fp_2115512ff6', usage=Usage(completion_time=0.003785673, completion_tokens=2, prompt_time=0.106966249, prompt_tokens=809, total_time=0.110751922, total_tokens=811, queue_time=0.04887048), usage_breakdown=None, x_groq={'id': 'req_01k47d3keve8zt8svp5xzc44d1'}, service_tier='on_demand')
2025-09-03 14:34:14,849 - prompt_manager.app.crud.crud - INFO - LLM raw response: 80 for input: I think I got a Panick attack, what to do?
2025-09-03 14:34:14,849 - prompt_manager.app.crud.crud - INFO - Extracted prompt ID: 80
2025-09-03 14:34:14,850 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.id = ? AND prompts.status = ? AND prompts.is_active = 1
 LIMIT ? OFFSET ?
2025-09-03 14:34:14,850 - sqlalchemy.engine.Engine - INFO - [cached since 122s ago] (80, 'active', 1, 0)
2025-09-03 14:34:14,851 - prompt_manager.app.crud.crud - INFO - Valid active prompt found: ID=80, Name=mental_health_support
2025-09-03 14:34:14,851 - prompt_manager.app.api.v1.api - INFO - Testing persona for prompt ID 80 (user: prishatank6@gmail.com)
2025-09-03 14:34:14,851 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.id = ?
 LIMIT ? OFFSET ?
2025-09-03 14:34:14,852 - sqlalchemy.engine.Engine - INFO - [cached since 122s ago] (80, 1, 0)
2025-09-03 14:34:14,853 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-09-03 14:34:14,854 - httpx - DEBUG - load_verify_locations cafile='/Applications/anaconda3/lib/python3.11/site-packages/certifi/cacert.pem'
2025-09-03 14:34:14,889 - groq._base_client - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a compassionate mental health support assistant. Provide empathetic and supportive responses to users who may be experiencing stress, anxiety, or other mental health concerns. Offer helpful coping strategies and encourage professional help when appropriate.'}, {'role': 'user', 'content': 'I think I got a Panick attack, what to do?'}], 'model': 'llama-3.1-8b-instant', 'max_tokens': 1000, 'temperature': 0.7}}
2025-09-03 14:34:14,890 - httpcore.connection - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-09-03 14:34:14,927 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x107d3c950>
2025-09-03 14:34:14,927 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x107c12330> server_hostname='api.groq.com' timeout=5.0
2025-09-03 14:34:14,970 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1079ecb90>
2025-09-03 14:34:14,970 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-03 14:34:14,970 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-09-03 14:34:14,970 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-03 14:34:14,970 - httpcore.http11 - DEBUG - send_request_body.complete
2025-09-03 14:34:14,970 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-03 14:34:15,665 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 03 Sep 2025 09:04:15 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Content-Encoding', b'br'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'bom'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14398'), (b'x-ratelimit-remaining-tokens', b'5122'), (b'x-ratelimit-reset-requests', b'11.635s'), (b'x-ratelimit-reset-tokens', b'8.776s'), (b'x-request-id', b'req_01k47d3kt9err8awd9x4czbfaq'), (b'via', b'1.1 google'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=UI6fT62fZDR.Fol1SM9lhwJVfoyyo9GRENkzib0FF6Q-1756890255-1.0.1.1-7jgo4Cr3E0G5AfIQe8oOw9ED.A_3J335Sa0niRql6F4SVKCaw6GIDTl.qr9H7GCotW5UvIpbBOG0SldbHRGeYMfWQGIQQsuzaY_mHzrc010; path=/; expires=Wed, 03-Sep-25 09:34:15 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9794141e8c1c29f3-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-03 14:34:15,666 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 14:34:15,666 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-03 14:34:15,666 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-09-03 14:34:15,666 - httpcore.http11 - DEBUG - response_closed.started
2025-09-03 14:34:15,666 - httpcore.http11 - DEBUG - response_closed.complete
2025-09-03 14:34:15,667 - groq._base_client - DEBUG - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
2025-09-03 14:34:15,669 - prompt_manager.app.api.v1.api - INFO - Generated persona response for prompt 'mental_health_support' with persona type 'dynamic_persona'
2025-09-03 14:34:15,669 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/test-persona Status: 200 Time: 1251.0ms
2025-09-03 14:34:15,670 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 14:34:15,670 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 14:34:15,671 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 14:34:15,671 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 14:34:15,671 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 14:34:51,384 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:34:51,385 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.15ms
2025-09-03 14:35:03,914 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:35:03,917 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:35:03,918 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 4.46ms
2025-09-03 14:35:03,919 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.54ms
2025-09-03 14:35:03,963 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/name/coding_assistant/versions?skip=0&limit=10
2025-09-03 14:35:03,965 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 14:35:03,965 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 14:35:03,965 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 14:35:03,965 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 14:35:03,965 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 14:35:03,965 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 14:35:03,965 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 14:35:03,965 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 14:35:03,965 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 09:01:55+00:00 (UTC)
2025-09-03 14:35:03,966 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 14:35:03,966 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 14:35:03,966 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 14:35:03,967 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 14:35:03,967 - sqlalchemy.engine.Engine - INFO - [cached since 189.2s ago] ('prishatank6@gmail.com', 1, 0)
2025-09-03 14:35:03,968 - httpcore.connection - DEBUG - close.started
2025-09-03 14:35:03,968 - httpcore.connection - DEBUG - close.complete
2025-09-03 14:35:03,970 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 14)
2025-09-03 14:35:03,971 - prompt_manager.app.api.v1.api - INFO - Listing versions for prompt: coding_assistant
2025-09-03 14:35:03,972 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 14:35:03,973 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.name = ?
 LIMIT ? OFFSET ?
2025-09-03 14:35:03,973 - sqlalchemy.engine.Engine - INFO - [generated in 0.00024s] ('coding_assistant', 1, 0)
2025-09-03 14:35:03,977 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.name = ?) AS anon_1
2025-09-03 14:35:03,978 - sqlalchemy.engine.Engine - INFO - [generated in 0.00035s] ('coding_assistant',)
2025-09-03 14:35:03,980 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.name = ? ORDER BY prompts.created_at DESC
 LIMIT ? OFFSET ?
2025-09-03 14:35:03,980 - sqlalchemy.engine.Engine - INFO - [generated in 0.00039s] ('coding_assistant', 10, 0)
2025-09-03 14:35:03,981 - prompt_manager.app.api.v1.api - INFO - Found 1 versions for prompt: coding_assistant
2025-09-03 14:35:03,981 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/name/coding_assistant/versions?skip=0&limit=10 Status: 200 Time: 17.67ms
2025-09-03 14:35:03,981 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 14:35:03,982 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 14:35:03,982 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 14:35:03,982 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 14:35:03,982 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 14:35:09,597 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:35:09,598 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.73ms
2025-09-03 14:35:13,833 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:35:13,835 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.25ms
2025-09-03 14:35:15,548 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:35:15,549 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.7ms
2025-09-03 14:36:09,682 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:36:09,688 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 6.01ms
2025-09-03 14:36:13,098 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:36:13,099 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.9ms
2025-09-03 14:36:39,833 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:36:39,834 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.08ms
2025-09-03 14:36:39,894 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:36:39,895 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.76ms
2025-09-03 14:36:39,907 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/test-persona
2025-09-03 14:36:39,910 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 14:36:39,910 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 14:36:39,910 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 14:36:39,910 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 14:36:39,910 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 14:36:39,910 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 14:36:39,910 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 14:36:39,911 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 14:36:39,911 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 09:01:55+00:00 (UTC)
2025-09-03 14:36:39,911 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 14:36:39,911 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 14:36:39,915 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 14:36:39,916 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 14:36:39,916 - sqlalchemy.engine.Engine - INFO - [cached since 285.2s ago] ('prishatank6@gmail.com', 1, 0)
2025-09-03 14:36:39,918 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 14)
2025-09-03 14:36:39,918 - prompt_manager.app.api.v1.api - INFO - Testing persona with automatic prompt selection (user: prishatank6@gmail.com)
2025-09-03 14:36:39,918 - prompt_manager.app.crud.crud - INFO - Finding most relevant prompt for input: I want to know what is mathematics equation
2025-09-03 14:36:39,918 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 14:36:39,919 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.status = ? AND prompts.is_active = 1
2025-09-03 14:36:39,919 - sqlalchemy.engine.Engine - INFO - [cached since 267.9s ago] ('active',)
2025-09-03 14:36:39,919 - prompt_manager.app.crud.crud - INFO - Found 16 active prompts in the database
2025-09-03 14:36:39,919 - prompt_manager.app.crud.crud - INFO - Active prompt 1: ID=28, Name=marketing, Status=active, is_active=True
2025-09-03 14:36:39,919 - prompt_manager.app.crud.crud - INFO - Active prompt 2: ID=31, Name=test_live_version_sync, Status=active, is_active=True
2025-09-03 14:36:39,919 - prompt_manager.app.crud.crud - INFO - Active prompt 3: ID=33, Name=debug_live_test, Status=active, is_active=True
2025-09-03 14:36:39,919 - prompt_manager.app.crud.crud - INFO - Active prompt 4: ID=37, Name=test_active_validation, Status=active, is_active=True
2025-09-03 14:36:39,919 - prompt_manager.app.crud.crud - INFO - Active prompt 5: ID=38, Name=test_auto_status, Status=active, is_active=True
2025-09-03 14:36:39,919 - prompt_manager.app.crud.crud - INFO - Active prompt 6: ID=40, Name=test_constraint, Status=active, is_active=True
2025-09-03 14:36:39,919 - prompt_manager.app.crud.crud - INFO - Active prompt 7: ID=43, Name=endpoint_test, Status=active, is_active=True
2025-09-03 14:36:39,919 - prompt_manager.app.crud.crud - INFO - Active prompt 8: ID=45, Name=final_test, Status=active, is_active=True
2025-09-03 14:36:39,919 - prompt_manager.app.crud.crud - INFO - Active prompt 9: ID=49, Name=full_test_prompt, Status=active, is_active=True
2025-09-03 14:36:39,919 - prompt_manager.app.crud.crud - INFO - Active prompt 10: ID=55, Name=lifecycle_test_final, Status=active, is_active=True
2025-09-03 14:36:39,919 - prompt_manager.app.crud.crud - INFO - Active prompt 11: ID=62, Name=code, Status=active, is_active=True
2025-09-03 14:36:39,919 - prompt_manager.app.crud.crud - INFO - Active prompt 12: ID=69, Name=Healthcare assistant, Status=active, is_active=True
2025-09-03 14:36:39,919 - prompt_manager.app.crud.crud - INFO - Active prompt 13: ID=80, Name=mental_health_support, Status=active, is_active=True
2025-09-03 14:36:39,919 - prompt_manager.app.crud.crud - INFO - Active prompt 14: ID=81, Name=coding_assistant, Status=active, is_active=True
2025-09-03 14:36:39,919 - prompt_manager.app.crud.crud - INFO - Active prompt 15: ID=82, Name=cooking_assistant, Status=active, is_active=True
2025-09-03 14:36:39,919 - prompt_manager.app.crud.crud - INFO - Active prompt 16: ID=83, Name=tech_support, Status=active, is_active=True
2025-09-03 14:36:39,919 - prompt_manager.app.crud.crud - INFO - Sending 16 prompts to LLM for analysis
2025-09-03 14:36:39,919 - prompt_manager.app.crud.crud - DEBUG - System prompt: You are an expert at matching user queries to the most appropriate system prompt. 
        Your goal is to analyze the user's input and select the single most relevant prompt ID from the provided list.
        
        MATCHING GUIDELINES:
        1. For coding/technical questions (Python, algorithms, programming), choose the coding assistant prompt.
        2. For internet/connection/tech issues, choose the tech support prompt.
        3. For mental health/stress/anxiety concerns, choose the mental health support prompt.
        4. For cooking/recipes/food questions, choose the cooking assistant prompt.
        
        INSTRUCTIONS:
        1. Carefully read the user's input and identify the main topic/domain.
        2. Review all available prompts and their metadata (name, tags, content preview).
        3. Select the prompt that best matches the user's intent and domain.
        4. Consider both the content and the context of the query.
        5. If the query is ambiguous but could match multiple domains, choose the most likely one.
        
        RESPONSE FORMAT:
        - Return ONLY the numeric ID of the selected prompt (e.g., "42").
        - If no prompt is relevant, return "none".
        - DO NOT include any other text or explanation in your response.
        
        IMPORTANT: Focus on the user's intent and choose the most appropriate prompt, even if the match isn't perfect.
        
2025-09-03 14:36:39,919 - prompt_manager.app.crud.crud - DEBUG - User message: USER INPUT:
        I want to know what is mathematics equation
        
        AVAILABLE PROMPTS (ID, Name, Content Preview):
        
ID: 28 | Name: marketing
Preview: Testing
Tags: testing

ID: 31 | Name: test_live_version_sync
Preview: Second version content
Tags: test

ID: 33 | Name: debug_live_test
Preview: Debug content v2
Tags: debug

ID: 37 | Name: test_active_validation
Preview: First version
Tags: test

ID: 38 | Name: test_auto_status
Preview: Testing auto status
Tags: test

ID: 40 | Name: test_constraint
Preview: First active version
Tags: test

ID: 43 | Name: endpoint_test
Preview: Updated final test
Tags: test

ID: 45 | Name: final_test
Preview: Final test

ID: 49 | Name: full_test_prompt
Preview: Initial content for the full test.
Tags: testing, full-flow

ID: 55 | Name: lifecycle_test_final
Preview: Lifecycle test v2.0.0
Tags: lifecycle

ID: 62 | Name: code
Preview: Update for Debugger
Tags: suggestion

ID: 69 | Name: Healthcare assistant
Preview: Just for checking
Tags: wellbeing

ID: 80 | Name: mental_health_support
Preview: You are a compassionate mental health support assistant. Provide empathetic and supportive responses...
Tags: mental_health, support, wellbeing

ID: 81 | Name: coding_assistant
Preview: You are an expert programming assistant. Help users with coding questions, algorithm design, debuggi...
Tags: programming, coding, algorithms

ID: 82 | Name: cooking_assistant
Preview: You are a professional chef and cooking instructor. Provide detailed recipes, cooking tips, and tech...
Tags: cooking, recipes, baking

ID: 83 | Name: tech_support
Preview: You are a technical support specialist. Help users troubleshoot hardware, software, and network issu...
Tags: tech_support, troubleshooting, it

        
        RESPONSE FORMAT:
        Return ONLY the numeric ID of the most relevant prompt, or 'none' if none match.
        Example: "42" or "none"
        
        YOUR RESPONSE (ID only):
2025-09-03 14:36:39,920 - prompt_manager.app.crud.crud - INFO - Initializing GROQ client...
2025-09-03 14:36:39,920 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-09-03 14:36:39,922 - httpx - DEBUG - load_verify_locations cafile='/Applications/anaconda3/lib/python3.11/site-packages/certifi/cacert.pem'
2025-09-03 14:36:39,941 - prompt_manager.app.crud.crud - INFO - Sending request to GROQ API...
2025-09-03 14:36:39,943 - groq._base_client - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an expert at matching user queries to the most appropriate system prompt. \n        Your goal is to analyze the user\'s input and select the single most relevant prompt ID from the provided list.\n        \n        MATCHING GUIDELINES:\n        1. For coding/technical questions (Python, algorithms, programming), choose the coding assistant prompt.\n        2. For internet/connection/tech issues, choose the tech support prompt.\n        3. For mental health/stress/anxiety concerns, choose the mental health support prompt.\n        4. For cooking/recipes/food questions, choose the cooking assistant prompt.\n        \n        INSTRUCTIONS:\n        1. Carefully read the user\'s input and identify the main topic/domain.\n        2. Review all available prompts and their metadata (name, tags, content preview).\n        3. Select the prompt that best matches the user\'s intent and domain.\n        4. Consider both the content and the context of the query.\n        5. If the query is ambiguous but could match multiple domains, choose the most likely one.\n        \n        RESPONSE FORMAT:\n        - Return ONLY the numeric ID of the selected prompt (e.g., "42").\n        - If no prompt is relevant, return "none".\n        - DO NOT include any other text or explanation in your response.\n        \n        IMPORTANT: Focus on the user\'s intent and choose the most appropriate prompt, even if the match isn\'t perfect.\n        '}, {'role': 'user', 'content': 'USER INPUT:\n        I want to know what is mathematics equation\n        \n        AVAILABLE PROMPTS (ID, Name, Content Preview):\n        \nID: 28 | Name: marketing\nPreview: Testing\nTags: testing\n\nID: 31 | Name: test_live_version_sync\nPreview: Second version content\nTags: test\n\nID: 33 | Name: debug_live_test\nPreview: Debug content v2\nTags: debug\n\nID: 37 | Name: test_active_validation\nPreview: First version\nTags: test\n\nID: 38 | Name: test_auto_status\nPreview: Testing auto status\nTags: test\n\nID: 40 | Name: test_constraint\nPreview: First active version\nTags: test\n\nID: 43 | Name: endpoint_test\nPreview: Updated final test\nTags: test\n\nID: 45 | Name: final_test\nPreview: Final test\n\nID: 49 | Name: full_test_prompt\nPreview: Initial content for the full test.\nTags: testing, full-flow\n\nID: 55 | Name: lifecycle_test_final\nPreview: Lifecycle test v2.0.0\nTags: lifecycle\n\nID: 62 | Name: code\nPreview: Update for Debugger\nTags: suggestion\n\nID: 69 | Name: Healthcare assistant\nPreview: Just for checking\nTags: wellbeing\n\nID: 80 | Name: mental_health_support\nPreview: You are a compassionate mental health support assistant. Provide empathetic and supportive responses...\nTags: mental_health, support, wellbeing\n\nID: 81 | Name: coding_assistant\nPreview: You are an expert programming assistant. Help users with coding questions, algorithm design, debuggi...\nTags: programming, coding, algorithms\n\nID: 82 | Name: cooking_assistant\nPreview: You are a professional chef and cooking instructor. Provide detailed recipes, cooking tips, and tech...\nTags: cooking, recipes, baking\n\nID: 83 | Name: tech_support\nPreview: You are a technical support specialist. Help users troubleshoot hardware, software, and network issu...\nTags: tech_support, troubleshooting, it\n\n        \n        RESPONSE FORMAT:\n        Return ONLY the numeric ID of the most relevant prompt, or \'none\' if none match.\n        Example: "42" or "none"\n        \n        YOUR RESPONSE (ID only):'}], 'model': 'llama-3.1-8b-instant', 'max_tokens': 10, 'temperature': 0.3}}
2025-09-03 14:36:39,943 - httpcore.connection - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-09-03 14:36:40,050 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x107de5350>
2025-09-03 14:36:40,051 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x107c12960> server_hostname='api.groq.com' timeout=5.0
2025-09-03 14:36:40,106 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x107de5410>
2025-09-03 14:36:40,106 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-03 14:36:40,106 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-09-03 14:36:40,106 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-03 14:36:40,106 - httpcore.http11 - DEBUG - send_request_body.complete
2025-09-03 14:36:40,106 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-03 14:36:40,339 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 03 Sep 2025 09:06:40 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Content-Encoding', b'br'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'bom'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'5148'), (b'x-ratelimit-reset-requests', b'6s'), (b'x-ratelimit-reset-tokens', b'8.52s'), (b'x-request-id', b'req_01k47d81k9eabab5dc9ebzym7m'), (b'via', b'1.1 google'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=EBjgjXvx92OUFI4t60T5qWRKFLx6Rkw5FFYO.fhqpjc-1756890400-1.0.1.1-7GnGD0sp6HWWOADlGGBGapbEo6ave_MTpRUquZpdytCdDsLxDHkTGFlDSn3lumaHnxGjkBMBvuJX7Gzns7575pqsAQ9UBg_aUmOgHsUWFl0; path=/; expires=Wed, 03-Sep-25 09:36:40 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'979417a9aaf977ba-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-03 14:36:40,341 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 14:36:40,342 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-03 14:36:40,342 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-09-03 14:36:40,342 - httpcore.http11 - DEBUG - response_closed.started
2025-09-03 14:36:40,342 - httpcore.http11 - DEBUG - response_closed.complete
2025-09-03 14:36:40,343 - groq._base_client - DEBUG - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
2025-09-03 14:36:40,348 - prompt_manager.app.crud.crud - INFO - Received response from GROQ API
2025-09-03 14:36:40,349 - prompt_manager.app.crud.crud - DEBUG - GROQ API response: ChatCompletion(choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChoiceMessage(content='81', role='assistant', tool_calls=None))], id='chatcmpl-8448d72e-712b-4cd5-8c04-d525c4d39d49', created=1756890400, model='llama-3.1-8b-instant', object='chat.completion', system_fingerprint='fp_7083106d2c', usage=Usage(completion_time=0.004051429, completion_tokens=2, prompt_time=0.053668011, prompt_tokens=804, total_time=0.05771944, total_tokens=806, queue_time=0.045330199), usage_breakdown=None, x_groq={'id': 'req_01k47d81k9eabab5dc9ebzym7m'}, service_tier='on_demand')
2025-09-03 14:36:40,349 - prompt_manager.app.crud.crud - INFO - LLM raw response: 81 for input: I want to know what is mathematics equation
2025-09-03 14:36:40,349 - prompt_manager.app.crud.crud - INFO - Extracted prompt ID: 81
2025-09-03 14:36:40,350 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.id = ? AND prompts.status = ? AND prompts.is_active = 1
 LIMIT ? OFFSET ?
2025-09-03 14:36:40,350 - sqlalchemy.engine.Engine - INFO - [cached since 267.6s ago] (81, 'active', 1, 0)
2025-09-03 14:36:40,350 - prompt_manager.app.crud.crud - INFO - Valid active prompt found: ID=81, Name=coding_assistant
2025-09-03 14:36:40,351 - prompt_manager.app.api.v1.api - INFO - Testing persona for prompt ID 81 (user: prishatank6@gmail.com)
2025-09-03 14:36:40,351 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.id = ?
 LIMIT ? OFFSET ?
2025-09-03 14:36:40,351 - sqlalchemy.engine.Engine - INFO - [cached since 267.5s ago] (81, 1, 0)
2025-09-03 14:36:40,352 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-09-03 14:36:40,353 - httpx - DEBUG - load_verify_locations cafile='/Applications/anaconda3/lib/python3.11/site-packages/certifi/cacert.pem'
2025-09-03 14:36:40,389 - groq._base_client - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an expert programming assistant. Help users with coding questions, algorithm design, debugging, and best practices. Provide clear, concise, and accurate code examples in the requested programming language.'}, {'role': 'user', 'content': 'I want to know what is mathematics equation'}], 'model': 'llama-3.1-8b-instant', 'max_tokens': 1000, 'temperature': 0.7}}
2025-09-03 14:36:40,390 - httpcore.connection - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-09-03 14:36:40,428 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x107dca090>
2025-09-03 14:36:40,428 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x107c104d0> server_hostname='api.groq.com' timeout=5.0
2025-09-03 14:36:40,473 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x107dcba10>
2025-09-03 14:36:40,473 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-03 14:36:40,473 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-09-03 14:36:40,473 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-03 14:36:40,473 - httpcore.http11 - DEBUG - send_request_body.complete
2025-09-03 14:36:40,473 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-03 14:36:41,515 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 03 Sep 2025 09:06:41 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Content-Encoding', b'br'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'bom'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14398'), (b'x-ratelimit-remaining-tokens', b'5142'), (b'x-ratelimit-reset-requests', b'11.671999999s'), (b'x-ratelimit-reset-tokens', b'8.576s'), (b'x-request-id', b'req_01k47d81xketbbcam3hkxs0rsc'), (b'via', b'1.1 google'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=a_WudBJknlfqqCWq_Y1f996kmEzE3mduzBRV.OmSMlc-1756890401-1.0.1.1-CF_c9vhaPnjhzhkH2YGXB9WQP26mCEs0y4u6gtg2DNMshLuYqH0haihI9waAlIfEFEj1tBaum5UT21NxQ8KAjQEvQtahdoWM7mpz3fHJd9g; path=/; expires=Wed, 03-Sep-25 09:36:41 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'979417ac0a34dc57-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-03 14:36:41,516 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 14:36:41,517 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-03 14:36:41,517 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-09-03 14:36:41,518 - httpcore.http11 - DEBUG - response_closed.started
2025-09-03 14:36:41,518 - httpcore.http11 - DEBUG - response_closed.complete
2025-09-03 14:36:41,518 - groq._base_client - DEBUG - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
2025-09-03 14:36:41,521 - prompt_manager.app.api.v1.api - INFO - Generated persona response for prompt 'coding_assistant' with persona type 'dynamic_persona'
2025-09-03 14:36:41,522 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/test-persona Status: 200 Time: 1614.62ms
2025-09-03 14:36:41,523 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 14:36:41,523 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 14:36:41,524 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 14:36:41,524 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 14:36:41,524 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 14:37:24,077 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:37:24,081 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 4.7ms
2025-09-03 14:37:24,157 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:37:24,158 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.0ms
2025-09-03 14:37:24,175 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/test-persona
2025-09-03 14:37:24,181 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 14:37:24,181 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 14:37:24,181 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 14:37:24,181 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 14:37:24,181 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 14:37:24,181 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 14:37:24,181 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 14:37:24,182 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 14:37:24,182 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 09:01:55+00:00 (UTC)
2025-09-03 14:37:24,182 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 14:37:24,182 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 14:37:24,184 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 14:37:24,185 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 14:37:24,185 - sqlalchemy.engine.Engine - INFO - [cached since 329.4s ago] ('prishatank6@gmail.com', 1, 0)
2025-09-03 14:37:24,186 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 14)
2025-09-03 14:37:24,186 - prompt_manager.app.api.v1.api - INFO - Testing persona with automatic prompt selection (user: prishatank6@gmail.com)
2025-09-03 14:37:24,186 - prompt_manager.app.crud.crud - INFO - Finding most relevant prompt for input: I want to know how to solve maths equation. help me
2025-09-03 14:37:24,188 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 14:37:24,188 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.status = ? AND prompts.is_active = 1
2025-09-03 14:37:24,189 - sqlalchemy.engine.Engine - INFO - [cached since 312.2s ago] ('active',)
2025-09-03 14:37:24,190 - httpcore.connection - DEBUG - close.started
2025-09-03 14:37:24,191 - httpcore.connection - DEBUG - close.complete
2025-09-03 14:37:24,194 - prompt_manager.app.crud.crud - INFO - Found 16 active prompts in the database
2025-09-03 14:37:24,194 - prompt_manager.app.crud.crud - INFO - Active prompt 1: ID=28, Name=marketing, Status=active, is_active=True
2025-09-03 14:37:24,194 - prompt_manager.app.crud.crud - INFO - Active prompt 2: ID=31, Name=test_live_version_sync, Status=active, is_active=True
2025-09-03 14:37:24,194 - prompt_manager.app.crud.crud - INFO - Active prompt 3: ID=33, Name=debug_live_test, Status=active, is_active=True
2025-09-03 14:37:24,194 - prompt_manager.app.crud.crud - INFO - Active prompt 4: ID=37, Name=test_active_validation, Status=active, is_active=True
2025-09-03 14:37:24,194 - prompt_manager.app.crud.crud - INFO - Active prompt 5: ID=38, Name=test_auto_status, Status=active, is_active=True
2025-09-03 14:37:24,194 - prompt_manager.app.crud.crud - INFO - Active prompt 6: ID=40, Name=test_constraint, Status=active, is_active=True
2025-09-03 14:37:24,194 - prompt_manager.app.crud.crud - INFO - Active prompt 7: ID=43, Name=endpoint_test, Status=active, is_active=True
2025-09-03 14:37:24,194 - prompt_manager.app.crud.crud - INFO - Active prompt 8: ID=45, Name=final_test, Status=active, is_active=True
2025-09-03 14:37:24,195 - prompt_manager.app.crud.crud - INFO - Active prompt 9: ID=49, Name=full_test_prompt, Status=active, is_active=True
2025-09-03 14:37:24,195 - prompt_manager.app.crud.crud - INFO - Active prompt 10: ID=55, Name=lifecycle_test_final, Status=active, is_active=True
2025-09-03 14:37:24,195 - prompt_manager.app.crud.crud - INFO - Active prompt 11: ID=62, Name=code, Status=active, is_active=True
2025-09-03 14:37:24,195 - prompt_manager.app.crud.crud - INFO - Active prompt 12: ID=69, Name=Healthcare assistant, Status=active, is_active=True
2025-09-03 14:37:24,195 - prompt_manager.app.crud.crud - INFO - Active prompt 13: ID=80, Name=mental_health_support, Status=active, is_active=True
2025-09-03 14:37:24,195 - prompt_manager.app.crud.crud - INFO - Active prompt 14: ID=81, Name=coding_assistant, Status=active, is_active=True
2025-09-03 14:37:24,195 - prompt_manager.app.crud.crud - INFO - Active prompt 15: ID=82, Name=cooking_assistant, Status=active, is_active=True
2025-09-03 14:37:24,195 - prompt_manager.app.crud.crud - INFO - Active prompt 16: ID=83, Name=tech_support, Status=active, is_active=True
2025-09-03 14:37:24,196 - prompt_manager.app.crud.crud - INFO - Sending 16 prompts to LLM for analysis
2025-09-03 14:37:24,196 - prompt_manager.app.crud.crud - DEBUG - System prompt: You are an expert at matching user queries to the most appropriate system prompt. 
        Your goal is to analyze the user's input and select the single most relevant prompt ID from the provided list.
        
        MATCHING GUIDELINES:
        1. For coding/technical questions (Python, algorithms, programming), choose the coding assistant prompt.
        2. For internet/connection/tech issues, choose the tech support prompt.
        3. For mental health/stress/anxiety concerns, choose the mental health support prompt.
        4. For cooking/recipes/food questions, choose the cooking assistant prompt.
        
        INSTRUCTIONS:
        1. Carefully read the user's input and identify the main topic/domain.
        2. Review all available prompts and their metadata (name, tags, content preview).
        3. Select the prompt that best matches the user's intent and domain.
        4. Consider both the content and the context of the query.
        5. If the query is ambiguous but could match multiple domains, choose the most likely one.
        
        RESPONSE FORMAT:
        - Return ONLY the numeric ID of the selected prompt (e.g., "42").
        - If no prompt is relevant, return "none".
        - DO NOT include any other text or explanation in your response.
        
        IMPORTANT: Focus on the user's intent and choose the most appropriate prompt, even if the match isn't perfect.
        
2025-09-03 14:37:24,196 - prompt_manager.app.crud.crud - DEBUG - User message: USER INPUT:
        I want to know how to solve maths equation. help me
        
        AVAILABLE PROMPTS (ID, Name, Content Preview):
        
ID: 28 | Name: marketing
Preview: Testing
Tags: testing

ID: 31 | Name: test_live_version_sync
Preview: Second version content
Tags: test

ID: 33 | Name: debug_live_test
Preview: Debug content v2
Tags: debug

ID: 37 | Name: test_active_validation
Preview: First version
Tags: test

ID: 38 | Name: test_auto_status
Preview: Testing auto status
Tags: test

ID: 40 | Name: test_constraint
Preview: First active version
Tags: test

ID: 43 | Name: endpoint_test
Preview: Updated final test
Tags: test

ID: 45 | Name: final_test
Preview: Final test

ID: 49 | Name: full_test_prompt
Preview: Initial content for the full test.
Tags: testing, full-flow

ID: 55 | Name: lifecycle_test_final
Preview: Lifecycle test v2.0.0
Tags: lifecycle

ID: 62 | Name: code
Preview: Update for Debugger
Tags: suggestion

ID: 69 | Name: Healthcare assistant
Preview: Just for checking
Tags: wellbeing

ID: 80 | Name: mental_health_support
Preview: You are a compassionate mental health support assistant. Provide empathetic and supportive responses...
Tags: mental_health, support, wellbeing

ID: 81 | Name: coding_assistant
Preview: You are an expert programming assistant. Help users with coding questions, algorithm design, debuggi...
Tags: programming, coding, algorithms

ID: 82 | Name: cooking_assistant
Preview: You are a professional chef and cooking instructor. Provide detailed recipes, cooking tips, and tech...
Tags: cooking, recipes, baking

ID: 83 | Name: tech_support
Preview: You are a technical support specialist. Help users troubleshoot hardware, software, and network issu...
Tags: tech_support, troubleshooting, it

        
        RESPONSE FORMAT:
        Return ONLY the numeric ID of the most relevant prompt, or 'none' if none match.
        Example: "42" or "none"
        
        YOUR RESPONSE (ID only):
2025-09-03 14:37:24,197 - prompt_manager.app.crud.crud - INFO - Initializing GROQ client...
2025-09-03 14:37:24,198 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-09-03 14:37:24,199 - httpx - DEBUG - load_verify_locations cafile='/Applications/anaconda3/lib/python3.11/site-packages/certifi/cacert.pem'
2025-09-03 14:37:24,216 - prompt_manager.app.crud.crud - INFO - Sending request to GROQ API...
2025-09-03 14:37:24,217 - groq._base_client - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an expert at matching user queries to the most appropriate system prompt. \n        Your goal is to analyze the user\'s input and select the single most relevant prompt ID from the provided list.\n        \n        MATCHING GUIDELINES:\n        1. For coding/technical questions (Python, algorithms, programming), choose the coding assistant prompt.\n        2. For internet/connection/tech issues, choose the tech support prompt.\n        3. For mental health/stress/anxiety concerns, choose the mental health support prompt.\n        4. For cooking/recipes/food questions, choose the cooking assistant prompt.\n        \n        INSTRUCTIONS:\n        1. Carefully read the user\'s input and identify the main topic/domain.\n        2. Review all available prompts and their metadata (name, tags, content preview).\n        3. Select the prompt that best matches the user\'s intent and domain.\n        4. Consider both the content and the context of the query.\n        5. If the query is ambiguous but could match multiple domains, choose the most likely one.\n        \n        RESPONSE FORMAT:\n        - Return ONLY the numeric ID of the selected prompt (e.g., "42").\n        - If no prompt is relevant, return "none".\n        - DO NOT include any other text or explanation in your response.\n        \n        IMPORTANT: Focus on the user\'s intent and choose the most appropriate prompt, even if the match isn\'t perfect.\n        '}, {'role': 'user', 'content': 'USER INPUT:\n        I want to know how to solve maths equation. help me\n        \n        AVAILABLE PROMPTS (ID, Name, Content Preview):\n        \nID: 28 | Name: marketing\nPreview: Testing\nTags: testing\n\nID: 31 | Name: test_live_version_sync\nPreview: Second version content\nTags: test\n\nID: 33 | Name: debug_live_test\nPreview: Debug content v2\nTags: debug\n\nID: 37 | Name: test_active_validation\nPreview: First version\nTags: test\n\nID: 38 | Name: test_auto_status\nPreview: Testing auto status\nTags: test\n\nID: 40 | Name: test_constraint\nPreview: First active version\nTags: test\n\nID: 43 | Name: endpoint_test\nPreview: Updated final test\nTags: test\n\nID: 45 | Name: final_test\nPreview: Final test\n\nID: 49 | Name: full_test_prompt\nPreview: Initial content for the full test.\nTags: testing, full-flow\n\nID: 55 | Name: lifecycle_test_final\nPreview: Lifecycle test v2.0.0\nTags: lifecycle\n\nID: 62 | Name: code\nPreview: Update for Debugger\nTags: suggestion\n\nID: 69 | Name: Healthcare assistant\nPreview: Just for checking\nTags: wellbeing\n\nID: 80 | Name: mental_health_support\nPreview: You are a compassionate mental health support assistant. Provide empathetic and supportive responses...\nTags: mental_health, support, wellbeing\n\nID: 81 | Name: coding_assistant\nPreview: You are an expert programming assistant. Help users with coding questions, algorithm design, debuggi...\nTags: programming, coding, algorithms\n\nID: 82 | Name: cooking_assistant\nPreview: You are a professional chef and cooking instructor. Provide detailed recipes, cooking tips, and tech...\nTags: cooking, recipes, baking\n\nID: 83 | Name: tech_support\nPreview: You are a technical support specialist. Help users troubleshoot hardware, software, and network issu...\nTags: tech_support, troubleshooting, it\n\n        \n        RESPONSE FORMAT:\n        Return ONLY the numeric ID of the most relevant prompt, or \'none\' if none match.\n        Example: "42" or "none"\n        \n        YOUR RESPONSE (ID only):'}], 'model': 'llama-3.1-8b-instant', 'max_tokens': 10, 'temperature': 0.3}}
2025-09-03 14:37:24,218 - httpcore.connection - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-09-03 14:37:24,267 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x107da1d10>
2025-09-03 14:37:24,267 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x107c13140> server_hostname='api.groq.com' timeout=5.0
2025-09-03 14:37:24,333 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x107da04d0>
2025-09-03 14:37:24,333 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-03 14:37:24,333 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-09-03 14:37:24,333 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-03 14:37:24,333 - httpcore.http11 - DEBUG - send_request_body.complete
2025-09-03 14:37:24,334 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-03 14:37:24,567 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 03 Sep 2025 09:07:24 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Content-Encoding', b'br'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'bom'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'5146'), (b'x-ratelimit-reset-requests', b'6s'), (b'x-ratelimit-reset-tokens', b'8.539999999s'), (b'x-request-id', b'req_01k47d9cqyeb1arkbr42b4mzzs'), (b'via', b'1.1 google'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=ZTeRLWV56EVFiu6.EcFcJfmjnROQwFMlbrayRWGfoRY-1756890444-1.0.1.1-zSo2dr2Etw_HhV7xVWdgmoeXzFBOCVLtN4s61_P8gSOy.UQZUo5kexHdhRGhgyW.hH6GbYgCpk4SypDStamqYfGkfPHoU1w4sHxTomsdaXo; path=/; expires=Wed, 03-Sep-25 09:37:24 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'979418be1c5b4087-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-03 14:37:24,570 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 14:37:24,570 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-03 14:37:24,571 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-09-03 14:37:24,571 - httpcore.http11 - DEBUG - response_closed.started
2025-09-03 14:37:24,571 - httpcore.http11 - DEBUG - response_closed.complete
2025-09-03 14:37:24,571 - groq._base_client - DEBUG - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
2025-09-03 14:37:24,575 - prompt_manager.app.crud.crud - INFO - Received response from GROQ API
2025-09-03 14:37:24,576 - prompt_manager.app.crud.crud - DEBUG - GROQ API response: ChatCompletion(choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChoiceMessage(content='81', role='assistant', tool_calls=None))], id='chatcmpl-788280df-0203-4883-8154-2c0565cc6686', created=1756890444, model='llama-3.1-8b-instant', object='chat.completion', system_fingerprint='fp_7083106d2c', usage=Usage(completion_time=0.003911072, completion_tokens=2, prompt_time=0.051354518, prompt_tokens=808, total_time=0.05526559, total_tokens=810, queue_time=0.044456482), usage_breakdown=None, x_groq={'id': 'req_01k47d9cqyeb1arkbr42b4mzzs'}, service_tier='on_demand')
2025-09-03 14:37:24,576 - prompt_manager.app.crud.crud - INFO - LLM raw response: 81 for input: I want to know how to solve maths equation. help me
2025-09-03 14:37:24,576 - prompt_manager.app.crud.crud - INFO - Extracted prompt ID: 81
2025-09-03 14:37:24,577 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.id = ? AND prompts.status = ? AND prompts.is_active = 1
 LIMIT ? OFFSET ?
2025-09-03 14:37:24,577 - sqlalchemy.engine.Engine - INFO - [cached since 311.8s ago] (81, 'active', 1, 0)
2025-09-03 14:37:24,578 - prompt_manager.app.crud.crud - INFO - Valid active prompt found: ID=81, Name=coding_assistant
2025-09-03 14:37:24,578 - prompt_manager.app.api.v1.api - INFO - Testing persona for prompt ID 81 (user: prishatank6@gmail.com)
2025-09-03 14:37:24,578 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.id = ?
 LIMIT ? OFFSET ?
2025-09-03 14:37:24,579 - sqlalchemy.engine.Engine - INFO - [cached since 311.8s ago] (81, 1, 0)
2025-09-03 14:37:24,580 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-09-03 14:37:24,581 - httpx - DEBUG - load_verify_locations cafile='/Applications/anaconda3/lib/python3.11/site-packages/certifi/cacert.pem'
2025-09-03 14:37:24,619 - groq._base_client - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an expert programming assistant. Help users with coding questions, algorithm design, debugging, and best practices. Provide clear, concise, and accurate code examples in the requested programming language.'}, {'role': 'user', 'content': 'I want to know how to solve maths equation. help me'}], 'model': 'llama-3.1-8b-instant', 'max_tokens': 1000, 'temperature': 0.7}}
2025-09-03 14:37:24,619 - httpcore.connection - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-09-03 14:37:24,658 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x107da9790>
2025-09-03 14:37:24,658 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x107c12b10> server_hostname='api.groq.com' timeout=5.0
2025-09-03 14:37:24,712 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x107daa450>
2025-09-03 14:37:24,712 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-03 14:37:24,712 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-09-03 14:37:24,712 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-03 14:37:24,712 - httpcore.http11 - DEBUG - send_request_body.complete
2025-09-03 14:37:24,712 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-03 14:37:25,716 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 03 Sep 2025 09:07:25 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Content-Encoding', b'br'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'bom'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14398'), (b'x-ratelimit-remaining-tokens', b'5141'), (b'x-ratelimit-reset-requests', b'11.625s'), (b'x-ratelimit-reset-tokens', b'8.585s'), (b'x-request-id', b'req_01k47d9d3pfef8kfsdqgkth4gf'), (b'via', b'1.1 google'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=TjOREAOnryZychsbilVNQoyKWlULBz5JgAGEbsS71uo-1756890445-1.0.1.1-p.qtLmxHNpaZkuki.3EKd5u8iznzlEXIlTzoJd.7RqhhZvHYjuRoO6VfBJhRwbsfOHZ8gA2FfNxw9Z6qsP_TAj54v1hkWgR870vMTAyQOOc; path=/; expires=Wed, 03-Sep-25 09:37:25 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'979418c07822db32-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-03 14:37:25,716 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 14:37:25,716 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-03 14:37:25,716 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-09-03 14:37:25,716 - httpcore.http11 - DEBUG - response_closed.started
2025-09-03 14:37:25,716 - httpcore.http11 - DEBUG - response_closed.complete
2025-09-03 14:37:25,716 - groq._base_client - DEBUG - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
2025-09-03 14:37:25,718 - httpcore.connection - DEBUG - close.started
2025-09-03 14:37:25,718 - httpcore.connection - DEBUG - close.complete
2025-09-03 14:37:25,718 - httpcore.connection - DEBUG - close.started
2025-09-03 14:37:25,718 - httpcore.connection - DEBUG - close.complete
2025-09-03 14:37:25,718 - httpcore.connection - DEBUG - close.started
2025-09-03 14:37:25,718 - httpcore.connection - DEBUG - close.complete
2025-09-03 14:37:25,718 - httpcore.connection - DEBUG - close.started
2025-09-03 14:37:25,718 - httpcore.connection - DEBUG - close.complete
2025-09-03 14:37:25,718 - httpcore.connection - DEBUG - close.started
2025-09-03 14:37:25,718 - httpcore.connection - DEBUG - close.complete
2025-09-03 14:37:25,718 - httpcore.connection - DEBUG - close.started
2025-09-03 14:37:25,718 - httpcore.connection - DEBUG - close.complete
2025-09-03 14:37:25,724 - prompt_manager.app.api.v1.api - INFO - Generated persona response for prompt 'coding_assistant' with persona type 'dynamic_persona'
2025-09-03 14:37:25,724 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/test-persona Status: 200 Time: 1548.97ms
2025-09-03 14:37:25,724 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 14:37:25,724 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 14:37:25,725 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 14:37:25,725 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 14:37:25,725 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 14:37:57,523 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:37:57,528 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 4.77ms
2025-09-03 14:37:57,543 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 14:37:57,546 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 14:37:57,547 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 14:37:57,548 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 14:37:57,548 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 14:37:57,548 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 14:37:57,548 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 14:37:57,549 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 14:37:57,550 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 14:37:57,550 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 09:01:55+00:00 (UTC)
2025-09-03 14:37:57,551 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 14:37:57,551 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 14:37:57,554 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 14:37:57,555 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 14:37:57,555 - sqlalchemy.engine.Engine - INFO - [cached since 362.8s ago] ('prishatank6@gmail.com', 1, 0)
2025-09-03 14:37:57,557 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 14)
2025-09-03 14:37:57,557 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 14:37:57,558 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 14:37:57,625 - httpcore.connection - DEBUG - close.started
2025-09-03 14:37:57,627 - httpcore.connection - DEBUG - close.complete
2025-09-03 14:37:57,627 - httpcore.connection - DEBUG - close.started
2025-09-03 14:37:57,628 - httpcore.connection - DEBUG - close.complete
2025-09-03 14:37:57,631 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts) AS anon_1
2025-09-03 14:37:57,631 - sqlalchemy.engine.Engine - INFO - [generated in 0.00022s] ()
2025-09-03 14:37:57,632 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts ORDER BY prompts.updated_at DESC
 LIMIT ? OFFSET ?
2025-09-03 14:37:57,632 - sqlalchemy.engine.Engine - INFO - [generated in 0.00030s] (100, 0)
2025-09-03 14:37:57,633 - prompt_manager.app.api.v1.api - INFO - Found 81 prompts out of 81 total
2025-09-03 14:37:57,635 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 92.22ms
2025-09-03 14:37:57,636 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 14:37:57,636 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 14:37:57,636 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 14:37:57,637 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 14:37:57,637 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 14:38:24,930 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:38:24,931 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.01ms
2025-09-03 14:38:31,681 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:38:31,684 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 2.59ms
2025-09-03 14:38:37,613 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:38:37,614 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.82ms
2025-09-03 14:38:37,662 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:38:37,662 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.6ms
2025-09-03 14:38:37,668 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/name/Math Tutor/version/1.0.1/activate
2025-09-03 14:38:37,669 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 14:38:37,669 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 14:38:37,669 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 14:38:37,669 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 14:38:37,669 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 14:38:37,669 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 14:38:37,669 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 14:38:37,670 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 14:38:37,670 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 09:01:55+00:00 (UTC)
2025-09-03 14:38:37,670 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 14:38:37,670 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 14:38:37,672 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 14:38:37,672 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 14:38:37,672 - sqlalchemy.engine.Engine - INFO - [cached since 402.9s ago] ('prishatank6@gmail.com', 1, 0)
2025-09-03 14:38:37,673 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 14)
2025-09-03 14:38:37,673 - prompt_manager.app.api.v1.api - INFO - Setting active version for prompt 'Math Tutor' to version 1.0.1 (user: prishatank6@gmail.com)
2025-09-03 14:38:37,673 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 14:38:37,675 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.name = ? AND prompts.version = ?
 LIMIT ? OFFSET ?
2025-09-03 14:38:37,675 - sqlalchemy.engine.Engine - INFO - [generated in 0.00025s] ('Math Tutor', '1.0.1', 1, 0)
2025-09-03 14:38:37,675 - prompt_manager.app.api.v1.api - INFO - Setting prompt 'Math Tutor' version 1.0.1 as live version
2025-09-03 14:38:37,676 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.name = ? AND prompts.is_active = 1 AND prompts.id != ?
 LIMIT ? OFFSET ?
2025-09-03 14:38:37,676 - sqlalchemy.engine.Engine - INFO - [generated in 0.00017s] ('Math Tutor', 77, 1, 0)
2025-09-03 14:38:37,677 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.id = ?
 LIMIT ? OFFSET ?
2025-09-03 14:38:37,677 - sqlalchemy.engine.Engine - INFO - [cached since 384.9s ago] (77, 1, 0)
2025-09-03 14:38:37,679 - sqlalchemy.engine.Engine - INFO - UPDATE prompts SET status=?, is_active=?, updated_at=? WHERE prompts.id = ?
2025-09-03 14:38:37,679 - sqlalchemy.engine.Engine - INFO - [generated in 0.00015s] ('active', 1, '2025-09-03 09:08:37.677185', 77)
2025-09-03 14:38:37,682 - sqlalchemy.engine.Engine - INFO - INSERT INTO prompt_history (prompt_id, version, content, description, status, tags, metadata, changed_by, changed_at, change_reason) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-09-03 14:38:37,682 - sqlalchemy.engine.Engine - INFO - [generated in 0.00027s] (77, '1.0.1', 'You are a friendly math tutor, explain concept step by step for better understanding.', 'Prompt for Math Tutor', 'active', '["Mathematics", "Tutor"]', '{"Category": "Teaching"}', 'prishatank6@gmail.com', '2025-09-03 09:08:37.681997', 'set_as_live_version')
2025-09-03 14:38:37,684 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-09-03 14:38:37,685 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 14:38:37,685 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id, prompts.name, prompts.version, prompts.content, prompts.description, prompts.status, prompts.is_active, prompts.tags, prompts.metadata, prompts.created_by, prompts.created_at, prompts.updated_at 
FROM prompts 
WHERE prompts.id = ?
2025-09-03 14:38:37,686 - sqlalchemy.engine.Engine - INFO - [generated in 0.00025s] (77,)
2025-09-03 14:38:37,686 - prompt_manager.app.api.v1.api - INFO - Successfully set prompt 'Math Tutor' version 1.0.1 as live version
2025-09-03 14:38:37,687 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/name/Math Tutor/version/1.0.1/activate Status: 200 Time: 18.68ms
2025-09-03 14:38:37,687 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 14:38:37,687 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 14:38:37,687 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 14:38:37,687 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 14:38:37,687 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 14:38:42,984 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:38:42,986 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.75ms
2025-09-03 14:38:59,947 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:38:59,948 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.79ms
2025-09-03 14:39:00,000 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:39:00,001 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.45ms
2025-09-03 14:39:00,010 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/test-persona
2025-09-03 14:39:00,011 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 14:39:00,011 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 14:39:00,011 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 14:39:00,011 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 14:39:00,011 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 14:39:00,011 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 14:39:00,011 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 14:39:00,012 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 14:39:00,012 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 09:01:55+00:00 (UTC)
2025-09-03 14:39:00,012 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 14:39:00,012 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 14:39:00,012 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 14:39:00,012 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 14:39:00,012 - sqlalchemy.engine.Engine - INFO - [cached since 425.3s ago] ('prishatank6@gmail.com', 1, 0)
2025-09-03 14:39:00,013 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 14)
2025-09-03 14:39:00,014 - prompt_manager.app.api.v1.api - INFO - Testing persona with automatic prompt selection (user: prishatank6@gmail.com)
2025-09-03 14:39:00,014 - prompt_manager.app.crud.crud - INFO - Finding most relevant prompt for input: I want to learn how to solve mathematics equation, help me
2025-09-03 14:39:00,015 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 14:39:00,015 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.status = ? AND prompts.is_active = 1
2025-09-03 14:39:00,016 - sqlalchemy.engine.Engine - INFO - [cached since 408s ago] ('active',)
2025-09-03 14:39:00,017 - prompt_manager.app.crud.crud - INFO - Found 17 active prompts in the database
2025-09-03 14:39:00,017 - prompt_manager.app.crud.crud - INFO - Active prompt 1: ID=28, Name=marketing, Status=active, is_active=True
2025-09-03 14:39:00,017 - prompt_manager.app.crud.crud - INFO - Active prompt 2: ID=31, Name=test_live_version_sync, Status=active, is_active=True
2025-09-03 14:39:00,017 - prompt_manager.app.crud.crud - INFO - Active prompt 3: ID=33, Name=debug_live_test, Status=active, is_active=True
2025-09-03 14:39:00,017 - prompt_manager.app.crud.crud - INFO - Active prompt 4: ID=37, Name=test_active_validation, Status=active, is_active=True
2025-09-03 14:39:00,018 - prompt_manager.app.crud.crud - INFO - Active prompt 5: ID=38, Name=test_auto_status, Status=active, is_active=True
2025-09-03 14:39:00,018 - prompt_manager.app.crud.crud - INFO - Active prompt 6: ID=40, Name=test_constraint, Status=active, is_active=True
2025-09-03 14:39:00,018 - prompt_manager.app.crud.crud - INFO - Active prompt 7: ID=43, Name=endpoint_test, Status=active, is_active=True
2025-09-03 14:39:00,018 - prompt_manager.app.crud.crud - INFO - Active prompt 8: ID=45, Name=final_test, Status=active, is_active=True
2025-09-03 14:39:00,018 - prompt_manager.app.crud.crud - INFO - Active prompt 9: ID=49, Name=full_test_prompt, Status=active, is_active=True
2025-09-03 14:39:00,018 - prompt_manager.app.crud.crud - INFO - Active prompt 10: ID=55, Name=lifecycle_test_final, Status=active, is_active=True
2025-09-03 14:39:00,018 - prompt_manager.app.crud.crud - INFO - Active prompt 11: ID=62, Name=code, Status=active, is_active=True
2025-09-03 14:39:00,018 - prompt_manager.app.crud.crud - INFO - Active prompt 12: ID=69, Name=Healthcare assistant, Status=active, is_active=True
2025-09-03 14:39:00,018 - prompt_manager.app.crud.crud - INFO - Active prompt 13: ID=77, Name=Math Tutor, Status=active, is_active=True
2025-09-03 14:39:00,018 - prompt_manager.app.crud.crud - INFO - Active prompt 14: ID=80, Name=mental_health_support, Status=active, is_active=True
2025-09-03 14:39:00,018 - prompt_manager.app.crud.crud - INFO - Active prompt 15: ID=81, Name=coding_assistant, Status=active, is_active=True
2025-09-03 14:39:00,018 - prompt_manager.app.crud.crud - INFO - Active prompt 16: ID=82, Name=cooking_assistant, Status=active, is_active=True
2025-09-03 14:39:00,018 - prompt_manager.app.crud.crud - INFO - Active prompt 17: ID=83, Name=tech_support, Status=active, is_active=True
2025-09-03 14:39:00,018 - prompt_manager.app.crud.crud - INFO - Sending 17 prompts to LLM for analysis
2025-09-03 14:39:00,018 - prompt_manager.app.crud.crud - DEBUG - System prompt: You are an expert at matching user queries to the most appropriate system prompt. 
        Your goal is to analyze the user's input and select the single most relevant prompt ID from the provided list.
        
        MATCHING GUIDELINES:
        1. For coding/technical questions (Python, algorithms, programming), choose the coding assistant prompt.
        2. For internet/connection/tech issues, choose the tech support prompt.
        3. For mental health/stress/anxiety concerns, choose the mental health support prompt.
        4. For cooking/recipes/food questions, choose the cooking assistant prompt.
        
        INSTRUCTIONS:
        1. Carefully read the user's input and identify the main topic/domain.
        2. Review all available prompts and their metadata (name, tags, content preview).
        3. Select the prompt that best matches the user's intent and domain.
        4. Consider both the content and the context of the query.
        5. If the query is ambiguous but could match multiple domains, choose the most likely one.
        
        RESPONSE FORMAT:
        - Return ONLY the numeric ID of the selected prompt (e.g., "42").
        - If no prompt is relevant, return "none".
        - DO NOT include any other text or explanation in your response.
        
        IMPORTANT: Focus on the user's intent and choose the most appropriate prompt, even if the match isn't perfect.
        
2025-09-03 14:39:00,018 - prompt_manager.app.crud.crud - DEBUG - User message: USER INPUT:
        I want to learn how to solve mathematics equation, help me
        
        AVAILABLE PROMPTS (ID, Name, Content Preview):
        
ID: 28 | Name: marketing
Preview: Testing
Tags: testing

ID: 31 | Name: test_live_version_sync
Preview: Second version content
Tags: test

ID: 33 | Name: debug_live_test
Preview: Debug content v2
Tags: debug

ID: 37 | Name: test_active_validation
Preview: First version
Tags: test

ID: 38 | Name: test_auto_status
Preview: Testing auto status
Tags: test

ID: 40 | Name: test_constraint
Preview: First active version
Tags: test

ID: 43 | Name: endpoint_test
Preview: Updated final test
Tags: test

ID: 45 | Name: final_test
Preview: Final test

ID: 49 | Name: full_test_prompt
Preview: Initial content for the full test.
Tags: testing, full-flow

ID: 55 | Name: lifecycle_test_final
Preview: Lifecycle test v2.0.0
Tags: lifecycle

ID: 62 | Name: code
Preview: Update for Debugger
Tags: suggestion

ID: 69 | Name: Healthcare assistant
Preview: Just for checking
Tags: wellbeing

ID: 77 | Name: Math Tutor
Preview: You are a friendly math tutor, explain concept step by step for better understanding.
Tags: Mathematics, Tutor

ID: 80 | Name: mental_health_support
Preview: You are a compassionate mental health support assistant. Provide empathetic and supportive responses...
Tags: mental_health, support, wellbeing

ID: 81 | Name: coding_assistant
Preview: You are an expert programming assistant. Help users with coding questions, algorithm design, debuggi...
Tags: programming, coding, algorithms

ID: 82 | Name: cooking_assistant
Preview: You are a professional chef and cooking instructor. Provide detailed recipes, cooking tips, and tech...
Tags: cooking, recipes, baking

ID: 83 | Name: tech_support
Preview: You are a technical support specialist. Help users troubleshoot hardware, software, and network issu...
Tags: tech_support, troubleshooting, it

        
        RESPONSE FORMAT:
        Return ONLY the numeric ID of the most relevant prompt, or 'none' if none match.
        Example: "42" or "none"
        
        YOUR RESPONSE (ID only):
2025-09-03 14:39:00,021 - prompt_manager.app.crud.crud - INFO - Initializing GROQ client...
2025-09-03 14:39:00,022 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-09-03 14:39:00,023 - httpx - DEBUG - load_verify_locations cafile='/Applications/anaconda3/lib/python3.11/site-packages/certifi/cacert.pem'
2025-09-03 14:39:00,045 - prompt_manager.app.crud.crud - INFO - Sending request to GROQ API...
2025-09-03 14:39:00,046 - groq._base_client - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an expert at matching user queries to the most appropriate system prompt. \n        Your goal is to analyze the user\'s input and select the single most relevant prompt ID from the provided list.\n        \n        MATCHING GUIDELINES:\n        1. For coding/technical questions (Python, algorithms, programming), choose the coding assistant prompt.\n        2. For internet/connection/tech issues, choose the tech support prompt.\n        3. For mental health/stress/anxiety concerns, choose the mental health support prompt.\n        4. For cooking/recipes/food questions, choose the cooking assistant prompt.\n        \n        INSTRUCTIONS:\n        1. Carefully read the user\'s input and identify the main topic/domain.\n        2. Review all available prompts and their metadata (name, tags, content preview).\n        3. Select the prompt that best matches the user\'s intent and domain.\n        4. Consider both the content and the context of the query.\n        5. If the query is ambiguous but could match multiple domains, choose the most likely one.\n        \n        RESPONSE FORMAT:\n        - Return ONLY the numeric ID of the selected prompt (e.g., "42").\n        - If no prompt is relevant, return "none".\n        - DO NOT include any other text or explanation in your response.\n        \n        IMPORTANT: Focus on the user\'s intent and choose the most appropriate prompt, even if the match isn\'t perfect.\n        '}, {'role': 'user', 'content': 'USER INPUT:\n        I want to learn how to solve mathematics equation, help me\n        \n        AVAILABLE PROMPTS (ID, Name, Content Preview):\n        \nID: 28 | Name: marketing\nPreview: Testing\nTags: testing\n\nID: 31 | Name: test_live_version_sync\nPreview: Second version content\nTags: test\n\nID: 33 | Name: debug_live_test\nPreview: Debug content v2\nTags: debug\n\nID: 37 | Name: test_active_validation\nPreview: First version\nTags: test\n\nID: 38 | Name: test_auto_status\nPreview: Testing auto status\nTags: test\n\nID: 40 | Name: test_constraint\nPreview: First active version\nTags: test\n\nID: 43 | Name: endpoint_test\nPreview: Updated final test\nTags: test\n\nID: 45 | Name: final_test\nPreview: Final test\n\nID: 49 | Name: full_test_prompt\nPreview: Initial content for the full test.\nTags: testing, full-flow\n\nID: 55 | Name: lifecycle_test_final\nPreview: Lifecycle test v2.0.0\nTags: lifecycle\n\nID: 62 | Name: code\nPreview: Update for Debugger\nTags: suggestion\n\nID: 69 | Name: Healthcare assistant\nPreview: Just for checking\nTags: wellbeing\n\nID: 77 | Name: Math Tutor\nPreview: You are a friendly math tutor, explain concept step by step for better understanding.\nTags: Mathematics, Tutor\n\nID: 80 | Name: mental_health_support\nPreview: You are a compassionate mental health support assistant. Provide empathetic and supportive responses...\nTags: mental_health, support, wellbeing\n\nID: 81 | Name: coding_assistant\nPreview: You are an expert programming assistant. Help users with coding questions, algorithm design, debuggi...\nTags: programming, coding, algorithms\n\nID: 82 | Name: cooking_assistant\nPreview: You are a professional chef and cooking instructor. Provide detailed recipes, cooking tips, and tech...\nTags: cooking, recipes, baking\n\nID: 83 | Name: tech_support\nPreview: You are a technical support specialist. Help users troubleshoot hardware, software, and network issu...\nTags: tech_support, troubleshooting, it\n\n        \n        RESPONSE FORMAT:\n        Return ONLY the numeric ID of the most relevant prompt, or \'none\' if none match.\n        Example: "42" or "none"\n        \n        YOUR RESPONSE (ID only):'}], 'model': 'llama-3.1-8b-instant', 'max_tokens': 10, 'temperature': 0.3}}
2025-09-03 14:39:00,047 - httpcore.connection - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-09-03 14:39:00,147 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x107dcd3d0>
2025-09-03 14:39:00,148 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x107c127b0> server_hostname='api.groq.com' timeout=5.0
2025-09-03 14:39:00,202 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x107dcf410>
2025-09-03 14:39:00,202 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-03 14:39:00,202 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-09-03 14:39:00,202 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-03 14:39:00,202 - httpcore.http11 - DEBUG - send_request_body.complete
2025-09-03 14:39:00,202 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-03 14:39:00,448 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 03 Sep 2025 09:09:00 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Content-Encoding', b'br'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'bom'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'5108'), (b'x-ratelimit-reset-requests', b'6s'), (b'x-ratelimit-reset-tokens', b'8.92s'), (b'x-request-id', b'req_01k47dcacmecytq3rac8e43gyq'), (b'via', b'1.1 google'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=of3JcrYtlR.pRFWWKG9rQ9CCp.zhL3ER2FxbN3Y39RI-1756890540-1.0.1.1-aWUAb3AJ_SNz92vpfp_8y.R57KEus.13aAl4au6VQ5dqbo_mio8np85A5SG97hqqiDajUmyU7i9x07Hhs_o94_ocU9nqnOsGGCKiQop..Nk; path=/; expires=Wed, 03-Sep-25 09:39:00 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'97941b155a903b0f-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-03 14:39:00,450 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 14:39:00,450 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-03 14:39:00,450 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-09-03 14:39:00,451 - httpcore.http11 - DEBUG - response_closed.started
2025-09-03 14:39:00,451 - httpcore.http11 - DEBUG - response_closed.complete
2025-09-03 14:39:00,451 - groq._base_client - DEBUG - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
2025-09-03 14:39:00,457 - prompt_manager.app.crud.crud - INFO - Received response from GROQ API
2025-09-03 14:39:00,457 - prompt_manager.app.crud.crud - DEBUG - GROQ API response: ChatCompletion(choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChoiceMessage(content='77', role='assistant', tool_calls=None))], id='chatcmpl-e168ac0e-6361-4a58-bae4-5d86e045a4d0', created=1756890540, model='llama-3.1-8b-instant', object='chat.completion', system_fingerprint='fp_2115512ff6', usage=Usage(completion_time=0.004034412, completion_tokens=2, prompt_time=0.090044416, prompt_tokens=842, total_time=0.094078828, total_tokens=844, queue_time=0.048717484), usage_breakdown=None, x_groq={'id': 'req_01k47dcacmecytq3rac8e43gyq'}, service_tier='on_demand')
2025-09-03 14:39:00,458 - prompt_manager.app.crud.crud - INFO - LLM raw response: 77 for input: I want to learn how to solve mathematics equation, help me
2025-09-03 14:39:00,458 - prompt_manager.app.crud.crud - INFO - Extracted prompt ID: 77
2025-09-03 14:39:00,458 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.id = ? AND prompts.status = ? AND prompts.is_active = 1
 LIMIT ? OFFSET ?
2025-09-03 14:39:00,458 - sqlalchemy.engine.Engine - INFO - [cached since 407.7s ago] (77, 'active', 1, 0)
2025-09-03 14:39:00,458 - prompt_manager.app.crud.crud - INFO - Valid active prompt found: ID=77, Name=Math Tutor
2025-09-03 14:39:00,458 - prompt_manager.app.api.v1.api - INFO - Testing persona for prompt ID 77 (user: prishatank6@gmail.com)
2025-09-03 14:39:00,459 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.id = ?
 LIMIT ? OFFSET ?
2025-09-03 14:39:00,459 - sqlalchemy.engine.Engine - INFO - [cached since 407.7s ago] (77, 1, 0)
2025-09-03 14:39:00,459 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-09-03 14:39:00,459 - httpx - DEBUG - load_verify_locations cafile='/Applications/anaconda3/lib/python3.11/site-packages/certifi/cacert.pem'
2025-09-03 14:39:00,492 - groq._base_client - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a friendly math tutor, explain concept step by step for better understanding.'}, {'role': 'user', 'content': 'I want to learn how to solve mathematics equation, help me'}], 'model': 'llama-3.1-8b-instant', 'max_tokens': 1000, 'temperature': 0.7}}
2025-09-03 14:39:00,492 - httpcore.connection - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-09-03 14:39:00,528 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x107daba10>
2025-09-03 14:39:00,528 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x107df7650> server_hostname='api.groq.com' timeout=5.0
2025-09-03 14:39:00,577 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x107da9e90>
2025-09-03 14:39:00,577 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-03 14:39:00,578 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-09-03 14:39:00,578 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-03 14:39:00,578 - httpcore.http11 - DEBUG - send_request_body.complete
2025-09-03 14:39:00,578 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-03 14:39:01,560 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 03 Sep 2025 09:09:01 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Content-Encoding', b'br'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'bom'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14398'), (b'x-ratelimit-remaining-tokens', b'5130'), (b'x-ratelimit-reset-requests', b'11.647s'), (b'x-ratelimit-reset-tokens', b'8.691999999s'), (b'x-request-id', b'req_01k47dcaqpewhbxhz7ph970tbm'), (b'via', b'1.1 google'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=aEzT5fk6OkI.7sw5rJKrtV.cWEI3GuvD4SZfxmcTfyE-1756890541-1.0.1.1-2xF2wkUzm8wwo1YzTSxloGCgTC9M7ziyzeOxGYsu.AvYMGq1GwG3SV.bN2Tf.gKGqQrM4GJaMmNmE6h9v9eWjx50Rbn3AdpOEszoYwxpMV0; path=/; expires=Wed, 03-Sep-25 09:39:01 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'97941b17b8682e1d-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-03 14:39:01,562 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 14:39:01,562 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-03 14:39:01,563 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-09-03 14:39:01,564 - httpcore.http11 - DEBUG - response_closed.started
2025-09-03 14:39:01,564 - httpcore.http11 - DEBUG - response_closed.complete
2025-09-03 14:39:01,564 - groq._base_client - DEBUG - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
2025-09-03 14:39:01,567 - httpcore.connection - DEBUG - close.started
2025-09-03 14:39:01,568 - httpcore.connection - DEBUG - close.complete
2025-09-03 14:39:01,572 - prompt_manager.app.api.v1.api - INFO - Generated persona response for prompt 'Math Tutor' with persona type 'dynamic_persona'
2025-09-03 14:39:01,573 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/test-persona Status: 200 Time: 1563.38ms
2025-09-03 14:39:01,574 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 14:39:01,574 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 14:39:01,575 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 14:39:01,575 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 14:39:01,575 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 14:40:28,542 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:40:28,551 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 9.25ms
2025-09-03 14:40:29,515 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:40:29,516 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.66ms
2025-09-03 14:40:29,525 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/?status=active
2025-09-03 14:40:29,533 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 14:40:29,533 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 14:40:29,534 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 14:40:29,534 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 14:40:29,534 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 14:40:29,534 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 14:40:29,534 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 14:40:29,539 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 14:40:29,539 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 09:01:55+00:00 (UTC)
2025-09-03 14:40:29,540 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 14:40:29,540 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 14:40:29,546 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 14:40:29,547 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 14:40:29,547 - sqlalchemy.engine.Engine - INFO - [cached since 514.7s ago] ('prishatank6@gmail.com', 1, 0)
2025-09-03 14:40:29,559 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 14)
2025-09-03 14:40:29,562 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=PromptStatus.ACTIVE, tag=None
2025-09-03 14:40:29,563 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 14:40:29,566 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.status = ?) AS anon_1
2025-09-03 14:40:29,566 - sqlalchemy.engine.Engine - INFO - [generated in 0.00032s] ('active',)
2025-09-03 14:40:29,570 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.status = ? ORDER BY prompts.updated_at DESC
 LIMIT ? OFFSET ?
2025-09-03 14:40:29,571 - sqlalchemy.engine.Engine - INFO - [generated in 0.00048s] ('active', 100, 0)
2025-09-03 14:40:29,574 - prompt_manager.app.api.v1.api - INFO - Found 25 prompts out of 25 total
2025-09-03 14:40:29,578 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/?status=active Status: 200 Time: 52.97ms
2025-09-03 14:40:29,579 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 14:40:29,579 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 14:40:29,579 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 14:40:29,579 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 14:40:29,579 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 14:40:54,896 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 14:40:55,003 - httpcore.connection - DEBUG - close.started
2025-09-03 14:40:55,008 - httpcore.connection - DEBUG - close.complete
2025-09-03 14:40:56,802 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 14:40:56,802 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("users")
2025-09-03 14:40:56,802 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 14:40:56,807 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("prompts")
2025-09-03 14:40:56,807 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 14:40:56,807 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("prompt_history")
2025-09-03 14:40:56,807 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 14:40:56,808 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-09-03 14:40:56,848 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 14:40:56,848 - prompt_manager.app.main - INFO - Log level: DEBUG
2025-09-03 14:40:56,848 - prompt_manager.app.main - INFO - Database URL: sqlite:////Users/prisha/Desktop/Coding/system prompt/prompts.db
2025-09-03 14:41:26,218 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:41:26,222 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 3.77ms
2025-09-03 14:41:37,437 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:41:37,442 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 5.44ms
2025-09-03 14:41:37,455 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-03 14:41:37,456 - multipart.multipart - DEBUG - Calling on_field_start with no data
2025-09-03 14:41:37,456 - multipart.multipart - DEBUG - Calling on_field_name with data[0:8]
2025-09-03 14:41:37,456 - multipart.multipart - DEBUG - Calling on_field_data with data[9:32]
2025-09-03 14:41:37,456 - multipart.multipart - DEBUG - Calling on_field_end with no data
2025-09-03 14:41:37,457 - multipart.multipart - DEBUG - Calling on_field_start with no data
2025-09-03 14:41:37,457 - multipart.multipart - DEBUG - Calling on_field_name with data[33:41]
2025-09-03 14:41:37,457 - multipart.multipart - DEBUG - Calling on_field_data with data[42:50]
2025-09-03 14:41:37,457 - multipart.multipart - DEBUG - Calling on_field_end with no data
2025-09-03 14:41:37,457 - multipart.multipart - DEBUG - Calling on_end with no data
2025-09-03 14:41:37,459 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 14:41:37,460 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 14:41:37,478 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 14:41:37,481 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 14:41:37,481 - sqlalchemy.engine.Engine - INFO - [generated in 0.00036s] ('prishatank6@gmail.com', 1, 0)
2025-09-03 14:41:37,485 - passlib.handlers.bcrypt - DEBUG - detected 'bcrypt' backend, version '4.0.1'
2025-09-03 14:41:37,489 - passlib.handlers.bcrypt - DEBUG - 'bcrypt' backend lacks $2$ support, enabling workaround
2025-09-03 14:41:37,785 - prompt_manager.app.api.v1.endpoints.auth - INFO - Created access token for user: prishatank6@gmail.com
2025-09-03 14:41:37,800 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 200 Time: 345.26ms
2025-09-03 14:41:37,801 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 14:41:37,801 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 14:41:37,802 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 14:41:37,802 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 14:41:37,855 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:41:37,855 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.35ms
2025-09-03 14:41:39,161 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:41:39,162 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.96ms
2025-09-03 14:41:49,829 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:41:49,831 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.35ms
2025-09-03 14:41:49,891 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:41:49,892 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.6ms
2025-09-03 14:41:49,902 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/test-persona
2025-09-03 14:41:49,904 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 14:41:49,904 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 14:41:49,904 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 14:41:49,904 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 14:41:49,904 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 14:41:49,904 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 14:41:49,905 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 14:41:49,905 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 14:41:49,905 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 09:11:37+00:00 (UTC)
2025-09-03 14:41:49,905 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 14:41:49,905 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 14:41:49,906 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 14:41:49,906 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 14:41:49,906 - sqlalchemy.engine.Engine - INFO - [cached since 12.43s ago] ('prishatank6@gmail.com', 1, 0)
2025-09-03 14:41:49,906 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 14)
2025-09-03 14:41:49,906 - prompt_manager.app.api.v1.api - INFO - Testing persona with automatic prompt selection (user: prishatank6@gmail.com)
2025-09-03 14:41:49,907 - prompt_manager.app.crud.crud - INFO - Finding most relevant prompt for input: I have headache, help me
2025-09-03 14:41:49,909 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 14:41:49,910 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.status = ? AND prompts.is_active = 1
2025-09-03 14:41:49,911 - sqlalchemy.engine.Engine - INFO - [generated in 0.00044s] ('active',)
2025-09-03 14:41:49,913 - prompt_manager.app.crud.crud - INFO - Found 17 active prompts in the database
2025-09-03 14:41:49,913 - prompt_manager.app.crud.crud - INFO - Active prompt 1: ID=28, Name=marketing, Status=active, is_active=True
2025-09-03 14:41:49,913 - prompt_manager.app.crud.crud - INFO - Active prompt 2: ID=31, Name=test_live_version_sync, Status=active, is_active=True
2025-09-03 14:41:49,913 - prompt_manager.app.crud.crud - INFO - Active prompt 3: ID=33, Name=debug_live_test, Status=active, is_active=True
2025-09-03 14:41:49,913 - prompt_manager.app.crud.crud - INFO - Active prompt 4: ID=37, Name=test_active_validation, Status=active, is_active=True
2025-09-03 14:41:49,913 - prompt_manager.app.crud.crud - INFO - Active prompt 5: ID=38, Name=test_auto_status, Status=active, is_active=True
2025-09-03 14:41:49,913 - prompt_manager.app.crud.crud - INFO - Active prompt 6: ID=40, Name=test_constraint, Status=active, is_active=True
2025-09-03 14:41:49,913 - prompt_manager.app.crud.crud - INFO - Active prompt 7: ID=43, Name=endpoint_test, Status=active, is_active=True
2025-09-03 14:41:49,913 - prompt_manager.app.crud.crud - INFO - Active prompt 8: ID=45, Name=final_test, Status=active, is_active=True
2025-09-03 14:41:49,913 - prompt_manager.app.crud.crud - INFO - Active prompt 9: ID=49, Name=full_test_prompt, Status=active, is_active=True
2025-09-03 14:41:49,913 - prompt_manager.app.crud.crud - INFO - Active prompt 10: ID=55, Name=lifecycle_test_final, Status=active, is_active=True
2025-09-03 14:41:49,913 - prompt_manager.app.crud.crud - INFO - Active prompt 11: ID=62, Name=code, Status=active, is_active=True
2025-09-03 14:41:49,913 - prompt_manager.app.crud.crud - INFO - Active prompt 12: ID=69, Name=Healthcare assistant, Status=active, is_active=True
2025-09-03 14:41:49,913 - prompt_manager.app.crud.crud - INFO - Active prompt 13: ID=77, Name=Math Tutor, Status=active, is_active=True
2025-09-03 14:41:49,913 - prompt_manager.app.crud.crud - INFO - Active prompt 14: ID=80, Name=mental_health_support, Status=active, is_active=True
2025-09-03 14:41:49,913 - prompt_manager.app.crud.crud - INFO - Active prompt 15: ID=81, Name=coding_assistant, Status=active, is_active=True
2025-09-03 14:41:49,913 - prompt_manager.app.crud.crud - INFO - Active prompt 16: ID=82, Name=cooking_assistant, Status=active, is_active=True
2025-09-03 14:41:49,913 - prompt_manager.app.crud.crud - INFO - Active prompt 17: ID=83, Name=tech_support, Status=active, is_active=True
2025-09-03 14:41:49,913 - prompt_manager.app.crud.crud - INFO - Sending 17 prompts to LLM for analysis
2025-09-03 14:41:49,914 - prompt_manager.app.crud.crud - DEBUG - System prompt: You are an expert at matching user queries to the most appropriate system prompt. 
        Your goal is to analyze the user's input and select the single most relevant prompt ID from the provided list.
        
        MATCHING GUIDELINES:
        1. For coding/technical questions (Python, algorithms, programming), choose the coding assistant prompt.
        2. For internet/connection/tech issues, choose the tech support prompt.
        3. For mental health/stress/anxiety concerns, choose the mental health support prompt.
        4. For cooking/recipes/food questions, choose the cooking assistant prompt.
        
        INSTRUCTIONS:
        1. Carefully read the user's input and identify the main topic/domain.
        2. Review all available prompts and their metadata (name, tags, content preview).
        3. Select the prompt that best matches the user's intent and domain.
        4. Consider both the content and the context of the query.
        5. If the query is ambiguous but could match multiple domains, choose the most likely one.
        
        RESPONSE FORMAT:
        - Return ONLY the numeric ID of the selected prompt (e.g., "42").
        - If no prompt is relevant, return "none".
        - DO NOT include any other text or explanation in your response.
        
        IMPORTANT: Focus on the user's intent and choose the most appropriate prompt, even if the match isn't perfect.
        
2025-09-03 14:41:49,914 - prompt_manager.app.crud.crud - DEBUG - User message: USER INPUT:
        I have headache, help me
        
        AVAILABLE PROMPTS (ID, Name, Content Preview):
        
ID: 28 | Name: marketing
Preview: Testing
Tags: testing

ID: 31 | Name: test_live_version_sync
Preview: Second version content
Tags: test

ID: 33 | Name: debug_live_test
Preview: Debug content v2
Tags: debug

ID: 37 | Name: test_active_validation
Preview: First version
Tags: test

ID: 38 | Name: test_auto_status
Preview: Testing auto status
Tags: test

ID: 40 | Name: test_constraint
Preview: First active version
Tags: test

ID: 43 | Name: endpoint_test
Preview: Updated final test
Tags: test

ID: 45 | Name: final_test
Preview: Final test

ID: 49 | Name: full_test_prompt
Preview: Initial content for the full test.
Tags: testing, full-flow

ID: 55 | Name: lifecycle_test_final
Preview: Lifecycle test v2.0.0
Tags: lifecycle

ID: 62 | Name: code
Preview: Update for Debugger
Tags: suggestion

ID: 69 | Name: Healthcare assistant
Preview: Just for checking
Tags: wellbeing

ID: 77 | Name: Math Tutor
Preview: You are a friendly math tutor, explain concept step by step for better understanding.
Tags: Mathematics, Tutor

ID: 80 | Name: mental_health_support
Preview: You are a compassionate mental health support assistant. Provide empathetic and supportive responses...
Tags: mental_health, support, wellbeing

ID: 81 | Name: coding_assistant
Preview: You are an expert programming assistant. Help users with coding questions, algorithm design, debuggi...
Tags: programming, coding, algorithms

ID: 82 | Name: cooking_assistant
Preview: You are a professional chef and cooking instructor. Provide detailed recipes, cooking tips, and tech...
Tags: cooking, recipes, baking

ID: 83 | Name: tech_support
Preview: You are a technical support specialist. Help users troubleshoot hardware, software, and network issu...
Tags: tech_support, troubleshooting, it

        
        RESPONSE FORMAT:
        Return ONLY the numeric ID of the most relevant prompt, or 'none' if none match.
        Example: "42" or "none"
        
        YOUR RESPONSE (ID only):
2025-09-03 14:41:49,914 - prompt_manager.app.crud.crud - INFO - Initializing GROQ client...
2025-09-03 14:41:49,922 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-09-03 14:41:49,924 - httpx - DEBUG - load_verify_locations cafile='/Applications/anaconda3/lib/python3.11/site-packages/certifi/cacert.pem'
2025-09-03 14:41:49,942 - prompt_manager.app.crud.crud - INFO - Sending request to GROQ API...
2025-09-03 14:41:49,943 - groq._base_client - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an expert at matching user queries to the most appropriate system prompt. \n        Your goal is to analyze the user\'s input and select the single most relevant prompt ID from the provided list.\n        \n        MATCHING GUIDELINES:\n        1. For coding/technical questions (Python, algorithms, programming), choose the coding assistant prompt.\n        2. For internet/connection/tech issues, choose the tech support prompt.\n        3. For mental health/stress/anxiety concerns, choose the mental health support prompt.\n        4. For cooking/recipes/food questions, choose the cooking assistant prompt.\n        \n        INSTRUCTIONS:\n        1. Carefully read the user\'s input and identify the main topic/domain.\n        2. Review all available prompts and their metadata (name, tags, content preview).\n        3. Select the prompt that best matches the user\'s intent and domain.\n        4. Consider both the content and the context of the query.\n        5. If the query is ambiguous but could match multiple domains, choose the most likely one.\n        \n        RESPONSE FORMAT:\n        - Return ONLY the numeric ID of the selected prompt (e.g., "42").\n        - If no prompt is relevant, return "none".\n        - DO NOT include any other text or explanation in your response.\n        \n        IMPORTANT: Focus on the user\'s intent and choose the most appropriate prompt, even if the match isn\'t perfect.\n        '}, {'role': 'user', 'content': 'USER INPUT:\n        I have headache, help me\n        \n        AVAILABLE PROMPTS (ID, Name, Content Preview):\n        \nID: 28 | Name: marketing\nPreview: Testing\nTags: testing\n\nID: 31 | Name: test_live_version_sync\nPreview: Second version content\nTags: test\n\nID: 33 | Name: debug_live_test\nPreview: Debug content v2\nTags: debug\n\nID: 37 | Name: test_active_validation\nPreview: First version\nTags: test\n\nID: 38 | Name: test_auto_status\nPreview: Testing auto status\nTags: test\n\nID: 40 | Name: test_constraint\nPreview: First active version\nTags: test\n\nID: 43 | Name: endpoint_test\nPreview: Updated final test\nTags: test\n\nID: 45 | Name: final_test\nPreview: Final test\n\nID: 49 | Name: full_test_prompt\nPreview: Initial content for the full test.\nTags: testing, full-flow\n\nID: 55 | Name: lifecycle_test_final\nPreview: Lifecycle test v2.0.0\nTags: lifecycle\n\nID: 62 | Name: code\nPreview: Update for Debugger\nTags: suggestion\n\nID: 69 | Name: Healthcare assistant\nPreview: Just for checking\nTags: wellbeing\n\nID: 77 | Name: Math Tutor\nPreview: You are a friendly math tutor, explain concept step by step for better understanding.\nTags: Mathematics, Tutor\n\nID: 80 | Name: mental_health_support\nPreview: You are a compassionate mental health support assistant. Provide empathetic and supportive responses...\nTags: mental_health, support, wellbeing\n\nID: 81 | Name: coding_assistant\nPreview: You are an expert programming assistant. Help users with coding questions, algorithm design, debuggi...\nTags: programming, coding, algorithms\n\nID: 82 | Name: cooking_assistant\nPreview: You are a professional chef and cooking instructor. Provide detailed recipes, cooking tips, and tech...\nTags: cooking, recipes, baking\n\nID: 83 | Name: tech_support\nPreview: You are a technical support specialist. Help users troubleshoot hardware, software, and network issu...\nTags: tech_support, troubleshooting, it\n\n        \n        RESPONSE FORMAT:\n        Return ONLY the numeric ID of the most relevant prompt, or \'none\' if none match.\n        Example: "42" or "none"\n        \n        YOUR RESPONSE (ID only):'}], 'model': 'llama-3.1-8b-instant', 'max_tokens': 10, 'temperature': 0.3}}
2025-09-03 14:41:50,293 - httpcore.connection - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-09-03 14:41:50,403 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10a2789d0>
2025-09-03 14:41:50,403 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x10a111be0> server_hostname='api.groq.com' timeout=5.0
2025-09-03 14:41:50,457 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x109f03f10>
2025-09-03 14:41:50,457 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-03 14:41:50,457 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-09-03 14:41:50,458 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-03 14:41:50,458 - httpcore.http11 - DEBUG - send_request_body.complete
2025-09-03 14:41:50,458 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-03 14:41:50,809 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 03 Sep 2025 09:11:50 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Content-Encoding', b'br'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'bom'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'5116'), (b'x-ratelimit-reset-requests', b'6s'), (b'x-ratelimit-reset-tokens', b'8.84s'), (b'x-request-id', b'req_01k47dhgj9ef3abthhme16b8qs'), (b'via', b'1.1 google'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=bh8DlG164CxNlavqjOFNvmG0TKzA4UeQGTSW2nib5_k-1756890710-1.0.1.1-KAU5T9gxQWn3MjKMqFwY4xVXNarvekFwRVBIxIy0EmBKg4dHn4VWn9aZ.lAuqiWSRvHWBFEN9rMJ8hUNr.wjPHvtLdCYQbM5LE3EDiGbUS0; path=/; expires=Wed, 03-Sep-25 09:41:50 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'97941f3cebc8538b-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-03 14:41:50,810 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 14:41:50,813 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-03 14:41:50,814 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-09-03 14:41:50,814 - httpcore.http11 - DEBUG - response_closed.started
2025-09-03 14:41:50,814 - httpcore.http11 - DEBUG - response_closed.complete
2025-09-03 14:41:50,814 - groq._base_client - DEBUG - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
2025-09-03 14:41:50,822 - prompt_manager.app.crud.crud - INFO - Received response from GROQ API
2025-09-03 14:41:50,822 - prompt_manager.app.crud.crud - DEBUG - GROQ API response: ChatCompletion(choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChoiceMessage(content='80', role='assistant', tool_calls=None))], id='chatcmpl-49e74ab1-5d13-4d59-bc3a-096eaada47bf', created=1756890710, model='llama-3.1-8b-instant', object='chat.completion', system_fingerprint='fp_7083106d2c', usage=Usage(completion_time=0.004061239, completion_tokens=2, prompt_time=0.070231627, prompt_tokens=836, total_time=0.074292866, total_tokens=838, queue_time=0.044571133), usage_breakdown=None, x_groq={'id': 'req_01k47dhgj9ef3abthhme16b8qs'}, service_tier='on_demand')
2025-09-03 14:41:50,822 - prompt_manager.app.crud.crud - INFO - LLM raw response: 80 for input: I have headache, help me
2025-09-03 14:41:50,822 - prompt_manager.app.crud.crud - INFO - Extracted prompt ID: 80
2025-09-03 14:41:50,825 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.id = ? AND prompts.status = ? AND prompts.is_active = 1
 LIMIT ? OFFSET ?
2025-09-03 14:41:50,825 - sqlalchemy.engine.Engine - INFO - [generated in 0.00056s] (80, 'active', 1, 0)
2025-09-03 14:41:50,826 - prompt_manager.app.crud.crud - INFO - Valid active prompt found: ID=80, Name=mental_health_support
2025-09-03 14:41:50,827 - prompt_manager.app.api.v1.api - INFO - Testing persona for prompt ID 80 (user: prishatank6@gmail.com)
2025-09-03 14:41:50,828 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.id = ?
 LIMIT ? OFFSET ?
2025-09-03 14:41:50,828 - sqlalchemy.engine.Engine - INFO - [generated in 0.00028s] (80, 1, 0)
2025-09-03 14:41:50,829 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-09-03 14:41:50,830 - httpx - DEBUG - load_verify_locations cafile='/Applications/anaconda3/lib/python3.11/site-packages/certifi/cacert.pem'
2025-09-03 14:41:50,862 - groq._base_client - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a compassionate mental health support assistant. Provide empathetic and supportive responses to users who may be experiencing stress, anxiety, or other mental health concerns. Offer helpful coping strategies and encourage professional help when appropriate.'}, {'role': 'user', 'content': 'I have headache, help me'}], 'model': 'llama-3.1-8b-instant', 'max_tokens': 1000, 'temperature': 0.7}}
2025-09-03 14:41:50,863 - httpcore.connection - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-09-03 14:41:50,906 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10a28eb10>
2025-09-03 14:41:50,906 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x10a110e60> server_hostname='api.groq.com' timeout=5.0
2025-09-03 14:41:50,956 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10a28ebd0>
2025-09-03 14:41:50,957 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-03 14:41:50,957 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-09-03 14:41:50,957 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-03 14:41:50,957 - httpcore.http11 - DEBUG - send_request_body.complete
2025-09-03 14:41:50,957 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-03 14:41:51,486 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 03 Sep 2025 09:11:51 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Content-Encoding', b'br'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'bom'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14398'), (b'x-ratelimit-remaining-tokens', b'5115'), (b'x-ratelimit-reset-requests', b'11.519s'), (b'x-ratelimit-reset-tokens', b'8.848999999s'), (b'x-request-id', b'req_01k47dhh1aef49k9xdh5xzwhre'), (b'via', b'1.1 google'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=OmuWhLF50aToM3Sq_wXkqXMgfMb_t__WOTcmyHsB6cE-1756890711-1.0.1.1-3ozSLVWn32hyH5GQgzIspC5eTlQs.vGqsAbgKnEmGFrLO8mE7dDBRc8Ua4po3v0dVrLPe5og55NdnEo.5kNMSMaYgKgnWUJQKcmd4SUUq08; path=/; expires=Wed, 03-Sep-25 09:41:51 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'97941f3fff894162-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-03 14:41:51,487 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 14:41:51,488 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-03 14:41:51,488 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-09-03 14:41:51,489 - httpcore.http11 - DEBUG - response_closed.started
2025-09-03 14:41:51,489 - httpcore.http11 - DEBUG - response_closed.complete
2025-09-03 14:41:51,489 - groq._base_client - DEBUG - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
2025-09-03 14:41:51,492 - prompt_manager.app.api.v1.api - INFO - Generated persona response for prompt 'mental_health_support' with persona type 'dynamic_persona'
2025-09-03 14:41:51,494 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/test-persona Status: 200 Time: 1591.58ms
2025-09-03 14:41:51,495 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 14:41:51,495 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 14:41:51,495 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 14:41:51,496 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 14:41:51,496 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 14:42:06,394 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:42:06,397 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 2.91ms
2025-09-03 14:42:06,410 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/test-persona
2025-09-03 14:42:06,413 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 14:42:06,413 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 14:42:06,414 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 14:42:06,414 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 14:42:06,414 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 14:42:06,414 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 14:42:06,415 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 14:42:06,416 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 14:42:06,417 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 09:11:37+00:00 (UTC)
2025-09-03 14:42:06,417 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 14:42:06,417 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 14:42:06,420 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 14:42:06,421 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 14:42:06,422 - sqlalchemy.engine.Engine - INFO - [cached since 28.94s ago] ('prishatank6@gmail.com', 1, 0)
2025-09-03 14:42:06,423 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 14)
2025-09-03 14:42:06,424 - prompt_manager.app.api.v1.api - INFO - Testing persona with automatic prompt selection (user: prishatank6@gmail.com)
2025-09-03 14:42:06,424 - prompt_manager.app.crud.crud - INFO - Finding most relevant prompt for input: I have headache, help me
2025-09-03 14:42:06,425 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 14:42:06,426 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.status = ? AND prompts.is_active = 1
2025-09-03 14:42:06,426 - sqlalchemy.engine.Engine - INFO - [cached since 16.52s ago] ('active',)
2025-09-03 14:42:06,427 - prompt_manager.app.crud.crud - INFO - Found 17 active prompts in the database
2025-09-03 14:42:06,427 - prompt_manager.app.crud.crud - INFO - Active prompt 1: ID=28, Name=marketing, Status=active, is_active=True
2025-09-03 14:42:06,427 - prompt_manager.app.crud.crud - INFO - Active prompt 2: ID=31, Name=test_live_version_sync, Status=active, is_active=True
2025-09-03 14:42:06,427 - prompt_manager.app.crud.crud - INFO - Active prompt 3: ID=33, Name=debug_live_test, Status=active, is_active=True
2025-09-03 14:42:06,428 - prompt_manager.app.crud.crud - INFO - Active prompt 4: ID=37, Name=test_active_validation, Status=active, is_active=True
2025-09-03 14:42:06,428 - prompt_manager.app.crud.crud - INFO - Active prompt 5: ID=38, Name=test_auto_status, Status=active, is_active=True
2025-09-03 14:42:06,428 - prompt_manager.app.crud.crud - INFO - Active prompt 6: ID=40, Name=test_constraint, Status=active, is_active=True
2025-09-03 14:42:06,428 - prompt_manager.app.crud.crud - INFO - Active prompt 7: ID=43, Name=endpoint_test, Status=active, is_active=True
2025-09-03 14:42:06,428 - prompt_manager.app.crud.crud - INFO - Active prompt 8: ID=45, Name=final_test, Status=active, is_active=True
2025-09-03 14:42:06,428 - prompt_manager.app.crud.crud - INFO - Active prompt 9: ID=49, Name=full_test_prompt, Status=active, is_active=True
2025-09-03 14:42:06,428 - prompt_manager.app.crud.crud - INFO - Active prompt 10: ID=55, Name=lifecycle_test_final, Status=active, is_active=True
2025-09-03 14:42:06,428 - prompt_manager.app.crud.crud - INFO - Active prompt 11: ID=62, Name=code, Status=active, is_active=True
2025-09-03 14:42:06,428 - prompt_manager.app.crud.crud - INFO - Active prompt 12: ID=69, Name=Healthcare assistant, Status=active, is_active=True
2025-09-03 14:42:06,428 - prompt_manager.app.crud.crud - INFO - Active prompt 13: ID=77, Name=Math Tutor, Status=active, is_active=True
2025-09-03 14:42:06,428 - prompt_manager.app.crud.crud - INFO - Active prompt 14: ID=80, Name=mental_health_support, Status=active, is_active=True
2025-09-03 14:42:06,428 - prompt_manager.app.crud.crud - INFO - Active prompt 15: ID=81, Name=coding_assistant, Status=active, is_active=True
2025-09-03 14:42:06,428 - prompt_manager.app.crud.crud - INFO - Active prompt 16: ID=82, Name=cooking_assistant, Status=active, is_active=True
2025-09-03 14:42:06,428 - prompt_manager.app.crud.crud - INFO - Active prompt 17: ID=83, Name=tech_support, Status=active, is_active=True
2025-09-03 14:42:06,428 - prompt_manager.app.crud.crud - INFO - Sending 17 prompts to LLM for analysis
2025-09-03 14:42:06,428 - prompt_manager.app.crud.crud - DEBUG - System prompt: You are an expert at matching user queries to the most appropriate system prompt. 
        Your goal is to analyze the user's input and select the single most relevant prompt ID from the provided list.
        
        MATCHING GUIDELINES:
        1. For coding/technical questions (Python, algorithms, programming), choose the coding assistant prompt.
        2. For internet/connection/tech issues, choose the tech support prompt.
        3. For mental health/stress/anxiety concerns, choose the mental health support prompt.
        4. For cooking/recipes/food questions, choose the cooking assistant prompt.
        
        INSTRUCTIONS:
        1. Carefully read the user's input and identify the main topic/domain.
        2. Review all available prompts and their metadata (name, tags, content preview).
        3. Select the prompt that best matches the user's intent and domain.
        4. Consider both the content and the context of the query.
        5. If the query is ambiguous but could match multiple domains, choose the most likely one.
        
        RESPONSE FORMAT:
        - Return ONLY the numeric ID of the selected prompt (e.g., "42").
        - If no prompt is relevant, return "none".
        - DO NOT include any other text or explanation in your response.
        
        IMPORTANT: Focus on the user's intent and choose the most appropriate prompt, even if the match isn't perfect.
        
2025-09-03 14:42:06,429 - prompt_manager.app.crud.crud - DEBUG - User message: USER INPUT:
        I have headache, help me
        
        AVAILABLE PROMPTS (ID, Name, Content Preview):
        
ID: 28 | Name: marketing
Preview: Testing
Tags: testing

ID: 31 | Name: test_live_version_sync
Preview: Second version content
Tags: test

ID: 33 | Name: debug_live_test
Preview: Debug content v2
Tags: debug

ID: 37 | Name: test_active_validation
Preview: First version
Tags: test

ID: 38 | Name: test_auto_status
Preview: Testing auto status
Tags: test

ID: 40 | Name: test_constraint
Preview: First active version
Tags: test

ID: 43 | Name: endpoint_test
Preview: Updated final test
Tags: test

ID: 45 | Name: final_test
Preview: Final test

ID: 49 | Name: full_test_prompt
Preview: Initial content for the full test.
Tags: testing, full-flow

ID: 55 | Name: lifecycle_test_final
Preview: Lifecycle test v2.0.0
Tags: lifecycle

ID: 62 | Name: code
Preview: Update for Debugger
Tags: suggestion

ID: 69 | Name: Healthcare assistant
Preview: Just for checking
Tags: wellbeing

ID: 77 | Name: Math Tutor
Preview: You are a friendly math tutor, explain concept step by step for better understanding.
Tags: Mathematics, Tutor

ID: 80 | Name: mental_health_support
Preview: You are a compassionate mental health support assistant. Provide empathetic and supportive responses...
Tags: mental_health, support, wellbeing

ID: 81 | Name: coding_assistant
Preview: You are an expert programming assistant. Help users with coding questions, algorithm design, debuggi...
Tags: programming, coding, algorithms

ID: 82 | Name: cooking_assistant
Preview: You are a professional chef and cooking instructor. Provide detailed recipes, cooking tips, and tech...
Tags: cooking, recipes, baking

ID: 83 | Name: tech_support
Preview: You are a technical support specialist. Help users troubleshoot hardware, software, and network issu...
Tags: tech_support, troubleshooting, it

        
        RESPONSE FORMAT:
        Return ONLY the numeric ID of the most relevant prompt, or 'none' if none match.
        Example: "42" or "none"
        
        YOUR RESPONSE (ID only):
2025-09-03 14:42:06,429 - prompt_manager.app.crud.crud - INFO - Initializing GROQ client...
2025-09-03 14:42:06,430 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-09-03 14:42:06,431 - httpx - DEBUG - load_verify_locations cafile='/Applications/anaconda3/lib/python3.11/site-packages/certifi/cacert.pem'
2025-09-03 14:42:06,469 - prompt_manager.app.crud.crud - INFO - Sending request to GROQ API...
2025-09-03 14:42:06,471 - groq._base_client - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an expert at matching user queries to the most appropriate system prompt. \n        Your goal is to analyze the user\'s input and select the single most relevant prompt ID from the provided list.\n        \n        MATCHING GUIDELINES:\n        1. For coding/technical questions (Python, algorithms, programming), choose the coding assistant prompt.\n        2. For internet/connection/tech issues, choose the tech support prompt.\n        3. For mental health/stress/anxiety concerns, choose the mental health support prompt.\n        4. For cooking/recipes/food questions, choose the cooking assistant prompt.\n        \n        INSTRUCTIONS:\n        1. Carefully read the user\'s input and identify the main topic/domain.\n        2. Review all available prompts and their metadata (name, tags, content preview).\n        3. Select the prompt that best matches the user\'s intent and domain.\n        4. Consider both the content and the context of the query.\n        5. If the query is ambiguous but could match multiple domains, choose the most likely one.\n        \n        RESPONSE FORMAT:\n        - Return ONLY the numeric ID of the selected prompt (e.g., "42").\n        - If no prompt is relevant, return "none".\n        - DO NOT include any other text or explanation in your response.\n        \n        IMPORTANT: Focus on the user\'s intent and choose the most appropriate prompt, even if the match isn\'t perfect.\n        '}, {'role': 'user', 'content': 'USER INPUT:\n        I have headache, help me\n        \n        AVAILABLE PROMPTS (ID, Name, Content Preview):\n        \nID: 28 | Name: marketing\nPreview: Testing\nTags: testing\n\nID: 31 | Name: test_live_version_sync\nPreview: Second version content\nTags: test\n\nID: 33 | Name: debug_live_test\nPreview: Debug content v2\nTags: debug\n\nID: 37 | Name: test_active_validation\nPreview: First version\nTags: test\n\nID: 38 | Name: test_auto_status\nPreview: Testing auto status\nTags: test\n\nID: 40 | Name: test_constraint\nPreview: First active version\nTags: test\n\nID: 43 | Name: endpoint_test\nPreview: Updated final test\nTags: test\n\nID: 45 | Name: final_test\nPreview: Final test\n\nID: 49 | Name: full_test_prompt\nPreview: Initial content for the full test.\nTags: testing, full-flow\n\nID: 55 | Name: lifecycle_test_final\nPreview: Lifecycle test v2.0.0\nTags: lifecycle\n\nID: 62 | Name: code\nPreview: Update for Debugger\nTags: suggestion\n\nID: 69 | Name: Healthcare assistant\nPreview: Just for checking\nTags: wellbeing\n\nID: 77 | Name: Math Tutor\nPreview: You are a friendly math tutor, explain concept step by step for better understanding.\nTags: Mathematics, Tutor\n\nID: 80 | Name: mental_health_support\nPreview: You are a compassionate mental health support assistant. Provide empathetic and supportive responses...\nTags: mental_health, support, wellbeing\n\nID: 81 | Name: coding_assistant\nPreview: You are an expert programming assistant. Help users with coding questions, algorithm design, debuggi...\nTags: programming, coding, algorithms\n\nID: 82 | Name: cooking_assistant\nPreview: You are a professional chef and cooking instructor. Provide detailed recipes, cooking tips, and tech...\nTags: cooking, recipes, baking\n\nID: 83 | Name: tech_support\nPreview: You are a technical support specialist. Help users troubleshoot hardware, software, and network issu...\nTags: tech_support, troubleshooting, it\n\n        \n        RESPONSE FORMAT:\n        Return ONLY the numeric ID of the most relevant prompt, or \'none\' if none match.\n        Example: "42" or "none"\n        \n        YOUR RESPONSE (ID only):'}], 'model': 'llama-3.1-8b-instant', 'max_tokens': 10, 'temperature': 0.3}}
2025-09-03 14:42:06,473 - httpcore.connection - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-09-03 14:42:06,505 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10a29b910>
2025-09-03 14:42:06,505 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x10a112450> server_hostname='api.groq.com' timeout=5.0
2025-09-03 14:42:06,554 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10a29bc90>
2025-09-03 14:42:06,554 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-03 14:42:06,554 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-09-03 14:42:06,554 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-03 14:42:06,554 - httpcore.http11 - DEBUG - send_request_body.complete
2025-09-03 14:42:06,554 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-03 14:42:06,770 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 03 Sep 2025 09:12:06 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Content-Encoding', b'br'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'bom'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'5116'), (b'x-ratelimit-reset-requests', b'6s'), (b'x-ratelimit-reset-tokens', b'8.84s'), (b'x-request-id', b'req_01k47dj09meynv16v58vcv09wm'), (b'via', b'1.1 google'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=PUTrLrAeSIGVN6ETMjAVArpveY4V7XRoHLqqk7st4R0-1756890726-1.0.1.1-tvghtX2fsDTkdOJ387TPeMBRoJY8moKcxJunf7UcW5ovoGsXgr8Cfd8t5verZD55efs.KVDzgYwsQ_YYrvFiV5LvhbtESqWjqZbZRZ7ekD0; path=/; expires=Wed, 03-Sep-25 09:42:06 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'97941fa188823c88-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-03 14:42:06,771 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 14:42:06,771 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-03 14:42:06,771 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-09-03 14:42:06,771 - httpcore.http11 - DEBUG - response_closed.started
2025-09-03 14:42:06,771 - httpcore.http11 - DEBUG - response_closed.complete
2025-09-03 14:42:06,771 - groq._base_client - DEBUG - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
2025-09-03 14:42:06,772 - prompt_manager.app.crud.crud - INFO - Received response from GROQ API
2025-09-03 14:42:06,773 - prompt_manager.app.crud.crud - DEBUG - GROQ API response: ChatCompletion(choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChoiceMessage(content='80', role='assistant', tool_calls=None))], id='chatcmpl-6b4d713b-8498-4031-a984-56a1fed30408', created=1756890726, model='llama-3.1-8b-instant', object='chat.completion', system_fingerprint='fp_c40956ddc4', usage=Usage(completion_time=0.003783826, completion_tokens=2, prompt_time=0.059628636, prompt_tokens=836, total_time=0.063412462, total_tokens=838, queue_time=0.047877944), usage_breakdown=None, x_groq={'id': 'req_01k47dj09meynv16v58vcv09wm'}, service_tier='on_demand')
2025-09-03 14:42:06,773 - prompt_manager.app.crud.crud - INFO - LLM raw response: 80 for input: I have headache, help me
2025-09-03 14:42:06,773 - prompt_manager.app.crud.crud - INFO - Extracted prompt ID: 80
2025-09-03 14:42:06,773 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.id = ? AND prompts.status = ? AND prompts.is_active = 1
 LIMIT ? OFFSET ?
2025-09-03 14:42:06,773 - sqlalchemy.engine.Engine - INFO - [cached since 15.95s ago] (80, 'active', 1, 0)
2025-09-03 14:42:06,773 - prompt_manager.app.crud.crud - INFO - Valid active prompt found: ID=80, Name=mental_health_support
2025-09-03 14:42:06,773 - prompt_manager.app.api.v1.api - INFO - Testing persona for prompt ID 80 (user: prishatank6@gmail.com)
2025-09-03 14:42:06,773 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.id = ?
 LIMIT ? OFFSET ?
2025-09-03 14:42:06,774 - sqlalchemy.engine.Engine - INFO - [cached since 15.95s ago] (80, 1, 0)
2025-09-03 14:42:06,774 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-09-03 14:42:06,774 - httpx - DEBUG - load_verify_locations cafile='/Applications/anaconda3/lib/python3.11/site-packages/certifi/cacert.pem'
2025-09-03 14:42:06,791 - groq._base_client - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a compassionate mental health support assistant. Provide empathetic and supportive responses to users who may be experiencing stress, anxiety, or other mental health concerns. Offer helpful coping strategies and encourage professional help when appropriate.'}, {'role': 'user', 'content': 'I have headache, help me'}], 'model': 'llama-3.1-8b-instant', 'max_tokens': 1000, 'temperature': 0.7}}
2025-09-03 14:42:06,791 - httpcore.connection - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-09-03 14:42:06,825 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10a28c850>
2025-09-03 14:42:06,825 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x109ab24e0> server_hostname='api.groq.com' timeout=5.0
2025-09-03 14:42:06,872 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10a28c690>
2025-09-03 14:42:06,872 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-03 14:42:06,873 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-09-03 14:42:06,873 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-03 14:42:06,873 - httpcore.http11 - DEBUG - send_request_body.complete
2025-09-03 14:42:06,873 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-03 14:42:07,841 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 03 Sep 2025 09:12:07 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Content-Encoding', b'br'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'bom'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14398'), (b'x-ratelimit-remaining-tokens', b'5096'), (b'x-ratelimit-reset-requests', b'11.711999999s'), (b'x-ratelimit-reset-tokens', b'9.033999999s'), (b'x-request-id', b'req_01k47dj0jmeyptx300748a9ahg'), (b'via', b'1.1 google'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=rU282cfvk4ZG.ZyixjOgpsxJ3KXz8TnPNk8W7_COweU-1756890727-1.0.1.1-4EZaH_8VdTHUXJYhRDx5877X5YWoGysjSYRl4jN3gqlpkRVmLYqLqH1QffiPnrj7C2hI8L6ceuhWwtBFauHw7cgbeQfVBiTd1icZL6idqhA; path=/; expires=Wed, 03-Sep-25 09:42:07 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'97941fa37d9ac628-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-03 14:42:07,842 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 14:42:07,843 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-03 14:42:07,843 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-09-03 14:42:07,843 - httpcore.http11 - DEBUG - response_closed.started
2025-09-03 14:42:07,844 - httpcore.http11 - DEBUG - response_closed.complete
2025-09-03 14:42:07,844 - groq._base_client - DEBUG - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
2025-09-03 14:42:07,846 - httpcore.connection - DEBUG - close.started
2025-09-03 14:42:07,847 - httpcore.connection - DEBUG - close.complete
2025-09-03 14:42:07,850 - prompt_manager.app.api.v1.api - INFO - Generated persona response for prompt 'mental_health_support' with persona type 'dynamic_persona'
2025-09-03 14:42:07,850 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/test-persona Status: 200 Time: 1440.74ms
2025-09-03 14:42:07,851 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 14:42:07,851 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 14:42:07,851 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 14:42:07,851 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 14:42:07,852 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 14:43:49,006 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 14:43:49,072 - httpcore.connection - DEBUG - close.started
2025-09-03 14:43:49,075 - httpcore.connection - DEBUG - close.complete
2025-09-03 14:43:49,075 - httpcore.connection - DEBUG - close.started
2025-09-03 14:43:49,078 - httpcore.connection - DEBUG - close.complete
2025-09-03 14:43:49,078 - httpcore.connection - DEBUG - close.started
2025-09-03 14:43:49,079 - httpcore.connection - DEBUG - close.complete
2025-09-03 14:43:50,188 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 14:43:50,188 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("users")
2025-09-03 14:43:50,188 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 14:43:50,188 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("prompts")
2025-09-03 14:43:50,188 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 14:43:50,188 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("prompt_history")
2025-09-03 14:43:50,188 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 14:43:50,188 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-09-03 14:43:50,211 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 14:43:50,211 - prompt_manager.app.main - INFO - Log level: DEBUG
2025-09-03 14:43:50,211 - prompt_manager.app.main - INFO - Database URL: sqlite:////Users/prisha/Desktop/Coding/system prompt/prompts.db
2025-09-03 14:44:40,552 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:44:40,556 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 3.28ms
2025-09-03 14:44:58,846 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 14:45:00,145 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 14:45:00,145 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("users")
2025-09-03 14:45:00,145 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 14:45:00,146 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("prompts")
2025-09-03 14:45:00,146 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 14:45:00,146 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("prompt_history")
2025-09-03 14:45:00,146 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 14:45:00,147 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-09-03 14:45:00,180 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 14:45:00,180 - prompt_manager.app.main - INFO - Log level: DEBUG
2025-09-03 14:45:00,180 - prompt_manager.app.main - INFO - Database URL: sqlite:////Users/prisha/Desktop/Coding/system prompt/prompts.db
2025-09-03 14:45:11,095 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 14:45:36,578 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 14:45:36,578 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-03 14:45:36,578 - prompt_manager.app.main - INFO - Database URL: sqlite:////Users/prisha/Desktop/Coding/system prompt/prompts.db
2025-09-03 14:45:41,511 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/test-persona
2025-09-03 14:45:41,512 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/test-persona Status: 401 Time: 1.5ms
2025-09-03 14:45:48,462 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-03 14:45:48,465 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 14:45:48,465 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 14:45:48,751 - prompt_manager.app.database - ERROR - Error in database session: 
2025-09-03 14:45:48,751 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 14:45:48,751 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 14:45:48,751 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 401 Time: 289.07ms
2025-09-03 14:46:20,322 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-03 14:46:20,325 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 14:46:20,326 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 14:46:20,698 - prompt_manager.app.api.v1.endpoints.auth - INFO - Created access token for user: admin@example.com
2025-09-03 14:46:20,705 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 200 Time: 382.81ms
2025-09-03 14:46:20,705 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 14:46:20,706 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 14:46:20,706 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 14:46:31,969 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/test-persona
2025-09-03 14:46:31,970 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 14:46:31,970 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 14:46:31,971 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 14:46:31,971 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 14:46:31,971 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 14:46:31,971 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 14:46:31,971 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 14:46:31,971 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 14:46:31,971 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 09:16:20+00:00 (UTC)
2025-09-03 14:46:31,971 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 14:46:31,971 - prompt_manager.app.core.security - INFO - Looking up user with email: admin@example.com
2025-09-03 14:46:31,971 - prompt_manager.app.core.security - INFO - Found user: admin@example.com (ID: 26)
2025-09-03 14:46:31,972 - prompt_manager.app.api.v1.api - INFO - Testing persona with automatic prompt selection (user: admin@example.com)
2025-09-03 14:46:31,972 - prompt_manager.app.crud.crud - INFO - Finding most relevant prompt for input: How do I write a Python function to reverse a string?
2025-09-03 14:46:31,975 - prompt_manager.app.crud.crud - INFO - Found 17 active prompts in the database
2025-09-03 14:46:31,975 - prompt_manager.app.crud.crud - INFO - Active prompt - ID: 28, Name: marketing, Status: active, is_active: True
2025-09-03 14:46:31,975 - prompt_manager.app.crud.crud - INFO - Active prompt - ID: 31, Name: test_live_version_sync, Status: active, is_active: True
2025-09-03 14:46:31,975 - prompt_manager.app.crud.crud - INFO - Active prompt - ID: 33, Name: debug_live_test, Status: active, is_active: True
2025-09-03 14:46:31,975 - prompt_manager.app.crud.crud - INFO - Active prompt - ID: 37, Name: test_active_validation, Status: active, is_active: True
2025-09-03 14:46:31,975 - prompt_manager.app.crud.crud - INFO - Active prompt - ID: 38, Name: test_auto_status, Status: active, is_active: True
2025-09-03 14:46:31,975 - prompt_manager.app.crud.crud - INFO - Active prompt - ID: 40, Name: test_constraint, Status: active, is_active: True
2025-09-03 14:46:31,975 - prompt_manager.app.crud.crud - INFO - Active prompt - ID: 43, Name: endpoint_test, Status: active, is_active: True
2025-09-03 14:46:31,975 - prompt_manager.app.crud.crud - INFO - Active prompt - ID: 45, Name: final_test, Status: active, is_active: True
2025-09-03 14:46:31,975 - prompt_manager.app.crud.crud - INFO - Active prompt - ID: 49, Name: full_test_prompt, Status: active, is_active: True
2025-09-03 14:46:31,975 - prompt_manager.app.crud.crud - INFO - Active prompt - ID: 55, Name: lifecycle_test_final, Status: active, is_active: True
2025-09-03 14:46:31,975 - prompt_manager.app.crud.crud - INFO - Active prompt - ID: 62, Name: code, Status: active, is_active: True
2025-09-03 14:46:31,976 - prompt_manager.app.crud.crud - INFO - Active prompt - ID: 69, Name: Healthcare assistant, Status: active, is_active: True
2025-09-03 14:46:31,976 - prompt_manager.app.crud.crud - INFO - Active prompt - ID: 77, Name: Math Tutor, Status: active, is_active: True
2025-09-03 14:46:31,976 - prompt_manager.app.crud.crud - INFO - Active prompt - ID: 80, Name: mental_health_support, Status: active, is_active: True
2025-09-03 14:46:31,976 - prompt_manager.app.crud.crud - INFO - Active prompt - ID: 81, Name: coding_assistant, Status: active, is_active: True
2025-09-03 14:46:31,976 - prompt_manager.app.crud.crud - INFO - Active prompt - ID: 82, Name: cooking_assistant, Status: active, is_active: True
2025-09-03 14:46:31,976 - prompt_manager.app.crud.crud - INFO - Active prompt - ID: 83, Name: tech_support, Status: active, is_active: True
2025-09-03 14:46:31,976 - prompt_manager.app.crud.crud - INFO - Found 4 persona-specific prompts
2025-09-03 14:46:31,976 - prompt_manager.app.crud.crud - INFO - Sending 4 prompts to LLM for analysis
2025-09-03 14:46:31,976 - prompt_manager.app.crud.crud - INFO - Initializing GROQ client...
2025-09-03 14:46:32,004 - prompt_manager.app.crud.crud - INFO - Sending request to GROQ API...
2025-09-03 14:46:32,391 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 14:46:32,394 - prompt_manager.app.crud.crud - INFO - Received response from GROQ API
2025-09-03 14:46:32,394 - prompt_manager.app.crud.crud - INFO - LLM raw response: 81 for input: How do I write a Python function to reverse a string?
2025-09-03 14:46:32,394 - prompt_manager.app.crud.crud - INFO - Extracted prompt ID: 81
2025-09-03 14:46:32,396 - prompt_manager.app.crud.crud - INFO - Valid active prompt found: ID=81, Name=coding_assistant
2025-09-03 14:46:32,396 - prompt_manager.app.api.v1.api - INFO - Testing persona for prompt ID 81 (user: admin@example.com)
2025-09-03 14:46:32,991 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 14:46:32,992 - prompt_manager.app.api.v1.api - INFO - Generated persona response for prompt 'coding_assistant' with persona type 'dynamic_persona'
2025-09-03 14:46:32,992 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/test-persona Status: 200 Time: 1023.32ms
2025-09-03 14:46:32,993 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 14:46:32,993 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 14:46:32,993 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 14:46:46,572 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:46:46,577 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 5.53ms
2025-09-03 14:46:47,886 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:46:47,886 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.57ms
2025-09-03 14:46:48,320 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:46:48,321 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.44ms
2025-09-03 14:46:48,484 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:46:48,485 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.52ms
2025-09-03 14:46:48,667 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:46:48,667 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.52ms
2025-09-03 14:46:48,833 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:46:48,834 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.48ms
2025-09-03 14:46:49,002 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:46:49,003 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.3ms
2025-09-03 14:46:50,872 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:46:50,872 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.52ms
2025-09-03 14:47:04,106 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:47:04,115 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 9.62ms
2025-09-03 14:47:04,142 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-03 14:47:04,148 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 14:47:04,151 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 14:47:04,423 - prompt_manager.app.api.v1.endpoints.auth - INFO - Created access token for user: prishatank6@gmail.com
2025-09-03 14:47:04,424 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 200 Time: 282.08ms
2025-09-03 14:47:04,424 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 14:47:04,424 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 14:47:04,424 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 14:47:04,481 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:47:04,482 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.38ms
2025-09-03 14:47:05,371 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:47:05,372 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.89ms
2025-09-03 14:47:22,772 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:47:22,773 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.29ms
2025-09-03 14:47:22,815 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:47:22,815 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.36ms
2025-09-03 14:47:51,828 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 14:47:53,092 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 14:47:53,093 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-03 14:47:53,093 - prompt_manager.app.main - INFO - Database URL: sqlite:////Users/prisha/Desktop/Coding/system prompt/prompts.db
2025-09-03 14:48:06,663 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:48:06,666 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 3.17ms
2025-09-03 14:48:06,689 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/test-persona
2025-09-03 14:48:06,692 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 14:48:06,692 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 14:48:06,692 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 14:48:06,692 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 14:48:06,692 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 14:48:06,692 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 14:48:06,693 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 14:48:06,695 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 14:48:06,695 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 09:17:04+00:00 (UTC)
2025-09-03 14:48:06,695 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 14:48:06,695 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 14:48:06,709 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 14)
2025-09-03 14:48:06,709 - prompt_manager.app.api.v1.api - INFO - Testing persona with automatic prompt selection (user: prishatank6@gmail.com)
2025-09-03 14:48:06,710 - prompt_manager.app.crud.crud - INFO - Finding most relevant prompt for input: Hello, I have a headache, what should I do, help me

2025-09-03 14:48:06,712 - prompt_manager.app.crud.crud - INFO - Found 17 active prompts in the database
2025-09-03 14:48:06,712 - prompt_manager.app.crud.crud - INFO - Active prompt - ID: 28, Name: marketing, Status: active, is_active: True
2025-09-03 14:48:06,712 - prompt_manager.app.crud.crud - INFO - Active prompt - ID: 31, Name: test_live_version_sync, Status: active, is_active: True
2025-09-03 14:48:06,712 - prompt_manager.app.crud.crud - INFO - Active prompt - ID: 33, Name: debug_live_test, Status: active, is_active: True
2025-09-03 14:48:06,712 - prompt_manager.app.crud.crud - INFO - Active prompt - ID: 37, Name: test_active_validation, Status: active, is_active: True
2025-09-03 14:48:06,712 - prompt_manager.app.crud.crud - INFO - Active prompt - ID: 38, Name: test_auto_status, Status: active, is_active: True
2025-09-03 14:48:06,712 - prompt_manager.app.crud.crud - INFO - Active prompt - ID: 40, Name: test_constraint, Status: active, is_active: True
2025-09-03 14:48:06,712 - prompt_manager.app.crud.crud - INFO - Active prompt - ID: 43, Name: endpoint_test, Status: active, is_active: True
2025-09-03 14:48:06,712 - prompt_manager.app.crud.crud - INFO - Active prompt - ID: 45, Name: final_test, Status: active, is_active: True
2025-09-03 14:48:06,712 - prompt_manager.app.crud.crud - INFO - Active prompt - ID: 49, Name: full_test_prompt, Status: active, is_active: True
2025-09-03 14:48:06,712 - prompt_manager.app.crud.crud - INFO - Active prompt - ID: 55, Name: lifecycle_test_final, Status: active, is_active: True
2025-09-03 14:48:06,712 - prompt_manager.app.crud.crud - INFO - Active prompt - ID: 62, Name: code, Status: active, is_active: True
2025-09-03 14:48:06,712 - prompt_manager.app.crud.crud - INFO - Active prompt - ID: 69, Name: Healthcare assistant, Status: active, is_active: True
2025-09-03 14:48:06,712 - prompt_manager.app.crud.crud - INFO - Active prompt - ID: 77, Name: Math Tutor, Status: active, is_active: True
2025-09-03 14:48:06,712 - prompt_manager.app.crud.crud - INFO - Active prompt - ID: 80, Name: mental_health_support, Status: active, is_active: True
2025-09-03 14:48:06,712 - prompt_manager.app.crud.crud - INFO - Active prompt - ID: 81, Name: coding_assistant, Status: active, is_active: True
2025-09-03 14:48:06,712 - prompt_manager.app.crud.crud - INFO - Active prompt - ID: 82, Name: cooking_assistant, Status: active, is_active: True
2025-09-03 14:48:06,712 - prompt_manager.app.crud.crud - INFO - Active prompt - ID: 83, Name: tech_support, Status: active, is_active: True
2025-09-03 14:48:06,712 - prompt_manager.app.crud.crud - INFO - Found 4 persona-specific prompts
2025-09-03 14:48:06,712 - prompt_manager.app.crud.crud - INFO - Sending 4 prompts to LLM for analysis
2025-09-03 14:48:06,712 - prompt_manager.app.crud.crud - INFO - Initializing GROQ client...
2025-09-03 14:48:06,739 - prompt_manager.app.crud.crud - INFO - Sending request to GROQ API...
2025-09-03 14:48:07,504 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 14:48:07,512 - prompt_manager.app.crud.crud - INFO - Received response from GROQ API
2025-09-03 14:48:07,512 - prompt_manager.app.crud.crud - INFO - LLM raw response: 80 for input: Hello, I have a headache, what should I do, help me

2025-09-03 14:48:07,512 - prompt_manager.app.crud.crud - INFO - Extracted prompt ID: 80
2025-09-03 14:48:07,518 - prompt_manager.app.crud.crud - INFO - Valid active prompt found: ID=80, Name=mental_health_support
2025-09-03 14:48:07,519 - prompt_manager.app.api.v1.api - INFO - Testing persona for prompt ID 80 (user: prishatank6@gmail.com)
2025-09-03 14:48:08,459 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 14:48:08,462 - prompt_manager.app.api.v1.api - INFO - Generated persona response for prompt 'mental_health_support' with persona type 'dynamic_persona'
2025-09-03 14:48:08,462 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/test-persona Status: 200 Time: 1773.18ms
2025-09-03 14:48:08,463 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 14:48:08,463 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 14:48:08,463 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 14:48:16,879 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:48:16,887 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 8.22ms
2025-09-03 14:48:16,908 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/test-persona
2025-09-03 14:48:16,923 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 14:48:16,923 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 14:48:16,924 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 14:48:16,924 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 14:48:16,924 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 14:48:16,924 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 14:48:16,924 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 14:48:16,925 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 14:48:16,926 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 09:17:04+00:00 (UTC)
2025-09-03 14:48:16,926 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 14:48:16,926 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 14:48:16,940 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 14)
2025-09-03 14:48:16,940 - prompt_manager.app.api.v1.api - INFO - Testing persona with automatic prompt selection (user: prishatank6@gmail.com)
2025-09-03 14:48:16,940 - prompt_manager.app.crud.crud - INFO - Finding most relevant prompt for input: Hello, I have a headache, what should I do, help me

2025-09-03 14:48:16,941 - prompt_manager.app.crud.crud - INFO - Found 17 active prompts in the database
2025-09-03 14:48:16,941 - prompt_manager.app.crud.crud - INFO - Active prompt - ID: 28, Name: marketing, Status: active, is_active: True
2025-09-03 14:48:16,942 - prompt_manager.app.crud.crud - INFO - Active prompt - ID: 31, Name: test_live_version_sync, Status: active, is_active: True
2025-09-03 14:48:16,942 - prompt_manager.app.crud.crud - INFO - Active prompt - ID: 33, Name: debug_live_test, Status: active, is_active: True
2025-09-03 14:48:16,942 - prompt_manager.app.crud.crud - INFO - Active prompt - ID: 37, Name: test_active_validation, Status: active, is_active: True
2025-09-03 14:48:16,942 - prompt_manager.app.crud.crud - INFO - Active prompt - ID: 38, Name: test_auto_status, Status: active, is_active: True
2025-09-03 14:48:16,942 - prompt_manager.app.crud.crud - INFO - Active prompt - ID: 40, Name: test_constraint, Status: active, is_active: True
2025-09-03 14:48:16,942 - prompt_manager.app.crud.crud - INFO - Active prompt - ID: 43, Name: endpoint_test, Status: active, is_active: True
2025-09-03 14:48:16,942 - prompt_manager.app.crud.crud - INFO - Active prompt - ID: 45, Name: final_test, Status: active, is_active: True
2025-09-03 14:48:16,942 - prompt_manager.app.crud.crud - INFO - Active prompt - ID: 49, Name: full_test_prompt, Status: active, is_active: True
2025-09-03 14:48:16,942 - prompt_manager.app.crud.crud - INFO - Active prompt - ID: 55, Name: lifecycle_test_final, Status: active, is_active: True
2025-09-03 14:48:16,942 - prompt_manager.app.crud.crud - INFO - Active prompt - ID: 62, Name: code, Status: active, is_active: True
2025-09-03 14:48:16,942 - prompt_manager.app.crud.crud - INFO - Active prompt - ID: 69, Name: Healthcare assistant, Status: active, is_active: True
2025-09-03 14:48:16,942 - prompt_manager.app.crud.crud - INFO - Active prompt - ID: 77, Name: Math Tutor, Status: active, is_active: True
2025-09-03 14:48:16,943 - prompt_manager.app.crud.crud - INFO - Active prompt - ID: 80, Name: mental_health_support, Status: active, is_active: True
2025-09-03 14:48:16,943 - prompt_manager.app.crud.crud - INFO - Active prompt - ID: 81, Name: coding_assistant, Status: active, is_active: True
2025-09-03 14:48:16,943 - prompt_manager.app.crud.crud - INFO - Active prompt - ID: 82, Name: cooking_assistant, Status: active, is_active: True
2025-09-03 14:48:16,943 - prompt_manager.app.crud.crud - INFO - Active prompt - ID: 83, Name: tech_support, Status: active, is_active: True
2025-09-03 14:48:16,943 - prompt_manager.app.crud.crud - INFO - Found 4 persona-specific prompts
2025-09-03 14:48:16,943 - prompt_manager.app.crud.crud - INFO - Sending 4 prompts to LLM for analysis
2025-09-03 14:48:16,943 - prompt_manager.app.crud.crud - INFO - Initializing GROQ client...
2025-09-03 14:48:16,966 - prompt_manager.app.crud.crud - INFO - Sending request to GROQ API...
2025-09-03 14:48:17,299 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 14:48:17,305 - prompt_manager.app.crud.crud - INFO - Received response from GROQ API
2025-09-03 14:48:17,305 - prompt_manager.app.crud.crud - INFO - LLM raw response: 80 for input: Hello, I have a headache, what should I do, help me

2025-09-03 14:48:17,305 - prompt_manager.app.crud.crud - INFO - Extracted prompt ID: 80
2025-09-03 14:48:17,306 - prompt_manager.app.crud.crud - INFO - Valid active prompt found: ID=80, Name=mental_health_support
2025-09-03 14:48:17,306 - prompt_manager.app.api.v1.api - INFO - Testing persona for prompt ID 80 (user: prishatank6@gmail.com)
2025-09-03 14:48:18,151 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 14:48:18,158 - prompt_manager.app.api.v1.api - INFO - Generated persona response for prompt 'mental_health_support' with persona type 'dynamic_persona'
2025-09-03 14:48:18,159 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:48:18,159 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/test-persona Status: 200 Time: 1250.66ms
2025-09-03 14:48:18,159 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.82ms
2025-09-03 14:48:18,160 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 14:48:18,160 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 14:48:18,160 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 14:48:18,224 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/test-persona
2025-09-03 14:48:18,225 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 14:48:18,225 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 14:48:18,225 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 14:48:18,226 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 14:48:18,226 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 14:48:18,226 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 14:48:18,226 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 14:48:18,226 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 14:48:18,226 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 09:17:04+00:00 (UTC)
2025-09-03 14:48:18,226 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 14:48:18,226 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 14:48:18,227 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 14)
2025-09-03 14:48:18,227 - prompt_manager.app.api.v1.api - INFO - Testing persona with automatic prompt selection (user: prishatank6@gmail.com)
2025-09-03 14:48:18,228 - prompt_manager.app.crud.crud - INFO - Finding most relevant prompt for input: Hello, I have a headache, what should I do, help me

2025-09-03 14:48:18,231 - prompt_manager.app.crud.crud - INFO - Found 17 active prompts in the database
2025-09-03 14:48:18,231 - prompt_manager.app.crud.crud - INFO - Active prompt - ID: 28, Name: marketing, Status: active, is_active: True
2025-09-03 14:48:18,231 - prompt_manager.app.crud.crud - INFO - Active prompt - ID: 31, Name: test_live_version_sync, Status: active, is_active: True
2025-09-03 14:48:18,231 - prompt_manager.app.crud.crud - INFO - Active prompt - ID: 33, Name: debug_live_test, Status: active, is_active: True
2025-09-03 14:48:18,231 - prompt_manager.app.crud.crud - INFO - Active prompt - ID: 37, Name: test_active_validation, Status: active, is_active: True
2025-09-03 14:48:18,231 - prompt_manager.app.crud.crud - INFO - Active prompt - ID: 38, Name: test_auto_status, Status: active, is_active: True
2025-09-03 14:48:18,231 - prompt_manager.app.crud.crud - INFO - Active prompt - ID: 40, Name: test_constraint, Status: active, is_active: True
2025-09-03 14:48:18,231 - prompt_manager.app.crud.crud - INFO - Active prompt - ID: 43, Name: endpoint_test, Status: active, is_active: True
2025-09-03 14:48:18,231 - prompt_manager.app.crud.crud - INFO - Active prompt - ID: 45, Name: final_test, Status: active, is_active: True
2025-09-03 14:48:18,231 - prompt_manager.app.crud.crud - INFO - Active prompt - ID: 49, Name: full_test_prompt, Status: active, is_active: True
2025-09-03 14:48:18,231 - prompt_manager.app.crud.crud - INFO - Active prompt - ID: 55, Name: lifecycle_test_final, Status: active, is_active: True
2025-09-03 14:48:18,231 - prompt_manager.app.crud.crud - INFO - Active prompt - ID: 62, Name: code, Status: active, is_active: True
2025-09-03 14:48:18,231 - prompt_manager.app.crud.crud - INFO - Active prompt - ID: 69, Name: Healthcare assistant, Status: active, is_active: True
2025-09-03 14:48:18,231 - prompt_manager.app.crud.crud - INFO - Active prompt - ID: 77, Name: Math Tutor, Status: active, is_active: True
2025-09-03 14:48:18,231 - prompt_manager.app.crud.crud - INFO - Active prompt - ID: 80, Name: mental_health_support, Status: active, is_active: True
2025-09-03 14:48:18,231 - prompt_manager.app.crud.crud - INFO - Active prompt - ID: 81, Name: coding_assistant, Status: active, is_active: True
2025-09-03 14:48:18,231 - prompt_manager.app.crud.crud - INFO - Active prompt - ID: 82, Name: cooking_assistant, Status: active, is_active: True
2025-09-03 14:48:18,231 - prompt_manager.app.crud.crud - INFO - Active prompt - ID: 83, Name: tech_support, Status: active, is_active: True
2025-09-03 14:48:18,231 - prompt_manager.app.crud.crud - INFO - Found 4 persona-specific prompts
2025-09-03 14:48:18,231 - prompt_manager.app.crud.crud - INFO - Sending 4 prompts to LLM for analysis
2025-09-03 14:48:18,231 - prompt_manager.app.crud.crud - INFO - Initializing GROQ client...
2025-09-03 14:48:18,250 - prompt_manager.app.crud.crud - INFO - Sending request to GROQ API...
2025-09-03 14:48:18,501 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 14:48:18,508 - prompt_manager.app.crud.crud - INFO - Received response from GROQ API
2025-09-03 14:48:18,508 - prompt_manager.app.crud.crud - INFO - LLM raw response: 80 for input: Hello, I have a headache, what should I do, help me

2025-09-03 14:48:18,508 - prompt_manager.app.crud.crud - INFO - Extracted prompt ID: 80
2025-09-03 14:48:18,511 - prompt_manager.app.crud.crud - INFO - Valid active prompt found: ID=80, Name=mental_health_support
2025-09-03 14:48:18,511 - prompt_manager.app.api.v1.api - INFO - Testing persona for prompt ID 80 (user: prishatank6@gmail.com)
2025-09-03 14:48:19,926 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 14:48:19,935 - prompt_manager.app.api.v1.api - INFO - Generated persona response for prompt 'mental_health_support' with persona type 'dynamic_persona'
2025-09-03 14:48:19,936 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/test-persona Status: 200 Time: 1712.34ms
2025-09-03 14:48:19,937 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 14:48:19,937 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 14:48:19,938 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 14:49:23,904 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:49:23,910 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 6.13ms
2025-09-03 14:49:42,034 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:49:42,037 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 3.07ms
2025-09-03 14:49:42,044 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-03 14:49:42,049 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 14:49:42,049 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 14:49:42,351 - prompt_manager.app.api.v1.endpoints.auth - INFO - Created access token for user: prishatank6@gmail.com
2025-09-03 14:49:42,365 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 200 Time: 321.09ms
2025-09-03 14:49:42,365 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 14:49:42,365 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 14:49:42,366 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 14:49:42,406 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:49:42,407 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.34ms
2025-09-03 14:49:44,204 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:49:44,206 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.06ms
2025-09-03 14:49:55,238 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:49:55,239 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.98ms
2025-09-03 14:49:55,295 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:49:55,295 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.57ms
2025-09-03 14:49:55,304 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/test-persona
2025-09-03 14:49:55,305 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 14:49:55,305 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 14:49:55,305 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 14:49:55,305 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 14:49:55,305 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 14:49:55,305 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 14:49:55,305 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 14:49:55,305 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 14:49:55,305 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 09:19:42+00:00 (UTC)
2025-09-03 14:49:55,306 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 14:49:55,306 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 14:49:55,309 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 14)
2025-09-03 14:49:55,310 - prompt_manager.app.api.v1.api - INFO - Testing persona with automatic prompt selection (user: prishatank6@gmail.com)
2025-09-03 14:49:55,310 - prompt_manager.app.crud.crud - INFO - Finding most relevant prompt for input: I have a headache, what should I do

2025-09-03 14:49:55,315 - prompt_manager.app.crud.crud - INFO - Found 17 active prompts in the database
2025-09-03 14:49:55,315 - prompt_manager.app.crud.crud - INFO - Active prompt - ID: 28, Name: marketing, Status: active, is_active: True
2025-09-03 14:49:55,315 - prompt_manager.app.crud.crud - INFO - Active prompt - ID: 31, Name: test_live_version_sync, Status: active, is_active: True
2025-09-03 14:49:55,315 - prompt_manager.app.crud.crud - INFO - Active prompt - ID: 33, Name: debug_live_test, Status: active, is_active: True
2025-09-03 14:49:55,315 - prompt_manager.app.crud.crud - INFO - Active prompt - ID: 37, Name: test_active_validation, Status: active, is_active: True
2025-09-03 14:49:55,315 - prompt_manager.app.crud.crud - INFO - Active prompt - ID: 38, Name: test_auto_status, Status: active, is_active: True
2025-09-03 14:49:55,315 - prompt_manager.app.crud.crud - INFO - Active prompt - ID: 40, Name: test_constraint, Status: active, is_active: True
2025-09-03 14:49:55,315 - prompt_manager.app.crud.crud - INFO - Active prompt - ID: 43, Name: endpoint_test, Status: active, is_active: True
2025-09-03 14:49:55,315 - prompt_manager.app.crud.crud - INFO - Active prompt - ID: 45, Name: final_test, Status: active, is_active: True
2025-09-03 14:49:55,315 - prompt_manager.app.crud.crud - INFO - Active prompt - ID: 49, Name: full_test_prompt, Status: active, is_active: True
2025-09-03 14:49:55,315 - prompt_manager.app.crud.crud - INFO - Active prompt - ID: 55, Name: lifecycle_test_final, Status: active, is_active: True
2025-09-03 14:49:55,315 - prompt_manager.app.crud.crud - INFO - Active prompt - ID: 62, Name: code, Status: active, is_active: True
2025-09-03 14:49:55,315 - prompt_manager.app.crud.crud - INFO - Active prompt - ID: 69, Name: Healthcare assistant, Status: active, is_active: True
2025-09-03 14:49:55,315 - prompt_manager.app.crud.crud - INFO - Active prompt - ID: 77, Name: Math Tutor, Status: active, is_active: True
2025-09-03 14:49:55,315 - prompt_manager.app.crud.crud - INFO - Active prompt - ID: 80, Name: mental_health_support, Status: active, is_active: True
2025-09-03 14:49:55,316 - prompt_manager.app.crud.crud - INFO - Active prompt - ID: 81, Name: coding_assistant, Status: active, is_active: True
2025-09-03 14:49:55,316 - prompt_manager.app.crud.crud - INFO - Active prompt - ID: 82, Name: cooking_assistant, Status: active, is_active: True
2025-09-03 14:49:55,316 - prompt_manager.app.crud.crud - INFO - Active prompt - ID: 83, Name: tech_support, Status: active, is_active: True
2025-09-03 14:49:55,316 - prompt_manager.app.crud.crud - INFO - Found 4 persona-specific prompts
2025-09-03 14:49:55,316 - prompt_manager.app.crud.crud - INFO - Sending 4 prompts to LLM for analysis
2025-09-03 14:49:55,316 - prompt_manager.app.crud.crud - INFO - Initializing GROQ client...
2025-09-03 14:49:55,344 - prompt_manager.app.crud.crud - INFO - Sending request to GROQ API...
2025-09-03 14:49:55,681 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 14:49:55,691 - prompt_manager.app.crud.crud - INFO - Received response from GROQ API
2025-09-03 14:49:55,691 - prompt_manager.app.crud.crud - INFO - LLM raw response: 80 for input: I have a headache, what should I do

2025-09-03 14:49:55,691 - prompt_manager.app.crud.crud - INFO - Extracted prompt ID: 80
2025-09-03 14:49:55,692 - prompt_manager.app.crud.crud - INFO - Valid active prompt found: ID=80, Name=mental_health_support
2025-09-03 14:49:55,693 - prompt_manager.app.api.v1.api - INFO - Testing persona for prompt ID 80 (user: prishatank6@gmail.com)
2025-09-03 14:49:56,592 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 14:49:56,601 - prompt_manager.app.api.v1.api - INFO - Generated persona response for prompt 'mental_health_support' with persona type 'dynamic_persona'
2025-09-03 14:49:56,601 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/test-persona Status: 200 Time: 1297.29ms
2025-09-03 14:49:56,602 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 14:49:56,602 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 14:49:56,602 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 14:50:35,703 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 14:57:32,564 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 14:57:32,564 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("users")
2025-09-03 14:57:32,564 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 14:57:32,565 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("prompts")
2025-09-03 14:57:32,565 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 14:57:32,565 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("prompt_history")
2025-09-03 14:57:32,565 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 14:57:32,565 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-09-03 14:57:32,589 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 14:57:32,589 - prompt_manager.app.main - INFO - Log level: DEBUG
2025-09-03 14:57:32,589 - prompt_manager.app.main - INFO - Database URL: sqlite:////Users/prisha/Desktop/Coding/system prompt/prompts.db
2025-09-03 14:57:48,023 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:57:48,025 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.51ms
2025-09-03 14:57:58,122 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:57:58,123 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.27ms
2025-09-03 14:57:58,129 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-03 14:57:58,131 - multipart.multipart - DEBUG - Calling on_field_start with no data
2025-09-03 14:57:58,131 - multipart.multipart - DEBUG - Calling on_field_name with data[0:8]
2025-09-03 14:57:58,131 - multipart.multipart - DEBUG - Calling on_field_data with data[9:32]
2025-09-03 14:57:58,131 - multipart.multipart - DEBUG - Calling on_field_end with no data
2025-09-03 14:57:58,131 - multipart.multipart - DEBUG - Calling on_field_start with no data
2025-09-03 14:57:58,131 - multipart.multipart - DEBUG - Calling on_field_name with data[33:41]
2025-09-03 14:57:58,131 - multipart.multipart - DEBUG - Calling on_field_data with data[42:50]
2025-09-03 14:57:58,132 - multipart.multipart - DEBUG - Calling on_field_end with no data
2025-09-03 14:57:58,132 - multipart.multipart - DEBUG - Calling on_end with no data
2025-09-03 14:57:58,133 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 14:57:58,134 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 14:57:58,143 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 14:57:58,146 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 14:57:58,146 - sqlalchemy.engine.Engine - INFO - [generated in 0.00039s] ('prishatank6@gmail.com', 1, 0)
2025-09-03 14:57:58,148 - passlib.handlers.bcrypt - DEBUG - detected 'bcrypt' backend, version '4.0.1'
2025-09-03 14:57:58,149 - passlib.handlers.bcrypt - DEBUG - 'bcrypt' backend lacks $2$ support, enabling workaround
2025-09-03 14:57:58,433 - prompt_manager.app.api.v1.endpoints.auth - INFO - Created access token for user: prishatank6@gmail.com
2025-09-03 14:57:58,439 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 200 Time: 309.7ms
2025-09-03 14:57:58,440 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 14:57:58,440 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 14:57:58,440 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 14:57:58,440 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 14:57:58,463 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:57:58,463 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.34ms
2025-09-03 14:57:59,876 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:57:59,877 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.7ms
2025-09-03 14:58:25,039 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:58:25,041 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 2.59ms
2025-09-03 14:58:25,108 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:58:25,109 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.2ms
2025-09-03 14:58:25,120 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/test-persona
2025-09-03 14:58:25,121 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 14:58:25,121 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 14:58:25,121 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 14:58:25,121 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 14:58:25,122 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 14:58:25,122 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 14:58:25,122 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 14:58:25,122 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 14:58:25,122 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 09:27:58+00:00 (UTC)
2025-09-03 14:58:25,122 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 14:58:25,122 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 14:58:25,123 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 14:58:25,123 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 14:58:25,123 - sqlalchemy.engine.Engine - INFO - [cached since 26.98s ago] ('prishatank6@gmail.com', 1, 0)
2025-09-03 14:58:25,124 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 14)
2025-09-03 14:58:25,124 - prompt_manager.app.api.v1.api - INFO - Testing persona with automatic prompt selection (user: prishatank6@gmail.com)
2025-09-03 14:58:25,124 - prompt_manager.app.crud.crud - INFO - Finding most relevant prompt for input: Hello, I have headache. What should I do?

2025-09-03 14:58:25,125 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 14:58:25,127 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.status = ? AND prompts.is_active = 1
2025-09-03 14:58:25,128 - sqlalchemy.engine.Engine - INFO - [generated in 0.00039s] ('active',)
2025-09-03 14:58:25,129 - prompt_manager.app.crud.crud - INFO - Found 17 active prompts in the database
2025-09-03 14:58:25,130 - prompt_manager.app.crud.crud - INFO - Active prompt 1: ID=28, Name=marketing, Status=active, is_active=True
2025-09-03 14:58:25,130 - prompt_manager.app.crud.crud - INFO - Active prompt 2: ID=31, Name=test_live_version_sync, Status=active, is_active=True
2025-09-03 14:58:25,130 - prompt_manager.app.crud.crud - INFO - Active prompt 3: ID=33, Name=debug_live_test, Status=active, is_active=True
2025-09-03 14:58:25,130 - prompt_manager.app.crud.crud - INFO - Active prompt 4: ID=37, Name=test_active_validation, Status=active, is_active=True
2025-09-03 14:58:25,130 - prompt_manager.app.crud.crud - INFO - Active prompt 5: ID=38, Name=test_auto_status, Status=active, is_active=True
2025-09-03 14:58:25,130 - prompt_manager.app.crud.crud - INFO - Active prompt 6: ID=40, Name=test_constraint, Status=active, is_active=True
2025-09-03 14:58:25,130 - prompt_manager.app.crud.crud - INFO - Active prompt 7: ID=43, Name=endpoint_test, Status=active, is_active=True
2025-09-03 14:58:25,130 - prompt_manager.app.crud.crud - INFO - Active prompt 8: ID=45, Name=final_test, Status=active, is_active=True
2025-09-03 14:58:25,131 - prompt_manager.app.crud.crud - INFO - Active prompt 9: ID=49, Name=full_test_prompt, Status=active, is_active=True
2025-09-03 14:58:25,131 - prompt_manager.app.crud.crud - INFO - Active prompt 10: ID=55, Name=lifecycle_test_final, Status=active, is_active=True
2025-09-03 14:58:25,131 - prompt_manager.app.crud.crud - INFO - Active prompt 11: ID=62, Name=code, Status=active, is_active=True
2025-09-03 14:58:25,131 - prompt_manager.app.crud.crud - INFO - Active prompt 12: ID=69, Name=Healthcare assistant, Status=active, is_active=True
2025-09-03 14:58:25,131 - prompt_manager.app.crud.crud - INFO - Active prompt 13: ID=77, Name=Math Tutor, Status=active, is_active=True
2025-09-03 14:58:25,131 - prompt_manager.app.crud.crud - INFO - Active prompt 14: ID=80, Name=mental_health_support, Status=active, is_active=True
2025-09-03 14:58:25,131 - prompt_manager.app.crud.crud - INFO - Active prompt 15: ID=81, Name=coding_assistant, Status=active, is_active=True
2025-09-03 14:58:25,131 - prompt_manager.app.crud.crud - INFO - Active prompt 16: ID=82, Name=cooking_assistant, Status=active, is_active=True
2025-09-03 14:58:25,131 - prompt_manager.app.crud.crud - INFO - Active prompt 17: ID=83, Name=tech_support, Status=active, is_active=True
2025-09-03 14:58:25,132 - prompt_manager.app.crud.crud - INFO - Sending 17 prompts to LLM for analysis
2025-09-03 14:58:25,132 - prompt_manager.app.crud.crud - DEBUG - System prompt: You are an expert at matching user queries to the most appropriate system prompt. 
        Your goal is to analyze the user's input and select the single most relevant prompt ID from the provided list.
        
        MATCHING GUIDELINES:
        1. For coding/technical questions (Python, algorithms, programming), choose the coding assistant prompt.
        2. For internet/connection/tech issues, choose the tech support prompt.
        3. For mental health/stress/anxiety concerns, choose the mental health support prompt.
        4. For cooking/recipes/food questions, choose the cooking assistant prompt.
        
        INSTRUCTIONS:
        1. Carefully read the user's input and identify the main topic/domain.
        2. Review all available prompts and their metadata (name, tags, content preview).
        3. Select the prompt that best matches the user's intent and domain.
        4. Consider both the content and the context of the query.
        5. If the query is ambiguous but could match multiple domains, choose the most likely one.
        
        RESPONSE FORMAT:
        - Return ONLY the numeric ID of the selected prompt (e.g., "42").
        - If no prompt is relevant, return "none".
        - DO NOT include any other text or explanation in your response.
        
        IMPORTANT: Focus on the user's intent and choose the most appropriate prompt, even if the match isn't perfect.
        
2025-09-03 14:58:25,132 - prompt_manager.app.crud.crud - DEBUG - User message: USER INPUT:
        Hello, I have headache. What should I do?

        
        AVAILABLE PROMPTS (ID, Name, Content Preview):
        
ID: 28 | Name: marketing
Preview: Testing
Tags: testing

ID: 31 | Name: test_live_version_sync
Preview: Second version content
Tags: test

ID: 33 | Name: debug_live_test
Preview: Debug content v2
Tags: debug

ID: 37 | Name: test_active_validation
Preview: First version
Tags: test

ID: 38 | Name: test_auto_status
Preview: Testing auto status
Tags: test

ID: 40 | Name: test_constraint
Preview: First active version
Tags: test

ID: 43 | Name: endpoint_test
Preview: Updated final test
Tags: test

ID: 45 | Name: final_test
Preview: Final test

ID: 49 | Name: full_test_prompt
Preview: Initial content for the full test.
Tags: testing, full-flow

ID: 55 | Name: lifecycle_test_final
Preview: Lifecycle test v2.0.0
Tags: lifecycle

ID: 62 | Name: code
Preview: Update for Debugger
Tags: suggestion

ID: 69 | Name: Healthcare assistant
Preview: Just for checking
Tags: wellbeing

ID: 77 | Name: Math Tutor
Preview: You are a friendly math tutor, explain concept step by step for better understanding.
Tags: Mathematics, Tutor

ID: 80 | Name: mental_health_support
Preview: You are a compassionate mental health support assistant. Provide empathetic and supportive responses...
Tags: mental_health, support, wellbeing

ID: 81 | Name: coding_assistant
Preview: You are an expert programming assistant. Help users with coding questions, algorithm design, debuggi...
Tags: programming, coding, algorithms

ID: 82 | Name: cooking_assistant
Preview: You are a professional chef and cooking instructor. Provide detailed recipes, cooking tips, and tech...
Tags: cooking, recipes, baking

ID: 83 | Name: tech_support
Preview: You are a technical support specialist. Help users troubleshoot hardware, software, and network issu...
Tags: tech_support, troubleshooting, it

        
        RESPONSE FORMAT:
        Return ONLY the numeric ID of the most relevant prompt, or 'none' if none match.
        Example: "42" or "none"
        
        YOUR RESPONSE (ID only):
2025-09-03 14:58:25,133 - prompt_manager.app.crud.crud - INFO - Initializing GROQ client...
2025-09-03 14:58:25,144 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-09-03 14:58:25,148 - httpx - DEBUG - load_verify_locations cafile='/Applications/anaconda3/lib/python3.11/site-packages/certifi/cacert.pem'
2025-09-03 14:58:25,169 - prompt_manager.app.crud.crud - INFO - Sending request to GROQ API...
2025-09-03 14:58:25,170 - groq._base_client - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an expert at matching user queries to the most appropriate system prompt. \n        Your goal is to analyze the user\'s input and select the single most relevant prompt ID from the provided list.\n        \n        MATCHING GUIDELINES:\n        1. For coding/technical questions (Python, algorithms, programming), choose the coding assistant prompt.\n        2. For internet/connection/tech issues, choose the tech support prompt.\n        3. For mental health/stress/anxiety concerns, choose the mental health support prompt.\n        4. For cooking/recipes/food questions, choose the cooking assistant prompt.\n        \n        INSTRUCTIONS:\n        1. Carefully read the user\'s input and identify the main topic/domain.\n        2. Review all available prompts and their metadata (name, tags, content preview).\n        3. Select the prompt that best matches the user\'s intent and domain.\n        4. Consider both the content and the context of the query.\n        5. If the query is ambiguous but could match multiple domains, choose the most likely one.\n        \n        RESPONSE FORMAT:\n        - Return ONLY the numeric ID of the selected prompt (e.g., "42").\n        - If no prompt is relevant, return "none".\n        - DO NOT include any other text or explanation in your response.\n        \n        IMPORTANT: Focus on the user\'s intent and choose the most appropriate prompt, even if the match isn\'t perfect.\n        '}, {'role': 'user', 'content': 'USER INPUT:\n        Hello, I have headache. What should I do?\n\n        \n        AVAILABLE PROMPTS (ID, Name, Content Preview):\n        \nID: 28 | Name: marketing\nPreview: Testing\nTags: testing\n\nID: 31 | Name: test_live_version_sync\nPreview: Second version content\nTags: test\n\nID: 33 | Name: debug_live_test\nPreview: Debug content v2\nTags: debug\n\nID: 37 | Name: test_active_validation\nPreview: First version\nTags: test\n\nID: 38 | Name: test_auto_status\nPreview: Testing auto status\nTags: test\n\nID: 40 | Name: test_constraint\nPreview: First active version\nTags: test\n\nID: 43 | Name: endpoint_test\nPreview: Updated final test\nTags: test\n\nID: 45 | Name: final_test\nPreview: Final test\n\nID: 49 | Name: full_test_prompt\nPreview: Initial content for the full test.\nTags: testing, full-flow\n\nID: 55 | Name: lifecycle_test_final\nPreview: Lifecycle test v2.0.0\nTags: lifecycle\n\nID: 62 | Name: code\nPreview: Update for Debugger\nTags: suggestion\n\nID: 69 | Name: Healthcare assistant\nPreview: Just for checking\nTags: wellbeing\n\nID: 77 | Name: Math Tutor\nPreview: You are a friendly math tutor, explain concept step by step for better understanding.\nTags: Mathematics, Tutor\n\nID: 80 | Name: mental_health_support\nPreview: You are a compassionate mental health support assistant. Provide empathetic and supportive responses...\nTags: mental_health, support, wellbeing\n\nID: 81 | Name: coding_assistant\nPreview: You are an expert programming assistant. Help users with coding questions, algorithm design, debuggi...\nTags: programming, coding, algorithms\n\nID: 82 | Name: cooking_assistant\nPreview: You are a professional chef and cooking instructor. Provide detailed recipes, cooking tips, and tech...\nTags: cooking, recipes, baking\n\nID: 83 | Name: tech_support\nPreview: You are a technical support specialist. Help users troubleshoot hardware, software, and network issu...\nTags: tech_support, troubleshooting, it\n\n        \n        RESPONSE FORMAT:\n        Return ONLY the numeric ID of the most relevant prompt, or \'none\' if none match.\n        Example: "42" or "none"\n        \n        YOUR RESPONSE (ID only):'}], 'model': 'llama-3.1-8b-instant', 'max_tokens': 10, 'temperature': 0.3}}
2025-09-03 14:58:25,517 - httpcore.connection - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-09-03 14:58:25,681 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1127f2e50>
2025-09-03 14:58:25,681 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x113111be0> server_hostname='api.groq.com' timeout=5.0
2025-09-03 14:58:25,750 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x112ff10d0>
2025-09-03 14:58:25,750 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-03 14:58:25,751 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-09-03 14:58:25,751 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-03 14:58:25,751 - httpcore.http11 - DEBUG - send_request_body.complete
2025-09-03 14:58:25,751 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-03 14:58:26,127 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 03 Sep 2025 09:28:26 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Content-Encoding', b'br'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'bom'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'5112'), (b'x-ratelimit-reset-requests', b'6s'), (b'x-ratelimit-reset-tokens', b'8.88s'), (b'x-request-id', b'req_01k47efwjqfb2rg33d4fc1g1f5'), (b'via', b'1.1 google'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=_FiTPKwLEwiBRPn0SkcUpHjIl.Yr9diPxmV.e5Yha7E-1756891706-1.0.1.1-Tk2EC7sK3KSmMKOxYAy6WikbHvcdge5ieLuEpfzqcHINEG2evH3UYsUTWmyOvpMdsqjImlrl0m5NnCZrDfZMRbMwlG1fEqb16T2miw1Zk2Y; path=/; expires=Wed, 03-Sep-25 09:58:26 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'979437899e64e8ad-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-03 14:58:26,128 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 14:58:26,129 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-03 14:58:26,129 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-09-03 14:58:26,129 - httpcore.http11 - DEBUG - response_closed.started
2025-09-03 14:58:26,129 - httpcore.http11 - DEBUG - response_closed.complete
2025-09-03 14:58:26,130 - groq._base_client - DEBUG - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
2025-09-03 14:58:26,132 - prompt_manager.app.crud.crud - INFO - Received response from GROQ API
2025-09-03 14:58:26,132 - prompt_manager.app.crud.crud - DEBUG - GROQ API response: ChatCompletion(choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChoiceMessage(content='80', role='assistant', tool_calls=None))], id='chatcmpl-60a754ef-daf5-4c14-95d3-207d4d022774', created=1756891706, model='llama-3.1-8b-instant', object='chat.completion', system_fingerprint='fp_2115512ff6', usage=Usage(completion_time=0.004938069, completion_tokens=2, prompt_time=0.154393376, prompt_tokens=841, total_time=0.159331445, total_tokens=843, queue_time=0.047605704), usage_breakdown=None, x_groq={'id': 'req_01k47efwjqfb2rg33d4fc1g1f5'}, service_tier='on_demand')
2025-09-03 14:58:26,132 - prompt_manager.app.crud.crud - INFO - LLM raw response: 80 for input: Hello, I have headache. What should I do?

2025-09-03 14:58:26,132 - prompt_manager.app.crud.crud - INFO - Extracted prompt ID: 80
2025-09-03 14:58:26,133 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.id = ? AND prompts.status = ? AND prompts.is_active = 1
 LIMIT ? OFFSET ?
2025-09-03 14:58:26,133 - sqlalchemy.engine.Engine - INFO - [generated in 0.00018s] (80, 'active', 1, 0)
2025-09-03 14:58:26,134 - prompt_manager.app.crud.crud - INFO - Valid active prompt found: ID=80, Name=mental_health_support
2025-09-03 14:58:26,134 - prompt_manager.app.api.v1.api - INFO - Testing persona for prompt ID 80 (user: prishatank6@gmail.com)
2025-09-03 14:58:26,134 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.id = ?
 LIMIT ? OFFSET ?
2025-09-03 14:58:26,134 - sqlalchemy.engine.Engine - INFO - [generated in 0.00012s] (80, 1, 0)
2025-09-03 14:58:26,135 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-09-03 14:58:26,135 - httpx - DEBUG - load_verify_locations cafile='/Applications/anaconda3/lib/python3.11/site-packages/certifi/cacert.pem'
2025-09-03 14:58:26,153 - groq._base_client - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a compassionate mental health support assistant. Provide empathetic and supportive responses to users who may be experiencing stress, anxiety, or other mental health concerns. Offer helpful coping strategies and encourage professional help when appropriate.'}, {'role': 'user', 'content': 'Hello, I have headache. What should I do?\n'}], 'model': 'llama-3.1-8b-instant', 'max_tokens': 1000, 'temperature': 0.7}}
2025-09-03 14:58:26,153 - httpcore.connection - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-09-03 14:58:26,201 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x11328e510>
2025-09-03 14:58:26,201 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x113110e60> server_hostname='api.groq.com' timeout=5.0
2025-09-03 14:58:26,265 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x11328e5d0>
2025-09-03 14:58:26,265 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-03 14:58:26,266 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-09-03 14:58:26,266 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-03 14:58:26,266 - httpcore.http11 - DEBUG - send_request_body.complete
2025-09-03 14:58:26,266 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-03 14:58:26,948 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 03 Sep 2025 09:28:26 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Content-Encoding', b'br'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'bom'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14398'), (b'x-ratelimit-remaining-tokens', b'5096'), (b'x-ratelimit-reset-requests', b'11.532s'), (b'x-ratelimit-reset-tokens', b'9.04s'), (b'x-request-id', b'req_01k47efx1beszr1ghx1kxj6929'), (b'via', b'1.1 google'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=fzhfc18zPiX8vFzyw1M.aYnDkEy6R6E4lQJt0oPRSIQ-1756891706-1.0.1.1-x6s9UdejVPUR7A8iQhFCjBvR_oqW14j_rb3KnyS5yYxh4OKBN9KGmaY2eB9WMoZTCcuilu41Ro9dfmnms1H5rKgVgqr45d2yR7ZSLKY6CyA; path=/; expires=Wed, 03-Sep-25 09:58:26 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9794378cc96f3a28-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-03 14:58:26,950 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 14:58:26,950 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-03 14:58:26,951 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-09-03 14:58:26,951 - httpcore.http11 - DEBUG - response_closed.started
2025-09-03 14:58:26,951 - httpcore.http11 - DEBUG - response_closed.complete
2025-09-03 14:58:26,951 - groq._base_client - DEBUG - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
2025-09-03 14:58:26,956 - prompt_manager.app.api.v1.api - INFO - Generated persona response for prompt 'mental_health_support' with persona type 'dynamic_persona'
2025-09-03 14:58:26,957 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/test-persona Status: 200 Time: 1837.16ms
2025-09-03 14:58:26,958 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 14:58:26,958 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 14:58:26,959 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 14:58:26,959 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 14:58:26,959 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 14:58:55,454 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:58:55,457 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 2.61ms
2025-09-03 14:58:57,282 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 14:58:57,283 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.55ms
2025-09-03 14:58:57,294 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/test-persona
2025-09-03 14:58:57,296 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 14:58:57,297 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 14:58:57,297 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 14:58:57,298 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 14:58:57,298 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 14:58:57,298 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 14:58:57,298 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 14:58:57,302 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 14:58:57,302 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 09:27:58+00:00 (UTC)
2025-09-03 14:58:57,302 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 14:58:57,302 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 14:58:57,305 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 14:58:57,305 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 14:58:57,306 - sqlalchemy.engine.Engine - INFO - [cached since 59.16s ago] ('prishatank6@gmail.com', 1, 0)
2025-09-03 14:58:57,306 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 14)
2025-09-03 14:58:57,306 - prompt_manager.app.api.v1.api - INFO - Testing persona with automatic prompt selection (user: prishatank6@gmail.com)
2025-09-03 14:58:57,307 - prompt_manager.app.crud.crud - INFO - Finding most relevant prompt for input: Hello, I have headache. What should I do?
2025-09-03 14:58:57,307 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 14:58:57,307 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.status = ? AND prompts.is_active = 1
2025-09-03 14:58:57,307 - sqlalchemy.engine.Engine - INFO - [cached since 32.18s ago] ('active',)
2025-09-03 14:58:57,308 - prompt_manager.app.crud.crud - INFO - Found 17 active prompts in the database
2025-09-03 14:58:57,308 - prompt_manager.app.crud.crud - INFO - Active prompt 1: ID=28, Name=marketing, Status=active, is_active=True
2025-09-03 14:58:57,309 - prompt_manager.app.crud.crud - INFO - Active prompt 2: ID=31, Name=test_live_version_sync, Status=active, is_active=True
2025-09-03 14:58:57,309 - prompt_manager.app.crud.crud - INFO - Active prompt 3: ID=33, Name=debug_live_test, Status=active, is_active=True
2025-09-03 14:58:57,309 - prompt_manager.app.crud.crud - INFO - Active prompt 4: ID=37, Name=test_active_validation, Status=active, is_active=True
2025-09-03 14:58:57,309 - prompt_manager.app.crud.crud - INFO - Active prompt 5: ID=38, Name=test_auto_status, Status=active, is_active=True
2025-09-03 14:58:57,309 - prompt_manager.app.crud.crud - INFO - Active prompt 6: ID=40, Name=test_constraint, Status=active, is_active=True
2025-09-03 14:58:57,309 - prompt_manager.app.crud.crud - INFO - Active prompt 7: ID=43, Name=endpoint_test, Status=active, is_active=True
2025-09-03 14:58:57,309 - prompt_manager.app.crud.crud - INFO - Active prompt 8: ID=45, Name=final_test, Status=active, is_active=True
2025-09-03 14:58:57,309 - prompt_manager.app.crud.crud - INFO - Active prompt 9: ID=49, Name=full_test_prompt, Status=active, is_active=True
2025-09-03 14:58:57,309 - prompt_manager.app.crud.crud - INFO - Active prompt 10: ID=55, Name=lifecycle_test_final, Status=active, is_active=True
2025-09-03 14:58:57,309 - prompt_manager.app.crud.crud - INFO - Active prompt 11: ID=62, Name=code, Status=active, is_active=True
2025-09-03 14:58:57,309 - prompt_manager.app.crud.crud - INFO - Active prompt 12: ID=69, Name=Healthcare assistant, Status=active, is_active=True
2025-09-03 14:58:57,309 - prompt_manager.app.crud.crud - INFO - Active prompt 13: ID=77, Name=Math Tutor, Status=active, is_active=True
2025-09-03 14:58:57,309 - prompt_manager.app.crud.crud - INFO - Active prompt 14: ID=80, Name=mental_health_support, Status=active, is_active=True
2025-09-03 14:58:57,309 - prompt_manager.app.crud.crud - INFO - Active prompt 15: ID=81, Name=coding_assistant, Status=active, is_active=True
2025-09-03 14:58:57,309 - prompt_manager.app.crud.crud - INFO - Active prompt 16: ID=82, Name=cooking_assistant, Status=active, is_active=True
2025-09-03 14:58:57,309 - prompt_manager.app.crud.crud - INFO - Active prompt 17: ID=83, Name=tech_support, Status=active, is_active=True
2025-09-03 14:58:57,309 - prompt_manager.app.crud.crud - INFO - Sending 17 prompts to LLM for analysis
2025-09-03 14:58:57,309 - prompt_manager.app.crud.crud - DEBUG - System prompt: You are an expert at matching user queries to the most appropriate system prompt. 
        Your goal is to analyze the user's input and select the single most relevant prompt ID from the provided list.
        
        MATCHING GUIDELINES:
        1. For coding/technical questions (Python, algorithms, programming), choose the coding assistant prompt.
        2. For internet/connection/tech issues, choose the tech support prompt.
        3. For mental health/stress/anxiety concerns, choose the mental health support prompt.
        4. For cooking/recipes/food questions, choose the cooking assistant prompt.
        
        INSTRUCTIONS:
        1. Carefully read the user's input and identify the main topic/domain.
        2. Review all available prompts and their metadata (name, tags, content preview).
        3. Select the prompt that best matches the user's intent and domain.
        4. Consider both the content and the context of the query.
        5. If the query is ambiguous but could match multiple domains, choose the most likely one.
        
        RESPONSE FORMAT:
        - Return ONLY the numeric ID of the selected prompt (e.g., "42").
        - If no prompt is relevant, return "none".
        - DO NOT include any other text or explanation in your response.
        
        IMPORTANT: Focus on the user's intent and choose the most appropriate prompt, even if the match isn't perfect.
        
2025-09-03 14:58:57,309 - prompt_manager.app.crud.crud - DEBUG - User message: USER INPUT:
        Hello, I have headache. What should I do?
        
        AVAILABLE PROMPTS (ID, Name, Content Preview):
        
ID: 28 | Name: marketing
Preview: Testing
Tags: testing

ID: 31 | Name: test_live_version_sync
Preview: Second version content
Tags: test

ID: 33 | Name: debug_live_test
Preview: Debug content v2
Tags: debug

ID: 37 | Name: test_active_validation
Preview: First version
Tags: test

ID: 38 | Name: test_auto_status
Preview: Testing auto status
Tags: test

ID: 40 | Name: test_constraint
Preview: First active version
Tags: test

ID: 43 | Name: endpoint_test
Preview: Updated final test
Tags: test

ID: 45 | Name: final_test
Preview: Final test

ID: 49 | Name: full_test_prompt
Preview: Initial content for the full test.
Tags: testing, full-flow

ID: 55 | Name: lifecycle_test_final
Preview: Lifecycle test v2.0.0
Tags: lifecycle

ID: 62 | Name: code
Preview: Update for Debugger
Tags: suggestion

ID: 69 | Name: Healthcare assistant
Preview: Just for checking
Tags: wellbeing

ID: 77 | Name: Math Tutor
Preview: You are a friendly math tutor, explain concept step by step for better understanding.
Tags: Mathematics, Tutor

ID: 80 | Name: mental_health_support
Preview: You are a compassionate mental health support assistant. Provide empathetic and supportive responses...
Tags: mental_health, support, wellbeing

ID: 81 | Name: coding_assistant
Preview: You are an expert programming assistant. Help users with coding questions, algorithm design, debuggi...
Tags: programming, coding, algorithms

ID: 82 | Name: cooking_assistant
Preview: You are a professional chef and cooking instructor. Provide detailed recipes, cooking tips, and tech...
Tags: cooking, recipes, baking

ID: 83 | Name: tech_support
Preview: You are a technical support specialist. Help users troubleshoot hardware, software, and network issu...
Tags: tech_support, troubleshooting, it

        
        RESPONSE FORMAT:
        Return ONLY the numeric ID of the most relevant prompt, or 'none' if none match.
        Example: "42" or "none"
        
        YOUR RESPONSE (ID only):
2025-09-03 14:58:57,309 - prompt_manager.app.crud.crud - INFO - Initializing GROQ client...
2025-09-03 14:58:57,310 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-09-03 14:58:57,311 - httpx - DEBUG - load_verify_locations cafile='/Applications/anaconda3/lib/python3.11/site-packages/certifi/cacert.pem'
2025-09-03 14:58:57,335 - prompt_manager.app.crud.crud - INFO - Sending request to GROQ API...
2025-09-03 14:58:57,336 - groq._base_client - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an expert at matching user queries to the most appropriate system prompt. \n        Your goal is to analyze the user\'s input and select the single most relevant prompt ID from the provided list.\n        \n        MATCHING GUIDELINES:\n        1. For coding/technical questions (Python, algorithms, programming), choose the coding assistant prompt.\n        2. For internet/connection/tech issues, choose the tech support prompt.\n        3. For mental health/stress/anxiety concerns, choose the mental health support prompt.\n        4. For cooking/recipes/food questions, choose the cooking assistant prompt.\n        \n        INSTRUCTIONS:\n        1. Carefully read the user\'s input and identify the main topic/domain.\n        2. Review all available prompts and their metadata (name, tags, content preview).\n        3. Select the prompt that best matches the user\'s intent and domain.\n        4. Consider both the content and the context of the query.\n        5. If the query is ambiguous but could match multiple domains, choose the most likely one.\n        \n        RESPONSE FORMAT:\n        - Return ONLY the numeric ID of the selected prompt (e.g., "42").\n        - If no prompt is relevant, return "none".\n        - DO NOT include any other text or explanation in your response.\n        \n        IMPORTANT: Focus on the user\'s intent and choose the most appropriate prompt, even if the match isn\'t perfect.\n        '}, {'role': 'user', 'content': 'USER INPUT:\n        Hello, I have headache. What should I do?\n        \n        AVAILABLE PROMPTS (ID, Name, Content Preview):\n        \nID: 28 | Name: marketing\nPreview: Testing\nTags: testing\n\nID: 31 | Name: test_live_version_sync\nPreview: Second version content\nTags: test\n\nID: 33 | Name: debug_live_test\nPreview: Debug content v2\nTags: debug\n\nID: 37 | Name: test_active_validation\nPreview: First version\nTags: test\n\nID: 38 | Name: test_auto_status\nPreview: Testing auto status\nTags: test\n\nID: 40 | Name: test_constraint\nPreview: First active version\nTags: test\n\nID: 43 | Name: endpoint_test\nPreview: Updated final test\nTags: test\n\nID: 45 | Name: final_test\nPreview: Final test\n\nID: 49 | Name: full_test_prompt\nPreview: Initial content for the full test.\nTags: testing, full-flow\n\nID: 55 | Name: lifecycle_test_final\nPreview: Lifecycle test v2.0.0\nTags: lifecycle\n\nID: 62 | Name: code\nPreview: Update for Debugger\nTags: suggestion\n\nID: 69 | Name: Healthcare assistant\nPreview: Just for checking\nTags: wellbeing\n\nID: 77 | Name: Math Tutor\nPreview: You are a friendly math tutor, explain concept step by step for better understanding.\nTags: Mathematics, Tutor\n\nID: 80 | Name: mental_health_support\nPreview: You are a compassionate mental health support assistant. Provide empathetic and supportive responses...\nTags: mental_health, support, wellbeing\n\nID: 81 | Name: coding_assistant\nPreview: You are an expert programming assistant. Help users with coding questions, algorithm design, debuggi...\nTags: programming, coding, algorithms\n\nID: 82 | Name: cooking_assistant\nPreview: You are a professional chef and cooking instructor. Provide detailed recipes, cooking tips, and tech...\nTags: cooking, recipes, baking\n\nID: 83 | Name: tech_support\nPreview: You are a technical support specialist. Help users troubleshoot hardware, software, and network issu...\nTags: tech_support, troubleshooting, it\n\n        \n        RESPONSE FORMAT:\n        Return ONLY the numeric ID of the most relevant prompt, or \'none\' if none match.\n        Example: "42" or "none"\n        \n        YOUR RESPONSE (ID only):'}], 'model': 'llama-3.1-8b-instant', 'max_tokens': 10, 'temperature': 0.3}}
2025-09-03 14:58:57,336 - httpcore.connection - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-09-03 14:58:57,381 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x11329fc10>
2025-09-03 14:58:57,382 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x113112690> server_hostname='api.groq.com' timeout=5.0
2025-09-03 14:58:57,444 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x11329fcd0>
2025-09-03 14:58:57,444 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-03 14:58:57,445 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-09-03 14:58:57,445 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-03 14:58:57,445 - httpcore.http11 - DEBUG - send_request_body.complete
2025-09-03 14:58:57,445 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-03 14:58:57,738 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 03 Sep 2025 09:28:57 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Content-Encoding', b'br'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'bom'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'5112'), (b'x-ratelimit-reset-requests', b'6s'), (b'x-ratelimit-reset-tokens', b'8.88s'), (b'x-request-id', b'req_01k47egvgmfx7ajhyw96hd93d6'), (b'via', b'1.1 google'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=0FFmyFBCjqbYE6NoEwYzdfnAJlJ8_bSpaYsaVAesHMM-1756891737-1.0.1.1-XpkJX8jbFv2WWSxnTY8m3SYIkNgEumflcpeuX16DphUtfstWYHhG7XdInPwzLSoHAJ93KlrxjfPATdlqvAutgQF2HrtfEUhyMWpaMipTcMg; path=/; expires=Wed, 03-Sep-25 09:58:57 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9794384fbd2b48dd-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-03 14:58:57,740 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 14:58:57,740 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-03 14:58:57,741 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-09-03 14:58:57,741 - httpcore.http11 - DEBUG - response_closed.started
2025-09-03 14:58:57,741 - httpcore.http11 - DEBUG - response_closed.complete
2025-09-03 14:58:57,742 - groq._base_client - DEBUG - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
2025-09-03 14:58:57,746 - prompt_manager.app.crud.crud - INFO - Received response from GROQ API
2025-09-03 14:58:57,746 - prompt_manager.app.crud.crud - DEBUG - GROQ API response: ChatCompletion(choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChoiceMessage(content='80', role='assistant', tool_calls=None))], id='chatcmpl-981007d3-de3b-4b88-9a45-655b549b6a52', created=1756891737, model='llama-3.1-8b-instant', object='chat.completion', system_fingerprint='fp_7083106d2c', usage=Usage(completion_time=0.003605363, completion_tokens=2, prompt_time=0.131910556, prompt_tokens=841, total_time=0.135515919, total_tokens=843, queue_time=0.045935834), usage_breakdown=None, x_groq={'id': 'req_01k47egvgmfx7ajhyw96hd93d6'}, service_tier='on_demand')
2025-09-03 14:58:57,747 - prompt_manager.app.crud.crud - INFO - LLM raw response: 80 for input: Hello, I have headache. What should I do?
2025-09-03 14:58:57,747 - prompt_manager.app.crud.crud - INFO - Extracted prompt ID: 80
2025-09-03 14:58:57,748 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.id = ? AND prompts.status = ? AND prompts.is_active = 1
 LIMIT ? OFFSET ?
2025-09-03 14:58:57,749 - sqlalchemy.engine.Engine - INFO - [cached since 31.62s ago] (80, 'active', 1, 0)
2025-09-03 14:58:57,750 - prompt_manager.app.crud.crud - INFO - Valid active prompt found: ID=80, Name=mental_health_support
2025-09-03 14:58:57,750 - prompt_manager.app.api.v1.api - INFO - Testing persona for prompt ID 80 (user: prishatank6@gmail.com)
2025-09-03 14:58:57,751 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.id = ?
 LIMIT ? OFFSET ?
2025-09-03 14:58:57,751 - sqlalchemy.engine.Engine - INFO - [cached since 31.62s ago] (80, 1, 0)
2025-09-03 14:58:57,752 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-09-03 14:58:57,753 - httpx - DEBUG - load_verify_locations cafile='/Applications/anaconda3/lib/python3.11/site-packages/certifi/cacert.pem'
2025-09-03 14:58:57,789 - groq._base_client - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a compassionate mental health support assistant. Provide empathetic and supportive responses to users who may be experiencing stress, anxiety, or other mental health concerns. Offer helpful coping strategies and encourage professional help when appropriate.'}, {'role': 'user', 'content': 'Hello, I have headache. What should I do?'}], 'model': 'llama-3.1-8b-instant', 'max_tokens': 1000, 'temperature': 0.7}}
2025-09-03 14:58:57,790 - httpcore.connection - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-09-03 14:58:57,831 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x112f9c910>
2025-09-03 14:58:57,831 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x112ab27b0> server_hostname='api.groq.com' timeout=5.0
2025-09-03 14:58:57,887 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x11323c950>
2025-09-03 14:58:57,887 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-03 14:58:57,887 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-09-03 14:58:57,887 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-03 14:58:57,888 - httpcore.http11 - DEBUG - send_request_body.complete
2025-09-03 14:58:57,888 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-03 14:58:58,703 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 03 Sep 2025 09:28:58 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Content-Encoding', b'br'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'bom'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14398'), (b'x-ratelimit-remaining-tokens', b'5093'), (b'x-ratelimit-reset-requests', b'11.586s'), (b'x-ratelimit-reset-tokens', b'9.068999999s'), (b'x-request-id', b'req_01k47egvxket9aqjbm7wg5xst7'), (b'via', b'1.1 google'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=Mj4NpMZKo0XpM1V18etQNn9ABK4v988X2wJXLguuK8A-1756891738-1.0.1.1-95XjazukQC1XjIbr9Qc_.a5rXWyQ8usr_ExWaSpV89UG5xeqHWH7mYwc.1_htX_xTYgz01ve2bsFRROQNNEHUswhHR.oTusbaAeYIqGRHPc; path=/; expires=Wed, 03-Sep-25 09:58:58 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'979438527aa23a29-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-03 14:58:58,705 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 14:58:58,705 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-03 14:58:58,706 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-09-03 14:58:58,706 - httpcore.http11 - DEBUG - response_closed.started
2025-09-03 14:58:58,707 - httpcore.http11 - DEBUG - response_closed.complete
2025-09-03 14:58:58,707 - groq._base_client - DEBUG - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
2025-09-03 14:58:58,709 - httpcore.connection - DEBUG - close.started
2025-09-03 14:58:58,712 - httpcore.connection - DEBUG - close.complete
2025-09-03 14:58:58,716 - prompt_manager.app.api.v1.api - INFO - Generated persona response for prompt 'mental_health_support' with persona type 'dynamic_persona'
2025-09-03 14:58:58,716 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/test-persona Status: 200 Time: 1422.06ms
2025-09-03 14:58:58,717 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 14:58:58,717 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 14:58:58,718 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 14:58:58,718 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 14:58:58,718 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 15:02:40,536 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 15:02:40,621 - httpcore.connection - DEBUG - close.started
2025-09-03 15:02:40,628 - httpcore.connection - DEBUG - close.complete
2025-09-03 15:02:40,629 - httpcore.connection - DEBUG - close.started
2025-09-03 15:02:40,630 - httpcore.connection - DEBUG - close.complete
2025-09-03 15:02:40,630 - httpcore.connection - DEBUG - close.started
2025-09-03 15:02:40,630 - httpcore.connection - DEBUG - close.complete
2025-09-03 15:02:42,042 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 15:02:42,042 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("users")
2025-09-03 15:02:42,042 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 15:02:42,043 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("prompts")
2025-09-03 15:02:42,043 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 15:02:42,043 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("prompt_history")
2025-09-03 15:02:42,043 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 15:02:42,043 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-09-03 15:02:42,069 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 15:02:42,069 - prompt_manager.app.main - INFO - Log level: DEBUG
2025-09-03 15:02:42,069 - prompt_manager.app.main - INFO - Database URL: sqlite:////Users/prisha/Desktop/Coding/system prompt/prompts.db
2025-09-03 15:04:07,745 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 15:04:20,377 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 15:04:20,378 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("users")
2025-09-03 15:04:20,378 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 15:04:20,379 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("prompts")
2025-09-03 15:04:20,379 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 15:04:20,379 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("prompt_history")
2025-09-03 15:04:20,379 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 15:04:20,379 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-09-03 15:04:20,402 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 15:04:20,402 - prompt_manager.app.main - INFO - Log level: DEBUG
2025-09-03 15:04:20,402 - prompt_manager.app.main - INFO - Database URL: sqlite:////Users/prisha/Desktop/Coding/system prompt/prompts.db
2025-09-03 15:04:32,548 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 15:04:32,551 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 2.82ms
2025-09-03 15:04:32,568 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/test-persona
2025-09-03 15:04:32,570 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 15:04:32,570 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 15:04:32,570 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 15:04:32,570 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 15:04:32,570 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 15:04:32,570 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 15:04:32,570 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 15:04:32,577 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 15:04:32,577 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 09:27:58+00:00 (UTC)
2025-09-03 15:04:32,577 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 15:04:32,577 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 15:04:32,585 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 15:04:32,587 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 15:04:32,588 - sqlalchemy.engine.Engine - INFO - [generated in 0.00036s] ('prishatank6@gmail.com', 1, 0)
2025-09-03 15:04:32,589 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 14)
2025-09-03 15:04:32,589 - prompt_manager.app.api.v1.api - INFO - Testing persona with automatic prompt selection (user: prishatank6@gmail.com)
2025-09-03 15:04:32,589 - prompt_manager.app.crud.crud - INFO - Finding most relevant prompt for input: Hello, I have headache. What should I do?
2025-09-03 15:04:32,590 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 15:04:32,591 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.status = ? AND prompts.is_active = 1
2025-09-03 15:04:32,591 - sqlalchemy.engine.Engine - INFO - [generated in 0.00019s] ('active',)
2025-09-03 15:04:32,593 - prompt_manager.app.crud.crud - INFO - Found 17 active prompts in the database
2025-09-03 15:04:32,593 - prompt_manager.app.crud.crud - INFO - Active prompt 1: ID=28, Name=marketing, Status=active, is_active=True
2025-09-03 15:04:32,593 - prompt_manager.app.crud.crud - INFO - Active prompt 2: ID=31, Name=test_live_version_sync, Status=active, is_active=True
2025-09-03 15:04:32,593 - prompt_manager.app.crud.crud - INFO - Active prompt 3: ID=33, Name=debug_live_test, Status=active, is_active=True
2025-09-03 15:04:32,593 - prompt_manager.app.crud.crud - INFO - Active prompt 4: ID=37, Name=test_active_validation, Status=active, is_active=True
2025-09-03 15:04:32,594 - prompt_manager.app.crud.crud - INFO - Active prompt 5: ID=38, Name=test_auto_status, Status=active, is_active=True
2025-09-03 15:04:32,594 - prompt_manager.app.crud.crud - INFO - Active prompt 6: ID=40, Name=test_constraint, Status=active, is_active=True
2025-09-03 15:04:32,594 - prompt_manager.app.crud.crud - INFO - Active prompt 7: ID=43, Name=endpoint_test, Status=active, is_active=True
2025-09-03 15:04:32,594 - prompt_manager.app.crud.crud - INFO - Active prompt 8: ID=45, Name=final_test, Status=active, is_active=True
2025-09-03 15:04:32,594 - prompt_manager.app.crud.crud - INFO - Active prompt 9: ID=49, Name=full_test_prompt, Status=active, is_active=True
2025-09-03 15:04:32,594 - prompt_manager.app.crud.crud - INFO - Active prompt 10: ID=55, Name=lifecycle_test_final, Status=active, is_active=True
2025-09-03 15:04:32,594 - prompt_manager.app.crud.crud - INFO - Active prompt 11: ID=62, Name=code, Status=active, is_active=True
2025-09-03 15:04:32,594 - prompt_manager.app.crud.crud - INFO - Active prompt 12: ID=69, Name=Healthcare assistant, Status=active, is_active=True
2025-09-03 15:04:32,594 - prompt_manager.app.crud.crud - INFO - Active prompt 13: ID=77, Name=Math Tutor, Status=active, is_active=True
2025-09-03 15:04:32,594 - prompt_manager.app.crud.crud - INFO - Active prompt 14: ID=80, Name=mental_health_support, Status=active, is_active=True
2025-09-03 15:04:32,594 - prompt_manager.app.crud.crud - INFO - Active prompt 15: ID=81, Name=coding_assistant, Status=active, is_active=True
2025-09-03 15:04:32,594 - prompt_manager.app.crud.crud - INFO - Active prompt 16: ID=82, Name=cooking_assistant, Status=active, is_active=True
2025-09-03 15:04:32,595 - prompt_manager.app.crud.crud - INFO - Active prompt 17: ID=83, Name=tech_support, Status=active, is_active=True
2025-09-03 15:04:32,595 - prompt_manager.app.crud.crud - INFO - Sending 17 prompts to LLM for analysis
2025-09-03 15:04:32,595 - prompt_manager.app.crud.crud - DEBUG - System prompt: You are an expert at matching user queries to the most appropriate system prompt. 
        Your goal is to analyze the user's input and select the single most relevant prompt ID from the provided list.
        
        MATCHING GUIDELINES:
        1. For coding/technical questions (Python, algorithms, programming), choose the coding assistant prompt.
        2. For internet/connection/tech issues, choose the tech support prompt.
        3. For mental health/stress/anxiety concerns, choose the mental health support prompt.
        4. For cooking/recipes/food questions, choose the cooking assistant prompt.
        
        INSTRUCTIONS:
        1. Carefully read the user's input and identify the main topic/domain.
        2. Review all available prompts and their metadata (name, tags, content preview).
        3. Select the prompt that best matches the user's intent and domain.
        4. Consider both the content and the context of the query.
        5. If the query is ambiguous but could match multiple domains, choose the most likely one.
        
        RESPONSE FORMAT:
        - Return ONLY the numeric ID of the selected prompt (e.g., "42").
        - If no prompt is relevant, return "none".
        - DO NOT include any other text or explanation in your response.
        
        IMPORTANT: Focus on the user's intent and choose the most appropriate prompt, even if the match isn't perfect.
        
2025-09-03 15:04:32,596 - prompt_manager.app.crud.crud - DEBUG - User message: USER INPUT:
        Hello, I have headache. What should I do?
        
        AVAILABLE PROMPTS (ID, Name, Content Preview):
        
ID: 28 | Name: marketing
Preview: Testing
Tags: testing

ID: 31 | Name: test_live_version_sync
Preview: Second version content
Tags: test

ID: 33 | Name: debug_live_test
Preview: Debug content v2
Tags: debug

ID: 37 | Name: test_active_validation
Preview: First version
Tags: test

ID: 38 | Name: test_auto_status
Preview: Testing auto status
Tags: test

ID: 40 | Name: test_constraint
Preview: First active version
Tags: test

ID: 43 | Name: endpoint_test
Preview: Updated final test
Tags: test

ID: 45 | Name: final_test
Preview: Final test

ID: 49 | Name: full_test_prompt
Preview: Initial content for the full test.
Tags: testing, full-flow

ID: 55 | Name: lifecycle_test_final
Preview: Lifecycle test v2.0.0
Tags: lifecycle

ID: 62 | Name: code
Preview: Update for Debugger
Tags: suggestion

ID: 69 | Name: Healthcare assistant
Preview: Just for checking
Tags: wellbeing

ID: 77 | Name: Math Tutor
Preview: You are a friendly math tutor, explain concept step by step for better understanding.
Tags: Mathematics, Tutor

ID: 80 | Name: mental_health_support
Preview: You are a compassionate mental health support assistant. Provide empathetic and supportive responses...
Tags: mental_health, support, wellbeing

ID: 81 | Name: coding_assistant
Preview: You are an expert programming assistant. Help users with coding questions, algorithm design, debuggi...
Tags: programming, coding, algorithms

ID: 82 | Name: cooking_assistant
Preview: You are a professional chef and cooking instructor. Provide detailed recipes, cooking tips, and tech...
Tags: cooking, recipes, baking

ID: 83 | Name: tech_support
Preview: You are a technical support specialist. Help users troubleshoot hardware, software, and network issu...
Tags: tech_support, troubleshooting, it

        
        RESPONSE FORMAT:
        Return ONLY the numeric ID of the most relevant prompt, or 'none' if none match.
        Example: "42" or "none"
        
        YOUR RESPONSE (ID only):
2025-09-03 15:04:32,596 - prompt_manager.app.crud.crud - INFO - Initializing GROQ client...
2025-09-03 15:04:32,602 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-09-03 15:04:32,605 - httpx - DEBUG - load_verify_locations cafile='/Applications/anaconda3/lib/python3.11/site-packages/certifi/cacert.pem'
2025-09-03 15:04:32,633 - prompt_manager.app.crud.crud - INFO - Sending request to GROQ API...
2025-09-03 15:04:32,635 - groq._base_client - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an expert at matching user queries to the most appropriate system prompt. \n        Your goal is to analyze the user\'s input and select the single most relevant prompt ID from the provided list.\n        \n        MATCHING GUIDELINES:\n        1. For coding/technical questions (Python, algorithms, programming), choose the coding assistant prompt.\n        2. For internet/connection/tech issues, choose the tech support prompt.\n        3. For mental health/stress/anxiety concerns, choose the mental health support prompt.\n        4. For cooking/recipes/food questions, choose the cooking assistant prompt.\n        \n        INSTRUCTIONS:\n        1. Carefully read the user\'s input and identify the main topic/domain.\n        2. Review all available prompts and their metadata (name, tags, content preview).\n        3. Select the prompt that best matches the user\'s intent and domain.\n        4. Consider both the content and the context of the query.\n        5. If the query is ambiguous but could match multiple domains, choose the most likely one.\n        \n        RESPONSE FORMAT:\n        - Return ONLY the numeric ID of the selected prompt (e.g., "42").\n        - If no prompt is relevant, return "none".\n        - DO NOT include any other text or explanation in your response.\n        \n        IMPORTANT: Focus on the user\'s intent and choose the most appropriate prompt, even if the match isn\'t perfect.\n        '}, {'role': 'user', 'content': 'USER INPUT:\n        Hello, I have headache. What should I do?\n        \n        AVAILABLE PROMPTS (ID, Name, Content Preview):\n        \nID: 28 | Name: marketing\nPreview: Testing\nTags: testing\n\nID: 31 | Name: test_live_version_sync\nPreview: Second version content\nTags: test\n\nID: 33 | Name: debug_live_test\nPreview: Debug content v2\nTags: debug\n\nID: 37 | Name: test_active_validation\nPreview: First version\nTags: test\n\nID: 38 | Name: test_auto_status\nPreview: Testing auto status\nTags: test\n\nID: 40 | Name: test_constraint\nPreview: First active version\nTags: test\n\nID: 43 | Name: endpoint_test\nPreview: Updated final test\nTags: test\n\nID: 45 | Name: final_test\nPreview: Final test\n\nID: 49 | Name: full_test_prompt\nPreview: Initial content for the full test.\nTags: testing, full-flow\n\nID: 55 | Name: lifecycle_test_final\nPreview: Lifecycle test v2.0.0\nTags: lifecycle\n\nID: 62 | Name: code\nPreview: Update for Debugger\nTags: suggestion\n\nID: 69 | Name: Healthcare assistant\nPreview: Just for checking\nTags: wellbeing\n\nID: 77 | Name: Math Tutor\nPreview: You are a friendly math tutor, explain concept step by step for better understanding.\nTags: Mathematics, Tutor\n\nID: 80 | Name: mental_health_support\nPreview: You are a compassionate mental health support assistant. Provide empathetic and supportive responses...\nTags: mental_health, support, wellbeing\n\nID: 81 | Name: coding_assistant\nPreview: You are an expert programming assistant. Help users with coding questions, algorithm design, debuggi...\nTags: programming, coding, algorithms\n\nID: 82 | Name: cooking_assistant\nPreview: You are a professional chef and cooking instructor. Provide detailed recipes, cooking tips, and tech...\nTags: cooking, recipes, baking\n\nID: 83 | Name: tech_support\nPreview: You are a technical support specialist. Help users troubleshoot hardware, software, and network issu...\nTags: tech_support, troubleshooting, it\n\n        \n        RESPONSE FORMAT:\n        Return ONLY the numeric ID of the most relevant prompt, or \'none\' if none match.\n        Example: "42" or "none"\n        \n        YOUR RESPONSE (ID only):'}], 'model': 'llama-3.1-8b-instant', 'max_tokens': 10, 'temperature': 0.3}}
2025-09-03 15:04:33,006 - httpcore.connection - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-09-03 15:04:33,246 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x110763290>
2025-09-03 15:04:33,246 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x11070d910> server_hostname='api.groq.com' timeout=5.0
2025-09-03 15:04:33,308 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x107ef6350>
2025-09-03 15:04:33,309 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-03 15:04:33,309 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-09-03 15:04:33,309 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-03 15:04:33,309 - httpcore.http11 - DEBUG - send_request_body.complete
2025-09-03 15:04:33,309 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-03 15:04:33,844 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 03 Sep 2025 09:34:33 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Content-Encoding', b'br'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'bom'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'5112'), (b'x-ratelimit-reset-requests', b'6s'), (b'x-ratelimit-reset-tokens', b'8.88s'), (b'x-request-id', b'req_01k47ev3ghfg289b7s0p7ha0f8'), (b'via', b'1.1 google'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=6Kc7IYch3_xAsyNUfiWS_.yGhBLDaUPgzh8weOEtqFM-1756892073-1.0.1.1-VFa3zFqHpi_HDlsLrJERWZc1mLCFsGquna29Wo71hfX1yPmKNWsu_Ze6RZWkFwfJ07vTyX1uWbYPIhMcYZviaIaeB4DFr.mJewlw5cVPvDQ; path=/; expires=Wed, 03-Sep-25 10:04:33 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'97944082fd1d87ee-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-03 15:04:33,846 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 15:04:33,846 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-03 15:04:33,848 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-09-03 15:04:33,848 - httpcore.http11 - DEBUG - response_closed.started
2025-09-03 15:04:33,849 - httpcore.http11 - DEBUG - response_closed.complete
2025-09-03 15:04:33,849 - groq._base_client - DEBUG - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
2025-09-03 15:04:33,852 - prompt_manager.app.crud.crud - INFO - Received response from GROQ API
2025-09-03 15:04:33,853 - prompt_manager.app.crud.crud - DEBUG - GROQ API response: ChatCompletion(choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChoiceMessage(content='80', role='assistant', tool_calls=None))], id='chatcmpl-3cfcab39-13f3-41f9-a9a1-459639a73e86', created=1756892073, model='llama-3.1-8b-instant', object='chat.completion', system_fingerprint='fp_7083106d2c', usage=Usage(completion_time=0.004063717, completion_tokens=2, prompt_time=0.165234403, prompt_tokens=841, total_time=0.16929812, total_tokens=843, queue_time=0.046687957), usage_breakdown=None, x_groq={'id': 'req_01k47ev3ghfg289b7s0p7ha0f8'}, service_tier='on_demand')
2025-09-03 15:04:33,853 - prompt_manager.app.crud.crud - INFO - LLM raw response: 80 for input: Hello, I have headache. What should I do?
2025-09-03 15:04:33,853 - prompt_manager.app.crud.crud - INFO - Extracted prompt ID: 80
2025-09-03 15:04:33,857 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.id = ? AND prompts.status = ? AND prompts.is_active = 1
 LIMIT ? OFFSET ?
2025-09-03 15:04:33,857 - sqlalchemy.engine.Engine - INFO - [generated in 0.00045s] (80, 'active', 1, 0)
2025-09-03 15:04:33,858 - prompt_manager.app.crud.crud - INFO - Valid active prompt found: ID=80, Name=mental_health_support
2025-09-03 15:04:33,859 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.id = ?
 LIMIT ? OFFSET ?
2025-09-03 15:04:33,860 - sqlalchemy.engine.Engine - INFO - [generated in 0.00031s] (80, 1, 0)
2025-09-03 15:04:33,860 - prompt_manager.app.api.v1.api - INFO - Testing persona for prompt ID 80 (user: prishatank6@gmail.com)
2025-09-03 15:04:33,860 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.id = ?
 LIMIT ? OFFSET ?
2025-09-03 15:04:33,860 - sqlalchemy.engine.Engine - INFO - [cached since 0.001228s ago] (80, 1, 0)
2025-09-03 15:04:33,861 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-09-03 15:04:33,862 - httpx - DEBUG - load_verify_locations cafile='/Applications/anaconda3/lib/python3.11/site-packages/certifi/cacert.pem'
2025-09-03 15:04:33,889 - groq._base_client - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a compassionate mental health support assistant. Provide empathetic and supportive responses to users who may be experiencing stress, anxiety, or other mental health concerns. Offer helpful coping strategies and encourage professional help when appropriate.'}, {'role': 'user', 'content': 'Hello, I have headache. What should I do?'}], 'model': 'llama-3.1-8b-instant', 'max_tokens': 1000, 'temperature': 0.7}}
2025-09-03 15:04:33,889 - httpcore.connection - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-09-03 15:04:33,945 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x110758410>
2025-09-03 15:04:33,945 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x11070cb90> server_hostname='api.groq.com' timeout=5.0
2025-09-03 15:04:34,007 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x110758750>
2025-09-03 15:04:34,008 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-03 15:04:34,008 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-09-03 15:04:34,008 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-03 15:04:34,008 - httpcore.http11 - DEBUG - send_request_body.complete
2025-09-03 15:04:34,008 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-03 15:04:35,343 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 03 Sep 2025 09:34:35 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Content-Encoding', b'br'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'bom'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14398'), (b'x-ratelimit-remaining-tokens', b'5116'), (b'x-ratelimit-reset-requests', b'11.315s'), (b'x-ratelimit-reset-tokens', b'8.831999999s'), (b'x-request-id', b'req_01k47ev45yfg285jn4yha524sd'), (b'via', b'1.1 google'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=EJJco17POokeWK5vuh.PmamYdc1CyH1t8ojjDFymE4I-1756892075-1.0.1.1-kxD_Sh_YSfakHfhG0HUTc2Cow8bLjNlo5hLb.zx.YZfJQyv395rfE5a6a5p4shlCZ2psSzdeFimRid_en_EkyTLZNJcPI0ykvWC.OjIQ_AU; path=/; expires=Wed, 03-Sep-25 10:04:35 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'979440874a008b82-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-03 15:04:35,345 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 15:04:35,345 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-03 15:04:35,347 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-09-03 15:04:35,347 - httpcore.http11 - DEBUG - response_closed.started
2025-09-03 15:04:35,347 - httpcore.http11 - DEBUG - response_closed.complete
2025-09-03 15:04:35,347 - groq._base_client - DEBUG - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
2025-09-03 15:04:35,352 - prompt_manager.app.api.v1.api - INFO - Generated persona response for prompt 'mental_health_support' with persona type 'dynamic_persona'
2025-09-03 15:04:35,353 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/test-persona Status: 200 Time: 2785.35ms
2025-09-03 15:04:35,354 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 15:04:35,354 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 15:04:35,355 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 15:04:35,355 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 15:04:35,355 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 15:05:56,076 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/test-persona
2025-09-03 15:05:56,078 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 15:05:56,078 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 15:05:56,079 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 15:05:56,079 - prompt_manager.app.core.security - ERROR - No token provided
2025-09-03 15:05:56,079 - prompt_manager.app.database - ERROR - Error in database session: 
2025-09-03 15:05:56,079 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 15:05:56,080 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 15:05:56,080 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/test-persona Status: 401 Time: 4.54ms
2025-09-03 15:08:03,502 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 15:08:03,588 - httpcore.connection - DEBUG - close.started
2025-09-03 15:08:03,592 - httpcore.connection - DEBUG - close.complete
2025-09-03 15:08:03,592 - httpcore.connection - DEBUG - close.started
2025-09-03 15:08:03,593 - httpcore.connection - DEBUG - close.complete
2025-09-03 15:08:05,041 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 15:08:05,041 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("users")
2025-09-03 15:08:05,041 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 15:08:05,042 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("prompts")
2025-09-03 15:08:05,042 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 15:08:05,042 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("prompt_history")
2025-09-03 15:08:05,042 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 15:08:05,042 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-09-03 15:08:05,071 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 15:08:05,072 - prompt_manager.app.main - INFO - Log level: DEBUG
2025-09-03 15:08:05,072 - prompt_manager.app.main - INFO - Database URL: sqlite:////Users/prisha/Desktop/Coding/system prompt/prompts.db
2025-09-03 15:08:41,114 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 15:08:41,118 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 3.61ms
2025-09-03 15:08:54,069 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 15:08:54,072 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 2.51ms
2025-09-03 15:08:54,078 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-03 15:08:54,080 - multipart.multipart - DEBUG - Calling on_field_start with no data
2025-09-03 15:08:54,081 - multipart.multipart - DEBUG - Calling on_field_name with data[0:8]
2025-09-03 15:08:54,081 - multipart.multipart - DEBUG - Calling on_field_data with data[9:32]
2025-09-03 15:08:54,081 - multipart.multipart - DEBUG - Calling on_field_end with no data
2025-09-03 15:08:54,081 - multipart.multipart - DEBUG - Calling on_field_start with no data
2025-09-03 15:08:54,081 - multipart.multipart - DEBUG - Calling on_field_name with data[33:41]
2025-09-03 15:08:54,081 - multipart.multipart - DEBUG - Calling on_field_data with data[42:50]
2025-09-03 15:08:54,081 - multipart.multipart - DEBUG - Calling on_field_end with no data
2025-09-03 15:08:54,081 - multipart.multipart - DEBUG - Calling on_end with no data
2025-09-03 15:08:54,083 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 15:08:54,084 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 15:08:54,096 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 15:08:54,099 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 15:08:54,099 - sqlalchemy.engine.Engine - INFO - [generated in 0.00034s] ('prishatank6@gmail.com', 1, 0)
2025-09-03 15:08:54,102 - passlib.handlers.bcrypt - DEBUG - detected 'bcrypt' backend, version '4.0.1'
2025-09-03 15:08:54,102 - passlib.handlers.bcrypt - DEBUG - 'bcrypt' backend lacks $2$ support, enabling workaround
2025-09-03 15:08:54,391 - prompt_manager.app.api.v1.endpoints.auth - INFO - Created access token for user: prishatank6@gmail.com
2025-09-03 15:08:54,396 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 200 Time: 317.84ms
2025-09-03 15:08:54,397 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 15:08:54,397 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 15:08:54,397 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 15:08:54,397 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 15:08:54,424 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 15:08:54,425 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.33ms
2025-09-03 15:08:55,636 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 15:08:55,636 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.85ms
2025-09-03 15:09:06,726 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 15:09:06,728 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.5ms
2025-09-03 15:09:06,785 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 15:09:06,786 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.47ms
2025-09-03 15:09:06,795 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/test-persona
2025-09-03 15:09:06,798 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 15:09:06,798 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 15:09:06,798 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 15:09:06,798 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 15:09:06,798 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 15:09:06,798 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 15:09:06,798 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 15:09:06,799 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 15:09:06,799 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 09:38:54+00:00 (UTC)
2025-09-03 15:09:06,799 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 15:09:06,799 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 15:09:06,800 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 15:09:06,800 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 15:09:06,800 - sqlalchemy.engine.Engine - INFO - [cached since 12.7s ago] ('prishatank6@gmail.com', 1, 0)
2025-09-03 15:09:06,801 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 14)
2025-09-03 15:09:06,801 - prompt_manager.app.api.v1.api - INFO - Testing persona with automatic prompt selection (user: prishatank6@gmail.com)
2025-09-03 15:09:06,802 - prompt_manager.app.crud.crud - INFO - Finding most relevant prompt for input: My head hurts, what to do?

2025-09-03 15:09:06,803 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 15:09:06,806 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.status = ? AND prompts.is_active = 1
2025-09-03 15:09:06,807 - sqlalchemy.engine.Engine - INFO - [generated in 0.00077s] ('active',)
2025-09-03 15:09:06,809 - prompt_manager.app.crud.crud - INFO - Found 17 active prompts in the database
2025-09-03 15:09:06,809 - prompt_manager.app.crud.crud - INFO - Active prompt 1: ID=28, Name=marketing, Status=active, is_active=True
2025-09-03 15:09:06,809 - prompt_manager.app.crud.crud - INFO - Active prompt 2: ID=31, Name=test_live_version_sync, Status=active, is_active=True
2025-09-03 15:09:06,809 - prompt_manager.app.crud.crud - INFO - Active prompt 3: ID=33, Name=debug_live_test, Status=active, is_active=True
2025-09-03 15:09:06,809 - prompt_manager.app.crud.crud - INFO - Active prompt 4: ID=37, Name=test_active_validation, Status=active, is_active=True
2025-09-03 15:09:06,809 - prompt_manager.app.crud.crud - INFO - Active prompt 5: ID=38, Name=test_auto_status, Status=active, is_active=True
2025-09-03 15:09:06,809 - prompt_manager.app.crud.crud - INFO - Active prompt 6: ID=40, Name=test_constraint, Status=active, is_active=True
2025-09-03 15:09:06,809 - prompt_manager.app.crud.crud - INFO - Active prompt 7: ID=43, Name=endpoint_test, Status=active, is_active=True
2025-09-03 15:09:06,810 - prompt_manager.app.crud.crud - INFO - Active prompt 8: ID=45, Name=final_test, Status=active, is_active=True
2025-09-03 15:09:06,810 - prompt_manager.app.crud.crud - INFO - Active prompt 9: ID=49, Name=full_test_prompt, Status=active, is_active=True
2025-09-03 15:09:06,810 - prompt_manager.app.crud.crud - INFO - Active prompt 10: ID=55, Name=lifecycle_test_final, Status=active, is_active=True
2025-09-03 15:09:06,810 - prompt_manager.app.crud.crud - INFO - Active prompt 11: ID=62, Name=code, Status=active, is_active=True
2025-09-03 15:09:06,810 - prompt_manager.app.crud.crud - INFO - Active prompt 12: ID=69, Name=Healthcare assistant, Status=active, is_active=True
2025-09-03 15:09:06,810 - prompt_manager.app.crud.crud - INFO - Active prompt 13: ID=77, Name=Math Tutor, Status=active, is_active=True
2025-09-03 15:09:06,810 - prompt_manager.app.crud.crud - INFO - Active prompt 14: ID=80, Name=mental_health_support, Status=active, is_active=True
2025-09-03 15:09:06,810 - prompt_manager.app.crud.crud - INFO - Active prompt 15: ID=81, Name=coding_assistant, Status=active, is_active=True
2025-09-03 15:09:06,810 - prompt_manager.app.crud.crud - INFO - Active prompt 16: ID=82, Name=cooking_assistant, Status=active, is_active=True
2025-09-03 15:09:06,810 - prompt_manager.app.crud.crud - INFO - Active prompt 17: ID=83, Name=tech_support, Status=active, is_active=True
2025-09-03 15:09:06,811 - prompt_manager.app.crud.crud - INFO - Sending 17 prompts to LLM for analysis
2025-09-03 15:09:06,811 - prompt_manager.app.crud.crud - DEBUG - System prompt: You are an expert at matching user queries to the most appropriate system prompt. 
        Your goal is to analyze the user's input and select the single most relevant prompt ID from the provided list.
        
        MATCHING GUIDELINES:
        1. For coding/technical questions (Python, algorithms, programming), choose the coding assistant prompt.
        2. For internet/connection/tech issues, choose the tech support prompt.
        3. For mental health/stress/anxiety concerns, choose the mental health support prompt.
        4. For cooking/recipes/food questions, choose the cooking assistant prompt.
        
        INSTRUCTIONS:
        1. Carefully read the user's input and identify the main topic/domain.
        2. Review all available prompts and their metadata (name, tags, content preview).
        3. Select the prompt that best matches the user's intent and domain.
        4. Consider both the content and the context of the query.
        5. If the query is ambiguous but could match multiple domains, choose the most likely one.
        
        RESPONSE FORMAT:
        - Return ONLY the numeric ID of the selected prompt (e.g., "42").
        - If no prompt is relevant, return "none".
        - DO NOT include any other text or explanation in your response.
        
        IMPORTANT: Focus on the user's intent and choose the most appropriate prompt, even if the match isn't perfect.
        
2025-09-03 15:09:06,811 - prompt_manager.app.crud.crud - DEBUG - User message: USER INPUT:
        My head hurts, what to do?

        
        AVAILABLE PROMPTS (ID, Name, Content Preview):
        
ID: 28 | Name: marketing
Preview: Testing
Tags: testing

ID: 31 | Name: test_live_version_sync
Preview: Second version content
Tags: test

ID: 33 | Name: debug_live_test
Preview: Debug content v2
Tags: debug

ID: 37 | Name: test_active_validation
Preview: First version
Tags: test

ID: 38 | Name: test_auto_status
Preview: Testing auto status
Tags: test

ID: 40 | Name: test_constraint
Preview: First active version
Tags: test

ID: 43 | Name: endpoint_test
Preview: Updated final test
Tags: test

ID: 45 | Name: final_test
Preview: Final test

ID: 49 | Name: full_test_prompt
Preview: Initial content for the full test.
Tags: testing, full-flow

ID: 55 | Name: lifecycle_test_final
Preview: Lifecycle test v2.0.0
Tags: lifecycle

ID: 62 | Name: code
Preview: Update for Debugger
Tags: suggestion

ID: 69 | Name: Healthcare assistant
Preview: Just for checking
Tags: wellbeing

ID: 77 | Name: Math Tutor
Preview: You are a friendly math tutor, explain concept step by step for better understanding.
Tags: Mathematics, Tutor

ID: 80 | Name: mental_health_support
Preview: You are a compassionate mental health support assistant. Provide empathetic and supportive responses...
Tags: mental_health, support, wellbeing

ID: 81 | Name: coding_assistant
Preview: You are an expert programming assistant. Help users with coding questions, algorithm design, debuggi...
Tags: programming, coding, algorithms

ID: 82 | Name: cooking_assistant
Preview: You are a professional chef and cooking instructor. Provide detailed recipes, cooking tips, and tech...
Tags: cooking, recipes, baking

ID: 83 | Name: tech_support
Preview: You are a technical support specialist. Help users troubleshoot hardware, software, and network issu...
Tags: tech_support, troubleshooting, it

        
        RESPONSE FORMAT:
        Return ONLY the numeric ID of the most relevant prompt, or 'none' if none match.
        Example: "42" or "none"
        
        YOUR RESPONSE (ID only):
2025-09-03 15:09:06,812 - prompt_manager.app.crud.crud - INFO - Initializing GROQ client...
2025-09-03 15:09:06,826 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-09-03 15:09:06,833 - httpx - DEBUG - load_verify_locations cafile='/Applications/anaconda3/lib/python3.11/site-packages/certifi/cacert.pem'
2025-09-03 15:09:06,860 - prompt_manager.app.crud.crud - INFO - Sending request to GROQ API...
2025-09-03 15:09:06,861 - groq._base_client - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an expert at matching user queries to the most appropriate system prompt. \n        Your goal is to analyze the user\'s input and select the single most relevant prompt ID from the provided list.\n        \n        MATCHING GUIDELINES:\n        1. For coding/technical questions (Python, algorithms, programming), choose the coding assistant prompt.\n        2. For internet/connection/tech issues, choose the tech support prompt.\n        3. For mental health/stress/anxiety concerns, choose the mental health support prompt.\n        4. For cooking/recipes/food questions, choose the cooking assistant prompt.\n        \n        INSTRUCTIONS:\n        1. Carefully read the user\'s input and identify the main topic/domain.\n        2. Review all available prompts and their metadata (name, tags, content preview).\n        3. Select the prompt that best matches the user\'s intent and domain.\n        4. Consider both the content and the context of the query.\n        5. If the query is ambiguous but could match multiple domains, choose the most likely one.\n        \n        RESPONSE FORMAT:\n        - Return ONLY the numeric ID of the selected prompt (e.g., "42").\n        - If no prompt is relevant, return "none".\n        - DO NOT include any other text or explanation in your response.\n        \n        IMPORTANT: Focus on the user\'s intent and choose the most appropriate prompt, even if the match isn\'t perfect.\n        '}, {'role': 'user', 'content': 'USER INPUT:\n        My head hurts, what to do?\n\n        \n        AVAILABLE PROMPTS (ID, Name, Content Preview):\n        \nID: 28 | Name: marketing\nPreview: Testing\nTags: testing\n\nID: 31 | Name: test_live_version_sync\nPreview: Second version content\nTags: test\n\nID: 33 | Name: debug_live_test\nPreview: Debug content v2\nTags: debug\n\nID: 37 | Name: test_active_validation\nPreview: First version\nTags: test\n\nID: 38 | Name: test_auto_status\nPreview: Testing auto status\nTags: test\n\nID: 40 | Name: test_constraint\nPreview: First active version\nTags: test\n\nID: 43 | Name: endpoint_test\nPreview: Updated final test\nTags: test\n\nID: 45 | Name: final_test\nPreview: Final test\n\nID: 49 | Name: full_test_prompt\nPreview: Initial content for the full test.\nTags: testing, full-flow\n\nID: 55 | Name: lifecycle_test_final\nPreview: Lifecycle test v2.0.0\nTags: lifecycle\n\nID: 62 | Name: code\nPreview: Update for Debugger\nTags: suggestion\n\nID: 69 | Name: Healthcare assistant\nPreview: Just for checking\nTags: wellbeing\n\nID: 77 | Name: Math Tutor\nPreview: You are a friendly math tutor, explain concept step by step for better understanding.\nTags: Mathematics, Tutor\n\nID: 80 | Name: mental_health_support\nPreview: You are a compassionate mental health support assistant. Provide empathetic and supportive responses...\nTags: mental_health, support, wellbeing\n\nID: 81 | Name: coding_assistant\nPreview: You are an expert programming assistant. Help users with coding questions, algorithm design, debuggi...\nTags: programming, coding, algorithms\n\nID: 82 | Name: cooking_assistant\nPreview: You are a professional chef and cooking instructor. Provide detailed recipes, cooking tips, and tech...\nTags: cooking, recipes, baking\n\nID: 83 | Name: tech_support\nPreview: You are a technical support specialist. Help users troubleshoot hardware, software, and network issu...\nTags: tech_support, troubleshooting, it\n\n        \n        RESPONSE FORMAT:\n        Return ONLY the numeric ID of the most relevant prompt, or \'none\' if none match.\n        Example: "42" or "none"\n        \n        YOUR RESPONSE (ID only):'}], 'model': 'llama-3.1-8b-instant', 'max_tokens': 10, 'temperature': 0.3}}
2025-09-03 15:09:06,954 - httpcore.connection - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-09-03 15:09:07,112 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1134779d0>
2025-09-03 15:09:07,112 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x113311be0> server_hostname='api.groq.com' timeout=5.0
2025-09-03 15:09:07,183 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x11347c890>
2025-09-03 15:09:07,184 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-03 15:09:07,184 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-09-03 15:09:07,184 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-03 15:09:07,185 - httpcore.http11 - DEBUG - send_request_body.complete
2025-09-03 15:09:07,185 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-03 15:09:07,964 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 03 Sep 2025 09:39:07 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Content-Encoding', b'br'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'bom'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'5115'), (b'x-ratelimit-reset-requests', b'6s'), (b'x-ratelimit-reset-tokens', b'8.85s'), (b'x-request-id', b'req_01k47f3eyce599z47jmrdn49w9'), (b'via', b'1.1 google'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=aNK09NwD18n4At9k1AJApzEeXYe5rj.oiIeMcGUylSk-1756892347-1.0.1.1-OTJKwSyeIMBsmVggd0wSazpOGM7QiNQn24ZG7J7yIj1yKGHvqVX0tuDX8X0Yh_4nv0aZd5ZqYz2cDh6mFo1AB.SxzeiAtv5l6umFpC9MOFA; path=/; expires=Wed, 03-Sep-25 10:09:07 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'979447329b8a0e67-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-03 15:09:07,965 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 15:09:07,968 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-03 15:09:07,968 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-09-03 15:09:07,968 - httpcore.http11 - DEBUG - response_closed.started
2025-09-03 15:09:07,968 - httpcore.http11 - DEBUG - response_closed.complete
2025-09-03 15:09:07,969 - groq._base_client - DEBUG - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
2025-09-03 15:09:07,974 - prompt_manager.app.crud.crud - INFO - Received response from GROQ API
2025-09-03 15:09:07,974 - prompt_manager.app.crud.crud - DEBUG - GROQ API response: ChatCompletion(choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChoiceMessage(content='80', role='assistant', tool_calls=None))], id='chatcmpl-a6a438d9-f63c-4c51-a5fb-efd4242d8b1d', created=1756892347, model='llama-3.1-8b-instant', object='chat.completion', system_fingerprint='fp_c40956ddc4', usage=Usage(completion_time=0.006670718, completion_tokens=2, prompt_time=0.064882909, prompt_tokens=838, total_time=0.071553627, total_tokens=840, queue_time=0.383002941), usage_breakdown=None, x_groq={'id': 'req_01k47f3eyce599z47jmrdn49w9'}, service_tier='on_demand')
2025-09-03 15:09:07,974 - prompt_manager.app.crud.crud - INFO - LLM raw response: 80 for input: My head hurts, what to do?

2025-09-03 15:09:07,974 - prompt_manager.app.crud.crud - INFO - Extracted prompt ID: 80
2025-09-03 15:09:07,976 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.id = ? AND prompts.status = ? AND prompts.is_active = 1
 LIMIT ? OFFSET ?
2025-09-03 15:09:07,976 - sqlalchemy.engine.Engine - INFO - [generated in 0.00025s] (80, 'active', 1, 0)
2025-09-03 15:09:07,977 - prompt_manager.app.crud.crud - INFO - Valid active prompt found: ID=80, Name=mental_health_support
2025-09-03 15:09:07,977 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.id = ?
 LIMIT ? OFFSET ?
2025-09-03 15:09:07,978 - sqlalchemy.engine.Engine - INFO - [generated in 0.00015s] (80, 1, 0)
2025-09-03 15:09:07,978 - prompt_manager.app.api.v1.api - INFO - Testing persona for prompt ID 80 (user: prishatank6@gmail.com)
2025-09-03 15:09:07,978 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.id = ?
 LIMIT ? OFFSET ?
2025-09-03 15:09:07,978 - sqlalchemy.engine.Engine - INFO - [cached since 0.0007243s ago] (80, 1, 0)
2025-09-03 15:09:07,979 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-09-03 15:09:07,979 - httpx - DEBUG - load_verify_locations cafile='/Applications/anaconda3/lib/python3.11/site-packages/certifi/cacert.pem'
2025-09-03 15:09:08,001 - groq._base_client - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a compassionate mental health support assistant. Provide empathetic and supportive responses to users who may be experiencing stress, anxiety, or other mental health concerns. Offer helpful coping strategies and encourage professional help when appropriate.'}, {'role': 'user', 'content': 'My head hurts, what to do?\n'}], 'model': 'llama-3.1-8b-instant', 'max_tokens': 1000, 'temperature': 0.7}}
2025-09-03 15:09:08,001 - httpcore.connection - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-09-03 15:09:08,054 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x11348f110>
2025-09-03 15:09:08,054 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x113310e60> server_hostname='api.groq.com' timeout=5.0
2025-09-03 15:09:08,127 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x11348f1d0>
2025-09-03 15:09:08,127 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-03 15:09:08,128 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-09-03 15:09:08,128 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-03 15:09:08,128 - httpcore.http11 - DEBUG - send_request_body.complete
2025-09-03 15:09:08,128 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-03 15:09:08,698 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 03 Sep 2025 09:39:08 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Content-Encoding', b'br'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'bom'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14398'), (b'x-ratelimit-remaining-tokens', b'5126'), (b'x-ratelimit-reset-requests', b'11.054s'), (b'x-ratelimit-reset-tokens', b'8.74s'), (b'x-request-id', b'req_01k47f3fvzf2h9kre9as4pd7wq'), (b'via', b'1.1 google'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=aifzN.gM3huRRX7fZwkIpmoklL_ibtojAN4XCaXrqT0-1756892348-1.0.1.1-UOfpxlDPFNAgOAFr4ALaa7GeSD0ee6YZcDqDz2cJ0XYqVopWibur1Bmwc0AdcxKGE0yFYko1DbvodFjx77PdJgL3gNoHxrAEqAmY.DpR2d0; path=/; expires=Wed, 03-Sep-25 10:09:08 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9794473889b14001-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-03 15:09:08,700 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 15:09:08,700 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-03 15:09:08,701 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-09-03 15:09:08,701 - httpcore.http11 - DEBUG - response_closed.started
2025-09-03 15:09:08,702 - httpcore.http11 - DEBUG - response_closed.complete
2025-09-03 15:09:08,702 - groq._base_client - DEBUG - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
2025-09-03 15:09:08,705 - prompt_manager.app.api.v1.api - INFO - Generated persona response for prompt 'mental_health_support' with persona type 'dynamic_persona'
2025-09-03 15:09:08,706 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/test-persona Status: 200 Time: 1911.09ms
2025-09-03 15:09:08,708 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 15:09:08,708 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 15:09:08,708 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 15:09:08,708 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 15:09:08,709 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 15:12:45,460 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 15:12:45,585 - httpcore.connection - DEBUG - close.started
2025-09-03 15:12:45,589 - httpcore.connection - DEBUG - close.complete
2025-09-03 15:12:45,592 - httpcore.connection - DEBUG - close.started
2025-09-03 15:12:45,593 - httpcore.connection - DEBUG - close.complete
2025-09-03 15:12:47,509 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 15:12:47,510 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("users")
2025-09-03 15:12:47,510 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 15:12:47,511 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("prompts")
2025-09-03 15:12:47,511 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 15:12:47,511 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("prompt_history")
2025-09-03 15:12:47,511 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 15:12:47,512 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-09-03 15:12:47,546 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 15:12:47,546 - prompt_manager.app.main - INFO - Log level: DEBUG
2025-09-03 15:12:47,546 - prompt_manager.app.main - INFO - Database URL: sqlite:////Users/prisha/Desktop/Coding/system prompt/prompts.db
2025-09-03 15:13:29,328 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 15:13:29,335 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 7.07ms
2025-09-03 18:29:21,765 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 18:29:21,777 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 11.68ms
2025-09-03 18:29:21,785 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-03 18:29:21,790 - multipart.multipart - DEBUG - Calling on_field_start with no data
2025-09-03 18:29:21,790 - multipart.multipart - DEBUG - Calling on_field_name with data[0:8]
2025-09-03 18:29:21,791 - multipart.multipart - DEBUG - Calling on_field_data with data[9:32]
2025-09-03 18:29:21,791 - multipart.multipart - DEBUG - Calling on_field_end with no data
2025-09-03 18:29:21,791 - multipart.multipart - DEBUG - Calling on_field_start with no data
2025-09-03 18:29:21,791 - multipart.multipart - DEBUG - Calling on_field_name with data[33:41]
2025-09-03 18:29:21,792 - multipart.multipart - DEBUG - Calling on_field_data with data[42:50]
2025-09-03 18:29:21,792 - multipart.multipart - DEBUG - Calling on_field_end with no data
2025-09-03 18:29:21,792 - multipart.multipart - DEBUG - Calling on_end with no data
2025-09-03 18:29:21,796 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 18:29:21,798 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 18:29:21,832 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 18:29:21,835 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 18:29:21,835 - sqlalchemy.engine.Engine - INFO - [generated in 0.00024s] ('prishatank6@gmail.com', 1, 0)
2025-09-03 18:29:21,838 - passlib.handlers.bcrypt - DEBUG - detected 'bcrypt' backend, version '4.0.1'
2025-09-03 18:29:21,840 - passlib.handlers.bcrypt - DEBUG - 'bcrypt' backend lacks $2$ support, enabling workaround
2025-09-03 18:29:22,136 - prompt_manager.app.api.v1.endpoints.auth - INFO - Created access token for user: prishatank6@gmail.com
2025-09-03 18:29:22,148 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 200 Time: 362.45ms
2025-09-03 18:29:22,148 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 18:29:22,148 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 18:29:22,148 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 18:29:22,149 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 18:29:22,219 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 18:29:22,220 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.34ms
2025-09-03 18:29:23,524 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 18:29:23,525 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.71ms
2025-09-03 18:29:43,803 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 18:29:43,815 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 18:29:43,818 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 15.7ms
2025-09-03 18:29:43,819 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 4.05ms
2025-09-03 18:29:43,899 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/test-persona
2025-09-03 18:29:43,901 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 18:29:43,901 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 18:29:43,901 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 18:29:43,902 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 18:29:43,902 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 18:29:43,902 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 18:29:43,902 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 18:29:43,905 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 18:29:43,906 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 12:59:22+00:00 (UTC)
2025-09-03 18:29:43,906 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 18:29:43,906 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 18:29:43,911 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 18:29:43,911 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 18:29:43,911 - sqlalchemy.engine.Engine - INFO - [cached since 22.08s ago] ('prishatank6@gmail.com', 1, 0)
2025-09-03 18:29:43,912 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 14)
2025-09-03 18:29:43,912 - prompt_manager.app.api.v1.api - INFO - Testing persona with automatic prompt selection (user: prishatank6@gmail.com)
2025-09-03 18:29:43,912 - prompt_manager.app.crud.crud - INFO - Finding most relevant prompt for input: I want to learn to cook pasta!
2025-09-03 18:29:43,913 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 18:29:43,914 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.status = ? AND prompts.is_active = 1
2025-09-03 18:29:43,914 - sqlalchemy.engine.Engine - INFO - [generated in 0.00012s] ('active',)
2025-09-03 18:29:43,915 - prompt_manager.app.crud.crud - INFO - Found 17 active prompts in the database
2025-09-03 18:29:43,915 - prompt_manager.app.crud.crud - INFO - Active prompt 1: ID=28, Name=marketing, Status=active, is_active=True
2025-09-03 18:29:43,915 - prompt_manager.app.crud.crud - INFO - Active prompt 2: ID=31, Name=test_live_version_sync, Status=active, is_active=True
2025-09-03 18:29:43,915 - prompt_manager.app.crud.crud - INFO - Active prompt 3: ID=33, Name=debug_live_test, Status=active, is_active=True
2025-09-03 18:29:43,915 - prompt_manager.app.crud.crud - INFO - Active prompt 4: ID=37, Name=test_active_validation, Status=active, is_active=True
2025-09-03 18:29:43,915 - prompt_manager.app.crud.crud - INFO - Active prompt 5: ID=38, Name=test_auto_status, Status=active, is_active=True
2025-09-03 18:29:43,915 - prompt_manager.app.crud.crud - INFO - Active prompt 6: ID=40, Name=test_constraint, Status=active, is_active=True
2025-09-03 18:29:43,915 - prompt_manager.app.crud.crud - INFO - Active prompt 7: ID=43, Name=endpoint_test, Status=active, is_active=True
2025-09-03 18:29:43,915 - prompt_manager.app.crud.crud - INFO - Active prompt 8: ID=45, Name=final_test, Status=active, is_active=True
2025-09-03 18:29:43,915 - prompt_manager.app.crud.crud - INFO - Active prompt 9: ID=49, Name=full_test_prompt, Status=active, is_active=True
2025-09-03 18:29:43,915 - prompt_manager.app.crud.crud - INFO - Active prompt 10: ID=55, Name=lifecycle_test_final, Status=active, is_active=True
2025-09-03 18:29:43,915 - prompt_manager.app.crud.crud - INFO - Active prompt 11: ID=62, Name=code, Status=active, is_active=True
2025-09-03 18:29:43,915 - prompt_manager.app.crud.crud - INFO - Active prompt 12: ID=69, Name=Healthcare assistant, Status=active, is_active=True
2025-09-03 18:29:43,916 - prompt_manager.app.crud.crud - INFO - Active prompt 13: ID=77, Name=Math Tutor, Status=active, is_active=True
2025-09-03 18:29:43,916 - prompt_manager.app.crud.crud - INFO - Active prompt 14: ID=80, Name=mental_health_support, Status=active, is_active=True
2025-09-03 18:29:43,916 - prompt_manager.app.crud.crud - INFO - Active prompt 15: ID=81, Name=coding_assistant, Status=active, is_active=True
2025-09-03 18:29:43,916 - prompt_manager.app.crud.crud - INFO - Active prompt 16: ID=82, Name=cooking_assistant, Status=active, is_active=True
2025-09-03 18:29:43,916 - prompt_manager.app.crud.crud - INFO - Active prompt 17: ID=83, Name=tech_support, Status=active, is_active=True
2025-09-03 18:29:43,916 - prompt_manager.app.crud.crud - INFO - Sending 17 prompts to LLM for analysis
2025-09-03 18:29:43,916 - prompt_manager.app.crud.crud - DEBUG - System prompt: You are an expert at matching user queries to the most appropriate system prompt. 
        Your goal is to analyze the user's input and select the single most relevant prompt ID from the provided list.
        
        MATCHING GUIDELINES:
        1. For coding/technical questions (Python, algorithms, programming), choose the coding assistant prompt.
        2. For internet/connection/tech issues, choose the tech support prompt.
        3. For mental health/stress/anxiety concerns, choose the mental health support prompt.
        4. For cooking/recipes/food questions, choose the cooking assistant prompt.
        
        INSTRUCTIONS:
        1. Carefully read the user's input and identify the main topic/domain.
        2. Review all available prompts and their metadata (name, tags, content preview).
        3. Select the prompt that best matches the user's intent and domain.
        4. Consider both the content and the context of the query.
        5. If the query is ambiguous but could match multiple domains, choose the most likely one.
        
        RESPONSE FORMAT:
        - Return ONLY the numeric ID of the selected prompt (e.g., "42").
        - If no prompt is relevant, return "none".
        - DO NOT include any other text or explanation in your response.
        
        IMPORTANT: Focus on the user's intent and choose the most appropriate prompt, even if the match isn't perfect.
        
2025-09-03 18:29:43,916 - prompt_manager.app.crud.crud - DEBUG - User message: USER INPUT:
        I want to learn to cook pasta!
        
        AVAILABLE PROMPTS (ID, Name, Content Preview):
        
ID: 28 | Name: marketing
Preview: Testing
Tags: testing

ID: 31 | Name: test_live_version_sync
Preview: Second version content
Tags: test

ID: 33 | Name: debug_live_test
Preview: Debug content v2
Tags: debug

ID: 37 | Name: test_active_validation
Preview: First version
Tags: test

ID: 38 | Name: test_auto_status
Preview: Testing auto status
Tags: test

ID: 40 | Name: test_constraint
Preview: First active version
Tags: test

ID: 43 | Name: endpoint_test
Preview: Updated final test
Tags: test

ID: 45 | Name: final_test
Preview: Final test

ID: 49 | Name: full_test_prompt
Preview: Initial content for the full test.
Tags: testing, full-flow

ID: 55 | Name: lifecycle_test_final
Preview: Lifecycle test v2.0.0
Tags: lifecycle

ID: 62 | Name: code
Preview: Update for Debugger
Tags: suggestion

ID: 69 | Name: Healthcare assistant
Preview: Just for checking
Tags: wellbeing

ID: 77 | Name: Math Tutor
Preview: You are a friendly math tutor, explain concept step by step for better understanding.
Tags: Mathematics, Tutor

ID: 80 | Name: mental_health_support
Preview: You are a compassionate mental health support assistant. Provide empathetic and supportive responses...
Tags: mental_health, support, wellbeing

ID: 81 | Name: coding_assistant
Preview: You are an expert programming assistant. Help users with coding questions, algorithm design, debuggi...
Tags: programming, coding, algorithms

ID: 82 | Name: cooking_assistant
Preview: You are a professional chef and cooking instructor. Provide detailed recipes, cooking tips, and tech...
Tags: cooking, recipes, baking

ID: 83 | Name: tech_support
Preview: You are a technical support specialist. Help users troubleshoot hardware, software, and network issu...
Tags: tech_support, troubleshooting, it

        
        RESPONSE FORMAT:
        Return ONLY the numeric ID of the most relevant prompt, or 'none' if none match.
        Example: "42" or "none"
        
        YOUR RESPONSE (ID only):
2025-09-03 18:29:43,916 - prompt_manager.app.crud.crud - INFO - Initializing GROQ client...
2025-09-03 18:29:43,937 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-09-03 18:29:43,942 - httpx - DEBUG - load_verify_locations cafile='/Applications/anaconda3/lib/python3.11/site-packages/certifi/cacert.pem'
2025-09-03 18:29:43,960 - prompt_manager.app.crud.crud - INFO - Sending request to GROQ API...
2025-09-03 18:29:43,961 - groq._base_client - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an expert at matching user queries to the most appropriate system prompt. \n        Your goal is to analyze the user\'s input and select the single most relevant prompt ID from the provided list.\n        \n        MATCHING GUIDELINES:\n        1. For coding/technical questions (Python, algorithms, programming), choose the coding assistant prompt.\n        2. For internet/connection/tech issues, choose the tech support prompt.\n        3. For mental health/stress/anxiety concerns, choose the mental health support prompt.\n        4. For cooking/recipes/food questions, choose the cooking assistant prompt.\n        \n        INSTRUCTIONS:\n        1. Carefully read the user\'s input and identify the main topic/domain.\n        2. Review all available prompts and their metadata (name, tags, content preview).\n        3. Select the prompt that best matches the user\'s intent and domain.\n        4. Consider both the content and the context of the query.\n        5. If the query is ambiguous but could match multiple domains, choose the most likely one.\n        \n        RESPONSE FORMAT:\n        - Return ONLY the numeric ID of the selected prompt (e.g., "42").\n        - If no prompt is relevant, return "none".\n        - DO NOT include any other text or explanation in your response.\n        \n        IMPORTANT: Focus on the user\'s intent and choose the most appropriate prompt, even if the match isn\'t perfect.\n        '}, {'role': 'user', 'content': 'USER INPUT:\n        I want to learn to cook pasta!\n        \n        AVAILABLE PROMPTS (ID, Name, Content Preview):\n        \nID: 28 | Name: marketing\nPreview: Testing\nTags: testing\n\nID: 31 | Name: test_live_version_sync\nPreview: Second version content\nTags: test\n\nID: 33 | Name: debug_live_test\nPreview: Debug content v2\nTags: debug\n\nID: 37 | Name: test_active_validation\nPreview: First version\nTags: test\n\nID: 38 | Name: test_auto_status\nPreview: Testing auto status\nTags: test\n\nID: 40 | Name: test_constraint\nPreview: First active version\nTags: test\n\nID: 43 | Name: endpoint_test\nPreview: Updated final test\nTags: test\n\nID: 45 | Name: final_test\nPreview: Final test\n\nID: 49 | Name: full_test_prompt\nPreview: Initial content for the full test.\nTags: testing, full-flow\n\nID: 55 | Name: lifecycle_test_final\nPreview: Lifecycle test v2.0.0\nTags: lifecycle\n\nID: 62 | Name: code\nPreview: Update for Debugger\nTags: suggestion\n\nID: 69 | Name: Healthcare assistant\nPreview: Just for checking\nTags: wellbeing\n\nID: 77 | Name: Math Tutor\nPreview: You are a friendly math tutor, explain concept step by step for better understanding.\nTags: Mathematics, Tutor\n\nID: 80 | Name: mental_health_support\nPreview: You are a compassionate mental health support assistant. Provide empathetic and supportive responses...\nTags: mental_health, support, wellbeing\n\nID: 81 | Name: coding_assistant\nPreview: You are an expert programming assistant. Help users with coding questions, algorithm design, debuggi...\nTags: programming, coding, algorithms\n\nID: 82 | Name: cooking_assistant\nPreview: You are a professional chef and cooking instructor. Provide detailed recipes, cooking tips, and tech...\nTags: cooking, recipes, baking\n\nID: 83 | Name: tech_support\nPreview: You are a technical support specialist. Help users troubleshoot hardware, software, and network issu...\nTags: tech_support, troubleshooting, it\n\n        \n        RESPONSE FORMAT:\n        Return ONLY the numeric ID of the most relevant prompt, or \'none\' if none match.\n        Example: "42" or "none"\n        \n        YOUR RESPONSE (ID only):'}], 'model': 'llama-3.1-8b-instant', 'max_tokens': 10, 'temperature': 0.3}}
2025-09-03 18:29:44,293 - httpcore.connection - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-09-03 18:29:44,552 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1066775d0>
2025-09-03 18:29:44,552 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x106511be0> server_hostname='api.groq.com' timeout=5.0
2025-09-03 18:29:44,619 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x106677850>
2025-09-03 18:29:44,620 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-03 18:29:44,620 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-09-03 18:29:44,620 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-03 18:29:44,620 - httpcore.http11 - DEBUG - send_request_body.complete
2025-09-03 18:29:44,620 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-03 18:29:45,030 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 03 Sep 2025 12:59:44 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Content-Encoding', b'br'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'bom'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'5115'), (b'x-ratelimit-reset-requests', b'6s'), (b'x-ratelimit-reset-tokens', b'8.85s'), (b'x-request-id', b'req_01k47tjt6jf9c9z78xg2zrxnc5'), (b'via', b'1.1 google'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=ztHHmfvBWXqOalWfOBvVxAI0TlqERwQZiN_kqreKr68-1756904384-1.0.1.1-ngDxD62qMOAxg53aOV6Tr7xuNOjeFSmMUyGg_47PbhxvsgvBVjeYpTGh5KXb1giRWz81JymNnhsCZLCz4VplxrP5FC1vkXUAxqYjsNy_f7I; path=/; expires=Wed, 03-Sep-25 13:29:44 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'97956d140bad1474-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-03 18:29:45,031 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 18:29:45,033 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-03 18:29:45,033 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-09-03 18:29:45,034 - httpcore.http11 - DEBUG - response_closed.started
2025-09-03 18:29:45,034 - httpcore.http11 - DEBUG - response_closed.complete
2025-09-03 18:29:45,034 - groq._base_client - DEBUG - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
2025-09-03 18:29:45,039 - prompt_manager.app.crud.crud - INFO - Received response from GROQ API
2025-09-03 18:29:45,039 - prompt_manager.app.crud.crud - DEBUG - GROQ API response: ChatCompletion(choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChoiceMessage(content='82', role='assistant', tool_calls=None))], id='chatcmpl-67283773-206a-4063-9861-72d01ae4b34a', created=1756904384, model='llama-3.1-8b-instant', object='chat.completion', system_fingerprint='fp_c40956ddc4', usage=Usage(completion_time=0.00389785, completion_tokens=2, prompt_time=0.05570672, prompt_tokens=838, total_time=0.05960457, total_tokens=840, queue_time=0.051470209), usage_breakdown=None, x_groq={'id': 'req_01k47tjt6jf9c9z78xg2zrxnc5'}, service_tier='on_demand')
2025-09-03 18:29:45,039 - prompt_manager.app.crud.crud - INFO - LLM raw response: 82 for input: I want to learn to cook pasta!
2025-09-03 18:29:45,040 - prompt_manager.app.crud.crud - INFO - Extracted prompt ID: 82
2025-09-03 18:29:45,041 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.id = ? AND prompts.status = ? AND prompts.is_active = 1
 LIMIT ? OFFSET ?
2025-09-03 18:29:45,041 - sqlalchemy.engine.Engine - INFO - [generated in 0.00025s] (82, 'active', 1, 0)
2025-09-03 18:29:45,042 - prompt_manager.app.crud.crud - INFO - Valid active prompt found: ID=82, Name=cooking_assistant
2025-09-03 18:29:45,042 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.id = ?
 LIMIT ? OFFSET ?
2025-09-03 18:29:45,042 - sqlalchemy.engine.Engine - INFO - [generated in 0.00014s] (82, 1, 0)
2025-09-03 18:29:45,043 - prompt_manager.app.api.v1.api - INFO - Testing persona for prompt ID 82 (user: prishatank6@gmail.com)
2025-09-03 18:29:45,043 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.id = ?
 LIMIT ? OFFSET ?
2025-09-03 18:29:45,043 - sqlalchemy.engine.Engine - INFO - [cached since 0.0006605s ago] (82, 1, 0)
2025-09-03 18:29:45,044 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-09-03 18:29:45,044 - httpx - DEBUG - load_verify_locations cafile='/Applications/anaconda3/lib/python3.11/site-packages/certifi/cacert.pem'
2025-09-03 18:29:45,063 - groq._base_client - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a professional chef and cooking instructor. Provide detailed recipes, cooking tips, and techniques. Help users with meal planning, ingredient substitutions, and troubleshooting cooking problems.'}, {'role': 'user', 'content': 'I want to learn to cook pasta!'}], 'model': 'llama-3.1-8b-instant', 'max_tokens': 1000, 'temperature': 0.7}}
2025-09-03 18:29:45,064 - httpcore.connection - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-09-03 18:29:45,110 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10668b050>
2025-09-03 18:29:45,110 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x106510e60> server_hostname='api.groq.com' timeout=5.0
2025-09-03 18:29:45,174 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10668b190>
2025-09-03 18:29:45,174 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-03 18:29:45,174 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-09-03 18:29:45,174 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-03 18:29:45,174 - httpcore.http11 - DEBUG - send_request_body.complete
2025-09-03 18:29:45,175 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-03 18:29:46,257 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 03 Sep 2025 12:59:46 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Content-Encoding', b'br'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'bom'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14398'), (b'x-ratelimit-remaining-tokens', b'5131'), (b'x-ratelimit-reset-requests', b'11.488s'), (b'x-ratelimit-reset-tokens', b'8.681999999s'), (b'x-request-id', b'req_01k47tjtpmedh9p4qkwmdvnz4a'), (b'via', b'1.1 google'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=ynemoheXxmhubpccyPWMSdb24YKqxeDLXgmROdGcGxQ-1756904386-1.0.1.1-eUs9CkjiEQOUlslCpyV9avD_EiY77GsWT4d4YvW02vc8kuVfosKQaSzHfj5C5fQfSLT0t0IbDUQGv_ygpvVf5TI6.kJccmbSsBA7FtGZcec; path=/; expires=Wed, 03-Sep-25 13:29:46 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'97956d177a498eef-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-03 18:29:46,258 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 18:29:46,258 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-03 18:29:46,259 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-09-03 18:29:46,260 - httpcore.http11 - DEBUG - response_closed.started
2025-09-03 18:29:46,261 - httpcore.http11 - DEBUG - response_closed.complete
2025-09-03 18:29:46,261 - groq._base_client - DEBUG - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
2025-09-03 18:29:46,267 - prompt_manager.app.api.v1.api - INFO - Generated persona response for prompt 'cooking_assistant' with persona type 'dynamic_persona'
2025-09-03 18:29:46,268 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/test-persona Status: 200 Time: 2368.22ms
2025-09-03 18:29:46,269 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 18:29:46,269 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 18:29:46,269 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 18:29:46,269 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 18:29:46,270 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 18:34:20,741 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 18:34:20,746 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 5.68ms
2025-09-03 18:34:20,760 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 18:34:20,763 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 18:34:20,763 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 18:34:20,764 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 18:34:20,764 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 18:34:20,764 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 18:34:20,764 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 18:34:20,764 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 18:34:20,765 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 18:34:20,765 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 12:59:22+00:00 (UTC)
2025-09-03 18:34:20,765 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 18:34:20,765 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 18:34:20,769 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 18:34:20,770 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 18:34:20,771 - sqlalchemy.engine.Engine - INFO - [cached since 298.9s ago] ('prishatank6@gmail.com', 1, 0)
2025-09-03 18:34:20,772 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 14)
2025-09-03 18:34:20,773 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 18:34:20,774 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 18:34:20,781 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts) AS anon_1
2025-09-03 18:34:20,782 - sqlalchemy.engine.Engine - INFO - [generated in 0.00044s] ()
2025-09-03 18:34:20,785 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts ORDER BY prompts.updated_at DESC
 LIMIT ? OFFSET ?
2025-09-03 18:34:20,785 - sqlalchemy.engine.Engine - INFO - [generated in 0.00032s] (100, 0)
2025-09-03 18:34:20,788 - prompt_manager.app.api.v1.api - INFO - Found 81 prompts out of 81 total
2025-09-03 18:34:20,792 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 32.47ms
2025-09-03 18:34:20,794 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 18:34:20,794 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 18:34:20,794 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 18:34:20,795 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 18:34:20,795 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 18:35:13,125 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 18:35:13,134 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 9.0ms
2025-09-03 18:35:23,511 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 18:35:23,512 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.3ms
2025-09-03 18:35:28,165 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 18:35:28,166 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 18:35:28,167 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.51ms
2025-09-03 18:35:28,167 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.94ms
2025-09-03 18:35:28,211 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/name/Healthcare Advisor/version/1.0.1/activate
2025-09-03 18:35:28,212 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 18:35:28,212 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 18:35:28,213 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 18:35:28,213 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 18:35:28,213 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 18:35:28,213 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 18:35:28,213 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 18:35:28,216 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 18:35:28,216 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 12:59:22+00:00 (UTC)
2025-09-03 18:35:28,216 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 18:35:28,216 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 18:35:28,223 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 18:35:28,224 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 18:35:28,224 - sqlalchemy.engine.Engine - INFO - [cached since 366.4s ago] ('prishatank6@gmail.com', 1, 0)
2025-09-03 18:35:28,225 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 14)
2025-09-03 18:35:28,226 - prompt_manager.app.api.v1.api - INFO - Setting active version for prompt 'Healthcare Advisor' to version 1.0.1 (user: prishatank6@gmail.com)
2025-09-03 18:35:28,226 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 18:35:28,227 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.name = ? AND prompts.version = ?
 LIMIT ? OFFSET ?
2025-09-03 18:35:28,227 - sqlalchemy.engine.Engine - INFO - [generated in 0.00018s] ('Healthcare Advisor', '1.0.1', 1, 0)
2025-09-03 18:35:28,228 - prompt_manager.app.api.v1.api - INFO - Setting prompt 'Healthcare Advisor' version 1.0.1 as live version
2025-09-03 18:35:28,229 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.name = ? AND prompts.is_active = 1 AND prompts.id != ?
 LIMIT ? OFFSET ?
2025-09-03 18:35:28,229 - sqlalchemy.engine.Engine - INFO - [generated in 0.00012s] ('Healthcare Advisor', 79, 1, 0)
2025-09-03 18:35:28,229 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.id = ?
 LIMIT ? OFFSET ?
2025-09-03 18:35:28,229 - sqlalchemy.engine.Engine - INFO - [cached since 343.2s ago] (79, 1, 0)
2025-09-03 18:35:28,232 - sqlalchemy.engine.Engine - INFO - UPDATE prompts SET status=?, is_active=?, updated_at=? WHERE prompts.id = ?
2025-09-03 18:35:28,232 - sqlalchemy.engine.Engine - INFO - [generated in 0.00021s] ('active', 1, '2025-09-03 13:05:28.229570', 79)
2025-09-03 18:35:28,235 - sqlalchemy.engine.Engine - INFO - INSERT INTO prompt_history (prompt_id, version, content, description, status, tags, metadata, changed_by, changed_at, change_reason) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-09-03 18:35:28,235 - sqlalchemy.engine.Engine - INFO - [generated in 0.00020s] (79, '1.0.1', 'You are a virtual healthcare assistant. Give advise. Explain the medical terms in easy language.', 'Prompt for Healthcare advisor.', 'active', '["Healthcare", "wellness"]', '{"Category": "Healthcare"}', 'prishatank6@gmail.com', '2025-09-03 13:05:28.234950', 'set_as_live_version')
2025-09-03 18:35:28,236 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-09-03 18:35:28,237 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 18:35:28,237 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id, prompts.name, prompts.version, prompts.content, prompts.description, prompts.status, prompts.is_active, prompts.tags, prompts.metadata, prompts.created_by, prompts.created_at, prompts.updated_at 
FROM prompts 
WHERE prompts.id = ?
2025-09-03 18:35:28,237 - sqlalchemy.engine.Engine - INFO - [generated in 0.00009s] (79,)
2025-09-03 18:35:28,237 - prompt_manager.app.api.v1.api - INFO - Successfully set prompt 'Healthcare Advisor' version 1.0.1 as live version
2025-09-03 18:35:28,238 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/name/Healthcare Advisor/version/1.0.1/activate Status: 200 Time: 26.9ms
2025-09-03 18:35:28,238 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 18:35:28,238 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 18:35:28,238 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 18:35:28,238 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 18:35:28,239 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 18:35:45,053 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 18:35:45,057 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 18:35:45,057 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 4.7ms
2025-09-03 18:35:45,058 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.26ms
2025-09-03 18:35:45,137 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/name/Healthcare Advisor/version/1.0.0/activate
2025-09-03 18:35:45,138 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 18:35:45,138 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 18:35:45,138 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 18:35:45,138 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 18:35:45,138 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 18:35:45,138 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 18:35:45,138 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 18:35:45,139 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 18:35:45,139 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 12:59:22+00:00 (UTC)
2025-09-03 18:35:45,139 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 18:35:45,139 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 18:35:45,139 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 18:35:45,139 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 18:35:45,139 - sqlalchemy.engine.Engine - INFO - [cached since 383.3s ago] ('prishatank6@gmail.com', 1, 0)
2025-09-03 18:35:45,140 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 14)
2025-09-03 18:35:45,140 - prompt_manager.app.api.v1.api - INFO - Setting active version for prompt 'Healthcare Advisor' to version 1.0.0 (user: prishatank6@gmail.com)
2025-09-03 18:35:45,140 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 18:35:45,140 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.name = ? AND prompts.version = ?
 LIMIT ? OFFSET ?
2025-09-03 18:35:45,140 - sqlalchemy.engine.Engine - INFO - [cached since 16.91s ago] ('Healthcare Advisor', '1.0.0', 1, 0)
2025-09-03 18:35:45,141 - prompt_manager.app.api.v1.api - INFO - Setting prompt 'Healthcare Advisor' version 1.0.0 as live version
2025-09-03 18:35:45,141 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.name = ? AND prompts.is_active = 1 AND prompts.id != ?
 LIMIT ? OFFSET ?
2025-09-03 18:35:45,142 - sqlalchemy.engine.Engine - INFO - [cached since 16.91s ago] ('Healthcare Advisor', 78, 1, 0)
2025-09-03 18:35:45,142 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.id = ?
 LIMIT ? OFFSET ?
2025-09-03 18:35:45,142 - sqlalchemy.engine.Engine - INFO - [cached since 360.1s ago] (79, 1, 0)
2025-09-03 18:35:45,143 - sqlalchemy.engine.Engine - INFO - UPDATE prompts SET status=?, is_active=?, updated_at=? WHERE prompts.id = ?
2025-09-03 18:35:45,143 - sqlalchemy.engine.Engine - INFO - [cached since 16.91s ago] ('archived', 0, '2025-09-03 13:05:45.142386', 79)
2025-09-03 18:35:45,143 - sqlalchemy.engine.Engine - INFO - INSERT INTO prompt_history (prompt_id, version, content, description, status, tags, metadata, changed_by, changed_at, change_reason) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-09-03 18:35:45,143 - sqlalchemy.engine.Engine - INFO - [cached since 16.91s ago] (79, '1.0.1', 'You are a virtual healthcare assistant. Give advise. Explain the medical terms in easy language.', 'Prompt for Healthcare advisor.', 'archived', '["Healthcare", "wellness"]', '{"Category": "Healthcare"}', 'system', '2025-09-03 13:05:45.143728', "auto_archived: {'status': 'active -> archived', 'reason': 'replaced by v1.0.0'}")
2025-09-03 18:35:45,144 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-09-03 18:35:45,145 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 18:35:45,145 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at 
FROM prompts 
WHERE prompts.id = ?
2025-09-03 18:35:45,145 - sqlalchemy.engine.Engine - INFO - [generated in 0.00010s] (78,)
2025-09-03 18:35:45,146 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.id = ?
 LIMIT ? OFFSET ?
2025-09-03 18:35:45,146 - sqlalchemy.engine.Engine - INFO - [cached since 360.1s ago] (78, 1, 0)
2025-09-03 18:35:45,146 - sqlalchemy.engine.Engine - INFO - UPDATE prompts SET status=?, is_active=?, updated_at=? WHERE prompts.id = ?
2025-09-03 18:35:45,147 - sqlalchemy.engine.Engine - INFO - [cached since 16.91s ago] ('active', 1, '2025-09-03 13:05:45.145175', 78)
2025-09-03 18:35:45,147 - sqlalchemy.engine.Engine - INFO - INSERT INTO prompt_history (prompt_id, version, content, description, status, tags, metadata, changed_by, changed_at, change_reason) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-09-03 18:35:45,147 - sqlalchemy.engine.Engine - INFO - [cached since 16.91s ago] (78, '1.0.0', 'You are a virtual healthcare assistant. Give advise.', 'Prompt for Healthcare advisor.', 'active', '["Healthcare", "wellness"]', '{"Category": "Healthcare"}', 'prishatank6@gmail.com', '2025-09-03 13:05:45.147370', 'set_as_live_version')
2025-09-03 18:35:45,147 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-09-03 18:35:45,148 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 18:35:45,148 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id, prompts.name, prompts.version, prompts.content, prompts.description, prompts.status, prompts.is_active, prompts.tags, prompts.metadata, prompts.created_by, prompts.created_at, prompts.updated_at 
FROM prompts 
WHERE prompts.id = ?
2025-09-03 18:35:45,148 - sqlalchemy.engine.Engine - INFO - [cached since 16.91s ago] (78,)
2025-09-03 18:35:45,149 - prompt_manager.app.api.v1.api - INFO - Successfully set prompt 'Healthcare Advisor' version 1.0.0 as live version
2025-09-03 18:35:45,149 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/name/Healthcare Advisor/version/1.0.0/activate Status: 200 Time: 12.2ms
2025-09-03 18:35:45,150 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 18:35:45,150 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 18:35:45,150 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 18:35:45,150 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 18:35:45,151 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 18:35:49,809 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 18:35:49,810 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.8ms
2025-09-03 18:35:53,737 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 18:35:53,739 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.85ms
2025-09-03 18:35:55,158 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 18:35:55,159 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.72ms
2025-09-03 18:35:55,171 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/?status=archived
2025-09-03 18:35:55,174 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 18:35:55,174 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 18:35:55,175 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 18:35:55,175 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 18:35:55,175 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 18:35:55,175 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 18:35:55,175 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 18:35:55,176 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 18:35:55,176 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 12:59:22+00:00 (UTC)
2025-09-03 18:35:55,176 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 18:35:55,177 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 18:35:55,178 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 18:35:55,179 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 18:35:55,179 - sqlalchemy.engine.Engine - INFO - [cached since 393.4s ago] ('prishatank6@gmail.com', 1, 0)
2025-09-03 18:35:55,181 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 14)
2025-09-03 18:35:55,182 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=PromptStatus.ARCHIVED, tag=None
2025-09-03 18:35:55,183 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 18:35:55,187 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.status = ?) AS anon_1
2025-09-03 18:35:55,187 - sqlalchemy.engine.Engine - INFO - [generated in 0.00053s] ('archived',)
2025-09-03 18:35:55,190 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.status = ? ORDER BY prompts.updated_at DESC
 LIMIT ? OFFSET ?
2025-09-03 18:35:55,191 - sqlalchemy.engine.Engine - INFO - [generated in 0.00037s] ('archived', 100, 0)
2025-09-03 18:35:55,191 - prompt_manager.app.api.v1.api - INFO - Found 9 prompts out of 9 total
2025-09-03 18:35:55,192 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/?status=archived Status: 200 Time: 20.86ms
2025-09-03 18:35:55,193 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 18:35:55,193 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 18:35:55,193 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 18:35:55,193 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 18:35:55,193 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 18:36:13,505 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 18:36:13,517 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 12.28ms
2025-09-03 18:36:14,592 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 18:36:14,593 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.4ms
2025-09-03 18:38:08,287 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 18:38:08,291 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 4.49ms
2025-09-03 18:38:11,219 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 18:38:11,219 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.52ms
2025-09-03 18:38:11,225 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/1/history?skip=0&limit=10
2025-09-03 18:38:11,226 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 18:38:11,227 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 18:38:11,227 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 18:38:11,227 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 18:38:11,227 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 18:38:11,227 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 18:38:11,227 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 18:38:11,233 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 18:38:11,233 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 12:59:22+00:00 (UTC)
2025-09-03 18:38:11,233 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 18:38:11,233 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 18:38:11,237 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 18:38:11,239 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 18:38:11,240 - sqlalchemy.engine.Engine - INFO - [cached since 529.4s ago] ('prishatank6@gmail.com', 1, 0)
2025-09-03 18:38:11,241 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 14)
2025-09-03 18:38:11,244 - prompt_manager.app.api.v1.api - INFO - Retrieving history for prompt ID: 1
2025-09-03 18:38:11,245 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 18:38:11,246 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.id = ?
 LIMIT ? OFFSET ?
2025-09-03 18:38:11,246 - sqlalchemy.engine.Engine - INFO - [cached since 506.2s ago] (1, 1, 0)
2025-09-03 18:38:11,247 - prompt_manager.app.api.v1.api - WARNING - Prompt with ID 1 not found
2025-09-03 18:38:11,247 - prompt_manager.app.database - ERROR - Error in database session: Prompt not found
2025-09-03 18:38:11,247 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 18:38:11,247 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 18:38:11,248 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 18:38:11,249 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 18:38:11,251 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/1/history?skip=0&limit=10 Status: 404 Time: 25.95ms
2025-09-03 18:38:16,501 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 18:38:16,501 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.37ms
2025-09-03 18:38:16,544 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 18:38:16,545 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.73ms
2025-09-03 18:38:16,549 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/4/history?skip=0&limit=10
2025-09-03 18:38:16,549 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 18:38:16,549 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 18:38:16,549 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 18:38:16,549 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 18:38:16,549 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 18:38:16,549 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 18:38:16,549 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 18:38:16,550 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 18:38:16,550 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 12:59:22+00:00 (UTC)
2025-09-03 18:38:16,550 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 18:38:16,550 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 18:38:16,550 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 18:38:16,550 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 18:38:16,550 - sqlalchemy.engine.Engine - INFO - [cached since 534.7s ago] ('prishatank6@gmail.com', 1, 0)
2025-09-03 18:38:16,551 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 14)
2025-09-03 18:38:16,551 - prompt_manager.app.api.v1.api - INFO - Retrieving history for prompt ID: 4
2025-09-03 18:38:16,551 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 18:38:16,551 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.id = ?
 LIMIT ? OFFSET ?
2025-09-03 18:38:16,551 - sqlalchemy.engine.Engine - INFO - [cached since 511.5s ago] (4, 1, 0)
2025-09-03 18:38:16,554 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT prompt_history.id AS prompt_history_id, prompt_history.prompt_id AS prompt_history_prompt_id, prompt_history.version AS prompt_history_version, prompt_history.content AS prompt_history_content, prompt_history.description AS prompt_history_description, prompt_history.status AS prompt_history_status, prompt_history.tags AS prompt_history_tags, prompt_history.metadata AS prompt_history_metadata, prompt_history.changed_by AS prompt_history_changed_by, prompt_history.changed_at AS prompt_history_changed_at, prompt_history.change_reason AS prompt_history_change_reason 
FROM prompt_history 
WHERE prompt_history.prompt_id = ?) AS anon_1
2025-09-03 18:38:16,555 - sqlalchemy.engine.Engine - INFO - [generated in 0.00023s] (4,)
2025-09-03 18:38:16,558 - sqlalchemy.engine.Engine - INFO - SELECT prompt_history.id AS prompt_history_id, prompt_history.prompt_id AS prompt_history_prompt_id, prompt_history.version AS prompt_history_version, prompt_history.content AS prompt_history_content, prompt_history.description AS prompt_history_description, prompt_history.status AS prompt_history_status, prompt_history.tags AS prompt_history_tags, prompt_history.metadata AS prompt_history_metadata, prompt_history.changed_by AS prompt_history_changed_by, prompt_history.changed_at AS prompt_history_changed_at, prompt_history.change_reason AS prompt_history_change_reason 
FROM prompt_history 
WHERE prompt_history.prompt_id = ? ORDER BY prompt_history.changed_at DESC
 LIMIT ? OFFSET ?
2025-09-03 18:38:16,558 - sqlalchemy.engine.Engine - INFO - [generated in 0.00030s] (4, 10, 0)
2025-09-03 18:38:16,559 - prompt_manager.app.api.v1.api - INFO - Found 1 history items for prompt ID: 4
2025-09-03 18:38:16,561 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/4/history?skip=0&limit=10 Status: 200 Time: 12.91ms
2025-09-03 18:38:16,562 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 18:38:16,562 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 18:38:16,562 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 18:38:16,562 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 18:38:16,562 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 18:38:27,753 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 18:38:27,755 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 18:38:27,756 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 3.24ms
2025-09-03 18:38:27,757 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.61ms
2025-09-03 18:38:27,843 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/74/history?skip=0&limit=10
2025-09-03 18:38:27,844 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 18:38:27,844 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 18:38:27,845 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 18:38:27,845 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 18:38:27,845 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 18:38:27,845 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 18:38:27,845 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 18:38:27,845 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 18:38:27,845 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 12:59:22+00:00 (UTC)
2025-09-03 18:38:27,846 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 18:38:27,846 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 18:38:27,847 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 18:38:27,848 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 18:38:27,848 - sqlalchemy.engine.Engine - INFO - [cached since 546s ago] ('prishatank6@gmail.com', 1, 0)
2025-09-03 18:38:27,849 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 14)
2025-09-03 18:38:27,849 - prompt_manager.app.api.v1.api - INFO - Retrieving history for prompt ID: 74
2025-09-03 18:38:27,849 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 18:38:27,849 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.id = ?
 LIMIT ? OFFSET ?
2025-09-03 18:38:27,849 - sqlalchemy.engine.Engine - INFO - [cached since 522.8s ago] (74, 1, 0)
2025-09-03 18:38:27,850 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT prompt_history.id AS prompt_history_id, prompt_history.prompt_id AS prompt_history_prompt_id, prompt_history.version AS prompt_history_version, prompt_history.content AS prompt_history_content, prompt_history.description AS prompt_history_description, prompt_history.status AS prompt_history_status, prompt_history.tags AS prompt_history_tags, prompt_history.metadata AS prompt_history_metadata, prompt_history.changed_by AS prompt_history_changed_by, prompt_history.changed_at AS prompt_history_changed_at, prompt_history.change_reason AS prompt_history_change_reason 
FROM prompt_history 
WHERE prompt_history.prompt_id = ?) AS anon_1
2025-09-03 18:38:27,850 - sqlalchemy.engine.Engine - INFO - [cached since 11.3s ago] (74,)
2025-09-03 18:38:27,850 - sqlalchemy.engine.Engine - INFO - SELECT prompt_history.id AS prompt_history_id, prompt_history.prompt_id AS prompt_history_prompt_id, prompt_history.version AS prompt_history_version, prompt_history.content AS prompt_history_content, prompt_history.description AS prompt_history_description, prompt_history.status AS prompt_history_status, prompt_history.tags AS prompt_history_tags, prompt_history.metadata AS prompt_history_metadata, prompt_history.changed_by AS prompt_history_changed_by, prompt_history.changed_at AS prompt_history_changed_at, prompt_history.change_reason AS prompt_history_change_reason 
FROM prompt_history 
WHERE prompt_history.prompt_id = ? ORDER BY prompt_history.changed_at DESC
 LIMIT ? OFFSET ?
2025-09-03 18:38:27,850 - sqlalchemy.engine.Engine - INFO - [cached since 11.29s ago] (74, 10, 0)
2025-09-03 18:38:27,851 - prompt_manager.app.api.v1.api - INFO - Found 1 history items for prompt ID: 74
2025-09-03 18:38:27,851 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/74/history?skip=0&limit=10 Status: 200 Time: 8.56ms
2025-09-03 18:38:27,852 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 18:38:27,852 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 18:38:27,852 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 18:38:27,852 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 18:38:27,852 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 18:38:33,687 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 18:38:33,688 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.72ms
2025-09-03 18:38:33,736 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 18:38:33,737 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.51ms
2025-09-03 18:38:33,742 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/14/history?skip=0&limit=10
2025-09-03 18:38:33,743 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 18:38:33,743 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 18:38:33,743 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 18:38:33,744 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 18:38:33,744 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 18:38:33,744 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 18:38:33,744 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 18:38:33,744 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 18:38:33,744 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 12:59:22+00:00 (UTC)
2025-09-03 18:38:33,744 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 18:38:33,744 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 18:38:33,745 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 18:38:33,745 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 18:38:33,745 - sqlalchemy.engine.Engine - INFO - [cached since 551.9s ago] ('prishatank6@gmail.com', 1, 0)
2025-09-03 18:38:33,745 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 14)
2025-09-03 18:38:33,745 - prompt_manager.app.api.v1.api - INFO - Retrieving history for prompt ID: 14
2025-09-03 18:38:33,745 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 18:38:33,745 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.id = ?
 LIMIT ? OFFSET ?
2025-09-03 18:38:33,745 - sqlalchemy.engine.Engine - INFO - [cached since 528.7s ago] (14, 1, 0)
2025-09-03 18:38:33,746 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT prompt_history.id AS prompt_history_id, prompt_history.prompt_id AS prompt_history_prompt_id, prompt_history.version AS prompt_history_version, prompt_history.content AS prompt_history_content, prompt_history.description AS prompt_history_description, prompt_history.status AS prompt_history_status, prompt_history.tags AS prompt_history_tags, prompt_history.metadata AS prompt_history_metadata, prompt_history.changed_by AS prompt_history_changed_by, prompt_history.changed_at AS prompt_history_changed_at, prompt_history.change_reason AS prompt_history_change_reason 
FROM prompt_history 
WHERE prompt_history.prompt_id = ?) AS anon_1
2025-09-03 18:38:33,746 - sqlalchemy.engine.Engine - INFO - [cached since 17.19s ago] (14,)
2025-09-03 18:38:33,746 - sqlalchemy.engine.Engine - INFO - SELECT prompt_history.id AS prompt_history_id, prompt_history.prompt_id AS prompt_history_prompt_id, prompt_history.version AS prompt_history_version, prompt_history.content AS prompt_history_content, prompt_history.description AS prompt_history_description, prompt_history.status AS prompt_history_status, prompt_history.tags AS prompt_history_tags, prompt_history.metadata AS prompt_history_metadata, prompt_history.changed_by AS prompt_history_changed_by, prompt_history.changed_at AS prompt_history_changed_at, prompt_history.change_reason AS prompt_history_change_reason 
FROM prompt_history 
WHERE prompt_history.prompt_id = ? ORDER BY prompt_history.changed_at DESC
 LIMIT ? OFFSET ?
2025-09-03 18:38:33,746 - sqlalchemy.engine.Engine - INFO - [cached since 17.19s ago] (14, 10, 0)
2025-09-03 18:38:33,746 - prompt_manager.app.api.v1.api - INFO - Found 2 history items for prompt ID: 14
2025-09-03 18:38:33,747 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/14/history?skip=0&limit=10 Status: 200 Time: 4.7ms
2025-09-03 18:38:33,747 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 18:38:33,747 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 18:38:33,747 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 18:38:33,747 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 18:38:33,748 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 18:38:42,533 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 18:38:42,534 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.68ms
2025-09-03 18:38:44,036 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 18:38:44,037 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.15ms
2025-09-03 18:38:44,917 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 18:38:44,918 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.76ms
2025-09-03 18:41:40,636 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 18:41:40,723 - httpcore.connection - DEBUG - close.started
2025-09-03 18:41:40,727 - httpcore.connection - DEBUG - close.complete
2025-09-03 18:41:40,728 - httpcore.connection - DEBUG - close.started
2025-09-03 18:41:40,728 - httpcore.connection - DEBUG - close.complete
2025-09-03 18:41:42,016 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 18:41:42,016 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("users")
2025-09-03 18:41:42,016 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 18:41:42,017 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("prompts")
2025-09-03 18:41:42,017 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 18:41:42,017 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("prompt_history")
2025-09-03 18:41:42,017 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 18:41:42,017 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-09-03 18:41:42,045 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 18:41:42,045 - prompt_manager.app.main - INFO - Log level: DEBUG
2025-09-03 18:41:42,045 - prompt_manager.app.main - INFO - Database URL: sqlite:////Users/prisha/Desktop/Coding/system prompt/prompts.db
2025-09-03 18:42:52,307 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 18:42:52,310 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 3.55ms
2025-09-03 18:43:04,783 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 18:43:04,786 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 3.73ms
2025-09-03 18:43:04,795 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-03 18:43:04,797 - multipart.multipart - DEBUG - Calling on_field_start with no data
2025-09-03 18:43:04,797 - multipart.multipart - DEBUG - Calling on_field_name with data[0:8]
2025-09-03 18:43:04,798 - multipart.multipart - DEBUG - Calling on_field_data with data[9:32]
2025-09-03 18:43:04,798 - multipart.multipart - DEBUG - Calling on_field_end with no data
2025-09-03 18:43:04,798 - multipart.multipart - DEBUG - Calling on_field_start with no data
2025-09-03 18:43:04,798 - multipart.multipart - DEBUG - Calling on_field_name with data[33:41]
2025-09-03 18:43:04,798 - multipart.multipart - DEBUG - Calling on_field_data with data[42:50]
2025-09-03 18:43:04,799 - multipart.multipart - DEBUG - Calling on_field_end with no data
2025-09-03 18:43:04,799 - multipart.multipart - DEBUG - Calling on_end with no data
2025-09-03 18:43:04,800 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 18:43:04,801 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 18:43:04,815 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 18:43:04,817 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 18:43:04,818 - sqlalchemy.engine.Engine - INFO - [generated in 0.00022s] ('prishatank6@gmail.com', 1, 0)
2025-09-03 18:43:04,820 - passlib.handlers.bcrypt - DEBUG - detected 'bcrypt' backend, version '4.0.1'
2025-09-03 18:43:04,820 - passlib.handlers.bcrypt - DEBUG - 'bcrypt' backend lacks $2$ support, enabling workaround
2025-09-03 18:43:05,103 - prompt_manager.app.api.v1.endpoints.auth - INFO - Created access token for user: prishatank6@gmail.com
2025-09-03 18:43:05,109 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 200 Time: 313.26ms
2025-09-03 18:43:05,109 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 18:43:05,109 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 18:43:05,109 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 18:43:05,109 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 18:43:05,153 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 18:43:05,153 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.35ms
2025-09-03 18:43:07,190 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 18:43:07,191 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.85ms
2025-09-03 18:43:07,197 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/auth/me
2025-09-03 18:43:07,198 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 18:43:07,199 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 18:43:07,199 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 18:43:07,199 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 18:43:07,199 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 18:43:07,199 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 18:43:07,199 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 18:43:07,200 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 18:43:07,200 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 13:13:05+00:00 (UTC)
2025-09-03 18:43:07,200 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 18:43:07,200 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 18:43:07,201 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 18:43:07,203 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 18:43:07,204 - sqlalchemy.engine.Engine - INFO - [cached since 2.386s ago] ('prishatank6@gmail.com', 1, 0)
2025-09-03 18:43:07,205 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 14)
2025-09-03 18:43:07,205 - prompt_manager.app.api.v1.endpoints.auth - INFO - Current user: <prompt_manager.app.models.user.User object at 0x10d33d9d0>
2025-09-03 18:43:07,205 - prompt_manager.app.api.v1.endpoints.auth - INFO - Token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJwcmlzaGF0YW5rNkBnbWFpbC5jb20iLCJlbWFpbCI6InByaXNoYXRhbms2QGdtYWlsLmNvbSIsInVzZXJfaWQiOiIxNCIsInNjb3BlcyI6WyJtZSJdLCJleHAiOjE3NTY5OTE1ODUsImlhdCI6MTc1NjkwNTE4NSwibmJmIjoxNzU2OTA1MTg1LCJpc3MiOiJQcm9tcHQgTWFuYWdlbWVudCBTZXJ2aWNlIiwiYXVkIjoiUHJvbXB0IE1hbmFnZW1lbnQgU2VydmljZSJ9.YtJ3NpYL9k1F0eFTOeE7DpHSf46ib5pQWRh8Yl-Yqhs
2025-09-03 18:43:07,206 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/auth/me Status: 200 Time: 9.53ms
2025-09-03 18:43:07,207 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 18:43:07,207 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 18:43:07,208 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 18:43:07,208 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 18:43:08,952 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 18:43:08,952 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.8ms
2025-09-03 18:43:25,835 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 18:43:25,836 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.46ms
2025-09-03 18:43:25,894 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 18:43:25,895 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.64ms
2025-09-03 18:43:25,908 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/test-persona
2025-09-03 18:43:25,909 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 18:43:25,909 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 18:43:25,909 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 18:43:25,909 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 18:43:25,909 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 18:43:25,909 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 18:43:25,909 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 18:43:25,910 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 18:43:25,910 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 13:13:05+00:00 (UTC)
2025-09-03 18:43:25,910 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 18:43:25,910 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 18:43:25,910 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 18:43:25,911 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 18:43:25,911 - sqlalchemy.engine.Engine - INFO - [cached since 21.09s ago] ('prishatank6@gmail.com', 1, 0)
2025-09-03 18:43:25,911 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 14)
2025-09-03 18:43:25,911 - prompt_manager.app.api.v1.api - INFO - Testing persona with automatic prompt selection (user: prishatank6@gmail.com)
2025-09-03 18:43:25,911 - prompt_manager.app.crud.crud - INFO - Finding most relevant prompt for input: I want cook pasta, help me
2025-09-03 18:43:25,912 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 18:43:25,913 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.status = ? AND prompts.is_active = 1
2025-09-03 18:43:25,913 - sqlalchemy.engine.Engine - INFO - [generated in 0.00022s] ('active',)
2025-09-03 18:43:25,915 - prompt_manager.app.crud.crud - INFO - Found 18 active prompts in the database
2025-09-03 18:43:25,915 - prompt_manager.app.crud.crud - INFO - Active prompt 1: ID=28, Name=marketing, Status=active, is_active=True
2025-09-03 18:43:25,915 - prompt_manager.app.crud.crud - INFO - Active prompt 2: ID=31, Name=test_live_version_sync, Status=active, is_active=True
2025-09-03 18:43:25,915 - prompt_manager.app.crud.crud - INFO - Active prompt 3: ID=33, Name=debug_live_test, Status=active, is_active=True
2025-09-03 18:43:25,915 - prompt_manager.app.crud.crud - INFO - Active prompt 4: ID=37, Name=test_active_validation, Status=active, is_active=True
2025-09-03 18:43:25,915 - prompt_manager.app.crud.crud - INFO - Active prompt 5: ID=38, Name=test_auto_status, Status=active, is_active=True
2025-09-03 18:43:25,915 - prompt_manager.app.crud.crud - INFO - Active prompt 6: ID=40, Name=test_constraint, Status=active, is_active=True
2025-09-03 18:43:25,915 - prompt_manager.app.crud.crud - INFO - Active prompt 7: ID=43, Name=endpoint_test, Status=active, is_active=True
2025-09-03 18:43:25,915 - prompt_manager.app.crud.crud - INFO - Active prompt 8: ID=45, Name=final_test, Status=active, is_active=True
2025-09-03 18:43:25,915 - prompt_manager.app.crud.crud - INFO - Active prompt 9: ID=49, Name=full_test_prompt, Status=active, is_active=True
2025-09-03 18:43:25,915 - prompt_manager.app.crud.crud - INFO - Active prompt 10: ID=55, Name=lifecycle_test_final, Status=active, is_active=True
2025-09-03 18:43:25,915 - prompt_manager.app.crud.crud - INFO - Active prompt 11: ID=62, Name=code, Status=active, is_active=True
2025-09-03 18:43:25,915 - prompt_manager.app.crud.crud - INFO - Active prompt 12: ID=69, Name=Healthcare assistant, Status=active, is_active=True
2025-09-03 18:43:25,915 - prompt_manager.app.crud.crud - INFO - Active prompt 13: ID=77, Name=Math Tutor, Status=active, is_active=True
2025-09-03 18:43:25,915 - prompt_manager.app.crud.crud - INFO - Active prompt 14: ID=78, Name=Healthcare Advisor, Status=active, is_active=True
2025-09-03 18:43:25,915 - prompt_manager.app.crud.crud - INFO - Active prompt 15: ID=80, Name=mental_health_support, Status=active, is_active=True
2025-09-03 18:43:25,915 - prompt_manager.app.crud.crud - INFO - Active prompt 16: ID=81, Name=coding_assistant, Status=active, is_active=True
2025-09-03 18:43:25,915 - prompt_manager.app.crud.crud - INFO - Active prompt 17: ID=82, Name=cooking_assistant, Status=active, is_active=True
2025-09-03 18:43:25,915 - prompt_manager.app.crud.crud - INFO - Active prompt 18: ID=83, Name=tech_support, Status=active, is_active=True
2025-09-03 18:43:25,916 - prompt_manager.app.crud.crud - INFO - Sending 18 prompts to LLM for analysis
2025-09-03 18:43:25,916 - prompt_manager.app.crud.crud - DEBUG - System prompt: You are an expert at matching user queries to the most appropriate system prompt. 
        Your goal is to analyze the user's input and select the single most relevant prompt ID from the provided list.
        
        MATCHING GUIDELINES:
        1. For coding/technical questions (Python, algorithms, programming), choose the coding assistant prompt.
        2. For internet/connection/tech issues, choose the tech support prompt.
        3. For mental health/stress/anxiety concerns, choose the mental health support prompt.
        4. For cooking/recipes/food questions, choose the cooking assistant prompt.
        
        INSTRUCTIONS:
        1. Carefully read the user's input and identify the main topic/domain.
        2. Review all available prompts and their metadata (name, tags, content preview).
        3. Select the prompt that best matches the user's intent and domain.
        4. Consider both the content and the context of the query.
        5. If the query is ambiguous but could match multiple domains, choose the most likely one.
        
        RESPONSE FORMAT:
        - Return ONLY the numeric ID of the selected prompt (e.g., "42").
        - If no prompt is relevant, return "none".
        - DO NOT include any other text or explanation in your response.
        
        IMPORTANT: Focus on the user's intent and choose the most appropriate prompt, even if the match isn't perfect.
        
2025-09-03 18:43:25,916 - prompt_manager.app.crud.crud - DEBUG - User message: USER INPUT:
        I want cook pasta, help me
        
        AVAILABLE PROMPTS (ID, Name, Content Preview):
        
ID: 28 | Name: marketing
Preview: Testing
Tags: testing

ID: 31 | Name: test_live_version_sync
Preview: Second version content
Tags: test

ID: 33 | Name: debug_live_test
Preview: Debug content v2
Tags: debug

ID: 37 | Name: test_active_validation
Preview: First version
Tags: test

ID: 38 | Name: test_auto_status
Preview: Testing auto status
Tags: test

ID: 40 | Name: test_constraint
Preview: First active version
Tags: test

ID: 43 | Name: endpoint_test
Preview: Updated final test
Tags: test

ID: 45 | Name: final_test
Preview: Final test

ID: 49 | Name: full_test_prompt
Preview: Initial content for the full test.
Tags: testing, full-flow

ID: 55 | Name: lifecycle_test_final
Preview: Lifecycle test v2.0.0
Tags: lifecycle

ID: 62 | Name: code
Preview: Update for Debugger
Tags: suggestion

ID: 69 | Name: Healthcare assistant
Preview: Just for checking
Tags: wellbeing

ID: 77 | Name: Math Tutor
Preview: You are a friendly math tutor, explain concept step by step for better understanding.
Tags: Mathematics, Tutor

ID: 78 | Name: Healthcare Advisor
Preview: You are a virtual healthcare assistant. Give advise.
Tags: Healthcare, wellness

ID: 80 | Name: mental_health_support
Preview: You are a compassionate mental health support assistant. Provide empathetic and supportive responses...
Tags: mental_health, support, wellbeing

ID: 81 | Name: coding_assistant
Preview: You are an expert programming assistant. Help users with coding questions, algorithm design, debuggi...
Tags: programming, coding, algorithms

ID: 82 | Name: cooking_assistant
Preview: You are a professional chef and cooking instructor. Provide detailed recipes, cooking tips, and tech...
Tags: cooking, recipes, baking

ID: 83 | Name: tech_support
Preview: You are a technical support specialist. Help users troubleshoot hardware, software, and network issu...
Tags: tech_support, troubleshooting, it

        
        RESPONSE FORMAT:
        Return ONLY the numeric ID of the most relevant prompt, or 'none' if none match.
        Example: "42" or "none"
        
        YOUR RESPONSE (ID only):
2025-09-03 18:43:25,916 - prompt_manager.app.crud.crud - INFO - Initializing GROQ client...
2025-09-03 18:43:25,929 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-09-03 18:43:25,931 - httpx - DEBUG - load_verify_locations cafile='/Applications/anaconda3/lib/python3.11/site-packages/certifi/cacert.pem'
2025-09-03 18:43:25,949 - prompt_manager.app.crud.crud - INFO - Sending request to GROQ API...
2025-09-03 18:43:25,950 - groq._base_client - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an expert at matching user queries to the most appropriate system prompt. \n        Your goal is to analyze the user\'s input and select the single most relevant prompt ID from the provided list.\n        \n        MATCHING GUIDELINES:\n        1. For coding/technical questions (Python, algorithms, programming), choose the coding assistant prompt.\n        2. For internet/connection/tech issues, choose the tech support prompt.\n        3. For mental health/stress/anxiety concerns, choose the mental health support prompt.\n        4. For cooking/recipes/food questions, choose the cooking assistant prompt.\n        \n        INSTRUCTIONS:\n        1. Carefully read the user\'s input and identify the main topic/domain.\n        2. Review all available prompts and their metadata (name, tags, content preview).\n        3. Select the prompt that best matches the user\'s intent and domain.\n        4. Consider both the content and the context of the query.\n        5. If the query is ambiguous but could match multiple domains, choose the most likely one.\n        \n        RESPONSE FORMAT:\n        - Return ONLY the numeric ID of the selected prompt (e.g., "42").\n        - If no prompt is relevant, return "none".\n        - DO NOT include any other text or explanation in your response.\n        \n        IMPORTANT: Focus on the user\'s intent and choose the most appropriate prompt, even if the match isn\'t perfect.\n        '}, {'role': 'user', 'content': 'USER INPUT:\n        I want cook pasta, help me\n        \n        AVAILABLE PROMPTS (ID, Name, Content Preview):\n        \nID: 28 | Name: marketing\nPreview: Testing\nTags: testing\n\nID: 31 | Name: test_live_version_sync\nPreview: Second version content\nTags: test\n\nID: 33 | Name: debug_live_test\nPreview: Debug content v2\nTags: debug\n\nID: 37 | Name: test_active_validation\nPreview: First version\nTags: test\n\nID: 38 | Name: test_auto_status\nPreview: Testing auto status\nTags: test\n\nID: 40 | Name: test_constraint\nPreview: First active version\nTags: test\n\nID: 43 | Name: endpoint_test\nPreview: Updated final test\nTags: test\n\nID: 45 | Name: final_test\nPreview: Final test\n\nID: 49 | Name: full_test_prompt\nPreview: Initial content for the full test.\nTags: testing, full-flow\n\nID: 55 | Name: lifecycle_test_final\nPreview: Lifecycle test v2.0.0\nTags: lifecycle\n\nID: 62 | Name: code\nPreview: Update for Debugger\nTags: suggestion\n\nID: 69 | Name: Healthcare assistant\nPreview: Just for checking\nTags: wellbeing\n\nID: 77 | Name: Math Tutor\nPreview: You are a friendly math tutor, explain concept step by step for better understanding.\nTags: Mathematics, Tutor\n\nID: 78 | Name: Healthcare Advisor\nPreview: You are a virtual healthcare assistant. Give advise.\nTags: Healthcare, wellness\n\nID: 80 | Name: mental_health_support\nPreview: You are a compassionate mental health support assistant. Provide empathetic and supportive responses...\nTags: mental_health, support, wellbeing\n\nID: 81 | Name: coding_assistant\nPreview: You are an expert programming assistant. Help users with coding questions, algorithm design, debuggi...\nTags: programming, coding, algorithms\n\nID: 82 | Name: cooking_assistant\nPreview: You are a professional chef and cooking instructor. Provide detailed recipes, cooking tips, and tech...\nTags: cooking, recipes, baking\n\nID: 83 | Name: tech_support\nPreview: You are a technical support specialist. Help users troubleshoot hardware, software, and network issu...\nTags: tech_support, troubleshooting, it\n\n        \n        RESPONSE FORMAT:\n        Return ONLY the numeric ID of the most relevant prompt, or \'none\' if none match.\n        Example: "42" or "none"\n        \n        YOUR RESPONSE (ID only):'}], 'model': 'llama-3.1-8b-instant', 'max_tokens': 10, 'temperature': 0.3}}
2025-09-03 18:43:26,290 - httpcore.connection - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-09-03 18:43:26,648 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10cf72350>
2025-09-03 18:43:26,649 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x10d211ac0> server_hostname='api.groq.com' timeout=5.0
2025-09-03 18:43:26,736 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10d377ed0>
2025-09-03 18:43:26,737 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-03 18:43:26,737 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-09-03 18:43:26,738 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-03 18:43:26,738 - httpcore.http11 - DEBUG - send_request_body.complete
2025-09-03 18:43:26,738 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-03 18:43:27,089 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 03 Sep 2025 13:13:26 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Content-Encoding', b'br'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'bom'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'5085'), (b'x-ratelimit-reset-requests', b'6s'), (b'x-ratelimit-reset-tokens', b'9.15s'), (b'x-request-id', b'req_01k47vbx17fjfafvk944gmmn2t'), (b'via', b'1.1 google'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=H8iL08igrWHQ5hwSyz7AViwJBj04qnE5WYT_S.ri6.k-1756905206-1.0.1.1-eoueQ4IXz75aLtgu0LtOvWZvExztpuGoRYmX8nLhjfcZrlOhIiYrOTnimrLd.CfmOqA0E_Ca5CnehPmBUHlm3XL52.vkPTlk_0FGrVV6Vik; path=/; expires=Wed, 03-Sep-25 13:43:26 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'97958126493c47d5-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-03 18:43:27,090 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 18:43:27,092 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-03 18:43:27,093 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-09-03 18:43:27,093 - httpcore.http11 - DEBUG - response_closed.started
2025-09-03 18:43:27,093 - httpcore.http11 - DEBUG - response_closed.complete
2025-09-03 18:43:27,093 - groq._base_client - DEBUG - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
2025-09-03 18:43:27,096 - prompt_manager.app.crud.crud - INFO - Received response from GROQ API
2025-09-03 18:43:27,096 - prompt_manager.app.crud.crud - DEBUG - GROQ API response: ChatCompletion(choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChoiceMessage(content='82', role='assistant', tool_calls=None))], id='chatcmpl-5d502022-94dd-4d83-ba74-768f213435cf', created=1756905206, model='llama-3.1-8b-instant', object='chat.completion', system_fingerprint='fp_c40956ddc4', usage=Usage(completion_time=0.006824565, completion_tokens=2, prompt_time=0.08621446, prompt_tokens=865, total_time=0.093039025, total_tokens=867, queue_time=0.044496859), usage_breakdown=None, x_groq={'id': 'req_01k47vbx17fjfafvk944gmmn2t'}, service_tier='on_demand')
2025-09-03 18:43:27,096 - prompt_manager.app.crud.crud - INFO - LLM raw response: 82 for input: I want cook pasta, help me
2025-09-03 18:43:27,096 - prompt_manager.app.crud.crud - INFO - Extracted prompt ID: 82
2025-09-03 18:43:27,098 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.id = ? AND prompts.status = ? AND prompts.is_active = 1
 LIMIT ? OFFSET ?
2025-09-03 18:43:27,098 - sqlalchemy.engine.Engine - INFO - [generated in 0.00029s] (82, 'active', 1, 0)
2025-09-03 18:43:27,099 - prompt_manager.app.crud.crud - INFO - Valid active prompt found: ID=82, Name=cooking_assistant
2025-09-03 18:43:27,099 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.id = ?
 LIMIT ? OFFSET ?
2025-09-03 18:43:27,099 - sqlalchemy.engine.Engine - INFO - [generated in 0.00020s] (82, 1, 0)
2025-09-03 18:43:27,100 - prompt_manager.app.api.v1.api - INFO - Testing persona for prompt ID 82 (user: prishatank6@gmail.com)
2025-09-03 18:43:27,100 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.id = ?
 LIMIT ? OFFSET ?
2025-09-03 18:43:27,100 - sqlalchemy.engine.Engine - INFO - [cached since 0.0008347s ago] (82, 1, 0)
2025-09-03 18:43:27,101 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-09-03 18:43:27,101 - httpx - DEBUG - load_verify_locations cafile='/Applications/anaconda3/lib/python3.11/site-packages/certifi/cacert.pem'
2025-09-03 18:43:27,125 - groq._base_client - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a professional chef and cooking instructor. Provide detailed recipes, cooking tips, and techniques. Help users with meal planning, ingredient substitutions, and troubleshooting cooking problems.'}, {'role': 'user', 'content': 'I want cook pasta, help me'}], 'model': 'llama-3.1-8b-instant', 'max_tokens': 1000, 'temperature': 0.7}}
2025-09-03 18:43:27,125 - httpcore.connection - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-09-03 18:43:27,177 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10d38e550>
2025-09-03 18:43:27,177 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x10d210c20> server_hostname='api.groq.com' timeout=5.0
2025-09-03 18:43:27,238 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10d38e610>
2025-09-03 18:43:27,238 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-03 18:43:27,238 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-09-03 18:43:27,238 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-03 18:43:27,238 - httpcore.http11 - DEBUG - send_request_body.complete
2025-09-03 18:43:27,238 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-03 18:43:28,396 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 03 Sep 2025 13:13:28 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Content-Encoding', b'br'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'bom'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14398'), (b'x-ratelimit-remaining-tokens', b'5100'), (b'x-ratelimit-reset-requests', b'11.510999999s'), (b'x-ratelimit-reset-tokens', b'8.991s'), (b'x-request-id', b'req_01k47vbxggexfs0jxsp1t1xcvv'), (b'via', b'1.1 google'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=Tt0UdTxzfUn_1GOXMGrSar43NlFDQ.E3X6SmBte7oiE-1756905208-1.0.1.1-iGI2d7zWkHC1jG27mAv9PFkHUsvW_b1AgSseKBiPcFUk2Fgq094jmz50CKb7gTk7hINJ9xbOsVKAol4LdcOY6SLrikoZFclwRzUUa4IrGbM; path=/; expires=Wed, 03-Sep-25 13:43:28 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'97958129696585c3-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-03 18:43:28,398 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 18:43:28,399 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-03 18:43:28,400 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-09-03 18:43:28,400 - httpcore.http11 - DEBUG - response_closed.started
2025-09-03 18:43:28,400 - httpcore.http11 - DEBUG - response_closed.complete
2025-09-03 18:43:28,400 - groq._base_client - DEBUG - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
2025-09-03 18:43:28,404 - prompt_manager.app.api.v1.api - INFO - Generated persona response for prompt 'cooking_assistant' with persona type 'dynamic_persona'
2025-09-03 18:43:28,406 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/test-persona Status: 200 Time: 2497.87ms
2025-09-03 18:43:28,407 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 18:43:28,407 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 18:43:28,407 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 18:43:28,407 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 18:43:28,408 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 18:44:25,293 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 18:44:25,397 - httpcore.connection - DEBUG - close.started
2025-09-03 18:44:25,399 - httpcore.connection - DEBUG - close.complete
2025-09-03 18:44:25,400 - httpcore.connection - DEBUG - close.started
2025-09-03 18:44:25,400 - httpcore.connection - DEBUG - close.complete
2025-09-03 18:44:26,911 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 18:44:26,911 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("users")
2025-09-03 18:44:26,911 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 18:44:26,911 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("prompts")
2025-09-03 18:44:26,911 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 18:44:26,911 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("prompt_history")
2025-09-03 18:44:26,911 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 18:44:26,912 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-09-03 18:44:26,983 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 18:44:26,983 - prompt_manager.app.main - INFO - Log level: DEBUG
2025-09-03 18:44:26,983 - prompt_manager.app.main - INFO - Database URL: sqlite:////Users/prisha/Desktop/Coding/system prompt/prompts.db
2025-09-03 18:47:15,474 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 18:47:16,643 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 18:47:16,643 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("users")
2025-09-03 18:47:16,643 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 18:47:16,643 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("prompts")
2025-09-03 18:47:16,643 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 18:47:16,644 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("prompt_history")
2025-09-03 18:47:16,644 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 18:47:16,644 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-09-03 18:47:16,666 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 18:47:16,666 - prompt_manager.app.main - INFO - Log level: DEBUG
2025-09-03 18:47:16,666 - prompt_manager.app.main - INFO - Database URL: sqlite:////Users/prisha/Desktop/Coding/system prompt/prompts.db
2025-09-03 18:48:50,375 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 18:48:50,379 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 3.87ms
2025-09-03 18:49:02,538 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 18:49:02,541 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 2.99ms
2025-09-03 18:49:02,547 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-03 18:49:02,548 - multipart.multipart - DEBUG - Calling on_field_start with no data
2025-09-03 18:49:02,548 - multipart.multipart - DEBUG - Calling on_field_name with data[0:8]
2025-09-03 18:49:02,548 - multipart.multipart - DEBUG - Calling on_field_data with data[9:32]
2025-09-03 18:49:02,549 - multipart.multipart - DEBUG - Calling on_field_end with no data
2025-09-03 18:49:02,549 - multipart.multipart - DEBUG - Calling on_field_start with no data
2025-09-03 18:49:02,549 - multipart.multipart - DEBUG - Calling on_field_name with data[33:41]
2025-09-03 18:49:02,549 - multipart.multipart - DEBUG - Calling on_field_data with data[42:50]
2025-09-03 18:49:02,549 - multipart.multipart - DEBUG - Calling on_field_end with no data
2025-09-03 18:49:02,549 - multipart.multipart - DEBUG - Calling on_end with no data
2025-09-03 18:49:02,551 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 18:49:02,552 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 18:49:02,572 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 18:49:02,576 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 18:49:02,576 - sqlalchemy.engine.Engine - INFO - [generated in 0.00029s] ('prishatank6@gmail.com', 1, 0)
2025-09-03 18:49:02,584 - passlib.handlers.bcrypt - DEBUG - detected 'bcrypt' backend, version '4.0.1'
2025-09-03 18:49:02,587 - passlib.handlers.bcrypt - DEBUG - 'bcrypt' backend lacks $2$ support, enabling workaround
2025-09-03 18:49:02,871 - prompt_manager.app.api.v1.endpoints.auth - INFO - Created access token for user: prishatank6@gmail.com
2025-09-03 18:49:02,877 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 200 Time: 330.18ms
2025-09-03 18:49:02,878 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 18:49:02,878 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 18:49:02,878 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 18:49:02,878 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 18:49:02,927 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 18:49:02,928 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.38ms
2025-09-03 18:49:04,672 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 18:49:04,673 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.88ms
2025-09-03 18:49:16,652 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 18:49:16,661 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 18:49:16,662 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 12.82ms
2025-09-03 18:49:16,664 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 2.78ms
2025-09-03 18:49:16,766 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/test-persona
2025-09-03 18:49:16,770 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 18:49:16,771 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 18:49:16,775 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 18:49:16,775 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 18:49:16,775 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 18:49:16,775 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 18:49:16,775 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 18:49:16,776 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 18:49:16,776 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 13:19:02+00:00 (UTC)
2025-09-03 18:49:16,776 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 18:49:16,776 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 18:49:16,781 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 18:49:16,782 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 18:49:16,783 - sqlalchemy.engine.Engine - INFO - [cached since 14.21s ago] ('prishatank6@gmail.com', 1, 0)
2025-09-03 18:49:16,787 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 14)
2025-09-03 18:49:16,787 - prompt_manager.app.api.v1.api - INFO - Testing persona with automatic prompt selection (user: prishatank6@gmail.com)
2025-09-03 18:49:16,788 - prompt_manager.app.crud.crud - INFO - Finding most relevant prompt for input: I want to cook pasta, help me
2025-09-03 18:49:16,790 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 18:49:16,793 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.status = ? AND prompts.is_active = 1
2025-09-03 18:49:16,793 - sqlalchemy.engine.Engine - INFO - [generated in 0.00052s] ('active',)
2025-09-03 18:49:16,796 - prompt_manager.app.crud.crud - INFO - Found 18 active prompts in the database
2025-09-03 18:49:16,796 - prompt_manager.app.crud.crud - INFO - Active prompt 1: ID=28, Name=marketing, Status=active, is_active=True
2025-09-03 18:49:16,796 - prompt_manager.app.crud.crud - INFO - Active prompt 2: ID=31, Name=test_live_version_sync, Status=active, is_active=True
2025-09-03 18:49:16,796 - prompt_manager.app.crud.crud - INFO - Active prompt 3: ID=33, Name=debug_live_test, Status=active, is_active=True
2025-09-03 18:49:16,796 - prompt_manager.app.crud.crud - INFO - Active prompt 4: ID=37, Name=test_active_validation, Status=active, is_active=True
2025-09-03 18:49:16,796 - prompt_manager.app.crud.crud - INFO - Active prompt 5: ID=38, Name=test_auto_status, Status=active, is_active=True
2025-09-03 18:49:16,796 - prompt_manager.app.crud.crud - INFO - Active prompt 6: ID=40, Name=test_constraint, Status=active, is_active=True
2025-09-03 18:49:16,796 - prompt_manager.app.crud.crud - INFO - Active prompt 7: ID=43, Name=endpoint_test, Status=active, is_active=True
2025-09-03 18:49:16,796 - prompt_manager.app.crud.crud - INFO - Active prompt 8: ID=45, Name=final_test, Status=active, is_active=True
2025-09-03 18:49:16,796 - prompt_manager.app.crud.crud - INFO - Active prompt 9: ID=49, Name=full_test_prompt, Status=active, is_active=True
2025-09-03 18:49:16,796 - prompt_manager.app.crud.crud - INFO - Active prompt 10: ID=55, Name=lifecycle_test_final, Status=active, is_active=True
2025-09-03 18:49:16,796 - prompt_manager.app.crud.crud - INFO - Active prompt 11: ID=62, Name=code, Status=active, is_active=True
2025-09-03 18:49:16,796 - prompt_manager.app.crud.crud - INFO - Active prompt 12: ID=69, Name=Healthcare assistant, Status=active, is_active=True
2025-09-03 18:49:16,796 - prompt_manager.app.crud.crud - INFO - Active prompt 13: ID=77, Name=Math Tutor, Status=active, is_active=True
2025-09-03 18:49:16,796 - prompt_manager.app.crud.crud - INFO - Active prompt 14: ID=78, Name=Healthcare Advisor, Status=active, is_active=True
2025-09-03 18:49:16,796 - prompt_manager.app.crud.crud - INFO - Active prompt 15: ID=80, Name=mental_health_support, Status=active, is_active=True
2025-09-03 18:49:16,796 - prompt_manager.app.crud.crud - INFO - Active prompt 16: ID=81, Name=coding_assistant, Status=active, is_active=True
2025-09-03 18:49:16,796 - prompt_manager.app.crud.crud - INFO - Active prompt 17: ID=82, Name=cooking_assistant, Status=active, is_active=True
2025-09-03 18:49:16,797 - prompt_manager.app.crud.crud - INFO - Active prompt 18: ID=83, Name=tech_support, Status=active, is_active=True
2025-09-03 18:49:16,802 - prompt_manager.app.crud.crud - INFO - Sending 18 prompts to LLM for analysis
2025-09-03 18:49:16,802 - prompt_manager.app.crud.crud - DEBUG - System prompt: You are an expert at matching user queries to the most appropriate system prompt. 
        Your goal is to analyze the user's input and select the single most relevant prompt ID from the provided list.
        
        MATCHING GUIDELINES:
        1. For coding/technical questions (Python, algorithms, programming), choose the coding assistant prompt.
        2. For internet/connection/tech issues, choose the tech support prompt.
        3. For mental health/stress/anxiety concerns, choose the mental health support prompt.
        4. For cooking/recipes/food questions, choose the cooking assistant prompt.
        
        INSTRUCTIONS:
        1. Carefully read the user's input and identify the main topic/domain.
        2. Review all available prompts and their metadata (name, tags, content preview).
        3. Select the prompt that best matches the user's intent and domain.
        4. Consider both the content and the context of the query.
        5. If the query is ambiguous but could match multiple domains, choose the most likely one.
        
        RESPONSE FORMAT:
        - Return ONLY the numeric ID of the selected prompt (e.g., "42").
        - If no prompt is relevant, return "none".
        - DO NOT include any other text or explanation in your response.
        
        IMPORTANT: Focus on the user's intent and choose the most appropriate prompt, even if the match isn't perfect.
        
2025-09-03 18:49:16,803 - prompt_manager.app.crud.crud - DEBUG - User message: USER INPUT:
        I want to cook pasta, help me
        
        AVAILABLE PROMPTS (ID, Name, Content Preview):
        
ID: 28 | Name: marketing
Preview: Testing
Tags: testing

ID: 31 | Name: test_live_version_sync
Preview: Second version content
Tags: test

ID: 33 | Name: debug_live_test
Preview: Debug content v2
Tags: debug

ID: 37 | Name: test_active_validation
Preview: First version
Tags: test

ID: 38 | Name: test_auto_status
Preview: Testing auto status
Tags: test

ID: 40 | Name: test_constraint
Preview: First active version
Tags: test

ID: 43 | Name: endpoint_test
Preview: Updated final test
Tags: test

ID: 45 | Name: final_test
Preview: Final test

ID: 49 | Name: full_test_prompt
Preview: Initial content for the full test.
Tags: testing, full-flow

ID: 55 | Name: lifecycle_test_final
Preview: Lifecycle test v2.0.0
Tags: lifecycle

ID: 62 | Name: code
Preview: Update for Debugger
Tags: suggestion

ID: 69 | Name: Healthcare assistant
Preview: Just for checking
Tags: wellbeing

ID: 77 | Name: Math Tutor
Preview: You are a friendly math tutor, explain concept step by step for better understanding.
Tags: Mathematics, Tutor

ID: 78 | Name: Healthcare Advisor
Preview: You are a virtual healthcare assistant. Give advise.
Tags: Healthcare, wellness

ID: 80 | Name: mental_health_support
Preview: You are a compassionate mental health support assistant. Provide empathetic and supportive responses...
Tags: mental_health, support, wellbeing

ID: 81 | Name: coding_assistant
Preview: You are an expert programming assistant. Help users with coding questions, algorithm design, debuggi...
Tags: programming, coding, algorithms

ID: 82 | Name: cooking_assistant
Preview: You are a professional chef and cooking instructor. Provide detailed recipes, cooking tips, and tech...
Tags: cooking, recipes, baking

ID: 83 | Name: tech_support
Preview: You are a technical support specialist. Help users troubleshoot hardware, software, and network issu...
Tags: tech_support, troubleshooting, it

        
        RESPONSE FORMAT:
        Return ONLY the numeric ID of the most relevant prompt, or 'none' if none match.
        Example: "42" or "none"
        
        YOUR RESPONSE (ID only):
2025-09-03 18:49:16,804 - prompt_manager.app.crud.crud - INFO - Initializing GROQ client...
2025-09-03 18:49:16,815 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-09-03 18:49:16,817 - httpx - DEBUG - load_verify_locations cafile='/Applications/anaconda3/lib/python3.11/site-packages/certifi/cacert.pem'
2025-09-03 18:49:16,836 - prompt_manager.app.crud.crud - INFO - Sending request to GROQ API...
2025-09-03 18:49:16,837 - groq._base_client - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an expert at matching user queries to the most appropriate system prompt. \n        Your goal is to analyze the user\'s input and select the single most relevant prompt ID from the provided list.\n        \n        MATCHING GUIDELINES:\n        1. For coding/technical questions (Python, algorithms, programming), choose the coding assistant prompt.\n        2. For internet/connection/tech issues, choose the tech support prompt.\n        3. For mental health/stress/anxiety concerns, choose the mental health support prompt.\n        4. For cooking/recipes/food questions, choose the cooking assistant prompt.\n        \n        INSTRUCTIONS:\n        1. Carefully read the user\'s input and identify the main topic/domain.\n        2. Review all available prompts and their metadata (name, tags, content preview).\n        3. Select the prompt that best matches the user\'s intent and domain.\n        4. Consider both the content and the context of the query.\n        5. If the query is ambiguous but could match multiple domains, choose the most likely one.\n        \n        RESPONSE FORMAT:\n        - Return ONLY the numeric ID of the selected prompt (e.g., "42").\n        - If no prompt is relevant, return "none".\n        - DO NOT include any other text or explanation in your response.\n        \n        IMPORTANT: Focus on the user\'s intent and choose the most appropriate prompt, even if the match isn\'t perfect.\n        '}, {'role': 'user', 'content': 'USER INPUT:\n        I want to cook pasta, help me\n        \n        AVAILABLE PROMPTS (ID, Name, Content Preview):\n        \nID: 28 | Name: marketing\nPreview: Testing\nTags: testing\n\nID: 31 | Name: test_live_version_sync\nPreview: Second version content\nTags: test\n\nID: 33 | Name: debug_live_test\nPreview: Debug content v2\nTags: debug\n\nID: 37 | Name: test_active_validation\nPreview: First version\nTags: test\n\nID: 38 | Name: test_auto_status\nPreview: Testing auto status\nTags: test\n\nID: 40 | Name: test_constraint\nPreview: First active version\nTags: test\n\nID: 43 | Name: endpoint_test\nPreview: Updated final test\nTags: test\n\nID: 45 | Name: final_test\nPreview: Final test\n\nID: 49 | Name: full_test_prompt\nPreview: Initial content for the full test.\nTags: testing, full-flow\n\nID: 55 | Name: lifecycle_test_final\nPreview: Lifecycle test v2.0.0\nTags: lifecycle\n\nID: 62 | Name: code\nPreview: Update for Debugger\nTags: suggestion\n\nID: 69 | Name: Healthcare assistant\nPreview: Just for checking\nTags: wellbeing\n\nID: 77 | Name: Math Tutor\nPreview: You are a friendly math tutor, explain concept step by step for better understanding.\nTags: Mathematics, Tutor\n\nID: 78 | Name: Healthcare Advisor\nPreview: You are a virtual healthcare assistant. Give advise.\nTags: Healthcare, wellness\n\nID: 80 | Name: mental_health_support\nPreview: You are a compassionate mental health support assistant. Provide empathetic and supportive responses...\nTags: mental_health, support, wellbeing\n\nID: 81 | Name: coding_assistant\nPreview: You are an expert programming assistant. Help users with coding questions, algorithm design, debuggi...\nTags: programming, coding, algorithms\n\nID: 82 | Name: cooking_assistant\nPreview: You are a professional chef and cooking instructor. Provide detailed recipes, cooking tips, and tech...\nTags: cooking, recipes, baking\n\nID: 83 | Name: tech_support\nPreview: You are a technical support specialist. Help users troubleshoot hardware, software, and network issu...\nTags: tech_support, troubleshooting, it\n\n        \n        RESPONSE FORMAT:\n        Return ONLY the numeric ID of the most relevant prompt, or \'none\' if none match.\n        Example: "42" or "none"\n        \n        YOUR RESPONSE (ID only):'}], 'model': 'llama-3.1-8b-instant', 'max_tokens': 10, 'temperature': 0.3}}
2025-09-03 18:49:17,179 - httpcore.connection - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-09-03 18:49:17,328 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10510bf50>
2025-09-03 18:49:17,328 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x104fa5d00> server_hostname='api.groq.com' timeout=5.0
2025-09-03 18:49:17,395 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x104aecc50>
2025-09-03 18:49:17,395 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-03 18:49:17,396 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-09-03 18:49:17,396 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-03 18:49:17,396 - httpcore.http11 - DEBUG - send_request_body.complete
2025-09-03 18:49:17,396 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-03 18:49:17,622 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 03 Sep 2025 13:19:17 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Content-Encoding', b'br'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'bom'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'5084'), (b'x-ratelimit-reset-requests', b'6s'), (b'x-ratelimit-reset-tokens', b'9.16s'), (b'x-request-id', b'req_01k47vpketfp3v9crng2g4rjhd'), (b'via', b'1.1 google'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=lf_kAEzGHGyOclQk4s1behPANVrZD6MCbZorR5ECHsE-1756905557-1.0.1.1-Gh8ZuFU0AZ_e9.1HFVcTHARtRxjTHS2D6CqtzQWMi80J0yAapj.UeoEODZ1pTYuFzC2ce1QAKqQ0ImtwChfIvxjUN4065GbsKQ9432TDcMg; path=/; expires=Wed, 03-Sep-25 13:49:17 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'979589b5efc39905-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-03 18:49:17,623 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 18:49:17,624 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-03 18:49:17,624 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-09-03 18:49:17,624 - httpcore.http11 - DEBUG - response_closed.started
2025-09-03 18:49:17,624 - httpcore.http11 - DEBUG - response_closed.complete
2025-09-03 18:49:17,624 - groq._base_client - DEBUG - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
2025-09-03 18:49:17,629 - prompt_manager.app.crud.crud - INFO - Received response from GROQ API
2025-09-03 18:49:17,629 - prompt_manager.app.crud.crud - DEBUG - GROQ API response: ChatCompletion(choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChoiceMessage(content='82', role='assistant', tool_calls=None))], id='chatcmpl-13adaae7-b186-41c1-bcce-24bdc9bb85be', created=1756905557, model='llama-3.1-8b-instant', object='chat.completion', system_fingerprint='fp_c40956ddc4', usage=Usage(completion_time=0.003909874, completion_tokens=2, prompt_time=0.056840084, prompt_tokens=866, total_time=0.060749958, total_tokens=868, queue_time=0.044463736), usage_breakdown=None, x_groq={'id': 'req_01k47vpketfp3v9crng2g4rjhd'}, service_tier='on_demand')
2025-09-03 18:49:17,629 - prompt_manager.app.crud.crud - INFO - LLM raw response: 82 for input: I want to cook pasta, help me
2025-09-03 18:49:17,629 - prompt_manager.app.crud.crud - INFO - Extracted prompt ID: 82
2025-09-03 18:49:17,631 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.id = ? AND prompts.status = ? AND prompts.is_active = 1
 LIMIT ? OFFSET ?
2025-09-03 18:49:17,631 - sqlalchemy.engine.Engine - INFO - [generated in 0.00020s] (82, 'active', 1, 0)
2025-09-03 18:49:17,631 - prompt_manager.app.crud.crud - INFO - Valid active prompt found: ID=82, Name=cooking_assistant
2025-09-03 18:49:17,632 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.id = ?
 LIMIT ? OFFSET ?
2025-09-03 18:49:17,632 - sqlalchemy.engine.Engine - INFO - [generated in 0.00014s] (82, 1, 0)
2025-09-03 18:49:17,632 - prompt_manager.app.api.v1.api - INFO - Testing persona for prompt ID 82 (user: prishatank6@gmail.com)
2025-09-03 18:49:17,632 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.id = ?
 LIMIT ? OFFSET ?
2025-09-03 18:49:17,633 - sqlalchemy.engine.Engine - INFO - [cached since 0.0007266s ago] (82, 1, 0)
2025-09-03 18:49:17,633 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-09-03 18:49:17,633 - httpx - DEBUG - load_verify_locations cafile='/Applications/anaconda3/lib/python3.11/site-packages/certifi/cacert.pem'
2025-09-03 18:49:17,660 - groq._base_client - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a professional chef and cooking instructor. Provide detailed recipes, cooking tips, and techniques. Help users with meal planning, ingredient substitutions, and troubleshooting cooking problems.'}, {'role': 'user', 'content': 'I want to cook pasta, help me'}], 'model': 'llama-3.1-8b-instant', 'max_tokens': 1000, 'temperature': 0.7}}
2025-09-03 18:49:17,660 - httpcore.connection - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-09-03 18:49:17,713 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x105106350>
2025-09-03 18:49:17,713 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x104fa4e60> server_hostname='api.groq.com' timeout=5.0
2025-09-03 18:49:17,770 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10511ef50>
2025-09-03 18:49:17,770 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-03 18:49:17,770 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-09-03 18:49:17,770 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-03 18:49:17,770 - httpcore.http11 - DEBUG - send_request_body.complete
2025-09-03 18:49:17,770 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-03 18:49:18,872 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 03 Sep 2025 13:19:18 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Content-Encoding', b'br'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'bom'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14398'), (b'x-ratelimit-remaining-tokens', b'5093'), (b'x-ratelimit-reset-requests', b'11.599999999s'), (b'x-ratelimit-reset-tokens', b'9.066999999s'), (b'x-request-id', b'req_01k47vpkv7e4s9e1b02987bqqz'), (b'via', b'1.1 google'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=dVZM5kC1.PA6eE_X9G4Wr_WrVsAxcTM3DPmbOE0OP7A-1756905558-1.0.1.1-4Z8UTqqmQDAWkgjeQl_78rt.YM8eVXuMwDVXrPvBlE1GzBH5SQDKu8XsZBdpCXq188TNg_k8hkaor3E8_NYH0YFml89sXF_xdsjm1kdND70; path=/; expires=Wed, 03-Sep-25 13:49:18 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'979589b8486e443d-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-03 18:49:18,873 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 18:49:18,873 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-03 18:49:18,875 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-09-03 18:49:18,875 - httpcore.http11 - DEBUG - response_closed.started
2025-09-03 18:49:18,875 - httpcore.http11 - DEBUG - response_closed.complete
2025-09-03 18:49:18,875 - groq._base_client - DEBUG - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
2025-09-03 18:49:18,878 - prompt_manager.app.api.v1.api - INFO - Generated persona response for prompt 'cooking_assistant' with persona type 'dynamic_persona'
2025-09-03 18:49:18,880 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/test-persona Status: 200 Time: 2112.99ms
2025-09-03 18:49:18,881 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 18:49:18,881 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 18:49:18,881 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 18:49:18,881 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 18:49:18,882 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 18:52:38,344 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 18:52:38,358 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 13.35ms
2025-09-03 18:52:50,075 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 18:52:50,149 - httpcore.connection - DEBUG - close.started
2025-09-03 18:52:50,154 - httpcore.connection - DEBUG - close.complete
2025-09-03 18:52:50,155 - httpcore.connection - DEBUG - close.started
2025-09-03 18:52:50,156 - httpcore.connection - DEBUG - close.complete
2025-09-03 18:52:51,559 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 18:52:51,559 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("users")
2025-09-03 18:52:51,559 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 18:52:51,563 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("prompts")
2025-09-03 18:52:51,563 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 18:52:51,564 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("prompt_history")
2025-09-03 18:52:51,564 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 18:52:51,564 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-09-03 18:52:51,600 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 18:52:51,600 - prompt_manager.app.main - INFO - Log level: DEBUG
2025-09-03 18:52:51,600 - prompt_manager.app.main - INFO - Database URL: sqlite:////Users/prisha/Desktop/Coding/system prompt/prompts.db
2025-09-03 18:53:07,612 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 18:53:08,864 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 18:53:08,865 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("users")
2025-09-03 18:53:08,865 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 18:53:08,865 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("prompts")
2025-09-03 18:53:08,865 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 18:53:08,866 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("prompt_history")
2025-09-03 18:53:08,866 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 18:53:08,866 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-09-03 18:53:08,888 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 18:53:08,888 - prompt_manager.app.main - INFO - Log level: DEBUG
2025-09-03 18:53:08,888 - prompt_manager.app.main - INFO - Database URL: sqlite:////Users/prisha/Desktop/Coding/system prompt/prompts.db
2025-09-03 19:01:41,902 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 19:01:43,072 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 19:01:43,072 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("users")
2025-09-03 19:01:43,072 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 19:01:43,074 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("prompts")
2025-09-03 19:01:43,074 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 19:01:43,074 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("prompt_history")
2025-09-03 19:01:43,074 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 19:01:43,074 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-09-03 19:01:43,097 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 19:01:43,097 - prompt_manager.app.main - INFO - Log level: DEBUG
2025-09-03 19:01:43,097 - prompt_manager.app.main - INFO - Database URL: sqlite:////Users/prisha/Desktop/Coding/system prompt/prompts.db
2025-09-03 19:04:44,589 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 19:04:44,593 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 3.27ms
2025-09-03 19:04:56,712 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 19:04:56,715 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 3.0ms
2025-09-03 19:04:56,723 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-03 19:04:56,728 - multipart.multipart - DEBUG - Calling on_field_start with no data
2025-09-03 19:04:56,728 - multipart.multipart - DEBUG - Calling on_field_name with data[0:8]
2025-09-03 19:04:56,729 - multipart.multipart - DEBUG - Calling on_field_data with data[9:32]
2025-09-03 19:04:56,729 - multipart.multipart - DEBUG - Calling on_field_end with no data
2025-09-03 19:04:56,729 - multipart.multipart - DEBUG - Calling on_field_start with no data
2025-09-03 19:04:56,729 - multipart.multipart - DEBUG - Calling on_field_name with data[33:41]
2025-09-03 19:04:56,729 - multipart.multipart - DEBUG - Calling on_field_data with data[42:50]
2025-09-03 19:04:56,730 - multipart.multipart - DEBUG - Calling on_field_end with no data
2025-09-03 19:04:56,730 - multipart.multipart - DEBUG - Calling on_end with no data
2025-09-03 19:04:56,733 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 19:04:56,733 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 19:04:56,762 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 19:04:56,766 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 19:04:56,766 - sqlalchemy.engine.Engine - INFO - [generated in 0.00039s] ('prishatank6@gmail.com', 1, 0)
2025-09-03 19:04:56,774 - passlib.handlers.bcrypt - DEBUG - detected 'bcrypt' backend, version '4.0.1'
2025-09-03 19:04:56,775 - passlib.handlers.bcrypt - DEBUG - 'bcrypt' backend lacks $2$ support, enabling workaround
2025-09-03 19:04:57,050 - prompt_manager.app.api.v1.endpoints.auth - INFO - Created access token for user: prishatank6@gmail.com
2025-09-03 19:04:57,056 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 200 Time: 333.0ms
2025-09-03 19:04:57,057 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 19:04:57,057 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 19:04:57,057 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 19:04:57,057 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 19:04:57,105 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 19:04:57,106 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.32ms
2025-09-03 19:04:58,902 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 19:04:58,903 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.81ms
2025-09-03 19:05:04,560 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 19:05:04,562 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.32ms
2025-09-03 19:05:04,610 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 19:05:04,610 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.43ms
2025-09-03 19:05:04,616 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/74/history?skip=0&limit=10
2025-09-03 19:05:04,618 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 19:05:04,618 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 19:05:04,618 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 19:05:04,618 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 19:05:04,618 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 19:05:04,619 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 19:05:04,619 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 19:05:04,619 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 19:05:04,619 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 13:34:57+00:00 (UTC)
2025-09-03 19:05:04,619 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 19:05:04,619 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 19:05:04,620 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 19:05:04,620 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 19:05:04,620 - sqlalchemy.engine.Engine - INFO - [cached since 7.854s ago] ('prishatank6@gmail.com', 1, 0)
2025-09-03 19:05:04,621 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 14)
2025-09-03 19:05:04,622 - prompt_manager.app.api.v1.api - INFO - Retrieving history for prompt ID: 74
2025-09-03 19:05:04,624 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 19:05:04,625 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.id = ?
 LIMIT ? OFFSET ?
2025-09-03 19:05:04,625 - sqlalchemy.engine.Engine - INFO - [generated in 0.00017s] (74, 1, 0)
2025-09-03 19:05:04,629 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT prompt_history.id AS prompt_history_id, prompt_history.prompt_id AS prompt_history_prompt_id, prompt_history.version AS prompt_history_version, prompt_history.content AS prompt_history_content, prompt_history.description AS prompt_history_description, prompt_history.status AS prompt_history_status, prompt_history.tags AS prompt_history_tags, prompt_history.metadata AS prompt_history_metadata, prompt_history.changed_by AS prompt_history_changed_by, prompt_history.changed_at AS prompt_history_changed_at, prompt_history.change_reason AS prompt_history_change_reason 
FROM prompt_history 
WHERE prompt_history.prompt_id = ?) AS anon_1
2025-09-03 19:05:04,629 - sqlalchemy.engine.Engine - INFO - [generated in 0.00031s] (74,)
2025-09-03 19:05:04,630 - sqlalchemy.engine.Engine - INFO - SELECT prompt_history.id AS prompt_history_id, prompt_history.prompt_id AS prompt_history_prompt_id, prompt_history.version AS prompt_history_version, prompt_history.content AS prompt_history_content, prompt_history.description AS prompt_history_description, prompt_history.status AS prompt_history_status, prompt_history.tags AS prompt_history_tags, prompt_history.metadata AS prompt_history_metadata, prompt_history.changed_by AS prompt_history_changed_by, prompt_history.changed_at AS prompt_history_changed_at, prompt_history.change_reason AS prompt_history_change_reason 
FROM prompt_history 
WHERE prompt_history.prompt_id = ? ORDER BY prompt_history.changed_at DESC
 LIMIT ? OFFSET ?
2025-09-03 19:05:04,631 - sqlalchemy.engine.Engine - INFO - [generated in 0.00026s] (74, 10, 0)
2025-09-03 19:05:04,631 - prompt_manager.app.api.v1.api - INFO - Found 1 history items for prompt ID: 74
2025-09-03 19:05:04,633 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/74/history?skip=0&limit=10 Status: 200 Time: 16.55ms
2025-09-03 19:05:04,633 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 19:05:04,633 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 19:05:04,634 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 19:05:04,634 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 19:05:04,634 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 19:05:10,977 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 19:05:10,978 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.81ms
2025-09-03 19:05:11,026 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 19:05:11,026 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.49ms
2025-09-03 19:05:11,033 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/78/history?skip=0&limit=10
2025-09-03 19:05:11,034 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 19:05:11,034 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 19:05:11,034 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 19:05:11,034 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 19:05:11,034 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 19:05:11,034 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 19:05:11,034 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 19:05:11,034 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 19:05:11,034 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 13:34:57+00:00 (UTC)
2025-09-03 19:05:11,034 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 19:05:11,034 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 19:05:11,034 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 19:05:11,035 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 19:05:11,035 - sqlalchemy.engine.Engine - INFO - [cached since 14.27s ago] ('prishatank6@gmail.com', 1, 0)
2025-09-03 19:05:11,035 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 14)
2025-09-03 19:05:11,035 - prompt_manager.app.api.v1.api - INFO - Retrieving history for prompt ID: 78
2025-09-03 19:05:11,035 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 19:05:11,036 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.id = ?
 LIMIT ? OFFSET ?
2025-09-03 19:05:11,036 - sqlalchemy.engine.Engine - INFO - [cached since 6.411s ago] (78, 1, 0)
2025-09-03 19:05:11,036 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT prompt_history.id AS prompt_history_id, prompt_history.prompt_id AS prompt_history_prompt_id, prompt_history.version AS prompt_history_version, prompt_history.content AS prompt_history_content, prompt_history.description AS prompt_history_description, prompt_history.status AS prompt_history_status, prompt_history.tags AS prompt_history_tags, prompt_history.metadata AS prompt_history_metadata, prompt_history.changed_by AS prompt_history_changed_by, prompt_history.changed_at AS prompt_history_changed_at, prompt_history.change_reason AS prompt_history_change_reason 
FROM prompt_history 
WHERE prompt_history.prompt_id = ?) AS anon_1
2025-09-03 19:05:11,037 - sqlalchemy.engine.Engine - INFO - [cached since 6.408s ago] (78,)
2025-09-03 19:05:11,037 - sqlalchemy.engine.Engine - INFO - SELECT prompt_history.id AS prompt_history_id, prompt_history.prompt_id AS prompt_history_prompt_id, prompt_history.version AS prompt_history_version, prompt_history.content AS prompt_history_content, prompt_history.description AS prompt_history_description, prompt_history.status AS prompt_history_status, prompt_history.tags AS prompt_history_tags, prompt_history.metadata AS prompt_history_metadata, prompt_history.changed_by AS prompt_history_changed_by, prompt_history.changed_at AS prompt_history_changed_at, prompt_history.change_reason AS prompt_history_change_reason 
FROM prompt_history 
WHERE prompt_history.prompt_id = ? ORDER BY prompt_history.changed_at DESC
 LIMIT ? OFFSET ?
2025-09-03 19:05:11,038 - sqlalchemy.engine.Engine - INFO - [cached since 6.407s ago] (78, 10, 0)
2025-09-03 19:05:11,038 - prompt_manager.app.api.v1.api - INFO - Found 2 history items for prompt ID: 78
2025-09-03 19:05:11,039 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/78/history?skip=0&limit=10 Status: 200 Time: 6.22ms
2025-09-03 19:05:11,040 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 19:05:11,040 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 19:05:11,041 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 19:05:11,041 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 19:05:11,041 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 19:05:26,384 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 19:05:26,386 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.62ms
2025-09-03 19:05:42,056 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 19:05:42,057 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.24ms
2025-09-03 19:32:34,489 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 19:32:34,499 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 10.32ms
2025-09-03 19:32:35,717 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 19:32:35,718 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.48ms
2025-09-03 19:32:37,835 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 19:32:37,835 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.44ms
2025-09-03 19:32:39,035 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 19:32:39,035 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.75ms
2025-09-03 19:32:44,904 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 19:32:44,905 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.98ms
2025-09-03 19:32:44,919 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 19:32:44,923 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 19:32:44,923 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 19:32:44,923 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 19:32:44,924 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 19:32:44,924 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 19:32:44,924 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 19:32:44,924 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 19:32:44,933 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 19:32:44,933 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 13:34:57+00:00 (UTC)
2025-09-03 19:32:44,933 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 19:32:44,933 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 19:32:44,947 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 19:32:44,948 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 19:32:44,948 - sqlalchemy.engine.Engine - INFO - [cached since 267.6s ago] ('prishatank6@gmail.com', 1, 0)
2025-09-03 19:32:44,952 - prompt_manager.app.core.security - INFO - Found user: prishatank6@gmail.com (ID: 14)
2025-09-03 19:32:44,952 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 19:32:44,954 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 19:32:44,956 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts) AS anon_1
2025-09-03 19:32:44,956 - sqlalchemy.engine.Engine - INFO - [generated in 0.00022s] ()
2025-09-03 19:32:44,957 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts ORDER BY prompts.updated_at DESC
 LIMIT ? OFFSET ?
2025-09-03 19:32:44,957 - sqlalchemy.engine.Engine - INFO - [generated in 0.00014s] (100, 0)
2025-09-03 19:32:44,959 - prompt_manager.app.api.v1.api - INFO - Found 81 prompts out of 81 total
2025-09-03 19:32:44,964 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 44.72ms
2025-09-03 19:32:44,965 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 19:32:44,965 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 19:32:44,965 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 19:32:44,965 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 19:32:44,966 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 19:36:02,327 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 19:36:03,746 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 19:36:03,747 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("users")
2025-09-03 19:36:03,747 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 19:36:03,748 - sqlalchemy.engine.Engine - INFO - PRAGMA temp.table_info("users")
2025-09-03 19:36:03,748 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 19:36:03,748 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("prompts")
2025-09-03 19:36:03,748 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 19:36:03,748 - sqlalchemy.engine.Engine - INFO - PRAGMA temp.table_info("prompts")
2025-09-03 19:36:03,748 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 19:36:03,748 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("prompt_history")
2025-09-03 19:36:03,748 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 19:36:03,748 - sqlalchemy.engine.Engine - INFO - PRAGMA temp.table_info("prompt_history")
2025-09-03 19:36:03,748 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 19:36:03,748 - sqlalchemy.engine.Engine - INFO - 
CREATE TABLE users (
	id INTEGER NOT NULL, 
	email VARCHAR NOT NULL, 
	hashed_password VARCHAR NOT NULL, 
	full_name VARCHAR, 
	is_active BOOLEAN, 
	created_at DATETIME DEFAULT (CURRENT_TIMESTAMP), 
	updated_at DATETIME, 
	PRIMARY KEY (id)
)


2025-09-03 19:36:03,749 - sqlalchemy.engine.Engine - INFO - [no key 0.00004s] ()
2025-09-03 19:36:03,749 - sqlalchemy.engine.Engine - INFO - CREATE UNIQUE INDEX ix_users_email ON users (email)
2025-09-03 19:36:03,749 - sqlalchemy.engine.Engine - INFO - [no key 0.00005s] ()
2025-09-03 19:36:03,750 - sqlalchemy.engine.Engine - INFO - CREATE INDEX ix_users_id ON users (id)
2025-09-03 19:36:03,750 - sqlalchemy.engine.Engine - INFO - [no key 0.00004s] ()
2025-09-03 19:36:03,750 - sqlalchemy.engine.Engine - INFO - 
CREATE TABLE prompts (
	id INTEGER NOT NULL, 
	name VARCHAR NOT NULL, 
	version VARCHAR NOT NULL, 
	content TEXT NOT NULL, 
	description TEXT, 
	status VARCHAR(8) NOT NULL, 
	is_active BOOLEAN NOT NULL, 
	tags JSON, 
	metadata JSON, 
	created_by VARCHAR NOT NULL, 
	created_at DATETIME, 
	updated_at DATETIME, 
	PRIMARY KEY (id)
)


2025-09-03 19:36:03,750 - sqlalchemy.engine.Engine - INFO - [no key 0.00004s] ()
2025-09-03 19:36:03,750 - sqlalchemy.engine.Engine - INFO - CREATE INDEX ix_prompts_id ON prompts (id)
2025-09-03 19:36:03,751 - sqlalchemy.engine.Engine - INFO - [no key 0.00004s] ()
2025-09-03 19:36:03,751 - sqlalchemy.engine.Engine - INFO - CREATE INDEX ix_prompts_name ON prompts (name)
2025-09-03 19:36:03,751 - sqlalchemy.engine.Engine - INFO - [no key 0.00003s] ()
2025-09-03 19:36:03,752 - sqlalchemy.engine.Engine - INFO - 
CREATE TABLE prompt_history (
	id INTEGER NOT NULL, 
	prompt_id INTEGER NOT NULL, 
	version VARCHAR NOT NULL, 
	content TEXT NOT NULL, 
	description TEXT, 
	status VARCHAR(8) NOT NULL, 
	tags JSON, 
	metadata JSON, 
	changed_by VARCHAR NOT NULL, 
	changed_at DATETIME, 
	change_reason TEXT, 
	PRIMARY KEY (id), 
	FOREIGN KEY(prompt_id) REFERENCES prompts (id) ON DELETE CASCADE
)


2025-09-03 19:36:03,752 - sqlalchemy.engine.Engine - INFO - [no key 0.00007s] ()
2025-09-03 19:36:03,752 - sqlalchemy.engine.Engine - INFO - CREATE INDEX ix_prompt_history_id ON prompt_history (id)
2025-09-03 19:36:03,752 - sqlalchemy.engine.Engine - INFO - [no key 0.00010s] ()
2025-09-03 19:36:03,754 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-09-03 19:36:03,784 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 19:36:03,784 - prompt_manager.app.main - INFO - Log level: DEBUG
2025-09-03 19:36:03,784 - prompt_manager.app.main - INFO - Database URL: sqlite:////Users/prisha/Desktop/Coding/system prompt/prompts.db
2025-09-03 19:38:46,380 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 19:38:46,383 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 2.46ms
2025-09-03 19:38:46,400 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 19:38:46,403 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 19:38:46,403 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 19:38:46,403 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 19:38:46,403 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 19:38:46,403 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 19:38:46,403 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 19:38:46,403 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 19:38:46,414 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 19:38:46,414 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 13:34:57+00:00 (UTC)
2025-09-03 19:38:46,414 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 19:38:46,414 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank6@gmail.com
2025-09-03 19:38:46,429 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 19:38:46,431 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 19:38:46,431 - sqlalchemy.engine.Engine - INFO - [generated in 0.00017s] ('prishatank6@gmail.com', 1, 0)
2025-09-03 19:38:46,433 - prompt_manager.app.core.security - ERROR - User not found with email: prishatank6@gmail.com
2025-09-03 19:38:46,433 - prompt_manager.app.core.security - ERROR - Database error during user lookup: 
2025-09-03 19:38:46,433 - prompt_manager.app.database - ERROR - Error in database session: 
2025-09-03 19:38:46,433 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 19:38:46,433 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 19:38:46,434 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 19:38:46,434 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 500 Time: 33.64ms
2025-09-03 19:38:55,322 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 19:38:55,329 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 6.8ms
2025-09-03 19:39:08,085 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 19:39:08,088 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 3.02ms
2025-09-03 19:39:08,093 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-03 19:39:08,096 - multipart.multipart - DEBUG - Calling on_field_start with no data
2025-09-03 19:39:08,096 - multipart.multipart - DEBUG - Calling on_field_name with data[0:8]
2025-09-03 19:39:08,096 - multipart.multipart - DEBUG - Calling on_field_data with data[9:32]
2025-09-03 19:39:08,096 - multipart.multipart - DEBUG - Calling on_field_end with no data
2025-09-03 19:39:08,096 - multipart.multipart - DEBUG - Calling on_field_start with no data
2025-09-03 19:39:08,097 - multipart.multipart - DEBUG - Calling on_field_name with data[33:41]
2025-09-03 19:39:08,097 - multipart.multipart - DEBUG - Calling on_field_data with data[42:50]
2025-09-03 19:39:08,098 - multipart.multipart - DEBUG - Calling on_field_end with no data
2025-09-03 19:39:08,098 - multipart.multipart - DEBUG - Calling on_end with no data
2025-09-03 19:39:08,101 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 19:39:08,101 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 19:39:08,111 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 19:39:08,113 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 19:39:08,113 - sqlalchemy.engine.Engine - INFO - [cached since 21.68s ago] ('prishatank6@gmail.com', 1, 0)
2025-09-03 19:39:08,115 - prompt_manager.app.database - ERROR - Error in database session: 
2025-09-03 19:39:08,115 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 19:39:08,115 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 19:39:08,115 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 19:39:08,115 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 401 Time: 22.83ms
2025-09-03 19:44:17,155 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 19:45:32,548 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 19:45:32,548 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("users")
2025-09-03 19:45:32,549 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 19:45:32,550 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("prompts")
2025-09-03 19:45:32,550 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 19:45:32,550 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("prompt_history")
2025-09-03 19:45:32,550 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 19:45:32,550 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-09-03 19:45:32,579 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 19:45:32,579 - prompt_manager.app.main - INFO - Log level: DEBUG
2025-09-03 19:45:32,579 - prompt_manager.app.main - INFO - Database URL: sqlite:////Users/prisha/Desktop/Coding/system prompt/prompts.db
2025-09-03 19:45:39,493 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 19:45:39,497 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 3.79ms
2025-09-03 19:45:53,805 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 19:45:53,809 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 4.27ms
2025-09-03 19:45:53,820 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-03 19:45:53,822 - multipart.multipart - DEBUG - Calling on_field_start with no data
2025-09-03 19:45:53,822 - multipart.multipart - DEBUG - Calling on_field_name with data[0:8]
2025-09-03 19:45:53,822 - multipart.multipart - DEBUG - Calling on_field_data with data[9:32]
2025-09-03 19:45:53,822 - multipart.multipart - DEBUG - Calling on_field_end with no data
2025-09-03 19:45:53,822 - multipart.multipart - DEBUG - Calling on_field_start with no data
2025-09-03 19:45:53,823 - multipart.multipart - DEBUG - Calling on_field_name with data[33:41]
2025-09-03 19:45:53,823 - multipart.multipart - DEBUG - Calling on_field_data with data[42:50]
2025-09-03 19:45:53,823 - multipart.multipart - DEBUG - Calling on_field_end with no data
2025-09-03 19:45:53,823 - multipart.multipart - DEBUG - Calling on_end with no data
2025-09-03 19:45:53,825 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 19:45:53,826 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 19:45:53,851 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 19:45:53,863 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 19:45:53,863 - sqlalchemy.engine.Engine - INFO - [generated in 0.00032s] ('prishatank6@gmail.com', 1, 0)
2025-09-03 19:45:53,865 - prompt_manager.app.database - ERROR - Error in database session: 
2025-09-03 19:45:53,865 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 19:45:53,866 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 19:45:53,866 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 19:45:53,866 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 401 Time: 45.67ms
2025-09-03 19:46:18,347 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 19:46:18,351 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 4.64ms
2025-09-03 19:46:18,361 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/register
2025-09-03 19:46:18,363 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 19:46:18,364 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 19:46:18,379 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 19:46:18,380 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 19:46:18,380 - sqlalchemy.engine.Engine - INFO - [cached since 24.52s ago] ('prishatank@gmail.com', 1, 0)
2025-09-03 19:46:18,382 - passlib.handlers.bcrypt - DEBUG - detected 'bcrypt' backend, version '4.0.1'
2025-09-03 19:46:18,383 - passlib.handlers.bcrypt - DEBUG - 'bcrypt' backend lacks $2$ support, enabling workaround
2025-09-03 19:46:18,661 - sqlalchemy.engine.Engine - INFO - INSERT INTO users (email, hashed_password, full_name, is_active, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?)
2025-09-03 19:46:18,661 - sqlalchemy.engine.Engine - INFO - [generated in 0.00031s] ('prishatank@gmail.com', '$2b$12$Z8a1js1eGNqDWxcBzg9x1uYVqwww7WPxl.npmEzE0dGp4hBpIWQny', 'Prisha Tank', 1, '2025-09-03 14:16:18.659576', '2025-09-03 14:16:18.659583')
2025-09-03 19:46:18,664 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-09-03 19:46:18,665 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 19:46:18,665 - sqlalchemy.engine.Engine - INFO - SELECT users.id, users.email, users.hashed_password, users.full_name, users.is_active, users.created_at, users.updated_at 
FROM users 
WHERE users.id = ?
2025-09-03 19:46:18,665 - sqlalchemy.engine.Engine - INFO - [generated in 0.00008s] (1,)
2025-09-03 19:46:18,667 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/register Status: 201 Time: 305.88ms
2025-09-03 19:46:18,667 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 19:46:18,667 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 19:46:18,667 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 19:46:18,667 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 19:46:34,249 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 19:46:34,251 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.65ms
2025-09-03 19:46:34,257 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-03 19:46:34,258 - multipart.multipart - DEBUG - Calling on_field_start with no data
2025-09-03 19:46:34,258 - multipart.multipart - DEBUG - Calling on_field_name with data[0:8]
2025-09-03 19:46:34,258 - multipart.multipart - DEBUG - Calling on_field_data with data[9:31]
2025-09-03 19:46:34,258 - multipart.multipart - DEBUG - Calling on_field_end with no data
2025-09-03 19:46:34,258 - multipart.multipart - DEBUG - Calling on_field_start with no data
2025-09-03 19:46:34,258 - multipart.multipart - DEBUG - Calling on_field_name with data[32:40]
2025-09-03 19:46:34,258 - multipart.multipart - DEBUG - Calling on_field_data with data[41:47]
2025-09-03 19:46:34,258 - multipart.multipart - DEBUG - Calling on_field_end with no data
2025-09-03 19:46:34,258 - multipart.multipart - DEBUG - Calling on_end with no data
2025-09-03 19:46:34,259 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 19:46:34,259 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 19:46:34,260 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 19:46:34,260 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 19:46:34,260 - sqlalchemy.engine.Engine - INFO - [cached since 40.4s ago] ('prishatank@gmail.com', 1, 0)
2025-09-03 19:46:34,531 - prompt_manager.app.api.v1.endpoints.auth - INFO - Created access token for user: prishatank@gmail.com
2025-09-03 19:46:34,533 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 200 Time: 276.06ms
2025-09-03 19:46:34,533 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 19:46:34,533 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 19:46:34,533 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 19:46:34,533 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 19:46:34,557 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 19:46:34,558 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.33ms
2025-09-03 19:46:37,028 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 19:46:37,029 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.48ms
2025-09-03 19:56:18,347 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 19:56:19,792 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 19:56:19,792 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("users")
2025-09-03 19:56:19,792 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 19:56:19,793 - sqlalchemy.engine.Engine - INFO - PRAGMA temp.table_info("users")
2025-09-03 19:56:19,793 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 19:56:19,794 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("prompts")
2025-09-03 19:56:19,794 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 19:56:19,794 - sqlalchemy.engine.Engine - INFO - PRAGMA temp.table_info("prompts")
2025-09-03 19:56:19,794 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 19:56:19,794 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("prompt_history")
2025-09-03 19:56:19,794 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 19:56:19,794 - sqlalchemy.engine.Engine - INFO - PRAGMA temp.table_info("prompt_history")
2025-09-03 19:56:19,794 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 19:56:19,794 - sqlalchemy.engine.Engine - INFO - 
CREATE TABLE users (
	id INTEGER NOT NULL, 
	email VARCHAR NOT NULL, 
	hashed_password VARCHAR NOT NULL, 
	full_name VARCHAR, 
	is_active BOOLEAN, 
	created_at DATETIME DEFAULT (CURRENT_TIMESTAMP), 
	updated_at DATETIME, 
	PRIMARY KEY (id)
)


2025-09-03 19:56:19,794 - sqlalchemy.engine.Engine - INFO - [no key 0.00005s] ()
2025-09-03 19:56:19,795 - sqlalchemy.engine.Engine - INFO - CREATE INDEX ix_users_id ON users (id)
2025-09-03 19:56:19,795 - sqlalchemy.engine.Engine - INFO - [no key 0.00007s] ()
2025-09-03 19:56:19,799 - sqlalchemy.engine.Engine - INFO - CREATE UNIQUE INDEX ix_users_email ON users (email)
2025-09-03 19:56:19,799 - sqlalchemy.engine.Engine - INFO - [no key 0.00011s] ()
2025-09-03 19:56:19,800 - sqlalchemy.engine.Engine - INFO - 
CREATE TABLE prompts (
	id INTEGER NOT NULL, 
	name VARCHAR NOT NULL, 
	version VARCHAR NOT NULL, 
	content TEXT NOT NULL, 
	description TEXT, 
	status VARCHAR(8) NOT NULL, 
	is_active BOOLEAN NOT NULL, 
	tags JSON, 
	metadata JSON, 
	created_by VARCHAR NOT NULL, 
	created_at DATETIME, 
	updated_at DATETIME, 
	PRIMARY KEY (id)
)


2025-09-03 19:56:19,800 - sqlalchemy.engine.Engine - INFO - [no key 0.00010s] ()
2025-09-03 19:56:19,801 - sqlalchemy.engine.Engine - INFO - CREATE INDEX ix_prompts_id ON prompts (id)
2025-09-03 19:56:19,801 - sqlalchemy.engine.Engine - INFO - [no key 0.00005s] ()
2025-09-03 19:56:19,801 - sqlalchemy.engine.Engine - INFO - CREATE INDEX ix_prompts_name ON prompts (name)
2025-09-03 19:56:19,802 - sqlalchemy.engine.Engine - INFO - [no key 0.00021s] ()
2025-09-03 19:56:19,803 - sqlalchemy.engine.Engine - INFO - 
CREATE TABLE prompt_history (
	id INTEGER NOT NULL, 
	prompt_id INTEGER NOT NULL, 
	version VARCHAR NOT NULL, 
	content TEXT NOT NULL, 
	description TEXT, 
	status VARCHAR(8) NOT NULL, 
	tags JSON, 
	metadata JSON, 
	changed_by VARCHAR NOT NULL, 
	changed_at DATETIME, 
	change_reason TEXT, 
	PRIMARY KEY (id), 
	FOREIGN KEY(prompt_id) REFERENCES prompts (id) ON DELETE CASCADE
)


2025-09-03 19:56:19,803 - sqlalchemy.engine.Engine - INFO - [no key 0.00013s] ()
2025-09-03 19:56:19,803 - sqlalchemy.engine.Engine - INFO - CREATE INDEX ix_prompt_history_id ON prompt_history (id)
2025-09-03 19:56:19,803 - sqlalchemy.engine.Engine - INFO - [no key 0.00005s] ()
2025-09-03 19:56:19,804 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-09-03 19:56:19,828 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 19:56:19,828 - prompt_manager.app.main - INFO - Log level: DEBUG
2025-09-03 19:56:19,828 - prompt_manager.app.main - INFO - Database URL: sqlite:////Users/prisha/Desktop/Coding/system prompt/prompts.db
2025-09-03 19:57:13,132 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 19:57:14,182 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 19:57:14,182 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("users")
2025-09-03 19:57:14,183 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 19:57:14,183 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("prompts")
2025-09-03 19:57:14,183 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 19:57:14,183 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("prompt_history")
2025-09-03 19:57:14,183 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 19:57:14,183 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-09-03 19:57:14,205 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 19:57:14,205 - prompt_manager.app.main - INFO - Log level: DEBUG
2025-09-03 19:57:14,205 - prompt_manager.app.main - INFO - Database URL: sqlite:////Users/prisha/Desktop/Coding/system prompt/prompts.db
2025-09-03 19:58:32,810 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 19:58:34,174 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 19:58:34,174 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("users")
2025-09-03 19:58:34,174 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 19:58:34,175 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("prompts")
2025-09-03 19:58:34,175 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 19:58:34,175 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("prompt_history")
2025-09-03 19:58:34,175 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 19:58:34,175 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-09-03 19:58:34,202 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 19:58:34,203 - prompt_manager.app.main - INFO - Log level: DEBUG
2025-09-03 19:58:34,203 - prompt_manager.app.main - INFO - Database URL: sqlite:////Users/prisha/Desktop/Coding/system prompt/prompts.db
2025-09-03 19:58:58,248 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 19:58:59,413 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 19:58:59,413 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("users")
2025-09-03 19:58:59,413 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 19:58:59,413 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("prompts")
2025-09-03 19:58:59,413 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 19:58:59,413 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("prompt_history")
2025-09-03 19:58:59,413 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 19:58:59,414 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-09-03 19:58:59,435 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 19:58:59,436 - prompt_manager.app.main - INFO - Log level: DEBUG
2025-09-03 19:58:59,436 - prompt_manager.app.main - INFO - Database URL: sqlite:////Users/prisha/Desktop/Coding/system prompt/prompts.db
2025-09-03 19:59:57,448 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 19:59:58,610 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 19:59:58,610 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("users")
2025-09-03 19:59:58,610 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 19:59:58,610 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("prompts")
2025-09-03 19:59:58,610 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 19:59:58,610 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("prompt_history")
2025-09-03 19:59:58,610 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-09-03 19:59:58,611 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-09-03 19:59:58,632 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 19:59:58,632 - prompt_manager.app.main - INFO - Log level: DEBUG
2025-09-03 19:59:58,632 - prompt_manager.app.main - INFO - Database URL: sqlite:////Users/prisha/Desktop/Coding/system prompt/prompts.db
2025-09-03 20:00:51,746 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 20:00:51,750 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 3.27ms
2025-09-03 20:01:08,373 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 20:01:08,376 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 2.51ms
2025-09-03 20:01:08,382 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-03 20:01:08,384 - multipart.multipart - DEBUG - Calling on_field_start with no data
2025-09-03 20:01:08,384 - multipart.multipart - DEBUG - Calling on_field_name with data[0:8]
2025-09-03 20:01:08,384 - multipart.multipart - DEBUG - Calling on_field_data with data[9:31]
2025-09-03 20:01:08,385 - multipart.multipart - DEBUG - Calling on_field_end with no data
2025-09-03 20:01:08,385 - multipart.multipart - DEBUG - Calling on_field_start with no data
2025-09-03 20:01:08,385 - multipart.multipart - DEBUG - Calling on_field_name with data[32:40]
2025-09-03 20:01:08,385 - multipart.multipart - DEBUG - Calling on_field_data with data[41:47]
2025-09-03 20:01:08,385 - multipart.multipart - DEBUG - Calling on_field_end with no data
2025-09-03 20:01:08,385 - multipart.multipart - DEBUG - Calling on_end with no data
2025-09-03 20:01:08,387 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 20:01:08,387 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 20:01:08,400 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 20:01:08,403 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 20:01:08,403 - sqlalchemy.engine.Engine - INFO - [generated in 0.00021s] ('prishatank@gmail.com', 1, 0)
2025-09-03 20:01:08,405 - prompt_manager.app.database - ERROR - Error in database session: 
2025-09-03 20:01:08,405 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 20:01:08,405 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 20:01:08,405 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 20:01:08,405 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 401 Time: 22.89ms
2025-09-03 20:01:27,271 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 20:01:27,275 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 4.07ms
2025-09-03 20:01:27,284 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/register
2025-09-03 20:01:27,286 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 20:01:27,287 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 20:01:27,304 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 20:01:27,305 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 20:01:27,305 - sqlalchemy.engine.Engine - INFO - [cached since 18.9s ago] ('prishatank@gmail.com', 1, 0)
2025-09-03 20:01:27,308 - passlib.handlers.bcrypt - DEBUG - detected 'bcrypt' backend, version '4.0.1'
2025-09-03 20:01:27,309 - passlib.handlers.bcrypt - DEBUG - 'bcrypt' backend lacks $2$ support, enabling workaround
2025-09-03 20:01:27,592 - sqlalchemy.engine.Engine - INFO - INSERT INTO users (email, hashed_password, full_name, is_active, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?)
2025-09-03 20:01:27,592 - sqlalchemy.engine.Engine - INFO - [generated in 0.00027s] ('prishatank@gmail.com', '$2b$12$Fh6kPMzwRQY1VpzvkyfR8ezY5O6HXIBToy6JQSJFW/rfNt7a3SQvW', 'Prisha Tank', 1, '2025-09-03 14:31:27.590745', '2025-09-03 14:31:27.590751')
2025-09-03 20:01:27,594 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-09-03 20:01:27,595 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 20:01:27,596 - sqlalchemy.engine.Engine - INFO - SELECT users.id, users.email, users.hashed_password, users.full_name, users.is_active, users.created_at, users.updated_at 
FROM users 
WHERE users.id = ?
2025-09-03 20:01:27,596 - sqlalchemy.engine.Engine - INFO - [generated in 0.00009s] (1,)
2025-09-03 20:01:27,596 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/register Status: 201 Time: 312.11ms
2025-09-03 20:01:27,597 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 20:01:27,597 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 20:01:27,597 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 20:01:27,597 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 20:01:35,214 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 20:01:35,216 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.57ms
2025-09-03 20:01:35,222 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-03 20:01:35,223 - multipart.multipart - DEBUG - Calling on_field_start with no data
2025-09-03 20:01:35,223 - multipart.multipart - DEBUG - Calling on_field_name with data[0:8]
2025-09-03 20:01:35,223 - multipart.multipart - DEBUG - Calling on_field_data with data[9:31]
2025-09-03 20:01:35,223 - multipart.multipart - DEBUG - Calling on_field_end with no data
2025-09-03 20:01:35,223 - multipart.multipart - DEBUG - Calling on_field_start with no data
2025-09-03 20:01:35,223 - multipart.multipart - DEBUG - Calling on_field_name with data[32:40]
2025-09-03 20:01:35,223 - multipart.multipart - DEBUG - Calling on_field_data with data[41:47]
2025-09-03 20:01:35,224 - multipart.multipart - DEBUG - Calling on_field_end with no data
2025-09-03 20:01:35,224 - multipart.multipart - DEBUG - Calling on_end with no data
2025-09-03 20:01:35,224 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 20:01:35,224 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 20:01:35,225 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 20:01:35,226 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 20:01:35,226 - sqlalchemy.engine.Engine - INFO - [cached since 26.82s ago] ('prishatank@gmail.com', 1, 0)
2025-09-03 20:01:35,501 - prompt_manager.app.api.v1.endpoints.auth - INFO - Created access token for user: prishatank@gmail.com
2025-09-03 20:01:35,502 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 200 Time: 280.1ms
2025-09-03 20:01:35,503 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 20:01:35,503 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 20:01:35,503 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 20:01:35,503 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 20:01:35,527 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 20:01:35,528 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.31ms
2025-09-03 20:01:37,127 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 20:01:37,127 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.86ms
2025-09-03 20:04:46,563 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 20:04:46,574 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 11.09ms
2025-09-03 20:04:46,584 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/
2025-09-03 20:04:46,587 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 20:04:46,587 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 20:04:46,588 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 20:04:46,588 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 20:04:46,588 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 20:04:46,588 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 20:04:46,588 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 20:04:46,594 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 20:04:46,594 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 14:16:34+00:00 (UTC)
2025-09-03 20:04:46,594 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 20:04:46,594 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 20:04:46,599 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 20:04:46,600 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 20:04:46,600 - sqlalchemy.engine.Engine - INFO - [cached since 218.2s ago] ('prishatank@gmail.com', 1, 0)
2025-09-03 20:04:46,602 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 20:04:46,605 - prompt_manager.app.api.v1.api - INFO - Creating new prompt: coding_assistant version 1.0.0
2025-09-03 20:04:46,609 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 20:04:46,611 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.name = ? AND prompts.version = ?
 LIMIT ? OFFSET ?
2025-09-03 20:04:46,612 - sqlalchemy.engine.Engine - INFO - [generated in 0.00037s] ('coding_assistant', '1.0.0', 1, 0)
2025-09-03 20:04:46,614 - sqlalchemy.engine.Engine - INFO - INSERT INTO prompts (name, version, content, description, status, is_active, tags, metadata, created_by, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-09-03 20:04:46,614 - sqlalchemy.engine.Engine - INFO - [generated in 0.00026s] ('coding_assistant', '1.0.0', 'You are a highly skilled coding assistant. Help users by writing clean, efficient, and well-documented code. Explain your solution step-by-step, suggest optimizations, and follow best practices. When relevant, provide examples in Python and mention alternative approaches.', 'Initial version of coding assistant prompt for helping developers with code generation and explanations.', 'draft', 0, '["coding", "assistant", "development"]', '{"category": "development"}', 'prishatank@gmail.com', '2025-09-03 14:34:46.614397', '2025-09-03 14:34:46.614406')
2025-09-03 20:04:46,616 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-09-03 20:04:46,617 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 20:04:46,618 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.id = ?
2025-09-03 20:04:46,618 - sqlalchemy.engine.Engine - INFO - [generated in 0.00025s] (1,)
2025-09-03 20:04:46,620 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.id = ?
 LIMIT ? OFFSET ?
2025-09-03 20:04:46,621 - sqlalchemy.engine.Engine - INFO - [generated in 0.00138s] (1, 1, 0)
2025-09-03 20:04:46,623 - sqlalchemy.engine.Engine - INFO - INSERT INTO prompt_history (prompt_id, version, content, description, status, tags, metadata, changed_by, changed_at, change_reason) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-09-03 20:04:46,623 - sqlalchemy.engine.Engine - INFO - [generated in 0.00019s] (1, '1.0.0', 'You are a highly skilled coding assistant. Help users by writing clean, efficient, and well-documented code. Explain your solution step-by-step, suggest optimizations, and follow best practices. When relevant, provide examples in Python and mention alternative approaches.', 'Initial version of coding assistant prompt for helping developers with code generation and explanations.', 'draft', '["coding", "assistant", "development"]', '{"category": "development"}', 'prishatank@gmail.com', '2025-09-03 14:34:46.622971', "create: {'status': 'draft'}")
2025-09-03 20:04:46,623 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-09-03 20:04:46,624 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 20:04:46,624 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.id = ?
2025-09-03 20:04:46,624 - sqlalchemy.engine.Engine - INFO - [cached since 0.006439s ago] (1,)
2025-09-03 20:04:46,624 - prompt_manager.app.api.v1.api - INFO - Successfully created prompt coding_assistant v1.0.0 (ID: 1)
2025-09-03 20:04:46,626 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/ Status: 201 Time: 42.62ms
2025-09-03 20:04:46,627 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 20:04:46,627 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 20:04:46,627 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 20:04:46,627 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 20:04:46,627 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 20:04:55,826 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 20:04:55,828 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.8ms
2025-09-03 20:04:55,841 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/?skip=0&limit=10
2025-09-03 20:04:55,842 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 20:04:55,842 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 20:04:55,842 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 20:04:55,842 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 20:04:55,842 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 20:04:55,842 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 20:04:55,843 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 20:04:55,843 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 20:04:55,843 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 14:16:34+00:00 (UTC)
2025-09-03 20:04:55,843 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 20:04:55,843 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 20:04:55,844 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 20:04:55,845 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 20:04:55,845 - sqlalchemy.engine.Engine - INFO - [cached since 227.4s ago] ('prishatank@gmail.com', 1, 0)
2025-09-03 20:04:55,846 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 20:04:55,848 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 20:04:55,849 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 20:04:55,857 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts) AS anon_1
2025-09-03 20:04:55,857 - sqlalchemy.engine.Engine - INFO - [generated in 0.00033s] ()
2025-09-03 20:04:55,858 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts ORDER BY prompts.updated_at DESC
 LIMIT ? OFFSET ?
2025-09-03 20:04:55,858 - sqlalchemy.engine.Engine - INFO - [generated in 0.00025s] (10, 0)
2025-09-03 20:04:55,859 - prompt_manager.app.api.v1.api - INFO - Found 1 prompts out of 1 total
2025-09-03 20:04:55,859 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/?skip=0&limit=10 Status: 200 Time: 18.82ms
2025-09-03 20:04:55,860 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 20:04:55,860 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 20:04:55,860 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 20:04:55,860 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 20:04:55,861 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 20:05:11,320 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 20:05:11,324 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 20:05:11,325 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 5.19ms
2025-09-03 20:05:11,326 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 2.04ms
2025-09-03 20:05:11,404 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/?query=coding_assistant
2025-09-03 20:05:11,406 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 20:05:11,406 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 20:05:11,406 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 20:05:11,406 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 20:05:11,406 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 20:05:11,406 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 20:05:11,406 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 20:05:11,407 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 20:05:11,407 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 14:16:34+00:00 (UTC)
2025-09-03 20:05:11,407 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 20:05:11,407 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 20:05:11,409 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 20:05:11,410 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 20:05:11,410 - sqlalchemy.engine.Engine - INFO - [cached since 243s ago] ('prishatank@gmail.com', 1, 0)
2025-09-03 20:05:11,411 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 20:05:11,411 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=coding_assistant, status=None, tag=None
2025-09-03 20:05:11,412 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 20:05:11,414 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE lower(prompts.name) LIKE lower(?) OR lower(prompts.content) LIKE lower(?) OR lower(prompts.description) LIKE lower(?)) AS anon_1
2025-09-03 20:05:11,414 - sqlalchemy.engine.Engine - INFO - [generated in 0.00022s] ('%coding_assistant%', '%coding_assistant%', '%coding_assistant%')
2025-09-03 20:05:11,415 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE lower(prompts.name) LIKE lower(?) OR lower(prompts.content) LIKE lower(?) OR lower(prompts.description) LIKE lower(?) ORDER BY prompts.updated_at DESC
 LIMIT ? OFFSET ?
2025-09-03 20:05:11,415 - sqlalchemy.engine.Engine - INFO - [generated in 0.00015s] ('%coding_assistant%', '%coding_assistant%', '%coding_assistant%', 100, 0)
2025-09-03 20:05:11,416 - prompt_manager.app.api.v1.api - INFO - Found 1 prompts out of 1 total
2025-09-03 20:05:11,416 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/?query=coding_assistant Status: 200 Time: 12.29ms
2025-09-03 20:05:11,417 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 20:05:11,417 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 20:05:11,417 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 20:05:11,418 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 20:05:11,418 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 20:05:18,877 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 20:05:18,878 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.79ms
2025-09-03 20:05:22,522 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 20:05:22,523 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.71ms
2025-09-03 20:05:24,345 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 20:05:24,346 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.93ms
2025-09-03 20:05:24,399 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 20:05:24,399 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.49ms
2025-09-03 20:05:24,405 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/?tag=development
2025-09-03 20:05:24,406 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 20:05:24,406 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 20:05:24,406 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 20:05:24,406 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 20:05:24,406 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 20:05:24,406 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 20:05:24,407 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 20:05:24,407 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 20:05:24,407 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 14:16:34+00:00 (UTC)
2025-09-03 20:05:24,407 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 20:05:24,407 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 20:05:24,407 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 20:05:24,407 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 20:05:24,407 - sqlalchemy.engine.Engine - INFO - [cached since 256s ago] ('prishatank@gmail.com', 1, 0)
2025-09-03 20:05:24,407 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 20:05:24,408 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=development
2025-09-03 20:05:24,408 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 20:05:24,409 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE json_extract(prompts.tags, ?) LIKE ?) AS anon_1
2025-09-03 20:05:24,410 - sqlalchemy.engine.Engine - INFO - [generated in 0.00034s] ('$', '%"development"%')
2025-09-03 20:05:24,412 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE json_extract(prompts.tags, ?) LIKE ? ORDER BY prompts.updated_at DESC
 LIMIT ? OFFSET ?
2025-09-03 20:05:24,412 - sqlalchemy.engine.Engine - INFO - [generated in 0.00037s] ('$', '%"development"%', 100, 0)
2025-09-03 20:05:24,413 - prompt_manager.app.api.v1.api - INFO - Found 1 prompts out of 1 total
2025-09-03 20:05:24,414 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/?tag=development Status: 200 Time: 9.14ms
2025-09-03 20:05:24,415 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 20:05:24,415 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 20:05:24,416 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 20:05:24,416 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 20:05:24,416 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 20:05:26,949 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 20:05:26,950 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.01ms
2025-09-03 20:05:27,742 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 20:05:27,742 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.76ms
2025-09-03 20:05:27,755 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/?tag=development&status=draft
2025-09-03 20:05:27,756 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 20:05:27,756 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 20:05:27,757 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 20:05:27,757 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 20:05:27,757 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 20:05:27,757 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 20:05:27,757 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 20:05:27,758 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 20:05:27,758 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 14:16:34+00:00 (UTC)
2025-09-03 20:05:27,758 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 20:05:27,758 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 20:05:27,759 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 20:05:27,759 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 20:05:27,760 - sqlalchemy.engine.Engine - INFO - [cached since 259.4s ago] ('prishatank@gmail.com', 1, 0)
2025-09-03 20:05:27,760 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 20:05:27,761 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=PromptStatus.DRAFT, tag=development
2025-09-03 20:05:27,762 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 20:05:27,764 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.status = ? AND json_extract(prompts.tags, ?) LIKE ?) AS anon_1
2025-09-03 20:05:27,765 - sqlalchemy.engine.Engine - INFO - [generated in 0.00037s] ('draft', '$', '%"development"%')
2025-09-03 20:05:27,766 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.status = ? AND json_extract(prompts.tags, ?) LIKE ? ORDER BY prompts.updated_at DESC
 LIMIT ? OFFSET ?
2025-09-03 20:05:27,766 - sqlalchemy.engine.Engine - INFO - [generated in 0.00024s] ('draft', '$', '%"development"%', 100, 0)
2025-09-03 20:05:27,768 - prompt_manager.app.api.v1.api - INFO - Found 1 prompts out of 1 total
2025-09-03 20:05:27,768 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/?tag=development&status=draft Status: 200 Time: 13.45ms
2025-09-03 20:05:27,770 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 20:05:27,770 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 20:05:27,770 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 20:05:27,770 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 20:05:27,770 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 20:05:29,867 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 20:05:29,868 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.02ms
2025-09-03 20:05:30,606 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 20:05:30,606 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.48ms
2025-09-03 20:05:30,613 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/?tag=development&status=active
2025-09-03 20:05:30,614 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 20:05:30,614 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 20:05:30,614 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 20:05:30,614 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 20:05:30,614 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 20:05:30,614 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 20:05:30,614 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 20:05:30,614 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 20:05:30,614 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 14:16:34+00:00 (UTC)
2025-09-03 20:05:30,614 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 20:05:30,614 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 20:05:30,615 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 20:05:30,615 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 20:05:30,615 - sqlalchemy.engine.Engine - INFO - [cached since 262.2s ago] ('prishatank@gmail.com', 1, 0)
2025-09-03 20:05:30,615 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 20:05:30,616 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=PromptStatus.ACTIVE, tag=development
2025-09-03 20:05:30,616 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 20:05:30,616 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.status = ? AND json_extract(prompts.tags, ?) LIKE ?) AS anon_1
2025-09-03 20:05:30,616 - sqlalchemy.engine.Engine - INFO - [cached since 2.852s ago] ('active', '$', '%"development"%')
2025-09-03 20:05:30,617 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.status = ? AND json_extract(prompts.tags, ?) LIKE ? ORDER BY prompts.updated_at DESC
 LIMIT ? OFFSET ?
2025-09-03 20:05:30,617 - sqlalchemy.engine.Engine - INFO - [cached since 2.851s ago] ('active', '$', '%"development"%', 100, 0)
2025-09-03 20:05:30,618 - prompt_manager.app.api.v1.api - INFO - Found 0 prompts out of 0 total
2025-09-03 20:05:30,618 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/?tag=development&status=active Status: 200 Time: 5.48ms
2025-09-03 20:05:30,619 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 20:05:30,620 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 20:05:30,620 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 20:05:30,620 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 20:05:30,620 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 20:05:37,698 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 20:05:37,700 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 2.14ms
2025-09-03 20:05:46,596 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 20:05:46,597 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.07ms
2025-09-03 20:05:47,652 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 20:05:47,653 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.84ms
2025-09-03 20:05:48,821 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 20:05:48,821 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.58ms
2025-09-03 20:05:48,826 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/?created_by=prishatank%40gmail.com
2025-09-03 20:05:48,827 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 20:05:48,828 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 20:05:48,828 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 20:05:48,828 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 20:05:48,828 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 20:05:48,828 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 20:05:48,828 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 20:05:48,828 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 20:05:48,828 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 14:16:34+00:00 (UTC)
2025-09-03 20:05:48,828 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 20:05:48,828 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 20:05:48,829 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 20:05:48,829 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 20:05:48,830 - sqlalchemy.engine.Engine - INFO - [cached since 280.4s ago] ('prishatank@gmail.com', 1, 0)
2025-09-03 20:05:48,830 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 20:05:48,830 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 20:05:48,830 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 20:05:48,832 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.created_by = ?) AS anon_1
2025-09-03 20:05:48,832 - sqlalchemy.engine.Engine - INFO - [generated in 0.00027s] ('prishatank@gmail.com',)
2025-09-03 20:05:48,833 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.created_by = ? ORDER BY prompts.updated_at DESC
 LIMIT ? OFFSET ?
2025-09-03 20:05:48,833 - sqlalchemy.engine.Engine - INFO - [generated in 0.00029s] ('prishatank@gmail.com', 100, 0)
2025-09-03 20:05:48,834 - prompt_manager.app.api.v1.api - INFO - Found 1 prompts out of 1 total
2025-09-03 20:05:48,835 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/?created_by=prishatank%40gmail.com Status: 200 Time: 8.41ms
2025-09-03 20:05:48,835 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 20:05:48,835 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 20:05:48,835 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 20:05:48,835 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 20:05:48,836 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 20:05:52,009 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 20:05:52,009 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.8ms
2025-09-03 20:05:52,022 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/1
2025-09-03 20:05:52,023 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 20:05:52,024 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 20:05:52,024 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 20:05:52,024 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 20:05:52,024 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 20:05:52,024 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 20:05:52,024 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 20:05:52,025 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 20:05:52,025 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 14:16:34+00:00 (UTC)
2025-09-03 20:05:52,025 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 20:05:52,025 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 20:05:52,026 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 20:05:52,026 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 20:05:52,026 - sqlalchemy.engine.Engine - INFO - [cached since 283.6s ago] ('prishatank@gmail.com', 1, 0)
2025-09-03 20:05:52,027 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 20:05:52,027 - prompt_manager.app.api.v1.api - INFO - Retrieving prompt with ID: 1
2025-09-03 20:05:52,028 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 20:05:52,028 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.id = ?
 LIMIT ? OFFSET ?
2025-09-03 20:05:52,028 - sqlalchemy.engine.Engine - INFO - [cached since 65.41s ago] (1, 1, 0)
2025-09-03 20:05:52,029 - prompt_manager.app.api.v1.api - INFO - Successfully retrieved prompt coding_assistant v1.0.0 (ID: 1)
2025-09-03 20:05:52,029 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/1 Status: 200 Time: 7.26ms
2025-09-03 20:05:52,030 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 20:05:52,030 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 20:05:52,030 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 20:05:52,030 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 20:05:52,030 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 20:06:00,226 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 20:06:00,227 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.12ms
2025-09-03 20:06:00,236 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/1
2025-09-03 20:06:00,236 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 20:06:00,236 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 20:06:00,237 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 20:06:00,237 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 20:06:00,237 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 20:06:00,237 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 20:06:00,237 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 20:06:00,237 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 20:06:00,237 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 14:16:34+00:00 (UTC)
2025-09-03 20:06:00,237 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 20:06:00,237 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 20:06:00,238 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 20:06:00,238 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 20:06:00,238 - sqlalchemy.engine.Engine - INFO - [cached since 291.8s ago] ('prishatank@gmail.com', 1, 0)
2025-09-03 20:06:00,238 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 20:06:00,239 - prompt_manager.app.api.v1.api - INFO - Retrieving prompt with ID: 1
2025-09-03 20:06:00,239 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 20:06:00,239 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.id = ?
 LIMIT ? OFFSET ?
2025-09-03 20:06:00,239 - sqlalchemy.engine.Engine - INFO - [cached since 73.62s ago] (1, 1, 0)
2025-09-03 20:06:00,240 - prompt_manager.app.api.v1.api - INFO - Successfully retrieved prompt coding_assistant v1.0.0 (ID: 1)
2025-09-03 20:06:00,240 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/1 Status: 200 Time: 4.22ms
2025-09-03 20:06:00,240 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 20:06:00,240 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 20:06:00,241 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 20:06:00,241 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 20:06:00,241 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 20:07:45,620 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 20:07:45,630 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 9.59ms
2025-09-03 20:07:56,276 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 20:07:56,280 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 3.62ms
2025-09-03 20:08:06,202 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 20:08:06,204 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 2.24ms
2025-09-03 20:08:10,729 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 20:08:10,730 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.77ms
2025-09-03 20:08:14,016 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 20:08:14,017 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.11ms
2025-09-03 20:08:14,070 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 20:08:14,070 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.54ms
2025-09-03 20:08:14,079 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/1/update-version
2025-09-03 20:08:14,082 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 20:08:14,083 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 20:08:14,083 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 20:08:14,083 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 20:08:14,083 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 20:08:14,083 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 20:08:14,083 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 20:08:14,089 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 20:08:14,089 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 14:16:34+00:00 (UTC)
2025-09-03 20:08:14,089 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 20:08:14,089 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 20:08:14,095 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 20:08:14,096 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 20:08:14,096 - sqlalchemy.engine.Engine - INFO - [cached since 425.7s ago] ('prishatank@gmail.com', 1, 0)
2025-09-03 20:08:14,099 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 20:08:14,101 - prompt_manager.app.api.v1.api - INFO - Auto-updating prompt ID 1 (user: prishatank@gmail.com)
2025-09-03 20:08:14,101 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 20:08:14,102 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.id = ?
 LIMIT ? OFFSET ?
2025-09-03 20:08:14,102 - sqlalchemy.engine.Engine - INFO - [cached since 207.5s ago] (1, 1, 0)
2025-09-03 20:08:14,103 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.name = ? ORDER BY prompts.version DESC
 LIMIT ? OFFSET ?
2025-09-03 20:08:14,103 - sqlalchemy.engine.Engine - INFO - [generated in 0.00018s] ('coding_assistant', 1, 0)
2025-09-03 20:08:14,105 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.name = ? AND prompts.version = ?
 LIMIT ? OFFSET ?
2025-09-03 20:08:14,105 - sqlalchemy.engine.Engine - INFO - [cached since 207.5s ago] ('coding_assistant', '1.0.1', 1, 0)
2025-09-03 20:08:14,107 - sqlalchemy.engine.Engine - INFO - INSERT INTO prompts (name, version, content, description, status, is_active, tags, metadata, created_by, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-09-03 20:08:14,107 - sqlalchemy.engine.Engine - INFO - [cached since 207.5s ago] ('coding_assistant', '1.0.1', 'You are a coding assistant. Write clean and efficient code for small tasks. Explain your solution briefly and add comments in the code. Support common languages like Python and JavaScript. If errors are present, help debug them.', 'Simplified coding assistant prompt for handling small coding tasks with explanations and debugging.', 'draft', 0, '["coding", "assistant", "development", "debugging", "js"]', '{"category, priority": "development, medium"}', 'prishatank@gmail.com', '2025-09-03 14:38:14.107008', '2025-09-03 14:38:14.107011')
2025-09-03 20:08:14,109 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-09-03 20:08:14,111 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 20:08:14,112 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.id = ?
2025-09-03 20:08:14,114 - sqlalchemy.engine.Engine - INFO - [cached since 207.5s ago] (2,)
2025-09-03 20:08:14,115 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.id = ?
 LIMIT ? OFFSET ?
2025-09-03 20:08:14,115 - sqlalchemy.engine.Engine - INFO - [cached since 207.5s ago] (2, 1, 0)
2025-09-03 20:08:14,116 - sqlalchemy.engine.Engine - INFO - INSERT INTO prompt_history (prompt_id, version, content, description, status, tags, metadata, changed_by, changed_at, change_reason) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-09-03 20:08:14,116 - sqlalchemy.engine.Engine - INFO - [cached since 207.5s ago] (2, '1.0.1', 'You are a coding assistant. Write clean and efficient code for small tasks. Explain your solution briefly and add comments in the code. Support common languages like Python and JavaScript. If errors are present, help debug them.', 'Simplified coding assistant prompt for handling small coding tasks with explanations and debugging.', 'draft', '["coding", "assistant", "development", "debugging", "js"]', '{"category, priority": "development, medium"}', 'prishatank@gmail.com', '2025-09-03 14:38:14.116173', "create: {'status': 'draft'}")
2025-09-03 20:08:14,116 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-09-03 20:08:14,117 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 20:08:14,117 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.id = ?
2025-09-03 20:08:14,117 - sqlalchemy.engine.Engine - INFO - [cached since 207.5s ago] (1,)
2025-09-03 20:08:14,117 - prompt_manager.app.api.v1.api - INFO - Successfully auto-incremented version to '1.0.1' for prompt 'coding_assistant'
2025-09-03 20:08:14,118 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.id = ?
2025-09-03 20:08:14,118 - sqlalchemy.engine.Engine - INFO - [cached since 207.5s ago] (2,)
2025-09-03 20:08:14,120 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/1/update-version Status: 200 Time: 41.59ms
2025-09-03 20:08:14,121 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 20:08:14,121 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 20:08:14,121 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 20:08:14,122 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 20:08:14,122 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 20:08:55,199 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 20:08:55,201 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 2.22ms
2025-09-03 20:08:55,259 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 20:08:55,260 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.82ms
2025-09-03 20:08:55,268 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/test-persona
2025-09-03 20:08:55,268 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 20:08:55,268 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 20:08:55,268 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 20:08:55,268 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 20:08:55,269 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 20:08:55,269 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 20:08:55,269 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 20:08:55,269 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 20:08:55,269 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 14:16:34+00:00 (UTC)
2025-09-03 20:08:55,269 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 20:08:55,269 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 20:08:55,269 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 20:08:55,269 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 20:08:55,269 - sqlalchemy.engine.Engine - INFO - [cached since 466.9s ago] ('prishatank@gmail.com', 1, 0)
2025-09-03 20:08:55,269 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 20:08:55,270 - prompt_manager.app.api.v1.api - INFO - Testing persona with automatic prompt selection (user: prishatank@gmail.com)
2025-09-03 20:08:55,272 - prompt_manager.app.crud.crud - INFO - Finding most relevant prompt for input: I want to write python code for palindrome
2025-09-03 20:08:55,272 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 20:08:55,275 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.status = ? AND prompts.is_active = 1
2025-09-03 20:08:55,275 - sqlalchemy.engine.Engine - INFO - [generated in 0.00041s] ('active',)
2025-09-03 20:08:55,275 - prompt_manager.app.crud.crud - INFO - Found 0 active prompts in the database
2025-09-03 20:08:55,275 - prompt_manager.app.crud.crud - WARNING - No active prompts found in the database
2025-09-03 20:08:55,276 - prompt_manager.app.database - ERROR - Error in database session: 
2025-09-03 20:08:55,276 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 20:08:55,276 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 20:08:55,276 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 20:08:55,276 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 20:08:55,276 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/test-persona Status: 404 Time: 8.75ms
2025-09-03 20:09:02,128 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 20:09:02,129 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.57ms
2025-09-03 20:09:09,015 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 20:09:09,018 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 3.22ms
2025-09-03 20:09:09,069 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 20:09:09,070 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.47ms
2025-09-03 20:09:09,074 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/name/coding_assistant/versions?skip=0&limit=10
2025-09-03 20:09:09,076 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 20:09:09,076 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 20:09:09,076 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 20:09:09,076 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 20:09:09,076 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 20:09:09,076 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 20:09:09,077 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 20:09:09,077 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 20:09:09,077 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 14:16:34+00:00 (UTC)
2025-09-03 20:09:09,078 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 20:09:09,078 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 20:09:09,079 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 20:09:09,080 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 20:09:09,080 - sqlalchemy.engine.Engine - INFO - [cached since 480.7s ago] ('prishatank@gmail.com', 1, 0)
2025-09-03 20:09:09,081 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 20:09:09,082 - prompt_manager.app.api.v1.api - INFO - Listing versions for prompt: coding_assistant
2025-09-03 20:09:09,082 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 20:09:09,083 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.name = ?
 LIMIT ? OFFSET ?
2025-09-03 20:09:09,083 - sqlalchemy.engine.Engine - INFO - [generated in 0.00020s] ('coding_assistant', 1, 0)
2025-09-03 20:09:09,090 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.name = ?) AS anon_1
2025-09-03 20:09:09,090 - sqlalchemy.engine.Engine - INFO - [generated in 0.00033s] ('coding_assistant',)
2025-09-03 20:09:09,092 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.name = ? ORDER BY prompts.created_at DESC
 LIMIT ? OFFSET ?
2025-09-03 20:09:09,092 - sqlalchemy.engine.Engine - INFO - [generated in 0.00026s] ('coding_assistant', 10, 0)
2025-09-03 20:09:09,093 - prompt_manager.app.api.v1.api - INFO - Found 2 versions for prompt: coding_assistant
2025-09-03 20:09:09,094 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/name/coding_assistant/versions?skip=0&limit=10 Status: 200 Time: 20.21ms
2025-09-03 20:09:09,095 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 20:09:09,095 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 20:09:09,095 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 20:09:09,095 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 20:09:09,096 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 20:09:21,011 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 20:09:21,012 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.5ms
2025-09-03 20:09:25,177 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 20:09:25,178 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.79ms
2025-09-03 20:09:25,225 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 20:09:25,225 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.43ms
2025-09-03 20:09:25,230 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/name/coding_assistant/version/1.0.1/activate
2025-09-03 20:09:25,231 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 20:09:25,231 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 20:09:25,231 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 20:09:25,232 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 20:09:25,232 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 20:09:25,232 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 20:09:25,232 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 20:09:25,232 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 20:09:25,232 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 14:16:34+00:00 (UTC)
2025-09-03 20:09:25,232 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 20:09:25,232 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 20:09:25,233 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 20:09:25,299 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 20:09:25,299 - sqlalchemy.engine.Engine - INFO - [cached since 496.9s ago] ('prishatank@gmail.com', 1, 0)
2025-09-03 20:09:25,299 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 20:09:25,299 - prompt_manager.app.api.v1.api - INFO - Setting active version for prompt 'coding_assistant' to version 1.0.1 (user: prishatank@gmail.com)
2025-09-03 20:09:25,299 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 20:09:25,299 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.name = ? AND prompts.version = ?
 LIMIT ? OFFSET ?
2025-09-03 20:09:25,300 - sqlalchemy.engine.Engine - INFO - [cached since 278.7s ago] ('coding_assistant', '1.0.1', 1, 0)
2025-09-03 20:09:25,300 - prompt_manager.app.api.v1.api - INFO - Setting prompt 'coding_assistant' version 1.0.1 as live version
2025-09-03 20:09:25,300 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.name = ? AND prompts.is_active = 1 AND prompts.id != ?
 LIMIT ? OFFSET ?
2025-09-03 20:09:25,300 - sqlalchemy.engine.Engine - INFO - [generated in 0.00013s] ('coding_assistant', 2, 1, 0)
2025-09-03 20:09:25,301 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.id = ?
 LIMIT ? OFFSET ?
2025-09-03 20:09:25,301 - sqlalchemy.engine.Engine - INFO - [cached since 278.7s ago] (2, 1, 0)
2025-09-03 20:09:25,301 - sqlalchemy.engine.Engine - INFO - UPDATE prompts SET status=?, is_active=?, updated_at=? WHERE prompts.id = ?
2025-09-03 20:09:25,302 - sqlalchemy.engine.Engine - INFO - [generated in 0.00008s] ('active', 1, '2025-09-03 14:39:25.300907', 2)
2025-09-03 20:09:25,303 - sqlalchemy.engine.Engine - INFO - INSERT INTO prompt_history (prompt_id, version, content, description, status, tags, metadata, changed_by, changed_at, change_reason) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-09-03 20:09:25,303 - sqlalchemy.engine.Engine - INFO - [cached since 278.7s ago] (2, '1.0.1', 'You are a coding assistant. Write clean and efficient code for small tasks. Explain your solution briefly and add comments in the code. Support common languages like Python and JavaScript. If errors are present, help debug them.', 'Simplified coding assistant prompt for handling small coding tasks with explanations and debugging.', 'active', '["coding", "assistant", "development", "debugging", "js"]', '{"category, priority": "development, medium"}', 'prishatank@gmail.com', '2025-09-03 14:39:25.303679', 'set_as_live_version')
2025-09-03 20:09:25,303 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-09-03 20:09:25,305 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 20:09:25,305 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id, prompts.name, prompts.version, prompts.content, prompts.description, prompts.status, prompts.is_active, prompts.tags, prompts.metadata, prompts.created_by, prompts.created_at, prompts.updated_at 
FROM prompts 
WHERE prompts.id = ?
2025-09-03 20:09:25,305 - sqlalchemy.engine.Engine - INFO - [generated in 0.00007s] (2,)
2025-09-03 20:09:25,305 - prompt_manager.app.api.v1.api - INFO - Successfully set prompt 'coding_assistant' version 1.0.1 as live version
2025-09-03 20:09:25,306 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/name/coding_assistant/version/1.0.1/activate Status: 200 Time: 75.6ms
2025-09-03 20:09:25,306 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 20:09:25,306 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 20:09:25,306 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 20:09:25,306 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 20:09:25,306 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 20:09:31,147 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 20:09:31,148 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 20:09:31,149 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.56ms
2025-09-03 20:09:31,149 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.95ms
2025-09-03 20:09:31,192 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/2/history?skip=0&limit=10
2025-09-03 20:09:31,193 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 20:09:31,193 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 20:09:31,193 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 20:09:31,193 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 20:09:31,193 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 20:09:31,193 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 20:09:31,193 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 20:09:31,194 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 20:09:31,194 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 14:16:34+00:00 (UTC)
2025-09-03 20:09:31,194 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 20:09:31,194 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 20:09:31,195 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 20:09:31,195 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 20:09:31,195 - sqlalchemy.engine.Engine - INFO - [cached since 502.8s ago] ('prishatank@gmail.com', 1, 0)
2025-09-03 20:09:31,195 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 20:09:31,195 - prompt_manager.app.api.v1.api - INFO - Retrieving history for prompt ID: 2
2025-09-03 20:09:31,196 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 20:09:31,196 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.id = ?
 LIMIT ? OFFSET ?
2025-09-03 20:09:31,196 - sqlalchemy.engine.Engine - INFO - [cached since 284.6s ago] (2, 1, 0)
2025-09-03 20:09:31,198 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT prompt_history.id AS prompt_history_id, prompt_history.prompt_id AS prompt_history_prompt_id, prompt_history.version AS prompt_history_version, prompt_history.content AS prompt_history_content, prompt_history.description AS prompt_history_description, prompt_history.status AS prompt_history_status, prompt_history.tags AS prompt_history_tags, prompt_history.metadata AS prompt_history_metadata, prompt_history.changed_by AS prompt_history_changed_by, prompt_history.changed_at AS prompt_history_changed_at, prompt_history.change_reason AS prompt_history_change_reason 
FROM prompt_history 
WHERE prompt_history.prompt_id = ?) AS anon_1
2025-09-03 20:09:31,198 - sqlalchemy.engine.Engine - INFO - [generated in 0.00023s] (2,)
2025-09-03 20:09:31,199 - sqlalchemy.engine.Engine - INFO - SELECT prompt_history.id AS prompt_history_id, prompt_history.prompt_id AS prompt_history_prompt_id, prompt_history.version AS prompt_history_version, prompt_history.content AS prompt_history_content, prompt_history.description AS prompt_history_description, prompt_history.status AS prompt_history_status, prompt_history.tags AS prompt_history_tags, prompt_history.metadata AS prompt_history_metadata, prompt_history.changed_by AS prompt_history_changed_by, prompt_history.changed_at AS prompt_history_changed_at, prompt_history.change_reason AS prompt_history_change_reason 
FROM prompt_history 
WHERE prompt_history.prompt_id = ? ORDER BY prompt_history.changed_at DESC
 LIMIT ? OFFSET ?
2025-09-03 20:09:31,199 - sqlalchemy.engine.Engine - INFO - [generated in 0.00022s] (2, 10, 0)
2025-09-03 20:09:31,200 - prompt_manager.app.api.v1.api - INFO - Found 2 history items for prompt ID: 2
2025-09-03 20:09:31,200 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/2/history?skip=0&limit=10 Status: 200 Time: 8.09ms
2025-09-03 20:09:31,201 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 20:09:31,201 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 20:09:31,201 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 20:09:31,201 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 20:09:31,201 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 20:09:44,843 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 20:09:44,845 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.3ms
2025-09-03 20:10:06,431 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 20:10:06,435 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 20:10:06,435 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 6.38ms
2025-09-03 20:10:06,437 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.79ms
2025-09-03 20:10:06,517 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/test-persona
2025-09-03 20:10:06,518 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 20:10:06,518 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 20:10:06,518 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 20:10:06,518 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 20:10:06,518 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 20:10:06,518 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 20:10:06,518 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 20:10:06,519 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 20:10:06,519 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 14:16:34+00:00 (UTC)
2025-09-03 20:10:06,519 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 20:10:06,519 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 20:10:06,529 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 20:10:06,531 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.email AS users_email, users.hashed_password AS users_hashed_password, users.full_name AS users_full_name, users.is_active AS users_is_active, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.email = ?
 LIMIT ? OFFSET ?
2025-09-03 20:10:06,531 - sqlalchemy.engine.Engine - INFO - [cached since 538.1s ago] ('prishatank@gmail.com', 1, 0)
2025-09-03 20:10:06,534 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 20:10:06,534 - prompt_manager.app.api.v1.api - INFO - Testing persona with automatic prompt selection (user: prishatank@gmail.com)
2025-09-03 20:10:06,535 - prompt_manager.app.crud.crud - INFO - Finding most relevant prompt for input: I want to write a python code for palindrome
2025-09-03 20:10:06,540 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-09-03 20:10:06,540 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.status = ? AND prompts.is_active = 1
2025-09-03 20:10:06,540 - sqlalchemy.engine.Engine - INFO - [cached since 71.27s ago] ('active',)
2025-09-03 20:10:06,541 - prompt_manager.app.crud.crud - INFO - Found 1 active prompts in the database
2025-09-03 20:10:06,541 - prompt_manager.app.crud.crud - INFO - Active prompt 1: ID=2, Name=coding_assistant, Status=active, is_active=True
2025-09-03 20:10:06,541 - prompt_manager.app.crud.crud - INFO - Only one active prompt found, returning ID: 2
2025-09-03 20:10:06,542 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.id = ?
 LIMIT ? OFFSET ?
2025-09-03 20:10:06,542 - sqlalchemy.engine.Engine - INFO - [cached since 319.9s ago] (2, 1, 0)
2025-09-03 20:10:06,542 - prompt_manager.app.api.v1.api - INFO - Testing persona for prompt ID 2 (user: prishatank@gmail.com)
2025-09-03 20:10:06,542 - sqlalchemy.engine.Engine - INFO - SELECT prompts.id AS prompts_id, prompts.name AS prompts_name, prompts.version AS prompts_version, prompts.content AS prompts_content, prompts.description AS prompts_description, prompts.status AS prompts_status, prompts.is_active AS prompts_is_active, prompts.tags AS prompts_tags, prompts.metadata AS prompts_metadata, prompts.created_by AS prompts_created_by, prompts.created_at AS prompts_created_at, prompts.updated_at AS prompts_updated_at 
FROM prompts 
WHERE prompts.id = ?
 LIMIT ? OFFSET ?
2025-09-03 20:10:06,542 - sqlalchemy.engine.Engine - INFO - [cached since 319.9s ago] (2, 1, 0)
2025-09-03 20:10:06,571 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-09-03 20:10:06,579 - httpx - DEBUG - load_verify_locations cafile='/Applications/anaconda3/lib/python3.11/site-packages/certifi/cacert.pem'
2025-09-03 20:10:06,601 - groq._base_client - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a coding assistant. Write clean and efficient code for small tasks. Explain your solution briefly and add comments in the code. Support common languages like Python and JavaScript. If errors are present, help debug them.'}, {'role': 'user', 'content': 'I want to write a python code for palindrome'}], 'model': 'llama-3.1-8b-instant', 'max_tokens': 1000, 'temperature': 0.7}}
2025-09-03 20:10:06,959 - httpcore.connection - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-09-03 20:10:07,193 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10794c4d0>
2025-09-03 20:10:07,194 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x107816b10> server_hostname='api.groq.com' timeout=5.0
2025-09-03 20:10:07,260 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x107a6bc90>
2025-09-03 20:10:07,260 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-03 20:10:07,261 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-09-03 20:10:07,261 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-03 20:10:07,261 - httpcore.http11 - DEBUG - send_request_body.complete
2025-09-03 20:10:07,261 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-03 20:10:07,962 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 03 Sep 2025 14:40:07 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Content-Encoding', b'br'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'bom'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'5921'), (b'x-ratelimit-reset-requests', b'6s'), (b'x-ratelimit-reset-tokens', b'790ms'), (b'x-request-id', b'req_01k480akpgfqc8gy1hf0jpp7dc'), (b'via', b'1.1 google'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=q5F6LKuDQRfI.VzUwYA5PepISYRZL..URr2xC6I7_D8-1756910407-1.0.1.1-DKDDB2ixujfEbnjStNrOQY21v5PUy_UUPZRaH23t9mLUNTcVg1u.BFygEfrisorIWDJtgtfCKb5GzDdg43J2JovxJg13vam7X5274va0oXk; path=/; expires=Wed, 03-Sep-25 15:10:07 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9796001dccbb37a5-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-03 20:10:07,963 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 20:10:07,964 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-03 20:10:07,965 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-09-03 20:10:07,965 - httpcore.http11 - DEBUG - response_closed.started
2025-09-03 20:10:07,965 - httpcore.http11 - DEBUG - response_closed.complete
2025-09-03 20:10:07,965 - groq._base_client - DEBUG - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
2025-09-03 20:10:07,970 - prompt_manager.app.api.v1.api - INFO - Generated persona response for prompt 'coding_assistant' with persona type 'dynamic_persona'
2025-09-03 20:10:07,970 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/test-persona Status: 200 Time: 1453.71ms
2025-09-03 20:10:07,971 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 20:10:07,971 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 20:10:07,971 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 20:10:07,971 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 20:10:07,972 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-09-03 20:14:28,837 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 20:14:28,926 - httpcore.connection - DEBUG - close.started
2025-09-03 20:14:28,935 - httpcore.connection - DEBUG - close.complete
2025-09-03 20:17:48,025 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 20:17:48,025 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-03 20:17:48,025 - prompt_manager.app.main - INFO - Database URL: sqlite:////Users/prisha/Desktop/Coding/system prompt/prompts.db
2025-09-03 20:18:10,712 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 20:18:10,714 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 2.4ms
2025-09-03 20:18:20,061 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 20:18:20,063 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 2.69ms
2025-09-03 20:19:47,986 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 20:19:47,990 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 4.13ms
2025-09-03 20:19:47,997 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/register
2025-09-03 20:19:47,999 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 20:19:47,999 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 20:19:48,313 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/register Status: 201 Time: 316.07ms
2025-09-03 20:19:48,313 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 20:19:48,313 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 20:19:48,313 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 20:20:05,235 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 20:20:05,239 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 4.59ms
2025-09-03 20:20:05,246 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-03 20:20:05,249 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 20:20:05,249 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 20:20:05,520 - prompt_manager.app.api.v1.endpoints.auth - INFO - Created access token for user: prishatank@gmail.com
2025-09-03 20:20:05,522 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 200 Time: 276.01ms
2025-09-03 20:20:05,523 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 20:20:05,523 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 20:20:05,523 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 20:20:05,562 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 20:20:05,562 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.31ms
2025-09-03 20:22:14,803 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 20:22:14,808 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 5.11ms
2025-09-03 20:22:14,814 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/auth/me
2025-09-03 20:22:14,818 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 20:22:14,819 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 20:22:14,820 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 20:22:14,820 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 20:22:14,820 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 20:22:14,820 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 20:22:14,820 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 20:22:14,824 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 20:22:14,824 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 14:50:05+00:00 (UTC)
2025-09-03 20:22:14,824 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 20:22:14,824 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 20:22:14,835 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 20:22:14,835 - prompt_manager.app.api.v1.endpoints.auth - INFO - Current user: <prompt_manager.app.models.user.User object at 0x10b054290>
2025-09-03 20:22:14,835 - prompt_manager.app.api.v1.endpoints.auth - INFO - Token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJwcmlzaGF0YW5rQGdtYWlsLmNvbSIsImVtYWlsIjoicHJpc2hhdGFua0BnbWFpbC5jb20iLCJ1c2VyX2lkIjoiMSIsInNjb3BlcyI6WyJtZSJdLCJleHAiOjE3NTY5OTc0MDUsImlhdCI6MTc1NjkxMTAwNSwibmJmIjoxNzU2OTExMDA1LCJpc3MiOiJQcm9tcHQgTWFuYWdlbWVudCBTZXJ2aWNlIiwiYXVkIjoiUHJvbXB0IE1hbmFnZW1lbnQgU2VydmljZSJ9.tL6JKA3CpuAkUUKwLzSIRextAUl9RiO4yCHqj557ENI
2025-09-03 20:22:14,839 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/auth/me Status: 200 Time: 24.79ms
2025-09-03 20:22:14,840 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 20:22:14,840 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 20:22:14,840 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 20:22:16,791 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 20:22:16,792 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.76ms
2025-09-03 20:27:29,327 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 20:27:29,330 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 2.89ms
2025-09-03 20:30:03,882 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 20:30:05,906 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 20:30:05,907 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-03 20:30:05,907 - prompt_manager.app.main - INFO - Database URL: sqlite:////Users/prisha/Desktop/Coding/system prompt/prompts.db
2025-09-03 20:30:15,211 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 20:30:16,373 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 20:30:16,373 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-03 20:30:16,373 - prompt_manager.app.main - INFO - Database URL: sqlite:////Users/prisha/Desktop/Coding/system prompt/prompts.db
2025-09-03 22:00:54,053 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:00:54,068 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 14.54ms
2025-09-03 22:00:54,078 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-03 22:00:54,084 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:00:54,090 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:00:54,123 - prompt_manager.app.database - ERROR - Error in database session: 
2025-09-03 22:00:54,123 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:00:54,124 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:00:54,124 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 401 Time: 45.56ms
2025-09-03 22:01:19,330 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:01:19,337 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 7.88ms
2025-09-03 22:01:19,345 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/register
2025-09-03 22:01:19,346 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:01:19,347 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:01:19,656 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/register Status: 201 Time: 311.16ms
2025-09-03 22:01:19,656 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:01:19,656 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:01:19,656 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:01:24,574 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:01:24,575 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.11ms
2025-09-03 22:01:24,582 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-03 22:01:24,584 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:01:24,584 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:01:24,874 - prompt_manager.app.api.v1.endpoints.auth - INFO - Created access token for user: prishatank@gmail.com
2025-09-03 22:01:24,876 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 200 Time: 293.66ms
2025-09-03 22:01:24,876 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:01:24,876 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:01:24,876 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:01:24,901 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:01:24,901 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.41ms
2025-09-03 22:01:26,696 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:01:26,697 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.93ms
2025-09-03 22:01:41,916 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:01:41,919 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 2.33ms
2025-09-03 22:01:41,930 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:01:41,932 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:01:41,932 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:01:41,932 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:01:41,932 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:01:41,932 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:01:41,932 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:01:41,932 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:01:41,933 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:01:41,933 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 16:31:24+00:00 (UTC)
2025-09-03 22:01:41,933 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:01:41,934 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:01:41,935 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:01:41,935 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:01:41,943 - prompt_manager.app.api.v1.api - INFO - Found 0 prompts out of 0 total
2025-09-03 22:01:41,945 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 14.52ms
2025-09-03 22:01:41,946 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:01:41,946 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:01:41,946 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:03:05,058 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:03:05,061 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 3.35ms
2025-09-03 22:03:05,069 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/
2025-09-03 22:03:05,071 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:03:05,071 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:03:05,072 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:03:05,072 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:03:05,072 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:03:05,072 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:03:05,072 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:03:05,073 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:03:05,073 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 16:31:24+00:00 (UTC)
2025-09-03 22:03:05,073 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:03:05,073 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:03:05,076 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:03:05,077 - prompt_manager.app.api.v1.api - INFO - Creating new prompt: coding_assistant version 1.0.0
2025-09-03 22:03:05,086 - prompt_manager.app.api.v1.api - INFO - Successfully created prompt coding_assistant v1.0.0 (ID: 1)
2025-09-03 22:03:05,087 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/ Status: 201 Time: 18.21ms
2025-09-03 22:03:05,087 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:03:05,087 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:03:05,087 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:03:15,580 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:03:15,581 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.03ms
2025-09-03 22:03:15,595 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/1
2025-09-03 22:03:15,596 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:03:15,596 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:03:15,597 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:03:15,597 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:03:15,597 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:03:15,597 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:03:15,597 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:03:15,598 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:03:15,598 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 16:31:24+00:00 (UTC)
2025-09-03 22:03:15,598 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:03:15,598 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:03:15,600 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:03:15,600 - prompt_manager.app.api.v1.api - INFO - Retrieving prompt with ID: 1
2025-09-03 22:03:15,601 - prompt_manager.app.api.v1.api - INFO - Successfully retrieved prompt coding_assistant v1.0.0 (ID: 1)
2025-09-03 22:03:15,601 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/1 Status: 200 Time: 6.82ms
2025-09-03 22:03:15,602 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:03:15,602 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:03:15,602 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:03:44,494 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:03:44,495 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.48ms
2025-09-03 22:03:44,549 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:03:44,550 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.5ms
2025-09-03 22:03:44,560 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/1/update-version
2025-09-03 22:03:44,562 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:03:44,562 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:03:44,562 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:03:44,562 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:03:44,562 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:03:44,562 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:03:44,562 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:03:44,563 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:03:44,563 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 16:31:24+00:00 (UTC)
2025-09-03 22:03:44,563 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:03:44,563 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:03:44,563 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:03:44,564 - prompt_manager.app.api.v1.api - INFO - Auto-updating prompt ID 1 (user: prishatank@gmail.com)
2025-09-03 22:03:44,570 - prompt_manager.app.api.v1.api - INFO - Successfully auto-incremented version to '1.0.1' for prompt 'coding_assistant'
2025-09-03 22:03:44,571 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/1/update-version Status: 200 Time: 10.38ms
2025-09-03 22:03:44,571 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:03:44,571 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:03:44,571 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:03:57,025 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:03:57,027 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.98ms
2025-09-03 22:04:06,162 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:04:06,163 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.11ms
2025-09-03 22:04:32,818 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:04:32,821 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:04:32,821 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 2.88ms
2025-09-03 22:04:32,822 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.04ms
2025-09-03 22:04:32,865 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/name/coding_assistant/version/1.0.1/activate
2025-09-03 22:04:32,868 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:04:32,868 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:04:32,868 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:04:32,868 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:04:32,868 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:04:32,868 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:04:32,868 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:04:32,870 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:04:32,870 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 16:31:24+00:00 (UTC)
2025-09-03 22:04:32,870 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:04:32,870 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:04:32,874 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:04:32,874 - prompt_manager.app.api.v1.api - INFO - Setting active version for prompt 'coding_assistant' to version 1.0.1 (user: prishatank@gmail.com)
2025-09-03 22:04:32,875 - prompt_manager.app.api.v1.api - INFO - Setting prompt 'coding_assistant' version 1.0.1 as live version
2025-09-03 22:04:32,886 - prompt_manager.app.api.v1.api - INFO - Successfully set prompt 'coding_assistant' version 1.0.1 as live version
2025-09-03 22:04:32,886 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/name/coding_assistant/version/1.0.1/activate Status: 200 Time: 21.12ms
2025-09-03 22:04:32,887 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:04:32,887 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:04:32,887 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:04:36,428 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:04:36,429 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.75ms
2025-09-03 22:05:55,071 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:05:55,074 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 3.34ms
2025-09-03 22:05:55,080 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/
2025-09-03 22:05:55,087 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:05:55,088 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:05:55,088 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:05:55,088 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:05:55,088 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:05:55,088 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:05:55,088 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:05:55,089 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:05:55,089 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 16:31:24+00:00 (UTC)
2025-09-03 22:05:55,089 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:05:55,089 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:05:55,094 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:05:55,094 - prompt_manager.app.api.v1.api - INFO - Creating new prompt: math_tutor  version 1.0.0
2025-09-03 22:05:55,100 - prompt_manager.app.api.v1.api - INFO - Successfully created prompt math_tutor  v1.0.0 (ID: 3)
2025-09-03 22:05:55,101 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/ Status: 201 Time: 21.38ms
2025-09-03 22:05:55,102 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:05:55,102 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:05:55,102 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:05:59,634 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:05:59,635 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.03ms
2025-09-03 22:06:07,382 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:06:07,384 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.76ms
2025-09-03 22:06:10,283 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:06:10,285 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:06:10,285 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.43ms
2025-09-03 22:06:10,286 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.45ms
2025-09-03 22:06:10,329 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/name/math_tutor/version/1.0.0/activate
2025-09-03 22:06:10,330 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:06:10,330 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:06:10,331 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:06:10,331 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:06:10,331 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:06:10,331 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:06:10,331 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:06:10,331 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:06:10,331 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 16:31:24+00:00 (UTC)
2025-09-03 22:06:10,331 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:06:10,331 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:06:10,333 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:06:10,333 - prompt_manager.app.api.v1.api - INFO - Setting active version for prompt 'math_tutor' to version 1.0.0 (user: prishatank@gmail.com)
2025-09-03 22:06:10,335 - prompt_manager.app.api.v1.api - WARNING - Prompt 'math_tutor' version '1.0.0' not found for activation
2025-09-03 22:06:10,336 - prompt_manager.app.api.v1.api - ERROR - Error setting prompt 'math_tutor' version 1.0.0 as live: 
Traceback (most recent call last):
  File "/Users/prisha/Desktop/Coding/system prompt/prompt_manager/app/api/v1/api.py", line 895, in set_active_version
    raise HTTPException(
fastapi.exceptions.HTTPException
2025-09-03 22:06:10,340 - prompt_manager.app.database - ERROR - Error in database session: 
2025-09-03 22:06:10,340 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:06:10,340 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:06:10,341 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/name/math_tutor/version/1.0.0/activate Status: 500 Time: 11.36ms
2025-09-03 22:06:13,695 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:06:13,696 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.1ms
2025-09-03 22:06:13,705 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/name/math_tutor/version/1.0.0/activate
2025-09-03 22:06:13,706 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:06:13,706 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:06:13,706 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:06:13,707 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:06:13,707 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:06:13,707 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:06:13,707 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:06:13,707 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:06:13,707 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 16:31:24+00:00 (UTC)
2025-09-03 22:06:13,708 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:06:13,708 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:06:13,708 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:06:13,709 - prompt_manager.app.api.v1.api - INFO - Setting active version for prompt 'math_tutor' to version 1.0.0 (user: prishatank@gmail.com)
2025-09-03 22:06:13,709 - prompt_manager.app.api.v1.api - WARNING - Prompt 'math_tutor' version '1.0.0' not found for activation
2025-09-03 22:06:13,709 - prompt_manager.app.api.v1.api - ERROR - Error setting prompt 'math_tutor' version 1.0.0 as live: 
Traceback (most recent call last):
  File "/Users/prisha/Desktop/Coding/system prompt/prompt_manager/app/api/v1/api.py", line 895, in set_active_version
    raise HTTPException(
fastapi.exceptions.HTTPException
2025-09-03 22:06:13,710 - prompt_manager.app.database - ERROR - Error in database session: 
2025-09-03 22:06:13,710 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:06:13,710 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:06:13,710 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/name/math_tutor/version/1.0.0/activate Status: 500 Time: 5.38ms
2025-09-03 22:06:19,908 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:06:19,909 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.72ms
2025-09-03 22:06:19,917 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/name/math_tutor/version/1.0.0/activate
2025-09-03 22:06:19,918 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:06:19,918 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:06:19,918 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:06:19,918 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:06:19,918 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:06:19,919 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:06:19,919 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:06:19,919 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:06:19,919 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 16:31:24+00:00 (UTC)
2025-09-03 22:06:19,919 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:06:19,919 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:06:19,920 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:06:19,921 - prompt_manager.app.api.v1.api - INFO - Setting active version for prompt 'math_tutor' to version 1.0.0 (user: prishatank@gmail.com)
2025-09-03 22:06:19,922 - prompt_manager.app.api.v1.api - WARNING - Prompt 'math_tutor' version '1.0.0' not found for activation
2025-09-03 22:06:19,922 - prompt_manager.app.api.v1.api - ERROR - Error setting prompt 'math_tutor' version 1.0.0 as live: 
Traceback (most recent call last):
  File "/Users/prisha/Desktop/Coding/system prompt/prompt_manager/app/api/v1/api.py", line 895, in set_active_version
    raise HTTPException(
fastapi.exceptions.HTTPException
2025-09-03 22:06:19,922 - prompt_manager.app.database - ERROR - Error in database session: 
2025-09-03 22:06:19,923 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:06:19,923 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:06:19,923 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/name/math_tutor/version/1.0.0/activate Status: 500 Time: 6.16ms
2025-09-03 22:06:21,045 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:06:21,046 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.79ms
2025-09-03 22:06:23,414 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:06:23,415 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.61ms
2025-09-03 22:06:23,427 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:06:23,429 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:06:23,429 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:06:23,429 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:06:23,429 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:06:23,429 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:06:23,429 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:06:23,430 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:06:23,430 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:06:23,430 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 16:31:24+00:00 (UTC)
2025-09-03 22:06:23,430 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:06:23,430 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:06:23,431 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:06:23,432 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:06:23,435 - prompt_manager.app.api.v1.api - INFO - Found 3 prompts out of 3 total
2025-09-03 22:06:23,436 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 8.24ms
2025-09-03 22:06:23,436 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:06:23,436 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:06:23,436 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:06:42,518 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:06:42,520 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.71ms
2025-09-03 22:06:48,474 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:06:48,475 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.92ms
2025-09-03 22:06:54,466 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:06:54,468 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:06:54,468 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 2.69ms
2025-09-03 22:06:54,469 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.36ms
2025-09-03 22:06:54,537 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/name/math_tutor/version/1.0.0/activate
2025-09-03 22:06:54,538 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:06:54,538 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:06:54,538 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:06:54,538 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:06:54,539 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:06:54,539 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:06:54,539 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:06:54,539 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:06:54,539 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 16:31:24+00:00 (UTC)
2025-09-03 22:06:54,539 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:06:54,539 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:06:54,542 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:06:54,542 - prompt_manager.app.api.v1.api - INFO - Setting active version for prompt 'math_tutor' to version 1.0.0 (user: prishatank@gmail.com)
2025-09-03 22:06:54,544 - prompt_manager.app.api.v1.api - WARNING - Prompt 'math_tutor' version '1.0.0' not found for activation
2025-09-03 22:06:54,544 - prompt_manager.app.api.v1.api - ERROR - Error setting prompt 'math_tutor' version 1.0.0 as live: 
Traceback (most recent call last):
  File "/Users/prisha/Desktop/Coding/system prompt/prompt_manager/app/api/v1/api.py", line 895, in set_active_version
    raise HTTPException(
fastapi.exceptions.HTTPException
2025-09-03 22:06:54,546 - prompt_manager.app.database - ERROR - Error in database session: 
2025-09-03 22:06:54,546 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:06:54,547 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:06:54,547 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/name/math_tutor/version/1.0.0/activate Status: 500 Time: 10.49ms
2025-09-03 22:08:05,013 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:08:05,020 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 7.58ms
2025-09-03 22:08:41,329 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:08:41,333 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 4.33ms
2025-09-03 22:08:41,975 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:08:41,976 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.67ms
2025-09-03 22:08:41,994 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/test-persona
2025-09-03 22:08:41,998 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:08:41,998 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:08:41,998 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:08:41,998 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:08:41,999 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:08:41,999 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:08:41,999 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:08:42,008 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:08:42,008 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 16:31:24+00:00 (UTC)
2025-09-03 22:08:42,009 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:08:42,009 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:08:42,019 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:08:42,020 - prompt_manager.app.api.v1.api - INFO - Testing persona with automatic prompt selection (user: prishatank@gmail.com)
2025-09-03 22:08:42,020 - prompt_manager.app.crud.crud - INFO - Finding most relevant prompt for input: I want to write a python code for palindrome.
2025-09-03 22:08:42,028 - prompt_manager.app.crud.crud - INFO - Found 1 active prompts in the database
2025-09-03 22:08:42,028 - prompt_manager.app.crud.crud - INFO - Active prompt 1: ID=2, Name=coding_assistant, Status=active, is_active=True
2025-09-03 22:08:42,028 - prompt_manager.app.crud.crud - INFO - Only one active prompt found, returning ID: 2
2025-09-03 22:08:42,029 - prompt_manager.app.api.v1.api - INFO - Testing persona for prompt ID 2 (user: prishatank@gmail.com)
2025-09-03 22:08:43,292 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 22:08:43,309 - prompt_manager.app.api.v1.api - INFO - Generated persona response for prompt 'coding_assistant' with persona type 'dynamic_persona'
2025-09-03 22:08:43,311 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/test-persona Status: 200 Time: 1316.94ms
2025-09-03 22:08:43,314 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:08:43,314 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:08:43,315 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:08:50,893 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 22:08:53,833 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 22:08:53,833 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-03 22:08:53,833 - prompt_manager.app.main - INFO - Database URL: sqlite:////Users/prisha/Desktop/Coding/system prompt/prompts.db
2025-09-03 22:09:08,772 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:09:08,775 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 3.13ms
2025-09-03 22:09:08,792 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:09:08,800 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:09:08,800 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:09:08,802 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:09:08,802 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:09:08,803 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:09:08,803 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:09:08,803 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:09:08,810 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:09:08,810 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 16:31:24+00:00 (UTC)
2025-09-03 22:09:08,810 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:09:08,810 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:09:08,822 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:09:08,825 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:09:08,851 - prompt_manager.app.api.v1.api - INFO - Found 3 prompts out of 3 total
2025-09-03 22:09:08,853 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 60.78ms
2025-09-03 22:09:08,855 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:09:08,855 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:09:08,855 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:10:55,042 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:10:55,048 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 5.64ms
2025-09-03 22:10:59,027 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:10:59,028 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.87ms
2025-09-03 22:12:11,512 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:12:11,516 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 4.67ms
2025-09-03 22:12:29,272 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:12:29,273 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.65ms
2025-09-03 22:12:29,286 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:12:29,289 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:12:29,289 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:12:29,290 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:12:29,291 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:12:29,291 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:12:29,291 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:12:29,291 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:12:29,294 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:12:29,294 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 16:31:24+00:00 (UTC)
2025-09-03 22:12:29,294 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:12:29,294 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:12:29,302 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:12:29,303 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:12:29,305 - prompt_manager.app.api.v1.api - INFO - Found 3 prompts out of 3 total
2025-09-03 22:12:29,306 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 20.39ms
2025-09-03 22:12:29,307 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:12:29,307 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:12:29,307 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:12:42,979 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:12:42,981 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.77ms
2025-09-03 22:12:53,841 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:12:53,845 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 5.12ms
2025-09-03 22:13:00,342 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:13:00,344 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 2.21ms
2025-09-03 22:13:00,442 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:13:00,443 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.5ms
2025-09-03 22:13:00,448 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/name/math_tutor/version/1.0.0/activate?updated_by=system@example.com
2025-09-03 22:13:00,453 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:13:00,453 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:13:00,453 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:13:00,454 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:13:00,454 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:13:00,454 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:13:00,454 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:13:00,457 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:13:00,457 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 16:31:24+00:00 (UTC)
2025-09-03 22:13:00,457 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:13:00,457 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:13:00,464 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:13:00,464 - prompt_manager.app.api.v1.api - INFO - Setting active version for prompt 'math_tutor' to version 1.0.0 (user: prishatank@gmail.com)
2025-09-03 22:13:00,472 - prompt_manager.app.api.v1.api - WARNING - Prompt 'math_tutor' version '1.0.0' not found for activation
2025-09-03 22:13:00,472 - prompt_manager.app.api.v1.api - ERROR - Error setting prompt 'math_tutor' version 1.0.0 as live: 
Traceback (most recent call last):
  File "/Users/prisha/Desktop/Coding/system prompt/prompt_manager/app/api/v1/api.py", line 895, in set_active_version
    raise HTTPException(
fastapi.exceptions.HTTPException
2025-09-03 22:13:00,474 - prompt_manager.app.database - ERROR - Error in database session: 
2025-09-03 22:13:00,474 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:13:00,475 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:13:00,476 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/name/math_tutor/version/1.0.0/activate?updated_by=system@example.com Status: 500 Time: 27.63ms
2025-09-03 22:13:24,579 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 22:13:28,722 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 22:13:28,723 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-03 22:13:28,723 - prompt_manager.app.main - INFO - Database URL: sqlite:////Users/prisha/Desktop/Coding/system prompt/prompts.db
2025-09-03 22:14:35,370 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:14:35,375 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 4.55ms
2025-09-03 22:14:38,640 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:14:38,641 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.41ms
2025-09-03 22:14:38,653 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:14:38,658 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:14:38,658 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:14:38,658 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:14:38,658 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:14:38,659 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:14:38,659 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:14:38,659 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:14:38,673 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:14:38,673 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 16:31:24+00:00 (UTC)
2025-09-03 22:14:38,673 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:14:38,673 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:14:38,696 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:14:38,697 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:14:38,703 - prompt_manager.app.api.v1.api - INFO - Found 3 prompts out of 3 total
2025-09-03 22:14:38,705 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 52.09ms
2025-09-03 22:14:38,706 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:14:38,706 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:14:38,707 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:14:43,454 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 22:14:45,005 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 22:14:45,005 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-03 22:14:45,005 - prompt_manager.app.main - INFO - Database URL: sqlite:////Users/prisha/Desktop/Coding/system prompt/prompts.db
2025-09-03 22:14:49,797 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:14:49,799 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 2.27ms
2025-09-03 22:14:49,803 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:14:49,804 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.7ms
2025-09-03 22:14:49,805 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:14:49,807 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:14:49,807 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:14:49,807 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:14:49,807 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:14:49,807 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:14:49,807 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:14:49,807 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:14:49,808 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:14:49,808 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 16:31:24+00:00 (UTC)
2025-09-03 22:14:49,808 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:14:49,808 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:14:49,814 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:14:49,815 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:14:49,819 - prompt_manager.app.api.v1.api - INFO - Found 3 prompts out of 3 total
2025-09-03 22:14:49,819 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 13.96ms
2025-09-03 22:14:49,820 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:14:49,820 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:14:49,820 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:14:58,004 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:14:58,006 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.87ms
2025-09-03 22:14:58,012 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:14:58,012 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.44ms
2025-09-03 22:14:58,014 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:14:58,015 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:14:58,015 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:14:58,016 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:14:58,016 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:14:58,016 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:14:58,016 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:14:58,016 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:14:58,017 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:14:58,017 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 16:31:24+00:00 (UTC)
2025-09-03 22:14:58,017 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:14:58,017 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:14:58,018 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:14:58,019 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:14:58,020 - prompt_manager.app.api.v1.api - INFO - Found 3 prompts out of 3 total
2025-09-03 22:14:58,020 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 6.93ms
2025-09-03 22:14:58,021 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:14:58,021 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:14:58,021 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:20:16,182 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 22:20:16,182 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-03 22:20:16,182 - prompt_manager.app.main - INFO - Database URL: sqlite:////Users/prisha/Desktop/Coding/system prompt/prompts.db
2025-09-03 22:20:32,362 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:20:32,366 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 3.39ms
2025-09-03 22:20:46,779 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:20:46,789 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 9.45ms
2025-09-03 22:20:46,805 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-03 22:20:46,807 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:20:46,807 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:20:47,117 - prompt_manager.app.api.v1.endpoints.auth - INFO - Created access token for user: prishatank@gmail.com
2025-09-03 22:20:47,123 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 200 Time: 318.65ms
2025-09-03 22:20:47,124 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:20:47,124 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:20:47,124 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:20:47,167 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:20:47,167 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.37ms
2025-09-03 22:20:49,208 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:20:49,209 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.08ms
2025-09-03 22:20:49,217 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:20:49,222 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 4.94ms
2025-09-03 22:20:49,232 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:20:49,233 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:20:49,233 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:20:49,234 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:20:49,234 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:20:49,234 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:20:49,234 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:20:49,235 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:20:49,236 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:20:49,236 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 16:50:47+00:00 (UTC)
2025-09-03 22:20:49,236 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:20:49,236 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:20:49,237 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:20:49,238 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:20:49,251 - prompt_manager.app.api.v1.api - INFO - Found 3 prompts out of 3 total
2025-09-03 22:20:49,252 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 20.7ms
2025-09-03 22:20:49,253 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:20:49,253 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:20:49,253 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:20:53,535 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:20:53,538 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 3.15ms
2025-09-03 22:20:53,546 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:20:53,547 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.9ms
2025-09-03 22:20:53,549 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:20:53,550 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:20:53,551 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:20:53,551 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:20:53,551 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:20:53,551 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:20:53,551 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:20:53,551 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:20:53,552 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:20:53,552 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 16:50:47+00:00 (UTC)
2025-09-03 22:20:53,552 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:20:53,552 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:20:53,560 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:20:53,561 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:20:53,563 - prompt_manager.app.api.v1.api - INFO - Found 3 prompts out of 3 total
2025-09-03 22:20:53,563 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 14.53ms
2025-09-03 22:20:53,564 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:20:53,564 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:20:53,564 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:20:55,981 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:20:55,982 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.95ms
2025-09-03 22:20:55,990 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:20:55,990 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.63ms
2025-09-03 22:20:55,993 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:20:55,995 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:20:55,995 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:20:55,995 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:20:55,996 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:20:55,996 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:20:55,996 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:20:55,996 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:20:55,997 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:20:55,997 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 16:50:47+00:00 (UTC)
2025-09-03 22:20:55,997 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:20:55,997 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:20:56,000 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:20:56,002 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:20:56,003 - prompt_manager.app.api.v1.api - INFO - Found 3 prompts out of 3 total
2025-09-03 22:20:56,004 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 11.05ms
2025-09-03 22:20:56,004 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:20:56,005 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:20:56,005 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:21:20,461 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:21:20,467 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 6.46ms
2025-09-03 22:21:20,474 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:21:20,475 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.32ms
2025-09-03 22:21:20,476 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:21:20,477 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:21:20,477 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:21:20,477 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:21:20,477 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:21:20,478 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:21:20,478 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:21:20,478 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:21:20,479 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:21:20,479 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 16:50:47+00:00 (UTC)
2025-09-03 22:21:20,480 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:21:20,480 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:21:20,505 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:21:20,507 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:21:20,509 - prompt_manager.app.api.v1.api - INFO - Found 3 prompts out of 3 total
2025-09-03 22:21:20,511 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 35.26ms
2025-09-03 22:21:20,512 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:21:20,512 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:21:20,513 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:21:20,838 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 22:21:22,374 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 22:21:22,374 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-03 22:21:22,374 - prompt_manager.app.main - INFO - Database URL: sqlite:////Users/prisha/Desktop/Coding/system prompt/prompts.db
2025-09-03 22:21:25,068 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:21:25,076 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 7.42ms
2025-09-03 22:21:25,097 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:21:25,098 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.56ms
2025-09-03 22:21:25,099 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:21:25,100 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:21:25,100 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:21:25,100 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:21:25,100 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:21:25,100 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:21:25,100 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:21:25,100 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:21:25,101 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:21:25,102 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 16:50:47+00:00 (UTC)
2025-09-03 22:21:25,102 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:21:25,102 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:21:25,113 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:21:25,114 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:21:25,121 - prompt_manager.app.api.v1.api - INFO - Found 3 prompts out of 3 total
2025-09-03 22:21:25,122 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 23.2ms
2025-09-03 22:21:25,123 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:21:25,123 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:21:25,124 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:21:26,311 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:21:26,312 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.81ms
2025-09-03 22:21:26,319 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:21:26,320 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.84ms
2025-09-03 22:21:26,322 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:21:26,324 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:21:26,324 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:21:26,324 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:21:26,324 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:21:26,325 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:21:26,325 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:21:26,325 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:21:26,326 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:21:26,326 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 16:50:47+00:00 (UTC)
2025-09-03 22:21:26,326 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:21:26,326 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:21:26,327 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:21:26,328 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:21:26,330 - prompt_manager.app.api.v1.api - INFO - Found 3 prompts out of 3 total
2025-09-03 22:21:26,330 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 8.14ms
2025-09-03 22:21:26,331 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:21:26,331 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:21:26,331 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:21:26,335 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/name/math_tutor /version/1.0.0/activate?updated_by=system@example.com
2025-09-03 22:21:26,336 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:21:26,336 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:21:26,336 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:21:26,336 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:21:26,336 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:21:26,336 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:21:26,336 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:21:26,337 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:21:26,337 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 16:50:47+00:00 (UTC)
2025-09-03 22:21:26,337 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:21:26,337 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:21:26,338 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:21:26,338 - prompt_manager.app.api.v1.api - INFO - Setting active version for prompt 'math_tutor ' to version 1.0.0 (user: prishatank@gmail.com)
2025-09-03 22:21:26,339 - prompt_manager.app.api.v1.api - INFO - Setting prompt 'math_tutor ' version 1.0.0 as live version
2025-09-03 22:21:26,353 - prompt_manager.app.api.v1.api - INFO - Successfully set prompt 'math_tutor ' version 1.0.0 as live version
2025-09-03 22:21:26,354 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/name/math_tutor /version/1.0.0/activate?updated_by=system@example.com Status: 200 Time: 18.71ms
2025-09-03 22:21:26,355 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:21:26,355 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:21:26,355 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:21:26,399 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:21:26,400 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.37ms
2025-09-03 22:21:26,403 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:21:26,403 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.34ms
2025-09-03 22:21:26,405 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:21:26,406 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:21:26,406 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:21:26,406 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:21:26,406 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:21:26,406 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:21:26,406 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:21:26,406 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:21:26,406 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:21:26,406 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 16:50:47+00:00 (UTC)
2025-09-03 22:21:26,406 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:21:26,406 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:21:26,407 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:21:26,407 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:21:26,407 - prompt_manager.app.api.v1.api - INFO - Found 3 prompts out of 3 total
2025-09-03 22:21:26,408 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 3.06ms
2025-09-03 22:21:26,408 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:21:26,408 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:21:26,408 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:21:27,475 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:21:27,475 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.48ms
2025-09-03 22:21:27,478 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:21:27,479 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.35ms
2025-09-03 22:21:27,480 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:21:27,481 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:21:27,481 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:21:27,482 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:21:27,482 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:21:27,482 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:21:27,482 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:21:27,482 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:21:27,482 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:21:27,482 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 16:50:47+00:00 (UTC)
2025-09-03 22:21:27,483 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:21:27,483 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:21:27,483 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:21:27,483 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:21:27,484 - prompt_manager.app.api.v1.api - INFO - Found 3 prompts out of 3 total
2025-09-03 22:21:27,485 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 5.11ms
2025-09-03 22:21:27,487 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:21:27,487 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:21:27,487 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:21:27,491 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/name/math_tutor /version/1.0.0/activate?updated_by=system@example.com
2025-09-03 22:21:27,493 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:21:27,494 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:21:27,494 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:21:27,494 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:21:27,494 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:21:27,494 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:21:27,494 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:21:27,495 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:21:27,495 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 16:50:47+00:00 (UTC)
2025-09-03 22:21:27,495 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:21:27,495 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:21:27,495 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:21:27,496 - prompt_manager.app.api.v1.api - INFO - Setting active version for prompt 'math_tutor ' to version 1.0.0 (user: prishatank@gmail.com)
2025-09-03 22:21:27,496 - prompt_manager.app.api.v1.api - INFO - Prompt 'math_tutor ' version 1.0.0 is already the live version
2025-09-03 22:21:27,496 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/name/math_tutor /version/1.0.0/activate?updated_by=system@example.com Status: 200 Time: 5.06ms
2025-09-03 22:21:27,497 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:21:27,498 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:21:27,498 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:21:27,533 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:21:27,534 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.59ms
2025-09-03 22:21:27,537 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:21:27,538 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.51ms
2025-09-03 22:21:27,541 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:21:27,541 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:21:27,541 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:21:27,541 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:21:27,541 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:21:27,542 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:21:27,542 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:21:27,542 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:21:27,542 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:21:27,542 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 16:50:47+00:00 (UTC)
2025-09-03 22:21:27,542 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:21:27,542 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:21:27,542 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:21:27,542 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:21:27,543 - prompt_manager.app.api.v1.api - INFO - Found 3 prompts out of 3 total
2025-09-03 22:21:27,543 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 2.66ms
2025-09-03 22:21:27,545 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:21:27,545 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:21:27,545 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:21:28,475 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:21:28,475 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.37ms
2025-09-03 22:21:28,480 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:21:28,481 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 1.14ms
2025-09-03 22:21:28,483 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:21:28,483 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:21:28,483 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:21:28,483 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:21:28,483 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:21:28,483 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:21:28,483 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:21:28,484 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:21:28,484 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:21:28,484 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 16:50:47+00:00 (UTC)
2025-09-03 22:21:28,484 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:21:28,484 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:21:28,485 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:21:28,486 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:21:28,487 - prompt_manager.app.api.v1.api - INFO - Found 3 prompts out of 3 total
2025-09-03 22:21:28,488 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 5.01ms
2025-09-03 22:21:28,488 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:21:28,489 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:21:28,489 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:21:28,491 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/name/math_tutor /version/1.0.0/activate?updated_by=system@example.com
2025-09-03 22:21:28,492 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:21:28,492 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:21:28,492 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:21:28,492 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:21:28,492 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:21:28,492 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:21:28,493 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:21:28,493 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:21:28,493 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 16:50:47+00:00 (UTC)
2025-09-03 22:21:28,493 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:21:28,493 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:21:28,493 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:21:28,494 - prompt_manager.app.api.v1.api - INFO - Setting active version for prompt 'math_tutor ' to version 1.0.0 (user: prishatank@gmail.com)
2025-09-03 22:21:28,494 - prompt_manager.app.api.v1.api - INFO - Prompt 'math_tutor ' version 1.0.0 is already the live version
2025-09-03 22:21:28,495 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/name/math_tutor /version/1.0.0/activate?updated_by=system@example.com Status: 200 Time: 3.59ms
2025-09-03 22:21:28,496 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:21:28,496 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:21:28,496 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:21:28,539 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:21:28,539 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.8ms
2025-09-03 22:21:28,548 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:21:28,548 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.75ms
2025-09-03 22:21:28,550 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:21:28,551 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:21:28,551 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:21:28,551 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:21:28,551 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:21:28,551 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:21:28,551 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:21:28,551 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:21:28,552 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:21:28,552 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 16:50:47+00:00 (UTC)
2025-09-03 22:21:28,552 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:21:28,552 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:21:28,553 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:21:28,554 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:21:28,555 - prompt_manager.app.api.v1.api - INFO - Found 3 prompts out of 3 total
2025-09-03 22:21:28,555 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 5.54ms
2025-09-03 22:21:28,556 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:21:28,556 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:21:28,557 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:21:31,115 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:21:31,116 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.35ms
2025-09-03 22:21:31,124 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:21:31,125 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.81ms
2025-09-03 22:21:31,128 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:21:31,130 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:21:31,130 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:21:31,131 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:21:31,131 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:21:31,131 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:21:31,131 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:21:31,131 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:21:31,132 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:21:31,132 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 16:50:47+00:00 (UTC)
2025-09-03 22:21:31,132 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:21:31,132 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:21:31,133 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:21:31,134 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:21:31,135 - prompt_manager.app.api.v1.api - INFO - Found 3 prompts out of 3 total
2025-09-03 22:21:31,136 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 7.87ms
2025-09-03 22:21:31,137 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:21:31,137 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:21:31,137 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:21:31,143 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/1/history?skip=0&limit=10
2025-09-03 22:21:31,144 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:21:31,144 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:21:31,144 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:21:31,144 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:21:31,145 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:21:31,145 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:21:31,145 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:21:31,145 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:21:31,145 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 16:50:47+00:00 (UTC)
2025-09-03 22:21:31,145 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:21:31,145 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:21:31,146 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:21:31,146 - prompt_manager.app.api.v1.api - INFO - Retrieving history for prompt ID: 1
2025-09-03 22:21:31,152 - prompt_manager.app.api.v1.api - INFO - Found 1 history items for prompt ID: 1
2025-09-03 22:21:31,153 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/1/history?skip=0&limit=10 Status: 200 Time: 10.48ms
2025-09-03 22:21:31,154 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:21:31,154 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:21:31,154 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:21:39,545 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:21:39,548 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 3.2ms
2025-09-03 22:21:39,555 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:21:39,556 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 1.18ms
2025-09-03 22:21:39,560 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:21:39,565 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:21:39,565 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:21:39,565 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:21:39,565 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:21:39,565 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:21:39,565 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:21:39,565 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:21:39,568 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:21:39,568 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 16:50:47+00:00 (UTC)
2025-09-03 22:21:39,568 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:21:39,568 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:21:39,577 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:21:39,579 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:21:39,582 - prompt_manager.app.api.v1.api - INFO - Found 3 prompts out of 3 total
2025-09-03 22:21:39,584 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 24.88ms
2025-09-03 22:21:39,586 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:21:39,586 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:21:39,586 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:21:39,648 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:21:39,648 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.42ms
2025-09-03 22:21:39,652 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/name/coding_assistant/versions?skip=0&limit=10
2025-09-03 22:21:39,652 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:21:39,652 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:21:39,652 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:21:39,652 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:21:39,652 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:21:39,653 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:21:39,653 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:21:39,653 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:21:39,653 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 16:50:47+00:00 (UTC)
2025-09-03 22:21:39,653 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:21:39,653 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:21:39,654 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:21:39,654 - prompt_manager.app.api.v1.api - INFO - Listing versions for prompt: coding_assistant
2025-09-03 22:21:39,663 - prompt_manager.app.api.v1.api - INFO - Found 2 versions for prompt: coding_assistant
2025-09-03 22:21:39,664 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/name/coding_assistant/versions?skip=0&limit=10 Status: 200 Time: 12.59ms
2025-09-03 22:21:39,665 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:21:39,665 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:21:39,665 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:21:39,667 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:21:39,667 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.39ms
2025-09-03 22:21:39,668 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:21:39,669 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:21:39,669 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:21:39,669 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:21:39,669 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:21:39,669 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:21:39,669 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:21:39,670 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:21:39,670 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:21:39,670 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 16:50:47+00:00 (UTC)
2025-09-03 22:21:39,670 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:21:39,670 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:21:39,671 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:21:39,671 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:21:39,672 - prompt_manager.app.api.v1.api - INFO - Found 3 prompts out of 3 total
2025-09-03 22:21:39,672 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 4.21ms
2025-09-03 22:21:39,673 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:21:39,673 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:21:39,674 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:21:44,690 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:21:44,690 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.75ms
2025-09-03 22:21:45,578 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:21:45,578 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.45ms
2025-09-03 22:21:45,582 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:21:45,582 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.34ms
2025-09-03 22:21:45,583 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:21:45,584 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:21:45,584 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:21:45,584 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:21:45,584 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:21:45,584 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:21:45,584 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:21:45,585 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:21:45,585 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:21:45,585 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 16:50:47+00:00 (UTC)
2025-09-03 22:21:45,585 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:21:45,585 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:21:45,585 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:21:45,586 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:21:45,586 - prompt_manager.app.api.v1.api - INFO - Found 3 prompts out of 3 total
2025-09-03 22:21:45,587 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 3.58ms
2025-09-03 22:21:45,587 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:21:45,587 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:21:45,587 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:22:06,092 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:22:06,097 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 4.52ms
2025-09-03 22:22:06,106 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:22:06,107 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.96ms
2025-09-03 22:22:06,109 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:22:06,111 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:22:06,111 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:22:06,113 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:22:06,113 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:22:06,113 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:22:06,113 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:22:06,113 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:22:06,114 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:22:06,115 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 16:50:47+00:00 (UTC)
2025-09-03 22:22:06,115 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:22:06,115 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:22:06,119 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:22:06,120 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:22:06,122 - prompt_manager.app.api.v1.api - INFO - Found 3 prompts out of 3 total
2025-09-03 22:22:06,122 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 13.54ms
2025-09-03 22:22:06,123 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:22:06,123 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:22:06,123 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:22:07,242 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:22:07,243 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.39ms
2025-09-03 22:22:07,246 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:22:07,246 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.28ms
2025-09-03 22:22:07,247 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:22:07,247 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:22:07,247 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:22:07,248 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:22:07,248 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:22:07,248 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:22:07,248 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:22:07,248 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:22:07,248 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:22:07,248 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 16:50:47+00:00 (UTC)
2025-09-03 22:22:07,248 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:22:07,248 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:22:07,249 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:22:07,249 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:22:07,250 - prompt_manager.app.api.v1.api - INFO - Found 3 prompts out of 3 total
2025-09-03 22:22:07,250 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 3.05ms
2025-09-03 22:22:07,251 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:22:07,251 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:22:07,251 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:22:07,254 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/name/math_tutor /version/1.0.0/activate?updated_by=system@example.com
2025-09-03 22:22:07,255 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:22:07,255 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:22:07,256 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:22:07,256 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:22:07,256 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:22:07,256 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:22:07,256 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:22:07,256 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:22:07,256 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 16:50:47+00:00 (UTC)
2025-09-03 22:22:07,256 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:22:07,256 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:22:07,256 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:22:07,257 - prompt_manager.app.api.v1.api - INFO - Setting active version for prompt 'math_tutor ' to version 1.0.0 (user: prishatank@gmail.com)
2025-09-03 22:22:07,257 - prompt_manager.app.api.v1.api - INFO - Prompt 'math_tutor ' version 1.0.0 is already the live version
2025-09-03 22:22:07,257 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/name/math_tutor /version/1.0.0/activate?updated_by=system@example.com Status: 200 Time: 3.37ms
2025-09-03 22:22:07,258 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:22:07,258 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:22:07,258 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:22:07,289 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:22:07,290 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.52ms
2025-09-03 22:22:07,293 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:22:07,293 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.31ms
2025-09-03 22:22:07,294 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:22:07,295 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:22:07,295 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:22:07,295 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:22:07,295 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:22:07,295 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:22:07,295 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:22:07,295 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:22:07,295 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:22:07,295 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 16:50:47+00:00 (UTC)
2025-09-03 22:22:07,295 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:22:07,295 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:22:07,296 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:22:07,296 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:22:07,296 - prompt_manager.app.api.v1.api - INFO - Found 3 prompts out of 3 total
2025-09-03 22:22:07,297 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 2.37ms
2025-09-03 22:22:07,297 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:22:07,297 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:22:07,297 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:22:10,185 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:22:10,187 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.47ms
2025-09-03 22:22:10,193 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:22:10,194 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.78ms
2025-09-03 22:22:10,195 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:22:10,196 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:22:10,196 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:22:10,197 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:22:10,197 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:22:10,197 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:22:10,197 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:22:10,197 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:22:10,197 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:22:10,198 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 16:50:47+00:00 (UTC)
2025-09-03 22:22:10,198 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:22:10,198 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:22:10,200 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:22:10,200 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:22:10,201 - prompt_manager.app.api.v1.api - INFO - Found 3 prompts out of 3 total
2025-09-03 22:22:10,202 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 6.28ms
2025-09-03 22:22:10,202 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:22:10,202 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:22:10,202 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:22:11,047 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:22:11,048 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.74ms
2025-09-03 22:22:11,056 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:22:11,057 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.59ms
2025-09-03 22:22:11,060 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:22:11,061 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:22:11,061 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:22:11,061 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:22:11,061 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:22:11,061 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:22:11,061 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:22:11,061 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:22:11,062 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:22:11,062 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 16:50:47+00:00 (UTC)
2025-09-03 22:22:11,062 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:22:11,062 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:22:11,064 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:22:11,064 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:22:11,065 - prompt_manager.app.api.v1.api - INFO - Found 3 prompts out of 3 total
2025-09-03 22:22:11,066 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 5.94ms
2025-09-03 22:22:11,066 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:22:11,066 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:22:11,066 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:22:11,070 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/name/math_tutor /version/1.0.0/activate?updated_by=system@example.com
2025-09-03 22:22:11,071 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:22:11,071 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:22:11,071 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:22:11,071 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:22:11,071 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:22:11,071 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:22:11,072 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:22:11,072 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:22:11,072 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 16:50:47+00:00 (UTC)
2025-09-03 22:22:11,072 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:22:11,073 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:22:11,074 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:22:11,074 - prompt_manager.app.api.v1.api - INFO - Setting active version for prompt 'math_tutor ' to version 1.0.0 (user: prishatank@gmail.com)
2025-09-03 22:22:11,075 - prompt_manager.app.api.v1.api - INFO - Prompt 'math_tutor ' version 1.0.0 is already the live version
2025-09-03 22:22:11,075 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/name/math_tutor /version/1.0.0/activate?updated_by=system@example.com Status: 200 Time: 4.76ms
2025-09-03 22:22:11,076 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:22:11,076 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:22:11,076 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:22:11,113 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:22:11,114 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.41ms
2025-09-03 22:22:11,117 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:22:11,118 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.36ms
2025-09-03 22:22:11,120 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:22:11,121 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:22:11,121 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:22:11,121 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:22:11,121 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:22:11,121 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:22:11,121 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:22:11,121 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:22:11,121 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:22:11,121 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 16:50:47+00:00 (UTC)
2025-09-03 22:22:11,121 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:22:11,121 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:22:11,122 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:22:11,122 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:22:11,123 - prompt_manager.app.api.v1.api - INFO - Found 3 prompts out of 3 total
2025-09-03 22:22:11,123 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 3.34ms
2025-09-03 22:22:11,124 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:22:11,124 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:22:11,124 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:22:11,255 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:22:11,256 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.41ms
2025-09-03 22:22:11,259 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:22:11,260 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.34ms
2025-09-03 22:22:11,261 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:22:11,261 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:22:11,261 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:22:11,262 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:22:11,262 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:22:11,262 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:22:11,262 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:22:11,262 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:22:11,262 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:22:11,262 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 16:50:47+00:00 (UTC)
2025-09-03 22:22:11,262 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:22:11,262 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:22:11,262 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:22:11,263 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:22:11,263 - prompt_manager.app.api.v1.api - INFO - Found 3 prompts out of 3 total
2025-09-03 22:22:11,263 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 2.65ms
2025-09-03 22:22:11,264 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:22:11,264 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:22:11,264 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:22:11,267 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/name/math_tutor /version/1.0.0/activate?updated_by=system@example.com
2025-09-03 22:22:11,268 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:22:11,268 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:22:11,268 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:22:11,268 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:22:11,268 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:22:11,268 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:22:11,268 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:22:11,269 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:22:11,269 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 16:50:47+00:00 (UTC)
2025-09-03 22:22:11,269 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:22:11,269 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:22:11,269 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:22:11,269 - prompt_manager.app.api.v1.api - INFO - Setting active version for prompt 'math_tutor ' to version 1.0.0 (user: prishatank@gmail.com)
2025-09-03 22:22:11,270 - prompt_manager.app.api.v1.api - INFO - Prompt 'math_tutor ' version 1.0.0 is already the live version
2025-09-03 22:22:11,270 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/name/math_tutor /version/1.0.0/activate?updated_by=system@example.com Status: 200 Time: 3.05ms
2025-09-03 22:22:11,270 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:22:11,270 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:22:11,270 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:22:11,303 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:22:11,303 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.39ms
2025-09-03 22:22:11,306 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:22:11,306 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.34ms
2025-09-03 22:22:11,307 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:22:11,308 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:22:11,308 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:22:11,308 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:22:11,308 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:22:11,308 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:22:11,308 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:22:11,308 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:22:11,309 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:22:11,309 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 16:50:47+00:00 (UTC)
2025-09-03 22:22:11,309 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:22:11,309 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:22:11,309 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:22:11,309 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:22:11,310 - prompt_manager.app.api.v1.api - INFO - Found 3 prompts out of 3 total
2025-09-03 22:22:11,310 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 2.54ms
2025-09-03 22:22:11,310 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:22:11,310 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:22:11,310 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:22:11,422 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:22:11,423 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.73ms
2025-09-03 22:22:11,426 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:22:11,427 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.36ms
2025-09-03 22:22:11,428 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:22:11,429 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:22:11,429 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:22:11,429 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:22:11,429 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:22:11,429 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:22:11,429 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:22:11,429 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:22:11,429 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:22:11,429 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 16:50:47+00:00 (UTC)
2025-09-03 22:22:11,429 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:22:11,429 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:22:11,430 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:22:11,430 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:22:11,430 - prompt_manager.app.api.v1.api - INFO - Found 3 prompts out of 3 total
2025-09-03 22:22:11,431 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 2.99ms
2025-09-03 22:22:11,431 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:22:11,432 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:22:11,432 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:22:11,435 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/name/math_tutor /version/1.0.0/activate?updated_by=system@example.com
2025-09-03 22:22:11,436 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:22:11,437 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:22:11,437 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:22:11,437 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:22:11,437 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:22:11,437 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:22:11,437 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:22:11,437 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:22:11,438 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 16:50:47+00:00 (UTC)
2025-09-03 22:22:11,438 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:22:11,438 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:22:11,438 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:22:11,438 - prompt_manager.app.api.v1.api - INFO - Setting active version for prompt 'math_tutor ' to version 1.0.0 (user: prishatank@gmail.com)
2025-09-03 22:22:11,439 - prompt_manager.app.api.v1.api - INFO - Prompt 'math_tutor ' version 1.0.0 is already the live version
2025-09-03 22:22:11,439 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/name/math_tutor /version/1.0.0/activate?updated_by=system@example.com Status: 200 Time: 4.1ms
2025-09-03 22:22:11,439 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:22:11,439 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:22:11,439 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:22:11,474 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:22:11,474 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.4ms
2025-09-03 22:22:11,477 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:22:11,478 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.3ms
2025-09-03 22:22:11,479 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:22:11,479 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:22:11,480 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:22:11,480 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:22:11,480 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:22:11,480 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:22:11,480 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:22:11,480 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:22:11,481 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:22:11,481 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 16:50:47+00:00 (UTC)
2025-09-03 22:22:11,481 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:22:11,481 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:22:11,481 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:22:11,482 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:22:11,482 - prompt_manager.app.api.v1.api - INFO - Found 3 prompts out of 3 total
2025-09-03 22:22:11,483 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 4.12ms
2025-09-03 22:22:11,483 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:22:11,483 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:22:11,483 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:22:14,816 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:22:14,817 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.85ms
2025-09-03 22:22:24,696 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:22:24,700 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 3.47ms
2025-09-03 22:22:24,707 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-03 22:22:24,711 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:22:24,712 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:22:25,005 - prompt_manager.app.api.v1.endpoints.auth - INFO - Created access token for user: prishatank@gmail.com
2025-09-03 22:22:25,012 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 200 Time: 305.75ms
2025-09-03 22:22:25,013 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:22:25,013 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:22:25,013 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:22:25,067 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:22:25,067 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.37ms
2025-09-03 22:22:26,597 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:22:26,598 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.94ms
2025-09-03 22:22:26,602 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:22:26,603 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.44ms
2025-09-03 22:22:26,604 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:22:26,604 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:22:26,604 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:22:26,605 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:22:26,605 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:22:26,605 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:22:26,605 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:22:26,605 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:22:26,605 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:22:26,605 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 16:52:25+00:00 (UTC)
2025-09-03 22:22:26,605 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:22:26,605 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:22:26,606 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:22:26,606 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:22:26,607 - prompt_manager.app.api.v1.api - INFO - Found 3 prompts out of 3 total
2025-09-03 22:22:26,608 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 3.79ms
2025-09-03 22:22:26,608 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:22:26,608 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:22:26,609 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:22:30,312 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:22:30,313 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.48ms
2025-09-03 22:22:30,317 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:22:30,318 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.69ms
2025-09-03 22:22:30,319 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:22:30,320 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:22:30,320 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:22:30,320 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:22:30,320 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:22:30,321 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:22:30,321 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:22:30,321 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:22:30,321 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:22:30,321 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 16:52:25+00:00 (UTC)
2025-09-03 22:22:30,321 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:22:30,321 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:22:30,322 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:22:30,323 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:22:30,324 - prompt_manager.app.api.v1.api - INFO - Found 3 prompts out of 3 total
2025-09-03 22:22:30,325 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 5.64ms
2025-09-03 22:22:30,326 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:22:30,326 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:22:30,326 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:22:32,650 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:22:32,651 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.18ms
2025-09-03 22:22:32,658 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:22:32,659 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.68ms
2025-09-03 22:22:32,661 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:22:32,662 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:22:32,662 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:22:32,662 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:22:32,662 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:22:32,662 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:22:32,662 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:22:32,662 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:22:32,662 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:22:32,663 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 16:52:25+00:00 (UTC)
2025-09-03 22:22:32,663 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:22:32,663 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:22:32,664 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:22:32,664 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:22:32,665 - prompt_manager.app.api.v1.api - INFO - Found 3 prompts out of 3 total
2025-09-03 22:22:32,666 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 5.29ms
2025-09-03 22:22:32,667 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:22:32,667 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:22:32,667 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:22:33,727 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:22:33,728 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.73ms
2025-09-03 22:22:33,732 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:22:33,732 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.46ms
2025-09-03 22:22:33,734 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:22:33,799 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:22:33,799 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:22:33,799 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:22:33,799 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:22:33,799 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:22:33,799 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:22:33,799 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:22:33,799 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:22:33,800 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 16:52:25+00:00 (UTC)
2025-09-03 22:22:33,800 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:22:33,800 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:22:33,800 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:22:33,800 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:22:33,801 - prompt_manager.app.api.v1.api - INFO - Found 3 prompts out of 3 total
2025-09-03 22:22:33,802 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 68.12ms
2025-09-03 22:22:33,802 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:22:33,802 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:22:33,802 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:22:33,804 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/name/math_tutor /version/1.0.0/activate?updated_by=system@example.com
2025-09-03 22:22:33,805 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:22:33,805 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:22:33,805 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:22:33,805 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:22:33,806 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:22:33,806 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:22:33,806 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:22:33,806 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:22:33,806 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 16:52:25+00:00 (UTC)
2025-09-03 22:22:33,806 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:22:33,806 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:22:33,806 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:22:33,806 - prompt_manager.app.api.v1.api - INFO - Setting active version for prompt 'math_tutor ' to version 1.0.0 (user: prishatank@gmail.com)
2025-09-03 22:22:33,807 - prompt_manager.app.api.v1.api - INFO - Prompt 'math_tutor ' version 1.0.0 is already the live version
2025-09-03 22:22:33,807 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/name/math_tutor /version/1.0.0/activate?updated_by=system@example.com Status: 200 Time: 2.55ms
2025-09-03 22:22:33,807 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:22:33,807 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:22:33,808 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:22:33,842 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:22:33,842 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.38ms
2025-09-03 22:22:33,846 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:22:33,847 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 1.07ms
2025-09-03 22:22:33,848 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:22:33,849 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:22:33,849 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:22:33,849 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:22:33,850 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:22:33,850 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:22:33,850 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:22:33,850 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:22:33,850 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:22:33,850 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 16:52:25+00:00 (UTC)
2025-09-03 22:22:33,850 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:22:33,850 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:22:33,851 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:22:33,851 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:22:33,852 - prompt_manager.app.api.v1.api - INFO - Found 3 prompts out of 3 total
2025-09-03 22:22:33,852 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 4.25ms
2025-09-03 22:22:33,852 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:22:33,852 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:22:33,853 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:22:36,398 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:22:36,400 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.77ms
2025-09-03 22:22:40,362 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:22:40,363 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.94ms
2025-09-03 22:22:40,376 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:22:40,379 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:22:40,379 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:22:40,380 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:22:40,380 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:22:40,380 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:22:40,380 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:22:40,380 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:22:40,381 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:22:40,382 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 16:52:25+00:00 (UTC)
2025-09-03 22:22:40,382 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:22:40,382 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:22:40,387 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:22:40,388 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:22:40,390 - prompt_manager.app.api.v1.api - INFO - Found 3 prompts out of 3 total
2025-09-03 22:22:40,391 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 14.4ms
2025-09-03 22:22:40,391 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:22:40,391 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:22:40,391 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:23:41,032 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:23:41,037 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 5.15ms
2025-09-03 22:23:41,045 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/
2025-09-03 22:23:41,049 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:23:41,049 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:23:41,049 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:23:41,049 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:23:41,050 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:23:41,050 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:23:41,050 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:23:41,051 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:23:41,051 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 16:52:25+00:00 (UTC)
2025-09-03 22:23:41,051 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:23:41,051 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:23:41,056 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:23:41,058 - prompt_manager.app.api.v1.api - INFO - Creating new prompt: cooking_assistant version 1.0.0
2025-09-03 22:23:41,071 - prompt_manager.app.api.v1.api - INFO - Successfully created prompt cooking_assistant v1.0.0 (ID: 4)
2025-09-03 22:23:41,072 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/ Status: 201 Time: 26.99ms
2025-09-03 22:23:41,072 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:23:41,072 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:23:41,072 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:23:52,606 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:23:52,608 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:23:52,609 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 2.43ms
2025-09-03 22:23:52,610 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.44ms
2025-09-03 22:23:52,660 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/4
2025-09-03 22:23:52,661 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:23:52,661 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:23:52,661 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:23:52,662 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:23:52,662 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:23:52,662 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:23:52,662 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:23:52,662 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:23:52,662 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 16:52:25+00:00 (UTC)
2025-09-03 22:23:52,662 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:23:52,662 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:23:52,664 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:23:52,664 - prompt_manager.app.api.v1.api - INFO - Retrieving prompt with ID: 4
2025-09-03 22:23:52,664 - prompt_manager.app.api.v1.api - INFO - Successfully retrieved prompt cooking_assistant v1.0.0 (ID: 4)
2025-09-03 22:23:52,665 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/4 Status: 200 Time: 4.48ms
2025-09-03 22:23:52,665 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:23:52,665 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:23:52,665 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:24:23,559 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:24:23,569 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:24:23,572 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 13.76ms
2025-09-03 22:24:23,574 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 5.12ms
2025-09-03 22:24:23,661 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/4/update-version
2025-09-03 22:24:23,662 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:24:23,663 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:24:23,663 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:24:23,663 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:24:23,663 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:24:23,663 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:24:23,663 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:24:23,664 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:24:23,664 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 16:52:25+00:00 (UTC)
2025-09-03 22:24:23,664 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:24:23,665 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:24:23,682 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:24:23,683 - prompt_manager.app.api.v1.api - INFO - Auto-updating prompt ID 4 (user: prishatank@gmail.com)
2025-09-03 22:24:23,694 - prompt_manager.app.api.v1.api - INFO - Successfully auto-incremented version to '1.0.1' for prompt 'cooking_assistant'
2025-09-03 22:24:23,694 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/4/update-version Status: 200 Time: 33.55ms
2025-09-03 22:24:23,695 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:24:23,695 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:24:23,695 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:24:26,190 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:24:26,191 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.25ms
2025-09-03 22:24:26,202 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:24:26,204 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 1.38ms
2025-09-03 22:24:26,206 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:24:26,208 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:24:26,208 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:24:26,208 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:24:26,209 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:24:26,209 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:24:26,209 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:24:26,209 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:24:26,209 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:24:26,210 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 16:52:25+00:00 (UTC)
2025-09-03 22:24:26,210 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:24:26,210 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:24:26,211 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:24:26,211 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:24:26,213 - prompt_manager.app.api.v1.api - INFO - Found 5 prompts out of 5 total
2025-09-03 22:24:26,214 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 7.34ms
2025-09-03 22:24:26,214 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:24:26,214 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:24:26,215 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:24:30,824 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:24:30,825 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.45ms
2025-09-03 22:24:30,832 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:24:30,832 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.44ms
2025-09-03 22:24:30,834 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:24:30,834 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:24:30,834 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:24:30,835 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:24:30,835 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:24:30,835 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:24:30,835 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:24:30,835 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:24:30,836 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:24:30,836 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 16:52:25+00:00 (UTC)
2025-09-03 22:24:30,836 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:24:30,836 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:24:30,837 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:24:30,837 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:24:30,839 - prompt_manager.app.api.v1.api - INFO - Found 5 prompts out of 5 total
2025-09-03 22:24:30,840 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 5.97ms
2025-09-03 22:24:30,840 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:24:30,840 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:24:30,840 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:24:33,219 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:24:33,220 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.15ms
2025-09-03 22:24:33,227 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:24:33,228 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 1.12ms
2025-09-03 22:24:33,239 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:24:33,242 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:24:33,243 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:24:33,243 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:24:33,243 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:24:33,243 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:24:33,243 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:24:33,243 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:24:33,244 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:24:33,244 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 16:52:25+00:00 (UTC)
2025-09-03 22:24:33,244 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:24:33,244 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:24:33,254 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:24:33,255 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:24:33,257 - prompt_manager.app.api.v1.api - INFO - Found 5 prompts out of 5 total
2025-09-03 22:24:33,259 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 19.33ms
2025-09-03 22:24:33,259 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:24:33,259 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:24:33,260 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:24:33,934 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:24:33,935 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.95ms
2025-09-03 22:24:33,943 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:24:33,944 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.71ms
2025-09-03 22:24:33,946 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:24:33,947 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:24:33,948 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:24:33,948 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:24:33,948 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:24:33,948 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:24:33,948 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:24:33,948 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:24:33,949 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:24:33,949 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 16:52:25+00:00 (UTC)
2025-09-03 22:24:33,949 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:24:33,949 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:24:33,950 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:24:33,950 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:24:33,952 - prompt_manager.app.api.v1.api - INFO - Found 5 prompts out of 5 total
2025-09-03 22:24:33,953 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 6.32ms
2025-09-03 22:24:33,954 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:24:33,955 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:24:33,955 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:24:33,958 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/name/cooking_assistant/version/1.0.1/activate?updated_by=system@example.com
2025-09-03 22:24:33,959 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:24:33,959 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:24:33,959 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:24:33,959 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:24:33,959 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:24:33,959 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:24:33,959 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:24:33,960 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:24:33,960 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 16:52:25+00:00 (UTC)
2025-09-03 22:24:33,960 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:24:33,960 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:24:33,961 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:24:33,961 - prompt_manager.app.api.v1.api - INFO - Setting active version for prompt 'cooking_assistant' to version 1.0.1 (user: prishatank@gmail.com)
2025-09-03 22:24:33,962 - prompt_manager.app.api.v1.api - INFO - Setting prompt 'cooking_assistant' version 1.0.1 as live version
2025-09-03 22:24:33,969 - prompt_manager.app.api.v1.api - INFO - Successfully set prompt 'cooking_assistant' version 1.0.1 as live version
2025-09-03 22:24:33,970 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/name/cooking_assistant/version/1.0.1/activate?updated_by=system@example.com Status: 200 Time: 11.82ms
2025-09-03 22:24:33,970 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:24:33,970 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:24:33,970 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:24:34,009 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:24:34,010 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.39ms
2025-09-03 22:24:34,014 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:24:34,015 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.32ms
2025-09-03 22:24:34,017 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:24:34,017 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:24:34,017 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:24:34,018 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:24:34,018 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:24:34,018 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:24:34,018 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:24:34,018 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:24:34,018 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:24:34,018 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 16:52:25+00:00 (UTC)
2025-09-03 22:24:34,019 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:24:34,019 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:24:34,020 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:24:34,021 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:24:34,023 - prompt_manager.app.api.v1.api - INFO - Found 5 prompts out of 5 total
2025-09-03 22:24:34,024 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 7.38ms
2025-09-03 22:24:34,024 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:24:34,024 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:24:34,025 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:24:57,573 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:24:57,579 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 6.29ms
2025-09-03 22:24:59,450 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:24:59,451 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.92ms
2025-09-03 22:24:59,458 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:24:59,459 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.68ms
2025-09-03 22:24:59,460 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:24:59,462 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:24:59,462 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:24:59,462 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:24:59,462 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:24:59,462 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:24:59,462 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:24:59,462 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:24:59,463 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:24:59,463 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 16:52:25+00:00 (UTC)
2025-09-03 22:24:59,463 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:24:59,463 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:24:59,468 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:24:59,468 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:24:59,470 - prompt_manager.app.api.v1.api - INFO - Found 5 prompts out of 5 total
2025-09-03 22:24:59,470 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 10.08ms
2025-09-03 22:24:59,471 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:24:59,471 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:24:59,471 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:25:01,151 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:25:01,152 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.01ms
2025-09-03 22:25:03,982 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:25:03,983 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.28ms
2025-09-03 22:25:03,996 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:25:03,997 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:25:03,998 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:25:03,998 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:25:03,998 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:25:03,998 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:25:03,998 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:25:03,999 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:25:03,999 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:25:03,999 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 16:52:25+00:00 (UTC)
2025-09-03 22:25:03,999 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:25:03,999 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:25:04,000 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:25:04,001 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:25:04,002 - prompt_manager.app.api.v1.api - INFO - Found 5 prompts out of 5 total
2025-09-03 22:25:04,003 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 6.76ms
2025-09-03 22:25:04,004 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:25:04,004 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:25:04,005 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:26:52,517 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:26:52,522 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 5.51ms
2025-09-03 22:26:52,536 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/
2025-09-03 22:26:52,538 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:26:52,539 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:26:52,539 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:26:52,539 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:26:52,539 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:26:52,539 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:26:52,539 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:26:52,539 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:26:52,539 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 16:52:25+00:00 (UTC)
2025-09-03 22:26:52,540 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:26:52,540 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:26:52,558 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:26:52,560 - prompt_manager.app.api.v1.api - INFO - Creating new prompt: healthcare_advisor version 1.0.0
2025-09-03 22:26:52,571 - prompt_manager.app.api.v1.api - INFO - Successfully created prompt healthcare_advisor v1.0.0 (ID: 6)
2025-09-03 22:26:52,571 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/ Status: 201 Time: 35.12ms
2025-09-03 22:26:52,572 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:26:52,572 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:26:52,572 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:27:04,982 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:27:04,986 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 4.72ms
2025-09-03 22:27:05,062 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:27:05,063 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.47ms
2025-09-03 22:27:05,074 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/6
2025-09-03 22:27:05,076 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:27:05,076 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:27:05,077 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:27:05,077 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:27:05,077 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:27:05,077 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:27:05,077 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:27:05,078 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:27:05,078 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 16:52:25+00:00 (UTC)
2025-09-03 22:27:05,078 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:27:05,078 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:27:05,081 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:27:05,082 - prompt_manager.app.api.v1.api - INFO - Retrieving prompt with ID: 6
2025-09-03 22:27:05,082 - prompt_manager.app.api.v1.api - INFO - Successfully retrieved prompt healthcare_advisor v1.0.0 (ID: 6)
2025-09-03 22:27:05,083 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/6 Status: 200 Time: 8.92ms
2025-09-03 22:27:05,083 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:27:05,084 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:27:05,084 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:27:13,581 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:27:13,582 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.86ms
2025-09-03 22:27:15,981 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:27:15,982 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.88ms
2025-09-03 22:27:15,999 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/6/update-version
2025-09-03 22:27:16,002 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:27:16,002 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:27:16,003 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:27:16,003 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:27:16,003 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:27:16,003 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:27:16,003 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:27:16,004 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:27:16,004 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 16:52:25+00:00 (UTC)
2025-09-03 22:27:16,004 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:27:16,004 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:27:16,007 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:27:16,007 - prompt_manager.app.api.v1.api - INFO - Auto-updating prompt ID 6 (user: prishatank@gmail.com)
2025-09-03 22:27:16,016 - prompt_manager.app.api.v1.api - INFO - Successfully auto-incremented version to '1.0.1' for prompt 'healthcare_advisor'
2025-09-03 22:27:16,017 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/6/update-version Status: 200 Time: 17.94ms
2025-09-03 22:27:16,018 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:27:16,018 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:27:16,018 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:27:18,685 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:27:18,686 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.88ms
2025-09-03 22:27:18,694 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:27:18,694 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.54ms
2025-09-03 22:27:18,696 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:27:18,698 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:27:18,698 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:27:18,699 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:27:18,699 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:27:18,699 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:27:18,699 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:27:18,699 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:27:18,700 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:27:18,700 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 16:52:25+00:00 (UTC)
2025-09-03 22:27:18,700 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:27:18,700 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:27:18,701 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:27:18,701 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:27:18,703 - prompt_manager.app.api.v1.api - INFO - Found 7 prompts out of 7 total
2025-09-03 22:27:18,703 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 7.0ms
2025-09-03 22:27:18,704 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:27:18,704 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:27:18,704 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:27:27,502 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:27:27,505 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 3.52ms
2025-09-03 22:27:27,514 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:27:27,515 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 1.23ms
2025-09-03 22:27:27,517 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:27:27,519 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:27:27,519 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:27:27,520 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:27:27,520 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:27:27,520 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:27:27,520 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:27:27,520 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:27:27,521 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:27:27,521 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 16:52:25+00:00 (UTC)
2025-09-03 22:27:27,521 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:27:27,521 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:27:27,525 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:27:27,526 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:27:27,528 - prompt_manager.app.api.v1.api - INFO - Found 7 prompts out of 7 total
2025-09-03 22:27:27,529 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 11.69ms
2025-09-03 22:27:27,530 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:27:27,530 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:27:27,530 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:27:31,754 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:27:31,755 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.79ms
2025-09-03 22:27:31,762 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:27:31,763 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.95ms
2025-09-03 22:27:31,765 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:27:31,766 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:27:31,766 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:27:31,766 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:27:31,767 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:27:31,767 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:27:31,767 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:27:31,767 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:27:31,768 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:27:31,768 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 16:52:25+00:00 (UTC)
2025-09-03 22:27:31,768 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:27:31,768 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:27:31,770 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:27:31,770 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:27:31,771 - prompt_manager.app.api.v1.api - INFO - Found 7 prompts out of 7 total
2025-09-03 22:27:31,772 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 7.67ms
2025-09-03 22:27:31,773 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:27:31,773 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:27:31,773 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:27:32,967 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:27:32,968 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.85ms
2025-09-03 22:27:32,976 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:27:32,977 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.57ms
2025-09-03 22:27:32,979 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:27:32,981 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:27:32,981 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:27:32,981 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:27:32,982 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:27:32,982 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:27:32,982 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:27:32,982 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:27:32,983 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:27:32,983 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 16:52:25+00:00 (UTC)
2025-09-03 22:27:32,983 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:27:32,983 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:27:32,984 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:27:32,985 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:27:32,986 - prompt_manager.app.api.v1.api - INFO - Found 7 prompts out of 7 total
2025-09-03 22:27:32,988 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 8.28ms
2025-09-03 22:27:32,989 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:27:32,989 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:27:32,989 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:27:32,992 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/name/healthcare_advisor/version/1.0.1/activate?updated_by=system@example.com
2025-09-03 22:27:32,994 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:27:32,994 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:27:32,994 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:27:32,994 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:27:32,994 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:27:32,994 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:27:32,994 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:27:32,995 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:27:32,995 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 16:52:25+00:00 (UTC)
2025-09-03 22:27:32,995 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:27:32,995 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:27:32,995 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:27:32,996 - prompt_manager.app.api.v1.api - INFO - Setting active version for prompt 'healthcare_advisor' to version 1.0.1 (user: prishatank@gmail.com)
2025-09-03 22:27:32,996 - prompt_manager.app.api.v1.api - INFO - Setting prompt 'healthcare_advisor' version 1.0.1 as live version
2025-09-03 22:27:33,002 - prompt_manager.app.api.v1.api - INFO - Successfully set prompt 'healthcare_advisor' version 1.0.1 as live version
2025-09-03 22:27:33,003 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/name/healthcare_advisor/version/1.0.1/activate?updated_by=system@example.com Status: 200 Time: 10.1ms
2025-09-03 22:27:33,003 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:27:33,003 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:27:33,003 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:27:33,041 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:27:33,042 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.4ms
2025-09-03 22:27:33,045 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:27:33,045 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.27ms
2025-09-03 22:27:33,046 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:27:33,046 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:27:33,046 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:27:33,046 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:27:33,046 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:27:33,046 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:27:33,046 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:27:33,046 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:27:33,047 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:27:33,047 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 16:52:25+00:00 (UTC)
2025-09-03 22:27:33,047 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:27:33,047 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:27:33,048 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:27:33,048 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:27:33,049 - prompt_manager.app.api.v1.api - INFO - Found 7 prompts out of 7 total
2025-09-03 22:27:33,050 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 4.12ms
2025-09-03 22:27:33,050 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:27:33,050 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:27:33,050 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:27:38,663 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:27:38,663 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.36ms
2025-09-03 22:27:42,555 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:27:42,555 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.71ms
2025-09-03 22:27:43,476 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:27:43,477 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.79ms
2025-09-03 22:27:43,485 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/?status=active
2025-09-03 22:27:43,486 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:27:43,486 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:27:43,486 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:27:43,486 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:27:43,486 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:27:43,486 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:27:43,487 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:27:43,487 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:27:43,487 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 16:52:25+00:00 (UTC)
2025-09-03 22:27:43,487 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:27:43,487 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:27:43,488 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:27:43,488 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=PromptStatus.ACTIVE, tag=None
2025-09-03 22:27:43,495 - prompt_manager.app.api.v1.api - INFO - Found 4 prompts out of 4 total
2025-09-03 22:27:43,495 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/?status=active Status: 200 Time: 10.55ms
2025-09-03 22:27:43,495 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:27:43,496 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:27:43,496 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:28:09,382 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:28:09,386 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:28:09,386 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 4.46ms
2025-09-03 22:28:09,387 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.46ms
2025-09-03 22:28:09,462 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/test-persona
2025-09-03 22:28:09,464 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:28:09,464 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:28:09,464 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:28:09,464 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:28:09,464 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:28:09,465 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:28:09,465 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:28:09,467 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:28:09,468 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 16:52:25+00:00 (UTC)
2025-09-03 22:28:09,468 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:28:09,468 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:28:09,476 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:28:09,476 - prompt_manager.app.api.v1.api - INFO - Testing persona with automatic prompt selection (user: prishatank@gmail.com)
2025-09-03 22:28:09,477 - prompt_manager.app.crud.crud - INFO - Finding most relevant prompt for input: I have severe headache, help me
2025-09-03 22:28:09,479 - prompt_manager.app.crud.crud - INFO - Found 4 active prompts in the database
2025-09-03 22:28:09,479 - prompt_manager.app.crud.crud - INFO - Active prompt 1: ID=2, Name=coding_assistant, Status=active, is_active=True
2025-09-03 22:28:09,479 - prompt_manager.app.crud.crud - INFO - Active prompt 2: ID=3, Name=math_tutor , Status=active, is_active=True
2025-09-03 22:28:09,479 - prompt_manager.app.crud.crud - INFO - Active prompt 3: ID=5, Name=cooking_assistant, Status=active, is_active=True
2025-09-03 22:28:09,479 - prompt_manager.app.crud.crud - INFO - Active prompt 4: ID=7, Name=healthcare_advisor, Status=active, is_active=True
2025-09-03 22:28:09,479 - prompt_manager.app.crud.crud - INFO - Sending 4 prompts to LLM for analysis
2025-09-03 22:28:09,479 - prompt_manager.app.crud.crud - INFO - Initializing GROQ client...
2025-09-03 22:28:09,537 - prompt_manager.app.crud.crud - INFO - Sending request to GROQ API...
2025-09-03 22:28:10,354 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 22:28:10,366 - prompt_manager.app.crud.crud - INFO - Received response from GROQ API
2025-09-03 22:28:10,366 - prompt_manager.app.crud.crud - INFO - LLM raw response: 7 for input: I have severe headache, help me
2025-09-03 22:28:10,367 - prompt_manager.app.crud.crud - INFO - Extracted prompt ID: 7
2025-09-03 22:28:10,370 - prompt_manager.app.crud.crud - INFO - Valid active prompt found: ID=7, Name=healthcare_advisor
2025-09-03 22:28:10,372 - prompt_manager.app.api.v1.api - INFO - Testing persona for prompt ID 7 (user: prishatank@gmail.com)
2025-09-03 22:28:11,266 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 22:28:11,273 - prompt_manager.app.api.v1.api - INFO - Generated persona response for prompt 'healthcare_advisor' with persona type 'dynamic_persona'
2025-09-03 22:28:11,274 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/test-persona Status: 200 Time: 1812.54ms
2025-09-03 22:28:11,276 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:28:11,276 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:28:11,276 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:28:35,073 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:28:35,075 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 2.58ms
2025-09-03 22:28:35,137 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:28:35,138 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.04ms
2025-09-03 22:28:35,146 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/test-persona
2025-09-03 22:28:35,148 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:28:35,149 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:28:35,149 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:28:35,149 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:28:35,149 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:28:35,149 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:28:35,149 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:28:35,149 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:28:35,149 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 16:52:25+00:00 (UTC)
2025-09-03 22:28:35,149 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:28:35,149 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:28:35,152 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:28:35,153 - prompt_manager.app.api.v1.api - INFO - Testing persona with automatic prompt selection (user: prishatank@gmail.com)
2025-09-03 22:28:35,153 - prompt_manager.app.crud.crud - INFO - Finding most relevant prompt for input: I want to cook pasta, help me
2025-09-03 22:28:35,153 - prompt_manager.app.crud.crud - INFO - Found 4 active prompts in the database
2025-09-03 22:28:35,153 - prompt_manager.app.crud.crud - INFO - Active prompt 1: ID=2, Name=coding_assistant, Status=active, is_active=True
2025-09-03 22:28:35,153 - prompt_manager.app.crud.crud - INFO - Active prompt 2: ID=3, Name=math_tutor , Status=active, is_active=True
2025-09-03 22:28:35,153 - prompt_manager.app.crud.crud - INFO - Active prompt 3: ID=5, Name=cooking_assistant, Status=active, is_active=True
2025-09-03 22:28:35,153 - prompt_manager.app.crud.crud - INFO - Active prompt 4: ID=7, Name=healthcare_advisor, Status=active, is_active=True
2025-09-03 22:28:35,153 - prompt_manager.app.crud.crud - INFO - Sending 4 prompts to LLM for analysis
2025-09-03 22:28:35,154 - prompt_manager.app.crud.crud - INFO - Initializing GROQ client...
2025-09-03 22:28:35,175 - prompt_manager.app.crud.crud - INFO - Sending request to GROQ API...
2025-09-03 22:28:35,450 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 22:28:35,452 - prompt_manager.app.crud.crud - INFO - Received response from GROQ API
2025-09-03 22:28:35,452 - prompt_manager.app.crud.crud - INFO - LLM raw response: 5 for input: I want to cook pasta, help me
2025-09-03 22:28:35,452 - prompt_manager.app.crud.crud - INFO - Extracted prompt ID: 5
2025-09-03 22:28:35,453 - prompt_manager.app.crud.crud - INFO - Valid active prompt found: ID=5, Name=cooking_assistant
2025-09-03 22:28:35,454 - prompt_manager.app.api.v1.api - INFO - Testing persona for prompt ID 5 (user: prishatank@gmail.com)
2025-09-03 22:28:36,461 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-03 22:28:36,465 - prompt_manager.app.api.v1.api - INFO - Generated persona response for prompt 'cooking_assistant' with persona type 'dynamic_persona'
2025-09-03 22:28:36,465 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/test-persona Status: 200 Time: 1318.8ms
2025-09-03 22:28:36,465 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:28:36,466 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:28:36,466 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:28:47,556 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:28:47,557 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.14ms
2025-09-03 22:28:47,565 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:28:47,566 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.71ms
2025-09-03 22:28:47,569 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:28:47,571 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:28:47,571 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:28:47,571 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:28:47,572 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:28:47,572 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:28:47,572 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:28:47,572 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:28:47,572 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:28:47,573 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 16:52:25+00:00 (UTC)
2025-09-03 22:28:47,573 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:28:47,573 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:28:47,574 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:28:47,574 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:28:47,579 - prompt_manager.app.api.v1.api - INFO - Found 7 prompts out of 7 total
2025-09-03 22:28:47,579 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 10.2ms
2025-09-03 22:28:47,580 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:28:47,580 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:28:47,580 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:29:01,667 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:29:01,680 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 13.6ms
2025-09-03 22:29:01,695 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:29:01,696 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 1.08ms
2025-09-03 22:29:01,697 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:29:01,700 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:29:01,700 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:29:01,701 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:29:01,701 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:29:01,701 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:29:01,701 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:29:01,701 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:29:01,705 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:29:01,706 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 16:52:25+00:00 (UTC)
2025-09-03 22:29:01,706 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:29:01,706 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:29:01,716 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:29:01,716 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:29:01,719 - prompt_manager.app.api.v1.api - INFO - Found 7 prompts out of 7 total
2025-09-03 22:29:01,720 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 22.77ms
2025-09-03 22:29:01,721 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:29:01,721 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:29:01,721 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:29:05,830 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:29:05,831 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.83ms
2025-09-03 22:29:37,827 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:29:37,830 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 2.15ms
2025-09-03 22:29:45,648 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:29:45,650 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 2.22ms
2025-09-03 22:37:44,183 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 22:37:47,485 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 22:37:47,486 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-03 22:37:47,486 - prompt_manager.app.main - INFO - Database URL: sqlite:////Users/prisha/Desktop/Coding/system prompt/prompts.db
2025-09-03 22:38:30,480 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:38:30,496 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 15.56ms
2025-09-03 22:38:41,178 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:38:41,189 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 11.25ms
2025-09-03 22:38:41,196 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-03 22:38:41,199 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:38:41,199 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:38:41,555 - prompt_manager.app.api.v1.endpoints.auth - INFO - Created access token for user: prishatank@gmail.com
2025-09-03 22:38:41,573 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 200 Time: 376.83ms
2025-09-03 22:38:41,573 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:38:41,573 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:38:41,574 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:38:41,628 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:38:41,628 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.36ms
2025-09-03 22:38:43,648 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:38:43,649 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.13ms
2025-09-03 22:38:45,428 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:38:45,429 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.74ms
2025-09-03 22:38:45,435 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:38:45,436 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 1.03ms
2025-09-03 22:38:45,442 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:38:45,444 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:38:45,444 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:38:45,444 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:38:45,444 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:38:45,444 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:38:45,444 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:38:45,444 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:38:45,445 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:38:45,445 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:08:41+00:00 (UTC)
2025-09-03 22:38:45,445 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:38:45,445 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:38:45,453 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:38:45,453 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:38:45,464 - prompt_manager.app.api.v1.api - INFO - Found 7 prompts out of 7 total
2025-09-03 22:38:45,466 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 24.08ms
2025-09-03 22:38:45,467 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:38:45,467 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:38:45,468 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:38:49,390 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:38:49,398 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 7.99ms
2025-09-03 22:38:49,414 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:38:49,415 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 1.18ms
2025-09-03 22:38:49,422 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:38:49,424 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:38:49,424 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:38:49,425 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:38:49,425 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:38:49,425 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:38:49,425 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:38:49,425 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:38:49,427 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:38:49,428 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:08:41+00:00 (UTC)
2025-09-03 22:38:49,428 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:38:49,428 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:38:49,437 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:38:49,438 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:38:49,439 - prompt_manager.app.api.v1.api - INFO - Found 7 prompts out of 7 total
2025-09-03 22:38:49,440 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 18.25ms
2025-09-03 22:38:49,440 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:38:49,441 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:38:49,441 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:38:52,138 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:38:52,139 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.78ms
2025-09-03 22:38:52,144 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:38:52,145 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 1.01ms
2025-09-03 22:38:52,147 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:38:52,148 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:38:52,148 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:38:52,148 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:38:52,148 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:38:52,148 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:38:52,148 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:38:52,148 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:38:52,148 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:38:52,148 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:08:41+00:00 (UTC)
2025-09-03 22:38:52,148 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:38:52,149 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:38:52,151 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:38:52,152 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:38:52,153 - prompt_manager.app.api.v1.api - INFO - Found 7 prompts out of 7 total
2025-09-03 22:38:52,153 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 6.21ms
2025-09-03 22:38:52,154 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:38:52,154 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:38:52,154 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:38:55,360 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:38:55,367 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 7.62ms
2025-09-03 22:38:55,384 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:38:55,385 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 1.28ms
2025-09-03 22:38:55,387 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:38:55,389 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:38:55,389 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:38:55,389 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:38:55,390 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:38:55,390 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:38:55,390 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:38:55,390 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:38:55,391 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:38:55,391 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:08:41+00:00 (UTC)
2025-09-03 22:38:55,391 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:38:55,391 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:38:55,404 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:38:55,405 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:38:55,406 - prompt_manager.app.api.v1.api - INFO - Found 7 prompts out of 7 total
2025-09-03 22:38:55,407 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 19.82ms
2025-09-03 22:38:55,407 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:38:55,407 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:38:55,408 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:38:58,439 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:38:58,440 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.9ms
2025-09-03 22:38:58,446 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:38:58,448 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 1.05ms
2025-09-03 22:38:58,450 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:38:58,451 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:38:58,452 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:38:58,452 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:38:58,452 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:38:58,452 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:38:58,452 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:38:58,452 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:38:58,453 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:38:58,453 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:08:41+00:00 (UTC)
2025-09-03 22:38:58,453 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:38:58,453 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:38:58,454 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:38:58,455 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:38:58,456 - prompt_manager.app.api.v1.api - INFO - Found 7 prompts out of 7 total
2025-09-03 22:38:58,457 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 7.24ms
2025-09-03 22:38:58,458 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:38:58,458 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:38:58,459 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:39:01,833 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:39:01,834 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.66ms
2025-09-03 22:39:07,494 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:39:07,495 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.87ms
2025-09-03 22:39:07,506 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:39:07,508 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:39:07,509 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:39:07,509 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:39:07,509 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:39:07,509 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:39:07,509 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:39:07,509 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:39:07,511 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:39:07,511 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:08:41+00:00 (UTC)
2025-09-03 22:39:07,511 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:39:07,511 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:39:07,523 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:39:07,524 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:39:07,526 - prompt_manager.app.api.v1.api - INFO - Found 7 prompts out of 7 total
2025-09-03 22:39:07,527 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 21.43ms
2025-09-03 22:39:07,528 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:39:07,528 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:39:07,528 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:39:19,148 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:39:19,149 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.21ms
2025-09-03 22:39:19,203 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:39:19,203 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.4ms
2025-09-03 22:39:19,211 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/3
2025-09-03 22:39:19,212 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:39:19,212 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:39:19,212 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:39:19,212 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:39:19,212 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:39:19,212 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:39:19,212 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:39:19,212 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:39:19,212 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:08:41+00:00 (UTC)
2025-09-03 22:39:19,212 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:39:19,212 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:39:19,213 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:39:19,213 - prompt_manager.app.api.v1.api - INFO - Retrieving prompt with ID: 3
2025-09-03 22:39:19,215 - prompt_manager.app.api.v1.api - INFO - Successfully retrieved prompt math_tutor  v1.0.0 (ID: 3)
2025-09-03 22:39:19,216 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/3 Status: 200 Time: 4.6ms
2025-09-03 22:39:19,216 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:39:19,216 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:39:19,217 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:39:38,790 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:39:38,797 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:39:38,797 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 14.12ms
2025-09-03 22:39:38,799 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 2.69ms
2025-09-03 22:39:38,887 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/3/update-version
2025-09-03 22:39:38,891 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:39:38,891 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:39:38,892 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:39:38,892 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:39:38,892 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:39:38,892 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:39:38,893 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:39:38,895 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:39:38,895 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:08:41+00:00 (UTC)
2025-09-03 22:39:38,895 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:39:38,895 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:39:38,904 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:39:38,905 - prompt_manager.app.api.v1.api - INFO - Auto-updating prompt ID 3 (user: prishatank@gmail.com)
2025-09-03 22:39:38,916 - prompt_manager.app.api.v1.api - INFO - Successfully auto-incremented version to '1.0.1' for prompt 'math_tutor '
2025-09-03 22:39:38,920 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/3/update-version Status: 200 Time: 32.57ms
2025-09-03 22:39:38,920 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:39:38,921 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:39:38,921 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:39:41,332 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:39:41,333 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.8ms
2025-09-03 22:39:41,340 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:39:41,341 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 1.19ms
2025-09-03 22:39:41,344 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:39:41,345 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:39:41,345 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:39:41,346 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:39:41,346 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:39:41,346 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:39:41,346 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:39:41,346 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:39:41,347 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:39:41,347 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:08:41+00:00 (UTC)
2025-09-03 22:39:41,347 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:39:41,347 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:39:41,348 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:39:41,348 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:39:41,350 - prompt_manager.app.api.v1.api - INFO - Found 8 prompts out of 8 total
2025-09-03 22:39:41,350 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 6.15ms
2025-09-03 22:39:41,351 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:39:41,352 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:39:41,352 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:39:44,428 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:39:44,430 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 2.18ms
2025-09-03 22:39:44,439 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:39:44,440 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.88ms
2025-09-03 22:39:44,442 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:39:44,443 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:39:44,443 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:39:44,443 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:39:44,443 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:39:44,443 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:39:44,443 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:39:44,443 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:39:44,444 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:39:44,444 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:08:41+00:00 (UTC)
2025-09-03 22:39:44,444 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:39:44,444 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:39:44,445 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:39:44,445 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:39:44,446 - prompt_manager.app.api.v1.api - INFO - Found 8 prompts out of 8 total
2025-09-03 22:39:44,447 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 4.52ms
2025-09-03 22:39:44,447 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:39:44,447 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:39:44,447 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:39:46,185 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:39:46,186 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.87ms
2025-09-03 22:39:46,193 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:39:46,194 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.61ms
2025-09-03 22:39:46,196 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:39:46,197 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:39:46,197 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:39:46,198 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:39:46,198 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:39:46,198 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:39:46,198 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:39:46,198 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:39:46,199 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:39:46,199 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:08:41+00:00 (UTC)
2025-09-03 22:39:46,199 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:39:46,199 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:39:46,205 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:39:46,205 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:39:46,207 - prompt_manager.app.api.v1.api - INFO - Found 8 prompts out of 8 total
2025-09-03 22:39:46,208 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 12.19ms
2025-09-03 22:39:46,208 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:39:46,208 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:39:46,208 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:39:47,312 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:39:47,313 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.84ms
2025-09-03 22:39:47,321 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:39:47,322 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.99ms
2025-09-03 22:39:47,325 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:39:47,326 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:39:47,326 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:39:47,326 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:39:47,327 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:39:47,327 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:39:47,327 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:39:47,327 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:39:47,328 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:39:47,328 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:08:41+00:00 (UTC)
2025-09-03 22:39:47,328 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:39:47,328 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:39:47,329 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:39:47,329 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:39:47,330 - prompt_manager.app.api.v1.api - INFO - Found 8 prompts out of 8 total
2025-09-03 22:39:47,331 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 6.35ms
2025-09-03 22:39:47,332 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:39:47,332 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:39:47,332 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:39:47,336 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/name/math_tutor /version/1.0.1/activate?updated_by=system@example.com
2025-09-03 22:39:47,337 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:39:47,337 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:39:47,337 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:39:47,337 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:39:47,337 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:39:47,337 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:39:47,337 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:39:47,338 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:39:47,338 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:08:41+00:00 (UTC)
2025-09-03 22:39:47,338 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:39:47,338 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:39:47,339 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:39:47,339 - prompt_manager.app.api.v1.api - INFO - Setting active version for prompt 'math_tutor ' to version 1.0.1 (user: prishatank@gmail.com)
2025-09-03 22:39:47,339 - prompt_manager.app.api.v1.api - INFO - Setting prompt 'math_tutor ' version 1.0.1 as live version
2025-09-03 22:39:47,353 - prompt_manager.app.api.v1.api - INFO - Successfully set prompt 'math_tutor ' version 1.0.1 as live version
2025-09-03 22:39:47,353 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/name/math_tutor /version/1.0.1/activate?updated_by=system@example.com Status: 200 Time: 17.53ms
2025-09-03 22:39:47,354 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:39:47,354 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:39:47,355 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:39:47,405 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:39:47,406 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.36ms
2025-09-03 22:39:47,409 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:39:47,409 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.29ms
2025-09-03 22:39:47,410 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:39:47,410 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:39:47,410 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:39:47,410 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:39:47,410 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:39:47,410 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:39:47,410 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:39:47,410 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:39:47,411 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:39:47,411 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:08:41+00:00 (UTC)
2025-09-03 22:39:47,411 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:39:47,411 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:39:47,411 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:39:47,412 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:39:47,412 - prompt_manager.app.api.v1.api - INFO - Found 8 prompts out of 8 total
2025-09-03 22:39:47,413 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 2.9ms
2025-09-03 22:39:47,413 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:39:47,413 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:39:47,413 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:39:51,756 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:39:51,757 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.44ms
2025-09-03 22:39:51,764 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:39:51,764 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.48ms
2025-09-03 22:39:51,766 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:39:51,768 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:39:51,768 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:39:51,768 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:39:51,768 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:39:51,769 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:39:51,769 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:39:51,769 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:39:51,770 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:39:51,770 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:08:41+00:00 (UTC)
2025-09-03 22:39:51,770 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:39:51,770 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:39:51,772 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:39:51,772 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:39:51,773 - prompt_manager.app.api.v1.api - INFO - Found 8 prompts out of 8 total
2025-09-03 22:39:51,773 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 7.46ms
2025-09-03 22:39:51,774 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:39:51,774 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:39:51,774 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:39:52,514 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:39:52,515 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.61ms
2025-09-03 22:39:52,527 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:39:52,529 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 1.71ms
2025-09-03 22:39:52,532 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:39:52,535 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:39:52,535 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:39:52,536 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:39:52,536 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:39:52,536 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:39:52,536 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:39:52,536 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:39:52,536 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:39:52,536 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:08:41+00:00 (UTC)
2025-09-03 22:39:52,537 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:39:52,537 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:39:52,539 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:39:52,539 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:39:52,542 - prompt_manager.app.api.v1.api - INFO - Found 8 prompts out of 8 total
2025-09-03 22:39:52,544 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 11.63ms
2025-09-03 22:39:52,545 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:39:52,545 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:39:52,546 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:39:52,552 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/name/math_tutor /version/1.0.1/activate?updated_by=system@example.com
2025-09-03 22:39:52,554 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:39:52,554 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:39:52,555 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:39:52,555 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:39:52,555 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:39:52,555 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:39:52,555 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:39:52,555 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:39:52,555 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:08:41+00:00 (UTC)
2025-09-03 22:39:52,555 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:39:52,555 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:39:52,556 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:39:52,556 - prompt_manager.app.api.v1.api - INFO - Setting active version for prompt 'math_tutor ' to version 1.0.1 (user: prishatank@gmail.com)
2025-09-03 22:39:52,557 - prompt_manager.app.api.v1.api - INFO - Prompt 'math_tutor ' version 1.0.1 is already the live version
2025-09-03 22:39:52,557 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/name/math_tutor /version/1.0.1/activate?updated_by=system@example.com Status: 200 Time: 4.62ms
2025-09-03 22:39:52,559 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:39:52,559 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:39:52,559 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:39:52,630 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:39:52,630 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.84ms
2025-09-03 22:39:52,638 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:39:52,639 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.62ms
2025-09-03 22:39:52,641 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:39:52,643 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:39:52,643 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:39:52,643 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:39:52,643 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:39:52,643 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:39:52,643 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:39:52,643 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:39:52,644 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:39:52,644 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:08:41+00:00 (UTC)
2025-09-03 22:39:52,644 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:39:52,644 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:39:52,647 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:39:52,648 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:39:52,649 - prompt_manager.app.api.v1.api - INFO - Found 8 prompts out of 8 total
2025-09-03 22:39:52,650 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 8.97ms
2025-09-03 22:39:52,651 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:39:52,652 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:39:52,652 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:40:07,213 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:40:07,215 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 2.27ms
2025-09-03 22:41:30,106 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:41:30,114 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 7.94ms
2025-09-03 22:41:30,119 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-03 22:41:30,122 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:41:30,122 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:41:30,411 - prompt_manager.app.api.v1.endpoints.auth - INFO - Created access token for user: prishatank@gmail.com
2025-09-03 22:41:30,414 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 200 Time: 295.0ms
2025-09-03 22:41:30,415 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:41:30,415 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:41:30,415 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:41:30,472 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:41:30,473 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.49ms
2025-09-03 22:41:33,297 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:41:33,299 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.11ms
2025-09-03 22:41:33,307 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:41:33,308 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.93ms
2025-09-03 22:41:33,311 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:41:33,314 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:41:33,314 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:41:33,315 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:41:33,315 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:41:33,315 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:41:33,315 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:41:33,315 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:41:33,316 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:41:33,316 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:11:30+00:00 (UTC)
2025-09-03 22:41:33,317 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:41:33,317 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:41:33,322 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:41:33,323 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:41:33,328 - prompt_manager.app.api.v1.api - INFO - Found 8 prompts out of 8 total
2025-09-03 22:41:33,330 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 18.85ms
2025-09-03 22:41:33,331 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:41:33,331 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:41:33,331 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:41:37,514 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:41:37,514 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.72ms
2025-09-03 22:41:37,520 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:41:37,520 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.59ms
2025-09-03 22:41:37,524 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:41:37,526 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:41:37,526 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:41:37,527 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:41:37,527 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:41:37,527 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:41:37,527 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:41:37,527 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:41:37,528 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:41:37,528 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:11:30+00:00 (UTC)
2025-09-03 22:41:37,528 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:41:37,528 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:41:37,529 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:41:37,530 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:41:37,531 - prompt_manager.app.api.v1.api - INFO - Found 8 prompts out of 8 total
2025-09-03 22:41:37,531 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 7.58ms
2025-09-03 22:41:37,532 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:41:37,532 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:41:37,532 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:41:39,321 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:41:39,322 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.78ms
2025-09-03 22:41:39,330 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:41:39,331 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.58ms
2025-09-03 22:41:39,333 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:41:39,335 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:41:39,335 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:41:39,335 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:41:39,335 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:41:39,335 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:41:39,335 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:41:39,335 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:41:39,336 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:41:39,336 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:11:30+00:00 (UTC)
2025-09-03 22:41:39,336 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:41:39,336 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:41:39,337 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:41:39,337 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:41:39,338 - prompt_manager.app.api.v1.api - INFO - Found 8 prompts out of 8 total
2025-09-03 22:41:39,340 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 6.36ms
2025-09-03 22:41:39,341 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:41:39,341 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:41:39,341 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:41:40,061 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:41:40,061 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.66ms
2025-09-03 22:41:40,070 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:41:40,071 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.76ms
2025-09-03 22:41:40,074 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:41:40,075 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:41:40,076 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:41:40,076 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:41:40,076 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:41:40,077 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:41:40,077 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:41:40,077 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:41:40,077 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:41:40,077 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:11:30+00:00 (UTC)
2025-09-03 22:41:40,077 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:41:40,077 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:41:40,079 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:41:40,080 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:41:40,082 - prompt_manager.app.api.v1.api - INFO - Found 8 prompts out of 8 total
2025-09-03 22:41:40,083 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 9.37ms
2025-09-03 22:41:40,084 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:41:40,084 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:41:40,084 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:41:40,088 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/name/math_tutor /version/1.0.0/activate?updated_by=system@example.com
2025-09-03 22:41:40,089 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:41:40,089 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:41:40,089 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:41:40,089 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:41:40,089 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:41:40,089 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:41:40,089 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:41:40,089 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:41:40,090 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:11:30+00:00 (UTC)
2025-09-03 22:41:40,090 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:41:40,090 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:41:40,090 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:41:40,090 - prompt_manager.app.api.v1.api - INFO - Setting active version for prompt 'math_tutor ' to version 1.0.0 (user: prishatank@gmail.com)
2025-09-03 22:41:40,091 - prompt_manager.app.api.v1.api - INFO - Setting prompt 'math_tutor ' version 1.0.0 as live version
2025-09-03 22:41:40,104 - prompt_manager.app.api.v1.api - INFO - Successfully set prompt 'math_tutor ' version 1.0.0 as live version
2025-09-03 22:41:40,105 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/name/math_tutor /version/1.0.0/activate?updated_by=system@example.com Status: 200 Time: 16.92ms
2025-09-03 22:41:40,105 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:41:40,105 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:41:40,105 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:41:40,146 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:41:40,146 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.36ms
2025-09-03 22:41:40,150 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:41:40,151 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.76ms
2025-09-03 22:41:40,153 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:41:40,153 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:41:40,153 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:41:40,153 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:41:40,153 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:41:40,153 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:41:40,153 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:41:40,153 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:41:40,154 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:41:40,154 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:11:30+00:00 (UTC)
2025-09-03 22:41:40,154 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:41:40,154 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:41:40,154 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:41:40,154 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:41:40,155 - prompt_manager.app.api.v1.api - INFO - Found 8 prompts out of 8 total
2025-09-03 22:41:40,155 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 2.57ms
2025-09-03 22:41:40,156 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:41:40,156 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:41:40,156 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:41:43,245 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:41:43,249 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 4.11ms
2025-09-03 22:41:43,261 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:41:43,262 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.77ms
2025-09-03 22:41:43,263 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:41:43,265 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:41:43,265 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:41:43,266 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:41:43,266 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:41:43,266 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:41:43,266 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:41:43,266 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:41:43,269 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:41:43,270 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:11:30+00:00 (UTC)
2025-09-03 22:41:43,270 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:41:43,270 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:41:43,279 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:41:43,280 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:41:43,282 - prompt_manager.app.api.v1.api - INFO - Found 8 prompts out of 8 total
2025-09-03 22:41:43,283 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 19.8ms
2025-09-03 22:41:43,284 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:41:43,284 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:41:43,284 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:43:44,640 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:43:44,649 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 9.58ms
2025-09-03 22:43:44,661 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:43:44,662 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 1.03ms
2025-09-03 22:43:44,664 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:43:44,666 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:43:44,667 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:43:44,667 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:43:44,667 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:43:44,667 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:43:44,668 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:43:44,668 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:43:44,674 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:43:44,674 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:11:30+00:00 (UTC)
2025-09-03 22:43:44,674 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:43:44,674 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:43:44,688 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:43:44,688 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:43:44,698 - prompt_manager.app.api.v1.api - INFO - Found 8 prompts out of 8 total
2025-09-03 22:43:44,702 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 37.25ms
2025-09-03 22:43:44,702 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:43:44,702 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:43:44,703 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:43:44,707 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/name/math_tutor /version/1.0.1/activate?updated_by=system@example.com
2025-09-03 22:43:44,708 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:43:44,708 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:43:44,708 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:43:44,708 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:43:44,708 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:43:44,708 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:43:44,708 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:43:44,708 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:43:44,708 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:11:30+00:00 (UTC)
2025-09-03 22:43:44,709 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:43:44,709 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:43:44,709 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:43:44,709 - prompt_manager.app.api.v1.api - INFO - Setting active version for prompt 'math_tutor ' to version 1.0.1 (user: prishatank@gmail.com)
2025-09-03 22:43:44,709 - prompt_manager.app.api.v1.api - INFO - Setting prompt 'math_tutor ' version 1.0.1 as live version
2025-09-03 22:43:44,728 - prompt_manager.app.api.v1.api - INFO - Successfully set prompt 'math_tutor ' version 1.0.1 as live version
2025-09-03 22:43:44,729 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/name/math_tutor /version/1.0.1/activate?updated_by=system@example.com Status: 200 Time: 21.75ms
2025-09-03 22:43:44,729 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:43:44,729 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:43:44,729 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:43:44,825 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:43:44,827 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.73ms
2025-09-03 22:43:44,834 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:43:44,835 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.43ms
2025-09-03 22:43:44,837 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:43:44,838 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:43:44,838 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:43:44,838 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:43:44,838 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:43:44,838 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:43:44,838 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:43:44,838 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:43:44,838 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:43:44,838 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:11:30+00:00 (UTC)
2025-09-03 22:43:44,838 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:43:44,838 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:43:44,839 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:43:44,839 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:43:44,840 - prompt_manager.app.api.v1.api - INFO - Found 8 prompts out of 8 total
2025-09-03 22:43:44,840 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 3.45ms
2025-09-03 22:43:44,841 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:43:44,841 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:43:44,841 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:44:16,371 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 22:44:19,589 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 22:44:19,590 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-03 22:44:19,590 - prompt_manager.app.main - INFO - Database URL: sqlite:////Users/prisha/Desktop/Coding/system prompt/prompts.db
2025-09-03 22:44:36,271 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:44:36,274 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 2.57ms
2025-09-03 22:44:36,279 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:44:36,282 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 3.59ms
2025-09-03 22:44:36,288 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:44:36,294 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:44:36,295 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:44:36,296 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:44:36,296 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:44:36,296 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:44:36,296 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:44:36,296 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:44:36,300 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:44:36,300 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:11:30+00:00 (UTC)
2025-09-03 22:44:36,300 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:44:36,300 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:44:36,312 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:44:36,314 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:44:36,323 - prompt_manager.app.api.v1.api - INFO - Found 8 prompts out of 8 total
2025-09-03 22:44:36,324 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 36.14ms
2025-09-03 22:44:36,325 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:44:36,325 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:44:36,326 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:44:36,333 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/name/math_tutor /version/1.0.1/activate?updated_by=system@example.com
2025-09-03 22:44:36,334 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:44:36,334 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:44:36,334 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:44:36,334 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:44:36,334 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:44:36,334 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:44:36,334 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:44:36,335 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:44:36,335 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:11:30+00:00 (UTC)
2025-09-03 22:44:36,335 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:44:36,335 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:44:36,335 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:44:36,336 - prompt_manager.app.api.v1.api - INFO - Setting active version for prompt 'math_tutor ' to version 1.0.1 (user: prishatank@gmail.com)
2025-09-03 22:44:36,337 - prompt_manager.app.api.v1.api - INFO - Prompt 'math_tutor ' version 1.0.1 is already the live version
2025-09-03 22:44:36,338 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/name/math_tutor /version/1.0.1/activate?updated_by=system@example.com Status: 200 Time: 4.98ms
2025-09-03 22:44:36,339 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:44:36,340 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:44:36,340 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:44:50,803 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 22:44:53,315 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 22:44:53,316 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-03 22:44:53,316 - prompt_manager.app.main - INFO - Database URL: sqlite:////Users/prisha/Desktop/Coding/system prompt/prompts.db
2025-09-03 22:45:33,303 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:45:33,312 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 9.01ms
2025-09-03 22:45:44,264 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:45:44,268 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 4.85ms
2025-09-03 22:45:44,275 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-03 22:45:44,278 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:45:44,279 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:45:44,619 - prompt_manager.app.api.v1.endpoints.auth - INFO - Created access token for user: prishatank@gmail.com
2025-09-03 22:45:44,628 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 200 Time: 353.25ms
2025-09-03 22:45:44,629 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:45:44,629 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:45:44,629 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:45:44,685 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:45:44,685 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.5ms
2025-09-03 22:45:46,454 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:45:46,456 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 2.48ms
2025-09-03 22:45:46,461 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:45:46,461 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.35ms
2025-09-03 22:45:46,463 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:45:46,465 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:45:46,466 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:45:46,466 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:45:46,466 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:45:46,466 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:45:46,467 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:45:46,467 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:45:46,467 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:45:46,467 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:15:44+00:00 (UTC)
2025-09-03 22:45:46,467 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:45:46,467 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:45:46,471 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:45:46,472 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:45:46,479 - prompt_manager.app.api.v1.api - INFO - Found 8 prompts out of 8 total
2025-09-03 22:45:46,480 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 16.59ms
2025-09-03 22:45:46,480 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:45:46,480 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:45:46,481 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:45:49,954 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:45:49,956 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 2.71ms
2025-09-03 22:45:49,963 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:45:49,964 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 1.72ms
2025-09-03 22:45:49,969 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:45:49,971 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:45:49,971 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:45:49,971 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:45:49,971 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:45:49,971 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:45:49,971 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:45:49,971 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:45:49,973 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:45:49,973 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:15:44+00:00 (UTC)
2025-09-03 22:45:49,973 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:45:49,973 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:45:49,978 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:45:49,979 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:45:49,980 - prompt_manager.app.api.v1.api - INFO - Found 8 prompts out of 8 total
2025-09-03 22:45:49,981 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 12.01ms
2025-09-03 22:45:49,981 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:45:49,982 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:45:49,982 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:45:51,701 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:45:51,702 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.8ms
2025-09-03 22:45:51,709 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:45:51,710 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.89ms
2025-09-03 22:45:51,712 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:45:51,713 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:45:51,713 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:45:51,713 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:45:51,713 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:45:51,713 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:45:51,713 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:45:51,713 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:45:51,714 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:45:51,714 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:15:44+00:00 (UTC)
2025-09-03 22:45:51,715 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:45:51,715 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:45:51,717 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:45:51,717 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:45:51,719 - prompt_manager.app.api.v1.api - INFO - Found 8 prompts out of 8 total
2025-09-03 22:45:51,720 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 8.52ms
2025-09-03 22:45:51,721 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:45:51,721 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:45:51,721 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:45:52,474 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:45:52,475 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.05ms
2025-09-03 22:45:52,483 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:45:52,484 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 1.15ms
2025-09-03 22:45:52,488 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:45:52,489 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:45:52,490 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:45:52,490 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:45:52,490 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:45:52,490 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:45:52,490 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:45:52,490 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:45:52,491 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:45:52,491 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:15:44+00:00 (UTC)
2025-09-03 22:45:52,491 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:45:52,491 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:45:52,492 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:45:52,492 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:45:52,495 - prompt_manager.app.api.v1.api - INFO - Found 8 prompts out of 8 total
2025-09-03 22:45:52,496 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 7.99ms
2025-09-03 22:45:52,496 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:45:52,496 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:45:52,497 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:45:52,502 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/name/math_tutor /version/1.0.0/activate?updated_by=system@example.com
2025-09-03 22:45:52,503 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:45:52,503 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:45:52,503 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:45:52,504 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:45:52,504 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:45:52,504 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:45:52,504 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:45:52,504 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:45:52,504 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:15:44+00:00 (UTC)
2025-09-03 22:45:52,504 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:45:52,504 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:45:52,505 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:45:52,505 - prompt_manager.app.api.v1.api - INFO - Setting active version for prompt 'math_tutor ' to version 1.0.0 (user: prishatank@gmail.com)
2025-09-03 22:45:52,508 - prompt_manager.app.api.v1.api - INFO - Setting prompt 'math_tutor ' version 1.0.0 as live version
2025-09-03 22:45:52,523 - prompt_manager.app.api.v1.api - INFO - Successfully set prompt 'math_tutor ' version 1.0.0 as live version
2025-09-03 22:45:52,524 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/name/math_tutor /version/1.0.0/activate?updated_by=system@example.com Status: 200 Time: 21.64ms
2025-09-03 22:45:52,525 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:45:52,525 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:45:52,526 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:45:54,575 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:45:54,575 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.61ms
2025-09-03 22:45:54,581 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:45:54,582 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.59ms
2025-09-03 22:45:54,583 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:45:54,584 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:45:54,584 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:45:54,584 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:45:54,584 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:45:54,584 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:45:54,584 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:45:54,584 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:45:54,585 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:45:54,585 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:15:44+00:00 (UTC)
2025-09-03 22:45:54,585 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:45:54,585 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:45:54,586 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:45:54,586 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:45:54,588 - prompt_manager.app.api.v1.api - INFO - Found 8 prompts out of 8 total
2025-09-03 22:45:54,588 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 5.13ms
2025-09-03 22:45:54,589 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:45:54,589 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:45:54,589 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:46:36,472 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 22:46:41,828 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 22:46:41,828 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-03 22:46:41,828 - prompt_manager.app.main - INFO - Database URL: sqlite:////Users/prisha/Desktop/Coding/system prompt/prompts.db
2025-09-03 22:47:56,159 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 22:47:59,485 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 22:47:59,486 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-03 22:47:59,486 - prompt_manager.app.main - INFO - Database URL: sqlite:////Users/prisha/Desktop/Coding/system prompt/prompts.db
2025-09-03 22:48:55,651 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:48:55,655 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 3.92ms
2025-09-03 22:49:06,549 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:49:06,552 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 3.09ms
2025-09-03 22:49:06,556 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-03 22:49:06,571 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:49:06,572 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:49:06,952 - prompt_manager.app.api.v1.endpoints.auth - INFO - Created access token for user: prishatank@gmail.com
2025-09-03 22:49:06,963 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 200 Time: 406.98ms
2025-09-03 22:49:06,963 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:49:06,963 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:49:06,964 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:49:07,018 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:49:07,018 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.37ms
2025-09-03 22:49:08,953 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:49:08,953 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.73ms
2025-09-03 22:49:08,959 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:49:08,960 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.53ms
2025-09-03 22:49:08,961 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:49:08,962 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:49:08,962 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:49:08,962 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:49:08,962 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:49:08,962 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:49:08,962 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:49:08,962 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:49:08,963 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:49:08,963 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:19:06+00:00 (UTC)
2025-09-03 22:49:08,963 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:49:08,963 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:49:08,963 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:49:08,964 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:49:08,972 - prompt_manager.app.api.v1.api - INFO - Found 8 prompts out of 8 total
2025-09-03 22:49:08,974 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 12.13ms
2025-09-03 22:49:08,976 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:49:08,976 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:49:08,978 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:49:15,354 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:49:15,355 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.65ms
2025-09-03 22:49:15,360 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:49:15,362 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 1.58ms
2025-09-03 22:49:15,366 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:49:15,369 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:49:15,369 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:49:15,370 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:49:15,370 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:49:15,370 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:49:15,370 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:49:15,370 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:49:15,370 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:49:15,370 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:19:06+00:00 (UTC)
2025-09-03 22:49:15,370 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:49:15,370 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:49:15,371 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:49:15,372 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:49:15,372 - prompt_manager.app.api.v1.api - INFO - Found 8 prompts out of 8 total
2025-09-03 22:49:15,373 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 6.86ms
2025-09-03 22:49:15,375 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:49:15,375 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:49:15,376 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:49:17,126 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:49:17,127 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.7ms
2025-09-03 22:49:17,134 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:49:17,134 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.69ms
2025-09-03 22:49:17,136 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:49:17,137 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:49:17,137 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:49:17,137 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:49:17,137 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:49:17,137 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:49:17,137 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:49:17,137 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:49:17,138 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:49:17,138 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:19:06+00:00 (UTC)
2025-09-03 22:49:17,138 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:49:17,138 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:49:17,142 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:49:17,142 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:49:17,144 - prompt_manager.app.api.v1.api - INFO - Found 8 prompts out of 8 total
2025-09-03 22:49:17,145 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 9.26ms
2025-09-03 22:49:17,146 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:49:17,146 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:49:17,146 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:49:17,937 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:49:17,938 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.72ms
2025-09-03 22:49:17,946 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:49:17,947 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 1.25ms
2025-09-03 22:49:17,951 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:49:17,953 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:49:17,953 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:49:17,953 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:49:17,953 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:49:17,953 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:49:17,953 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:49:17,953 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:49:17,954 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:49:17,954 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:19:06+00:00 (UTC)
2025-09-03 22:49:17,954 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:49:17,954 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:49:17,954 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:49:17,955 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:49:17,956 - prompt_manager.app.api.v1.api - INFO - Found 8 prompts out of 8 total
2025-09-03 22:49:17,956 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 5.73ms
2025-09-03 22:49:17,957 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:49:17,957 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:49:17,957 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:49:17,959 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/name/math_tutor /version/1.0.1/activate?updated_by=system@example.com
2025-09-03 22:49:17,960 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:49:17,960 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:49:17,960 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:49:17,960 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:49:17,960 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:49:17,960 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:49:17,960 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:49:17,960 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:49:17,960 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:19:06+00:00 (UTC)
2025-09-03 22:49:17,960 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:49:17,961 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:49:17,961 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:49:17,961 - prompt_manager.app.api.v1.api - INFO - Setting active version for prompt 'math_tutor ' to version 1.0.1 (user: prishatank@gmail.com)
2025-09-03 22:49:17,962 - prompt_manager.app.api.v1.api - INFO - Setting prompt 'math_tutor ' version 1.0.1 as live version
2025-09-03 22:49:17,975 - prompt_manager.app.api.v1.api - INFO - Successfully set prompt 'math_tutor ' version 1.0.1 as live version
2025-09-03 22:49:17,975 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/name/math_tutor /version/1.0.1/activate?updated_by=system@example.com Status: 200 Time: 15.58ms
2025-09-03 22:49:17,975 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:49:17,975 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:49:17,976 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:49:18,024 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:49:18,027 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 2.67ms
2025-09-03 22:49:18,038 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:49:18,039 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 1.08ms
2025-09-03 22:49:18,041 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:49:18,041 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:49:18,042 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:49:18,042 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:49:18,042 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:49:18,042 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:49:18,042 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:49:18,042 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:49:18,042 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:49:18,042 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:19:06+00:00 (UTC)
2025-09-03 22:49:18,042 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:49:18,042 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:49:18,043 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:49:18,043 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:49:18,045 - prompt_manager.app.api.v1.api - INFO - Found 8 prompts out of 8 total
2025-09-03 22:49:18,045 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 4.2ms
2025-09-03 22:49:18,046 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:49:18,046 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:49:18,046 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:49:35,317 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:49:35,321 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 3.94ms
2025-09-03 22:49:46,574 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:49:46,578 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 4.25ms
2025-09-03 22:49:46,585 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-03 22:49:46,587 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:49:46,588 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:49:46,913 - prompt_manager.app.api.v1.endpoints.auth - INFO - Created access token for user: prishatank@gmail.com
2025-09-03 22:49:46,915 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 200 Time: 330.69ms
2025-09-03 22:49:46,916 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:49:46,916 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:49:46,916 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:49:46,971 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:49:46,973 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.94ms
2025-09-03 22:49:48,171 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:49:48,172 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.95ms
2025-09-03 22:49:48,182 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:49:48,186 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 4.09ms
2025-09-03 22:49:48,233 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:49:48,234 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:49:48,234 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:49:48,234 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:49:48,234 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:49:48,234 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:49:48,234 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:49:48,234 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:49:48,235 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:49:48,235 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:19:46+00:00 (UTC)
2025-09-03 22:49:48,235 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:49:48,235 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:49:48,238 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:49:48,238 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:49:48,241 - prompt_manager.app.api.v1.api - INFO - Found 8 prompts out of 8 total
2025-09-03 22:49:48,242 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 9.22ms
2025-09-03 22:49:48,243 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:49:48,243 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:49:48,243 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:49:51,444 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:49:51,446 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.41ms
2025-09-03 22:49:51,461 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:49:51,461 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.59ms
2025-09-03 22:49:51,464 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:49:51,465 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:49:51,466 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:49:51,466 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:49:51,466 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:49:51,466 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:49:51,467 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:49:51,467 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:49:51,467 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:49:51,467 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:19:46+00:00 (UTC)
2025-09-03 22:49:51,468 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:49:51,468 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:49:51,469 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:49:51,469 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:49:51,470 - prompt_manager.app.api.v1.api - INFO - Found 8 prompts out of 8 total
2025-09-03 22:49:51,471 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 7.08ms
2025-09-03 22:49:51,471 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:49:51,471 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:49:51,471 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:49:53,064 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:49:53,064 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.82ms
2025-09-03 22:49:53,071 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:49:53,072 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.96ms
2025-09-03 22:49:53,074 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:49:53,076 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:49:53,076 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:49:53,076 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:49:53,076 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:49:53,076 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:49:53,076 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:49:53,076 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:49:53,077 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:49:53,077 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:19:46+00:00 (UTC)
2025-09-03 22:49:53,077 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:49:53,077 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:49:53,079 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:49:53,080 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:49:53,081 - prompt_manager.app.api.v1.api - INFO - Found 8 prompts out of 8 total
2025-09-03 22:49:53,082 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 7.71ms
2025-09-03 22:49:53,083 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:49:53,083 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:49:53,083 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:49:53,749 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:49:53,750 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.67ms
2025-09-03 22:49:53,755 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:49:53,757 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 1.06ms
2025-09-03 22:49:53,758 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:49:53,759 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:49:53,759 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:49:53,759 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:49:53,760 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:49:53,760 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:49:53,760 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:49:53,760 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:49:53,760 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:49:53,760 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:19:46+00:00 (UTC)
2025-09-03 22:49:53,760 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:49:53,761 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:49:53,762 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:49:53,762 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:49:53,764 - prompt_manager.app.api.v1.api - INFO - Found 8 prompts out of 8 total
2025-09-03 22:49:53,765 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 6.05ms
2025-09-03 22:49:53,766 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:49:53,766 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:49:53,766 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:49:53,770 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/name/math_tutor /version/1.0.0/activate?updated_by=system@example.com
2025-09-03 22:49:53,772 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:49:53,772 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:49:53,773 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:49:53,773 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:49:53,773 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:49:53,773 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:49:53,773 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:49:53,773 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:49:53,774 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:19:46+00:00 (UTC)
2025-09-03 22:49:53,774 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:49:53,774 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:49:53,776 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:49:53,776 - prompt_manager.app.api.v1.api - INFO - Setting active version for prompt 'math_tutor ' to version 1.0.0 (user: prishatank@gmail.com)
2025-09-03 22:49:53,777 - prompt_manager.app.api.v1.api - INFO - Setting prompt 'math_tutor ' version 1.0.0 as live version
2025-09-03 22:49:53,792 - prompt_manager.app.api.v1.api - INFO - Successfully set prompt 'math_tutor ' version 1.0.0 as live version
2025-09-03 22:49:53,792 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/name/math_tutor /version/1.0.0/activate?updated_by=system@example.com Status: 200 Time: 22.44ms
2025-09-03 22:49:53,793 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:49:53,793 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:49:53,793 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:49:53,840 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:49:53,840 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.49ms
2025-09-03 22:49:53,843 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:49:53,844 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.31ms
2025-09-03 22:49:53,844 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:49:53,845 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:49:53,845 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:49:53,846 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:49:53,846 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:49:53,846 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:49:53,846 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:49:53,846 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:49:53,846 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:49:53,846 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:19:46+00:00 (UTC)
2025-09-03 22:49:53,846 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:49:53,846 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:49:53,847 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:49:53,847 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:49:53,848 - prompt_manager.app.api.v1.api - INFO - Found 8 prompts out of 8 total
2025-09-03 22:49:53,848 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 3.88ms
2025-09-03 22:49:53,849 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:49:53,849 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:49:53,849 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:49:56,238 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:49:56,239 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.83ms
2025-09-03 22:49:56,250 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:49:56,252 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 1.43ms
2025-09-03 22:49:56,253 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:49:56,253 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:49:56,254 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:49:56,254 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:49:56,254 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:49:56,254 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:49:56,254 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:49:56,254 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:49:56,254 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:49:56,254 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:19:46+00:00 (UTC)
2025-09-03 22:49:56,254 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:49:56,254 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:49:56,255 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:49:56,256 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:49:56,258 - prompt_manager.app.api.v1.api - INFO - Found 8 prompts out of 8 total
2025-09-03 22:49:56,258 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 5.27ms
2025-09-03 22:49:56,259 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:49:56,259 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:49:56,259 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:49:56,982 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:49:56,983 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.79ms
2025-09-03 22:49:56,991 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:49:56,992 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.97ms
2025-09-03 22:49:56,995 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:49:56,998 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:49:56,999 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:49:56,999 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:49:56,999 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:49:57,000 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:49:57,000 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:49:57,000 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:49:57,000 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:49:57,001 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:19:46+00:00 (UTC)
2025-09-03 22:49:57,001 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:49:57,001 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:49:57,001 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:49:57,001 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:49:57,002 - prompt_manager.app.api.v1.api - INFO - Found 8 prompts out of 8 total
2025-09-03 22:49:57,002 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 7.32ms
2025-09-03 22:49:57,003 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:49:57,003 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:49:57,003 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:49:57,005 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/name/math_tutor /version/1.0.1/activate?updated_by=system@example.com
2025-09-03 22:49:57,006 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:49:57,006 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:49:57,006 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:49:57,006 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:49:57,006 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:49:57,006 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:49:57,006 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:49:57,006 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:49:57,006 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:19:46+00:00 (UTC)
2025-09-03 22:49:57,006 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:49:57,006 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:49:57,007 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:49:57,007 - prompt_manager.app.api.v1.api - INFO - Setting active version for prompt 'math_tutor ' to version 1.0.1 (user: prishatank@gmail.com)
2025-09-03 22:49:57,007 - prompt_manager.app.api.v1.api - INFO - Setting prompt 'math_tutor ' version 1.0.1 as live version
2025-09-03 22:49:57,012 - prompt_manager.app.api.v1.api - INFO - Successfully set prompt 'math_tutor ' version 1.0.1 as live version
2025-09-03 22:49:57,013 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/name/math_tutor /version/1.0.1/activate?updated_by=system@example.com Status: 200 Time: 7.48ms
2025-09-03 22:49:57,013 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:49:57,014 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:49:57,014 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:49:57,066 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:49:57,066 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.6ms
2025-09-03 22:49:57,071 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:49:57,071 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.31ms
2025-09-03 22:49:57,073 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:49:57,074 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:49:57,074 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:49:57,074 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:49:57,074 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:49:57,074 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:49:57,075 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:49:57,075 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:49:57,075 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:49:57,075 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:19:46+00:00 (UTC)
2025-09-03 22:49:57,075 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:49:57,076 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:49:57,076 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:49:57,077 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:49:57,078 - prompt_manager.app.api.v1.api - INFO - Found 8 prompts out of 8 total
2025-09-03 22:49:57,080 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 7.14ms
2025-09-03 22:49:57,081 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:49:57,081 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:49:57,082 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:50:08,566 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:50:08,574 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 7.75ms
2025-09-03 22:50:08,596 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:50:08,597 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 1.14ms
2025-09-03 22:50:08,602 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:50:08,604 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:50:08,605 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:50:08,605 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:50:08,605 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:50:08,605 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:50:08,605 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:50:08,605 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:50:08,606 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:50:08,606 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:19:46+00:00 (UTC)
2025-09-03 22:50:08,606 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:50:08,606 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:50:08,611 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:50:08,614 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:50:08,619 - prompt_manager.app.api.v1.api - INFO - Found 8 prompts out of 8 total
2025-09-03 22:50:08,620 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 17.84ms
2025-09-03 22:50:08,621 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:50:08,621 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:50:08,621 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:50:09,806 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:50:09,809 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 2.79ms
2025-09-03 22:50:09,833 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:50:09,836 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 2.3ms
2025-09-03 22:50:09,861 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:50:09,863 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:50:09,863 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:50:09,864 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:50:09,864 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:50:09,864 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:50:09,864 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:50:09,864 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:50:09,865 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:50:09,865 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:19:46+00:00 (UTC)
2025-09-03 22:50:09,865 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:50:09,865 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:50:09,875 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:50:09,886 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:50:09,895 - prompt_manager.app.api.v1.api - INFO - Found 8 prompts out of 8 total
2025-09-03 22:50:09,898 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 37.04ms
2025-09-03 22:50:09,901 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:50:09,902 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:50:09,902 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:50:09,909 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/name/math_tutor /version/1.0.0/activate?updated_by=system@example.com
2025-09-03 22:50:09,910 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:50:09,910 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:50:09,911 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:50:09,911 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:50:09,911 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:50:09,911 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:50:09,911 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:50:09,912 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:50:09,912 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:19:46+00:00 (UTC)
2025-09-03 22:50:09,912 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:50:09,912 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:50:09,913 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:50:09,913 - prompt_manager.app.api.v1.api - INFO - Setting active version for prompt 'math_tutor ' to version 1.0.0 (user: prishatank@gmail.com)
2025-09-03 22:50:09,915 - prompt_manager.app.api.v1.api - INFO - Setting prompt 'math_tutor ' version 1.0.0 as live version
2025-09-03 22:50:09,949 - prompt_manager.app.api.v1.api - INFO - Successfully set prompt 'math_tutor ' version 1.0.0 as live version
2025-09-03 22:50:09,950 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/name/math_tutor /version/1.0.0/activate?updated_by=system@example.com Status: 200 Time: 40.92ms
2025-09-03 22:50:09,953 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:50:09,953 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:50:09,954 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:50:10,055 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:50:10,055 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.5ms
2025-09-03 22:50:10,059 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:50:10,060 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.5ms
2025-09-03 22:50:10,063 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:50:10,064 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:50:10,064 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:50:10,064 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:50:10,065 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:50:10,065 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:50:10,065 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:50:10,065 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:50:10,066 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:50:10,066 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:19:46+00:00 (UTC)
2025-09-03 22:50:10,066 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:50:10,066 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:50:10,067 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:50:10,067 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:50:10,068 - prompt_manager.app.api.v1.api - INFO - Found 8 prompts out of 8 total
2025-09-03 22:50:10,069 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 6.14ms
2025-09-03 22:50:10,071 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:50:10,071 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:50:10,071 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:50:11,937 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:50:11,941 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 3.79ms
2025-09-03 22:50:11,949 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:50:11,950 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.91ms
2025-09-03 22:50:11,952 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:50:11,959 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:50:11,959 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:50:11,960 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:50:11,961 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:50:11,961 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:50:11,961 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:50:11,961 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:50:11,966 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:50:11,967 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:19:46+00:00 (UTC)
2025-09-03 22:50:11,967 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:50:11,967 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:50:11,982 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:50:11,983 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:50:11,985 - prompt_manager.app.api.v1.api - INFO - Found 8 prompts out of 8 total
2025-09-03 22:50:11,985 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 32.85ms
2025-09-03 22:50:11,986 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:50:11,986 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:50:11,986 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:50:12,767 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:50:12,768 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.7ms
2025-09-03 22:50:12,773 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:50:12,773 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.35ms
2025-09-03 22:50:12,775 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:50:12,775 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:50:12,775 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:50:12,775 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:50:12,775 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:50:12,775 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:50:12,775 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:50:12,775 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:50:12,776 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:50:12,776 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:19:46+00:00 (UTC)
2025-09-03 22:50:12,776 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:50:12,776 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:50:12,777 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:50:12,777 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:50:12,778 - prompt_manager.app.api.v1.api - INFO - Found 8 prompts out of 8 total
2025-09-03 22:50:12,779 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 4.8ms
2025-09-03 22:50:12,781 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:50:12,781 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:50:12,781 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:50:12,792 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/name/math_tutor /version/1.0.1/activate?updated_by=system@example.com
2025-09-03 22:50:12,799 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:50:12,804 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:50:12,804 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:50:12,804 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:50:12,804 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:50:12,805 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:50:12,805 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:50:12,806 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:50:12,806 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:19:46+00:00 (UTC)
2025-09-03 22:50:12,806 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:50:12,806 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:50:12,807 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:50:12,807 - prompt_manager.app.api.v1.api - INFO - Setting active version for prompt 'math_tutor ' to version 1.0.1 (user: prishatank@gmail.com)
2025-09-03 22:50:12,808 - prompt_manager.app.api.v1.api - INFO - Setting prompt 'math_tutor ' version 1.0.1 as live version
2025-09-03 22:50:12,823 - prompt_manager.app.api.v1.api - INFO - Successfully set prompt 'math_tutor ' version 1.0.1 as live version
2025-09-03 22:50:12,824 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/name/math_tutor /version/1.0.1/activate?updated_by=system@example.com Status: 200 Time: 32.01ms
2025-09-03 22:50:12,826 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:50:12,826 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:50:12,827 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:50:12,873 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:50:12,875 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.75ms
2025-09-03 22:50:12,883 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:50:12,883 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.36ms
2025-09-03 22:50:12,884 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:50:12,885 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:50:12,885 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:50:12,885 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:50:12,885 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:50:12,885 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:50:12,885 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:50:12,885 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:50:12,885 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:50:12,885 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:19:46+00:00 (UTC)
2025-09-03 22:50:12,885 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:50:12,885 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:50:12,887 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:50:12,887 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:50:12,888 - prompt_manager.app.api.v1.api - INFO - Found 8 prompts out of 8 total
2025-09-03 22:50:12,888 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 3.81ms
2025-09-03 22:50:12,889 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:50:12,889 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:50:12,889 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:51:39,269 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:51:39,278 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 8.99ms
2025-09-03 22:51:39,287 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:51:39,288 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.89ms
2025-09-03 22:51:39,292 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:51:39,294 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:51:39,294 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:51:39,295 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:51:39,295 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:51:39,295 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:51:39,295 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:51:39,295 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:51:39,297 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:51:39,297 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:19:46+00:00 (UTC)
2025-09-03 22:51:39,297 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:51:39,297 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:51:39,303 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:51:39,305 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:51:39,311 - prompt_manager.app.api.v1.api - INFO - Found 8 prompts out of 8 total
2025-09-03 22:51:39,317 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 24.76ms
2025-09-03 22:51:39,321 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:51:39,321 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:51:39,322 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:51:40,194 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:51:40,195 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.67ms
2025-09-03 22:51:40,200 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:51:40,200 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.42ms
2025-09-03 22:51:40,203 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:51:40,203 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:51:40,203 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:51:40,203 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:51:40,203 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:51:40,203 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:51:40,204 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:51:40,204 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:51:40,204 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:51:40,204 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:19:46+00:00 (UTC)
2025-09-03 22:51:40,204 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:51:40,204 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:51:40,204 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:51:40,205 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:51:40,205 - prompt_manager.app.api.v1.api - INFO - Found 8 prompts out of 8 total
2025-09-03 22:51:40,207 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 4.11ms
2025-09-03 22:51:40,211 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:51:40,211 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:51:40,211 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:51:40,213 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/name/math_tutor /version/1.0.0/activate?updated_by=system@example.com
2025-09-03 22:51:40,214 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:51:40,214 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:51:40,214 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:51:40,214 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:51:40,214 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:51:40,214 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:51:40,214 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:51:40,214 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:51:40,214 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:19:46+00:00 (UTC)
2025-09-03 22:51:40,215 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:51:40,215 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:51:40,215 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:51:40,215 - prompt_manager.app.api.v1.api - INFO - Setting active version for prompt 'math_tutor ' to version 1.0.0 (user: prishatank@gmail.com)
2025-09-03 22:51:40,216 - prompt_manager.app.api.v1.api - INFO - Setting prompt 'math_tutor ' version 1.0.0 as live version
2025-09-03 22:51:40,226 - prompt_manager.app.api.v1.api - INFO - Successfully set prompt 'math_tutor ' version 1.0.0 as live version
2025-09-03 22:51:40,227 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/name/math_tutor /version/1.0.0/activate?updated_by=system@example.com Status: 200 Time: 13.3ms
2025-09-03 22:51:40,228 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:51:40,228 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:51:40,228 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:51:40,319 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:51:40,320 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.6ms
2025-09-03 22:51:40,323 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 22:51:40,324 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.45ms
2025-09-03 22:51:40,325 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 22:51:40,326 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 22:51:40,327 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 22:51:40,327 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 22:51:40,327 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 22:51:40,327 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 22:51:40,327 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 22:51:40,327 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 22:51:40,328 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 22:51:40,328 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:19:46+00:00 (UTC)
2025-09-03 22:51:40,328 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 22:51:40,328 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 22:51:40,328 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 22:51:40,329 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 22:51:40,332 - prompt_manager.app.api.v1.api - INFO - Found 8 prompts out of 8 total
2025-09-03 22:51:40,336 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 10.4ms
2025-09-03 22:51:40,338 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 22:51:40,338 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 22:51:40,339 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 22:52:10,051 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 22:52:12,671 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 22:52:12,672 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-03 22:52:12,672 - prompt_manager.app.main - INFO - Database URL: sqlite:////Users/prisha/Desktop/Coding/system prompt/prompts.db
2025-09-03 22:54:15,145 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 22:54:15,166 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 22.07ms
2025-09-03 22:55:24,240 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 22:55:26,927 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 22:55:26,928 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-03 22:55:26,928 - prompt_manager.app.main - INFO - Database URL: sqlite:////Users/prisha/Desktop/Coding/system prompt/prompts.db
2025-09-03 22:56:03,535 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 22:56:05,379 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 22:56:05,379 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-03 22:56:05,379 - prompt_manager.app.main - INFO - Database URL: sqlite:////Users/prisha/Desktop/Coding/system prompt/prompts.db
2025-09-03 22:56:22,254 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 22:56:23,504 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 22:56:23,504 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-03 22:56:23,504 - prompt_manager.app.main - INFO - Database URL: sqlite:////Users/prisha/Desktop/Coding/system prompt/prompts.db
2025-09-03 22:56:39,270 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 22:56:41,050 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 22:56:41,050 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-03 22:56:41,050 - prompt_manager.app.main - INFO - Database URL: sqlite:////Users/prisha/Desktop/Coding/system prompt/prompts.db
2025-09-03 22:57:19,900 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 22:57:21,605 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 22:57:21,606 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-03 22:57:21,606 - prompt_manager.app.main - INFO - Database URL: sqlite:////Users/prisha/Desktop/Coding/system prompt/prompts.db
2025-09-03 22:57:53,154 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 22:57:56,663 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 22:57:56,663 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-03 22:57:56,663 - prompt_manager.app.main - INFO - Database URL: sqlite:////Users/prisha/Desktop/Coding/system prompt/prompts.db
2025-09-03 22:58:27,487 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 22:58:28,857 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 22:58:28,857 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-03 22:58:28,857 - prompt_manager.app.main - INFO - Database URL: sqlite:////Users/prisha/Desktop/Coding/system prompt/prompts.db
2025-09-03 23:00:02,648 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 23:00:02,662 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 14.29ms
2025-09-03 23:00:20,751 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 23:00:20,756 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 5.86ms
2025-09-03 23:00:20,760 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-03 23:00:20,773 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 23:00:20,775 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 23:00:21,106 - prompt_manager.app.api.v1.endpoints.auth - INFO - Created access token for user: prishatank@gmail.com
2025-09-03 23:00:21,116 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 200 Time: 355.57ms
2025-09-03 23:00:21,116 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 23:00:21,116 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 23:00:21,116 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 23:00:25,615 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 23:00:25,617 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.38ms
2025-09-03 23:00:25,625 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-03 23:00:25,627 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 23:00:25,628 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 23:00:25,907 - prompt_manager.app.api.v1.endpoints.auth - INFO - Created access token for user: prishatank@gmail.com
2025-09-03 23:00:25,908 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 200 Time: 282.58ms
2025-09-03 23:00:25,908 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 23:00:25,908 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 23:00:25,908 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 23:00:28,634 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 23:00:28,636 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.51ms
2025-09-03 23:00:43,645 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 23:00:43,647 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.63ms
2025-09-03 23:00:43,654 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-03 23:00:43,659 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 23:00:43,660 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 23:00:43,944 - prompt_manager.app.api.v1.endpoints.auth - INFO - Created access token for user: prishatank@gmail.com
2025-09-03 23:00:43,945 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 200 Time: 290.25ms
2025-09-03 23:00:43,945 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 23:00:43,945 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 23:00:43,945 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 23:01:20,661 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 23:01:22,901 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 23:01:22,901 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-03 23:01:22,901 - prompt_manager.app.main - INFO - Database URL: sqlite:////Users/prisha/Desktop/Coding/system prompt/prompts.db
2025-09-03 23:01:46,637 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 23:01:46,640 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 3.33ms
2025-09-03 23:01:58,130 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 23:01:58,132 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 2.84ms
2025-09-03 23:01:58,138 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-03 23:01:58,145 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 23:01:58,146 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 23:01:58,490 - prompt_manager.app.api.v1.endpoints.auth - INFO - Created access token for user: prishatank@gmail.com
2025-09-03 23:01:58,499 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 200 Time: 360.54ms
2025-09-03 23:01:58,499 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 23:01:58,499 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 23:01:58,499 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 23:01:58,547 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 23:01:58,547 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.33ms
2025-09-03 23:02:00,963 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 23:02:00,964 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.42ms
2025-09-03 23:02:00,969 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/auth/me
2025-09-03 23:02:00,971 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 23:02:00,971 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 23:02:00,975 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 23:02:00,975 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 23:02:00,975 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 23:02:00,976 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 23:02:00,976 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 23:02:00,978 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 23:02:00,978 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:31:58+00:00 (UTC)
2025-09-03 23:02:00,978 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 23:02:00,978 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 23:02:00,980 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 23:02:00,980 - prompt_manager.app.api.v1.endpoints.auth - INFO - Current user: <prompt_manager.app.models.user.User object at 0x112d6a750>
2025-09-03 23:02:00,980 - prompt_manager.app.api.v1.endpoints.auth - INFO - Token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJwcmlzaGF0YW5rQGdtYWlsLmNvbSIsImVtYWlsIjoicHJpc2hhdGFua0BnbWFpbC5jb20iLCJ1c2VyX2lkIjoiMSIsInNjb3BlcyI6WyJtZSJdLCJleHAiOjE3NTcwMDcxMTgsImlhdCI6MTc1NjkyMDcxOCwibmJmIjoxNzU2OTIwNzE4LCJpc3MiOiJQcm9tcHQgTWFuYWdlbWVudCBTZXJ2aWNlIiwiYXVkIjoiUHJvbXB0IE1hbmFnZW1lbnQgU2VydmljZSJ9.NmeOrtAdBJWtXoIgx2723kYKpeROx29XsPWrXNpIJFs
2025-09-03 23:02:00,981 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/auth/me Status: 200 Time: 11.99ms
2025-09-03 23:02:00,983 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 23:02:00,984 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 23:02:00,984 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 23:02:05,490 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 23:02:05,491 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.47ms
2025-09-03 23:02:07,213 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 23:02:07,214 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.96ms
2025-09-03 23:02:07,222 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 23:02:07,223 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.66ms
2025-09-03 23:02:07,226 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 23:02:07,228 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 23:02:07,229 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 23:02:07,229 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 23:02:07,229 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 23:02:07,229 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 23:02:07,230 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 23:02:07,230 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 23:02:07,230 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 23:02:07,230 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:31:58+00:00 (UTC)
2025-09-03 23:02:07,230 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 23:02:07,230 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 23:02:07,236 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 23:02:07,238 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 23:02:07,252 - prompt_manager.app.api.v1.api - INFO - Found 8 prompts out of 8 total
2025-09-03 23:02:07,254 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 27.98ms
2025-09-03 23:02:07,254 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 23:02:07,254 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 23:02:07,254 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 23:02:11,363 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 23:02:11,364 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.12ms
2025-09-03 23:02:11,370 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 23:02:11,372 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 1.38ms
2025-09-03 23:02:11,374 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 23:02:11,374 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 23:02:11,375 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 23:02:11,375 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 23:02:11,375 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 23:02:11,375 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 23:02:11,375 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 23:02:11,375 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 23:02:11,375 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 23:02:11,375 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:31:58+00:00 (UTC)
2025-09-03 23:02:11,375 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 23:02:11,375 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 23:02:11,376 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 23:02:11,377 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 23:02:11,378 - prompt_manager.app.api.v1.api - INFO - Found 8 prompts out of 8 total
2025-09-03 23:02:11,378 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 4.53ms
2025-09-03 23:02:11,379 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 23:02:11,379 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 23:02:11,379 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 23:02:13,689 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 23:02:13,690 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.78ms
2025-09-03 23:02:13,698 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 23:02:13,699 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.72ms
2025-09-03 23:02:13,700 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 23:02:13,701 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 23:02:13,702 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 23:02:13,702 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 23:02:13,702 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 23:02:13,702 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 23:02:13,702 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 23:02:13,702 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 23:02:13,703 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 23:02:13,703 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:31:58+00:00 (UTC)
2025-09-03 23:02:13,703 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 23:02:13,703 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 23:02:13,705 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 23:02:13,705 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 23:02:13,707 - prompt_manager.app.api.v1.api - INFO - Found 8 prompts out of 8 total
2025-09-03 23:02:13,708 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 7.12ms
2025-09-03 23:02:13,708 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 23:02:13,708 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 23:02:13,708 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 23:02:14,463 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 23:02:14,463 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.72ms
2025-09-03 23:02:14,472 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 23:02:14,474 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 1.58ms
2025-09-03 23:02:14,476 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 23:02:14,479 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 23:02:14,479 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 23:02:14,480 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 23:02:14,480 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 23:02:14,480 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 23:02:14,480 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 23:02:14,480 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 23:02:14,480 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 23:02:14,480 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:31:58+00:00 (UTC)
2025-09-03 23:02:14,480 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 23:02:14,480 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 23:02:14,481 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 23:02:14,481 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 23:02:14,483 - prompt_manager.app.api.v1.api - INFO - Found 8 prompts out of 8 total
2025-09-03 23:02:14,488 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 11.07ms
2025-09-03 23:02:14,492 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 23:02:14,493 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 23:02:14,497 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 23:02:14,498 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/name/math_tutor /version/1.0.1/activate?updated_by=system@example.com
2025-09-03 23:02:14,499 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 23:02:14,499 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 23:02:14,499 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 23:02:14,499 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 23:02:14,499 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 23:02:14,499 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 23:02:14,499 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 23:02:14,499 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 23:02:14,499 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:31:58+00:00 (UTC)
2025-09-03 23:02:14,499 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 23:02:14,499 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 23:02:14,500 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 23:02:14,500 - prompt_manager.app.api.v1.api - INFO - Setting active version for prompt 'math_tutor ' to version 1.0.1 (user: prishatank@gmail.com)
2025-09-03 23:02:14,502 - prompt_manager.app.api.v1.api - INFO - Setting prompt 'math_tutor ' version 1.0.1 as live version
2025-09-03 23:02:14,513 - prompt_manager.app.api.v1.api - INFO - Successfully set prompt 'math_tutor ' version 1.0.1 as live version
2025-09-03 23:02:14,514 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/name/math_tutor /version/1.0.1/activate?updated_by=system@example.com Status: 200 Time: 16.16ms
2025-09-03 23:02:14,514 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 23:02:14,514 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 23:02:14,514 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 23:02:14,554 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 23:02:14,555 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.59ms
2025-09-03 23:02:14,559 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 23:02:14,560 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 1.24ms
2025-09-03 23:02:14,562 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 23:02:14,563 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 23:02:14,563 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 23:02:14,564 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 23:02:14,564 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 23:02:14,564 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 23:02:14,564 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 23:02:14,564 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 23:02:14,564 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 23:02:14,564 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:31:58+00:00 (UTC)
2025-09-03 23:02:14,564 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 23:02:14,564 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 23:02:14,565 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 23:02:14,565 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 23:02:14,567 - prompt_manager.app.api.v1.api - INFO - Found 8 prompts out of 8 total
2025-09-03 23:02:14,568 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 5.89ms
2025-09-03 23:02:14,569 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 23:02:14,569 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 23:02:14,569 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 23:02:20,869 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 23:02:20,870 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.86ms
2025-09-03 23:02:20,877 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 23:02:20,878 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 1.1ms
2025-09-03 23:02:20,881 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 23:02:20,883 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 23:02:20,883 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 23:02:20,883 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 23:02:20,883 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 23:02:20,883 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 23:02:20,884 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 23:02:20,884 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 23:02:20,884 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 23:02:20,884 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:31:58+00:00 (UTC)
2025-09-03 23:02:20,884 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 23:02:20,884 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 23:02:20,885 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 23:02:20,886 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 23:02:20,887 - prompt_manager.app.api.v1.api - INFO - Found 8 prompts out of 8 total
2025-09-03 23:02:20,887 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 5.86ms
2025-09-03 23:02:20,888 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 23:02:20,888 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 23:02:20,888 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 23:02:21,493 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 23:02:21,494 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.73ms
2025-09-03 23:02:21,501 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 23:02:21,502 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.55ms
2025-09-03 23:02:21,505 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 23:02:21,506 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 23:02:21,506 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 23:02:21,507 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 23:02:21,507 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 23:02:21,507 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 23:02:21,507 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 23:02:21,507 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 23:02:21,508 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 23:02:21,508 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:31:58+00:00 (UTC)
2025-09-03 23:02:21,508 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 23:02:21,509 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 23:02:21,510 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 23:02:21,510 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 23:02:21,512 - prompt_manager.app.api.v1.api - INFO - Found 8 prompts out of 8 total
2025-09-03 23:02:21,513 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 8.26ms
2025-09-03 23:02:21,514 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 23:02:21,515 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 23:02:21,515 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 23:02:21,519 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/name/math_tutor /version/1.0.0/activate?updated_by=system@example.com
2025-09-03 23:02:21,520 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 23:02:21,520 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 23:02:21,520 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 23:02:21,520 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 23:02:21,520 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 23:02:21,520 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 23:02:21,520 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 23:02:21,520 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 23:02:21,520 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:31:58+00:00 (UTC)
2025-09-03 23:02:21,520 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 23:02:21,520 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 23:02:21,521 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 23:02:21,521 - prompt_manager.app.api.v1.api - INFO - Setting active version for prompt 'math_tutor ' to version 1.0.0 (user: prishatank@gmail.com)
2025-09-03 23:02:21,522 - prompt_manager.app.api.v1.api - INFO - Setting prompt 'math_tutor ' version 1.0.0 as live version
2025-09-03 23:02:21,528 - prompt_manager.app.api.v1.api - INFO - Successfully set prompt 'math_tutor ' version 1.0.0 as live version
2025-09-03 23:02:21,528 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/name/math_tutor /version/1.0.0/activate?updated_by=system@example.com Status: 200 Time: 9.82ms
2025-09-03 23:02:21,529 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 23:02:21,530 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 23:02:21,530 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 23:02:21,568 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 23:02:21,569 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.68ms
2025-09-03 23:02:21,573 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 23:02:21,574 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.69ms
2025-09-03 23:02:21,576 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 23:02:21,577 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 23:02:21,577 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 23:02:21,578 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 23:02:21,578 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 23:02:21,578 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 23:02:21,578 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 23:02:21,578 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 23:02:21,578 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 23:02:21,578 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:31:58+00:00 (UTC)
2025-09-03 23:02:21,579 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 23:02:21,579 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 23:02:21,580 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 23:02:21,580 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 23:02:21,582 - prompt_manager.app.api.v1.api - INFO - Found 8 prompts out of 8 total
2025-09-03 23:02:21,583 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 6.51ms
2025-09-03 23:02:21,585 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 23:02:21,585 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 23:02:21,585 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 23:02:23,373 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 23:02:23,374 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.16ms
2025-09-03 23:02:23,383 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 23:02:23,384 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.83ms
2025-09-03 23:02:23,387 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 23:02:23,390 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 23:02:23,391 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 23:02:23,391 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 23:02:23,391 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 23:02:23,391 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 23:02:23,392 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 23:02:23,392 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 23:02:23,392 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 23:02:23,392 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:31:58+00:00 (UTC)
2025-09-03 23:02:23,392 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 23:02:23,393 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 23:02:23,393 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 23:02:23,394 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 23:02:23,396 - prompt_manager.app.api.v1.api - INFO - Found 8 prompts out of 8 total
2025-09-03 23:02:23,397 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 9.68ms
2025-09-03 23:02:23,398 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 23:02:23,398 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 23:02:23,398 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 23:02:24,130 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 23:02:24,131 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.8ms
2025-09-03 23:02:24,139 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 23:02:24,140 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.51ms
2025-09-03 23:02:24,142 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 23:02:24,143 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 23:02:24,143 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 23:02:24,143 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 23:02:24,143 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 23:02:24,144 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 23:02:24,144 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 23:02:24,144 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 23:02:24,144 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 23:02:24,144 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:31:58+00:00 (UTC)
2025-09-03 23:02:24,144 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 23:02:24,145 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 23:02:24,146 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 23:02:24,147 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 23:02:24,149 - prompt_manager.app.api.v1.api - INFO - Found 8 prompts out of 8 total
2025-09-03 23:02:24,150 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 8.16ms
2025-09-03 23:02:24,150 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 23:02:24,150 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 23:02:24,151 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 23:02:24,158 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/name/math_tutor /version/1.0.1/activate?updated_by=system@example.com
2025-09-03 23:02:24,159 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 23:02:24,159 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 23:02:24,159 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 23:02:24,159 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 23:02:24,159 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 23:02:24,159 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 23:02:24,159 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 23:02:24,160 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 23:02:24,160 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:31:58+00:00 (UTC)
2025-09-03 23:02:24,160 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 23:02:24,160 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 23:02:24,161 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 23:02:24,162 - prompt_manager.app.api.v1.api - INFO - Setting active version for prompt 'math_tutor ' to version 1.0.1 (user: prishatank@gmail.com)
2025-09-03 23:02:24,163 - prompt_manager.app.api.v1.api - INFO - Setting prompt 'math_tutor ' version 1.0.1 as live version
2025-09-03 23:02:24,170 - prompt_manager.app.api.v1.api - INFO - Successfully set prompt 'math_tutor ' version 1.0.1 as live version
2025-09-03 23:02:24,171 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/name/math_tutor /version/1.0.1/activate?updated_by=system@example.com Status: 200 Time: 13.41ms
2025-09-03 23:02:24,172 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 23:02:24,172 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 23:02:24,172 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 23:02:24,218 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 23:02:24,219 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.79ms
2025-09-03 23:02:24,222 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 23:02:24,223 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.35ms
2025-09-03 23:02:24,223 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 23:02:24,224 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 23:02:24,224 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 23:02:24,224 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 23:02:24,224 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 23:02:24,224 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 23:02:24,224 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 23:02:24,224 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 23:02:24,225 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 23:02:24,225 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:31:58+00:00 (UTC)
2025-09-03 23:02:24,225 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 23:02:24,225 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 23:02:24,226 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 23:02:24,226 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 23:02:24,227 - prompt_manager.app.api.v1.api - INFO - Found 8 prompts out of 8 total
2025-09-03 23:02:24,227 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 3.68ms
2025-09-03 23:02:24,228 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 23:02:24,228 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 23:02:24,228 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 23:02:30,211 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 23:02:30,213 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 2.25ms
2025-09-03 23:02:31,561 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 23:02:31,562 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.71ms
2025-09-03 23:02:33,829 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 23:02:33,831 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.53ms
2025-09-03 23:02:33,844 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 23:02:33,846 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 23:02:33,846 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 23:02:33,846 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 23:02:33,847 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 23:02:33,847 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 23:02:33,847 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 23:02:33,847 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 23:02:33,847 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 23:02:33,848 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:31:58+00:00 (UTC)
2025-09-03 23:02:33,848 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 23:02:33,848 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 23:02:33,851 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 23:02:33,851 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 23:02:33,853 - prompt_manager.app.api.v1.api - INFO - Found 8 prompts out of 8 total
2025-09-03 23:02:33,854 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 10.29ms
2025-09-03 23:02:33,855 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 23:02:33,855 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 23:02:33,855 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 23:02:57,620 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 23:02:57,621 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.51ms
2025-09-03 23:02:57,630 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 23:02:57,631 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 1.14ms
2025-09-03 23:02:57,634 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 23:02:57,636 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 23:02:57,636 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 23:02:57,636 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 23:02:57,637 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 23:02:57,637 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 23:02:57,637 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 23:02:57,637 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 23:02:57,638 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 23:02:57,638 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:31:58+00:00 (UTC)
2025-09-03 23:02:57,638 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 23:02:57,638 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 23:02:57,642 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 23:02:57,644 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 23:02:57,646 - prompt_manager.app.api.v1.api - INFO - Found 8 prompts out of 8 total
2025-09-03 23:02:57,647 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 12.62ms
2025-09-03 23:02:57,648 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 23:02:57,648 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 23:02:57,649 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 23:02:58,807 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 23:02:58,808 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.59ms
2025-09-03 23:03:01,905 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 23:03:01,909 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 5.63ms
2025-09-03 23:03:01,924 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 23:03:01,925 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 1.21ms
2025-09-03 23:03:01,927 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 23:03:01,930 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 23:03:01,930 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 23:03:01,931 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 23:03:01,932 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 23:03:01,932 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 23:03:01,932 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 23:03:01,932 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 23:03:01,940 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 23:03:01,941 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:31:58+00:00 (UTC)
2025-09-03 23:03:01,941 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 23:03:01,941 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 23:03:01,945 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 23:03:01,945 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 23:03:01,947 - prompt_manager.app.api.v1.api - INFO - Found 8 prompts out of 8 total
2025-09-03 23:03:01,948 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 21.17ms
2025-09-03 23:03:01,949 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 23:03:01,950 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 23:03:01,950 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 23:03:06,951 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 23:03:06,956 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 23:03:06,956 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 5.32ms
2025-09-03 23:03:06,964 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 8.62ms
2025-09-03 23:03:07,053 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 23:03:07,053 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.42ms
2025-09-03 23:03:07,054 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 23:03:07,055 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 23:03:07,055 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 23:03:07,055 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 23:03:07,055 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 23:03:07,055 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 23:03:07,055 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 23:03:07,055 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 23:03:07,056 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 23:03:07,056 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:31:58+00:00 (UTC)
2025-09-03 23:03:07,056 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 23:03:07,056 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 23:03:07,066 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 23:03:07,066 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 23:03:07,067 - prompt_manager.app.api.v1.api - INFO - Found 8 prompts out of 8 total
2025-09-03 23:03:07,068 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 13.36ms
2025-09-03 23:03:07,068 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 23:03:07,068 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 23:03:07,068 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 23:03:07,071 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/3/history?skip=0&limit=10
2025-09-03 23:03:07,071 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 23:03:07,071 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 23:03:07,071 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 23:03:07,071 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 23:03:07,071 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 23:03:07,071 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 23:03:07,071 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 23:03:07,071 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 23:03:07,071 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:31:58+00:00 (UTC)
2025-09-03 23:03:07,071 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 23:03:07,072 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 23:03:07,072 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 23:03:07,073 - prompt_manager.app.api.v1.api - INFO - Retrieving history for prompt ID: 3
2025-09-03 23:03:07,077 - prompt_manager.app.api.v1.api - INFO - Found 10 history items for prompt ID: 3
2025-09-03 23:03:07,077 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/3/history?skip=0&limit=10 Status: 200 Time: 6.89ms
2025-09-03 23:03:07,078 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 23:03:07,078 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 23:03:07,078 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 23:03:14,727 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 23:03:14,727 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.8ms
2025-09-03 23:03:15,426 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 23:03:15,426 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.61ms
2025-09-03 23:03:37,572 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 23:03:37,577 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 5.82ms
2025-09-03 23:04:37,120 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 23:04:38,413 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 23:04:38,413 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-03 23:04:38,413 - prompt_manager.app.main - INFO - Database URL: sqlite:////Users/prisha/Desktop/Coding/system prompt/prompts.db
2025-09-03 23:04:44,680 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 23:04:45,661 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 23:04:45,661 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-03 23:04:45,661 - prompt_manager.app.main - INFO - Database URL: sqlite:////Users/prisha/Desktop/Coding/system prompt/prompts.db
2025-09-03 23:05:29,844 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 23:05:29,844 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-03 23:05:29,844 - prompt_manager.app.main - INFO - Database URL: sqlite:////Users/prisha/Desktop/Coding/system prompt/prompts.db
2025-09-03 23:05:34,090 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 23:05:34,090 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.81ms
2025-09-03 23:05:43,275 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 23:05:43,277 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.86ms
2025-09-03 23:05:43,282 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-03 23:05:43,284 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 23:05:43,285 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 23:05:43,586 - prompt_manager.app.api.v1.endpoints.auth - INFO - Created access token for user: prishatank@gmail.com
2025-09-03 23:05:43,591 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 200 Time: 309.2ms
2025-09-03 23:05:43,591 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 23:05:43,591 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 23:05:43,591 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 23:05:43,616 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 23:05:43,617 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.29ms
2025-09-03 23:05:44,944 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 23:05:44,945 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.9ms
2025-09-03 23:05:44,953 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 23:05:44,954 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.52ms
2025-09-03 23:05:44,957 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 23:05:44,958 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 23:05:44,959 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 23:05:44,959 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 23:05:44,959 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 23:05:44,959 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 23:05:44,959 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 23:05:44,959 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 23:05:44,959 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 23:05:44,959 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:35:43+00:00 (UTC)
2025-09-03 23:05:44,959 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 23:05:44,959 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 23:05:44,960 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 23:05:44,960 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 23:05:44,968 - prompt_manager.app.api.v1.api - INFO - Found 8 prompts out of 8 total
2025-09-03 23:05:44,969 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 11.5ms
2025-09-03 23:05:44,969 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 23:05:44,969 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 23:05:44,969 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 23:05:45,709 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 23:05:45,710 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.84ms
2025-09-03 23:05:46,758 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 23:05:46,759 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.73ms
2025-09-03 23:05:46,766 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 23:05:46,766 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.48ms
2025-09-03 23:05:46,768 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 23:05:46,769 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 23:05:46,769 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 23:05:46,770 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 23:05:46,770 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 23:05:46,770 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 23:05:46,770 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 23:05:46,770 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 23:05:46,770 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 23:05:46,771 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:35:43+00:00 (UTC)
2025-09-03 23:05:46,771 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 23:05:46,771 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 23:05:46,772 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 23:05:46,772 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 23:05:46,774 - prompt_manager.app.api.v1.api - INFO - Found 8 prompts out of 8 total
2025-09-03 23:05:46,775 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 7.35ms
2025-09-03 23:05:46,776 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 23:05:46,776 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 23:05:46,776 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 23:05:50,564 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 23:05:50,565 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.96ms
2025-09-03 23:05:52,175 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 23:05:52,176 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.82ms
2025-09-03 23:08:25,411 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 23:08:25,418 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 6.88ms
2025-09-03 23:08:25,423 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/
2025-09-03 23:08:25,429 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 23:08:25,429 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 23:08:25,429 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 23:08:25,429 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 23:08:25,429 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 23:08:25,429 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 23:08:25,429 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 23:08:25,434 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 23:08:25,434 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:35:43+00:00 (UTC)
2025-09-03 23:08:25,434 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 23:08:25,434 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 23:08:25,441 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 23:08:25,442 - prompt_manager.app.api.v1.api - INFO - Creating new prompt: travel_planner version 1.0.0
2025-09-03 23:08:25,454 - prompt_manager.app.api.v1.api - INFO - Successfully created prompt travel_planner v1.0.0 (ID: 9)
2025-09-03 23:08:25,455 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/ Status: 201 Time: 32.47ms
2025-09-03 23:08:25,456 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 23:08:25,456 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 23:08:25,456 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 23:08:33,622 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 23:08:33,623 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.92ms
2025-09-03 23:08:33,636 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 23:08:33,637 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 23:08:33,638 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 23:08:33,638 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 23:08:33,638 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 23:08:33,638 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 23:08:33,638 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 23:08:33,638 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 23:08:33,638 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 23:08:33,639 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:35:43+00:00 (UTC)
2025-09-03 23:08:33,639 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 23:08:33,639 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 23:08:33,640 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 23:08:33,640 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 23:08:33,642 - prompt_manager.app.api.v1.api - INFO - Found 9 prompts out of 9 total
2025-09-03 23:08:33,643 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 6.78ms
2025-09-03 23:08:33,643 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 23:08:33,644 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 23:08:33,644 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 23:08:41,190 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 23:08:41,192 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.69ms
2025-09-03 23:08:41,249 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 23:08:41,250 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.54ms
2025-09-03 23:08:41,258 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/9
2025-09-03 23:08:41,259 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 23:08:41,259 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 23:08:41,259 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 23:08:41,259 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 23:08:41,259 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 23:08:41,259 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 23:08:41,259 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 23:08:41,259 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 23:08:41,259 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:35:43+00:00 (UTC)
2025-09-03 23:08:41,259 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 23:08:41,259 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 23:08:41,260 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 23:08:41,261 - prompt_manager.app.api.v1.api - INFO - Retrieving prompt with ID: 9
2025-09-03 23:08:41,261 - prompt_manager.app.api.v1.api - INFO - Successfully retrieved prompt travel_planner v1.0.0 (ID: 9)
2025-09-03 23:08:41,261 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/9 Status: 200 Time: 3.43ms
2025-09-03 23:08:41,262 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 23:08:41,262 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 23:08:41,262 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 23:08:56,890 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 23:08:56,891 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.0ms
2025-09-03 23:08:56,946 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 23:08:56,947 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.43ms
2025-09-03 23:08:56,955 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/9/update-version
2025-09-03 23:08:56,955 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 23:08:56,955 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 23:08:56,955 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 23:08:56,955 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 23:08:56,955 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 23:08:56,955 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 23:08:56,955 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 23:08:56,956 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 23:08:56,956 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:35:43+00:00 (UTC)
2025-09-03 23:08:56,956 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 23:08:56,956 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 23:08:56,956 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 23:08:56,956 - prompt_manager.app.api.v1.api - INFO - Auto-updating prompt ID 9 (user: prishatank@gmail.com)
2025-09-03 23:08:56,963 - prompt_manager.app.api.v1.api - INFO - Successfully auto-incremented version to '1.0.1' for prompt 'travel_planner'
2025-09-03 23:08:56,963 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/9/update-version Status: 200 Time: 8.53ms
2025-09-03 23:08:56,963 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 23:08:56,963 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 23:08:56,964 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 23:09:00,995 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 23:09:00,996 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.97ms
2025-09-03 23:09:01,000 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 23:09:01,001 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.52ms
2025-09-03 23:09:01,003 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 23:09:01,004 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 23:09:01,004 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 23:09:01,004 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 23:09:01,004 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 23:09:01,004 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 23:09:01,004 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 23:09:01,004 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 23:09:01,005 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 23:09:01,005 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:35:43+00:00 (UTC)
2025-09-03 23:09:01,005 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 23:09:01,005 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 23:09:01,008 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 23:09:01,008 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 23:09:01,010 - prompt_manager.app.api.v1.api - INFO - Found 10 prompts out of 10 total
2025-09-03 23:09:01,011 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 7.94ms
2025-09-03 23:09:01,011 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 23:09:01,011 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 23:09:01,011 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 23:09:10,570 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 23:09:10,571 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.99ms
2025-09-03 23:09:10,579 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 23:09:10,579 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.55ms
2025-09-03 23:09:10,581 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 23:09:10,583 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 23:09:10,583 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 23:09:10,583 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 23:09:10,583 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 23:09:10,583 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 23:09:10,583 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 23:09:10,583 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 23:09:10,584 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 23:09:10,584 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:35:43+00:00 (UTC)
2025-09-03 23:09:10,584 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 23:09:10,584 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 23:09:10,585 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 23:09:10,585 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 23:09:10,587 - prompt_manager.app.api.v1.api - INFO - Found 10 prompts out of 10 total
2025-09-03 23:09:10,588 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 6.86ms
2025-09-03 23:09:10,589 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 23:09:10,589 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 23:09:10,589 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 23:09:19,462 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 23:09:19,463 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 23:09:19,463 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.52ms
2025-09-03 23:09:19,463 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.8ms
2025-09-03 23:09:19,502 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/name/travel_planner/versions?skip=0&limit=10
2025-09-03 23:09:19,503 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 23:09:19,503 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 23:09:19,503 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 23:09:19,503 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 23:09:19,503 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 23:09:19,503 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 23:09:19,503 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 23:09:19,504 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 23:09:19,504 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:35:43+00:00 (UTC)
2025-09-03 23:09:19,504 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 23:09:19,504 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 23:09:19,504 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 23:09:19,504 - prompt_manager.app.api.v1.api - INFO - Listing versions for prompt: travel_planner
2025-09-03 23:09:19,509 - prompt_manager.app.api.v1.api - INFO - Found 2 versions for prompt: travel_planner
2025-09-03 23:09:19,509 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/name/travel_planner/versions?skip=0&limit=10 Status: 200 Time: 6.44ms
2025-09-03 23:09:19,509 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 23:09:19,509 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 23:09:19,509 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 23:09:19,511 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 23:09:19,511 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.24ms
2025-09-03 23:09:19,512 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 23:09:19,512 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 23:09:19,512 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 23:09:19,512 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 23:09:19,512 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 23:09:19,512 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 23:09:19,512 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 23:09:19,512 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 23:09:19,513 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 23:09:19,513 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:35:43+00:00 (UTC)
2025-09-03 23:09:19,513 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 23:09:19,513 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 23:09:19,513 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 23:09:19,513 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 23:09:19,514 - prompt_manager.app.api.v1.api - INFO - Found 10 prompts out of 10 total
2025-09-03 23:09:19,515 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 3.22ms
2025-09-03 23:09:19,515 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 23:09:19,515 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 23:09:19,515 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 23:09:35,125 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 23:09:35,126 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.04ms
2025-09-03 23:09:35,133 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 23:09:35,134 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.54ms
2025-09-03 23:09:35,135 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 23:09:35,136 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 23:09:35,136 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 23:09:35,136 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 23:09:35,136 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 23:09:35,136 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 23:09:35,136 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 23:09:35,136 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 23:09:35,136 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 23:09:35,137 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:35:43+00:00 (UTC)
2025-09-03 23:09:35,137 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 23:09:35,137 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 23:09:35,138 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 23:09:35,138 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 23:09:35,139 - prompt_manager.app.api.v1.api - INFO - Found 10 prompts out of 10 total
2025-09-03 23:09:35,140 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 4.44ms
2025-09-03 23:09:35,140 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 23:09:35,140 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 23:09:35,140 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 23:09:37,787 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 23:09:37,790 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 2.15ms
2025-09-03 23:09:37,799 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 23:09:37,800 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.73ms
2025-09-03 23:09:37,802 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 23:09:37,802 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 23:09:37,803 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 23:09:37,803 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 23:09:37,803 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 23:09:37,803 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 23:09:37,803 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 23:09:37,803 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 23:09:37,803 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 23:09:37,803 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:35:43+00:00 (UTC)
2025-09-03 23:09:37,803 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 23:09:37,803 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 23:09:37,804 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 23:09:37,804 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 23:09:37,805 - prompt_manager.app.api.v1.api - INFO - Found 10 prompts out of 10 total
2025-09-03 23:09:37,806 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 4.34ms
2025-09-03 23:09:37,807 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 23:09:37,807 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 23:09:37,807 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 23:09:38,582 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 23:09:38,583 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.8ms
2025-09-03 23:09:38,590 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 23:09:38,591 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.95ms
2025-09-03 23:09:38,594 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 23:09:38,595 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 23:09:38,595 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 23:09:38,595 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 23:09:38,595 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 23:09:38,595 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 23:09:38,595 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 23:09:38,595 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 23:09:38,596 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 23:09:38,596 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:35:43+00:00 (UTC)
2025-09-03 23:09:38,596 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 23:09:38,596 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 23:09:38,597 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 23:09:38,597 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 23:09:38,598 - prompt_manager.app.api.v1.api - INFO - Found 10 prompts out of 10 total
2025-09-03 23:09:38,599 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 5.31ms
2025-09-03 23:09:38,600 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 23:09:38,600 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 23:09:38,600 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 23:09:38,604 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/name/travel_planner/version/1.0.1/activate?updated_by=system@example.com
2025-09-03 23:09:38,604 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 23:09:38,604 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 23:09:38,605 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 23:09:38,605 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 23:09:38,605 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 23:09:38,605 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 23:09:38,605 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 23:09:38,605 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 23:09:38,605 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:35:43+00:00 (UTC)
2025-09-03 23:09:38,605 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 23:09:38,605 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 23:09:38,606 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 23:09:38,606 - prompt_manager.app.api.v1.api - INFO - Setting active version for prompt 'travel_planner' to version 1.0.1 (user: prishatank@gmail.com)
2025-09-03 23:09:38,608 - prompt_manager.app.api.v1.api - INFO - Setting prompt 'travel_planner' version 1.0.1 as live version
2025-09-03 23:09:38,618 - prompt_manager.app.api.v1.api - INFO - Successfully set prompt 'travel_planner' version 1.0.1 as live version
2025-09-03 23:09:38,619 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/name/travel_planner/version/1.0.1/activate?updated_by=system@example.com Status: 200 Time: 15.21ms
2025-09-03 23:09:38,619 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 23:09:38,619 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 23:09:38,619 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 23:09:38,657 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 23:09:38,657 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.33ms
2025-09-03 23:09:38,660 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 23:09:38,661 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.33ms
2025-09-03 23:09:38,661 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 23:09:38,662 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 23:09:38,662 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 23:09:38,662 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 23:09:38,662 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 23:09:38,662 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 23:09:38,662 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 23:09:38,662 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 23:09:38,662 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 23:09:38,662 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:35:43+00:00 (UTC)
2025-09-03 23:09:38,662 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 23:09:38,662 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 23:09:38,663 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 23:09:38,663 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 23:09:38,663 - prompt_manager.app.api.v1.api - INFO - Found 10 prompts out of 10 total
2025-09-03 23:09:38,664 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 2.17ms
2025-09-03 23:09:38,664 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 23:09:38,664 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 23:09:38,664 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 23:09:46,289 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 23:09:46,291 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.85ms
2025-09-03 23:09:46,298 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 23:09:46,299 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.53ms
2025-09-03 23:09:46,301 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 23:09:46,302 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 23:09:46,302 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 23:09:46,302 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 23:09:46,302 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 23:09:46,302 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 23:09:46,303 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 23:09:46,303 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 23:09:46,303 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 23:09:46,303 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:35:43+00:00 (UTC)
2025-09-03 23:09:46,303 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 23:09:46,303 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 23:09:46,304 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 23:09:46,304 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 23:09:46,306 - prompt_manager.app.api.v1.api - INFO - Found 10 prompts out of 10 total
2025-09-03 23:09:46,306 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 5.24ms
2025-09-03 23:09:46,307 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 23:09:46,307 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 23:09:46,307 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 23:09:46,352 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 23:09:46,352 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.38ms
2025-09-03 23:09:46,357 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 23:09:46,357 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.29ms
2025-09-03 23:09:46,358 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 23:09:46,358 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 23:09:46,358 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 23:09:46,358 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 23:09:46,358 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 23:09:46,358 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 23:09:46,358 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 23:09:46,358 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 23:09:46,358 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 23:09:46,359 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:35:43+00:00 (UTC)
2025-09-03 23:09:46,359 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 23:09:46,359 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 23:09:46,359 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 23:09:46,359 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 23:09:46,360 - prompt_manager.app.api.v1.api - INFO - Found 10 prompts out of 10 total
2025-09-03 23:09:46,360 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 2.28ms
2025-09-03 23:09:46,360 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 23:09:46,360 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 23:09:46,360 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 23:09:46,363 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/8/history?skip=0&limit=10
2025-09-03 23:09:46,364 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 23:09:46,364 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 23:09:46,364 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 23:09:46,364 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 23:09:46,364 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 23:09:46,364 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 23:09:46,364 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 23:09:46,364 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 23:09:46,364 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:35:43+00:00 (UTC)
2025-09-03 23:09:46,364 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 23:09:46,364 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 23:09:46,365 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 23:09:46,365 - prompt_manager.app.api.v1.api - INFO - Retrieving history for prompt ID: 8
2025-09-03 23:09:46,368 - prompt_manager.app.api.v1.api - INFO - Found 10 history items for prompt ID: 8
2025-09-03 23:09:46,368 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/8/history?skip=0&limit=10 Status: 200 Time: 5.15ms
2025-09-03 23:09:46,369 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 23:09:46,369 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 23:09:46,369 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 23:10:09,001 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 23:10:09,004 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 2.76ms
2025-09-03 23:10:11,088 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 23:10:11,089 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.78ms
2025-09-03 23:10:11,101 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 23:10:11,105 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 23:10:11,105 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 23:10:11,105 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 23:10:11,105 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 23:10:11,106 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 23:10:11,106 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 23:10:11,106 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 23:10:11,107 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 23:10:11,107 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:35:43+00:00 (UTC)
2025-09-03 23:10:11,107 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 23:10:11,107 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 23:10:11,113 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 23:10:11,114 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 23:10:11,119 - prompt_manager.app.api.v1.api - INFO - Found 10 prompts out of 10 total
2025-09-03 23:10:11,121 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 19.83ms
2025-09-03 23:10:11,121 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 23:10:11,121 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 23:10:11,122 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 23:10:18,153 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 23:10:18,154 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.69ms
2025-09-03 23:10:18,158 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 23:10:18,158 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.41ms
2025-09-03 23:10:18,160 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 23:10:18,162 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 23:10:18,162 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 23:10:18,163 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 23:10:18,163 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 23:10:18,163 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 23:10:18,163 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 23:10:18,163 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 23:10:18,164 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 23:10:18,164 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:35:43+00:00 (UTC)
2025-09-03 23:10:18,164 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 23:10:18,164 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 23:10:18,166 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 23:10:18,166 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 23:10:18,170 - prompt_manager.app.api.v1.api - INFO - Found 10 prompts out of 10 total
2025-09-03 23:10:18,172 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 11.85ms
2025-09-03 23:10:18,172 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 23:10:18,172 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 23:10:18,172 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 23:10:25,686 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 23:10:25,687 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.87ms
2025-09-03 23:10:25,692 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 23:10:25,693 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.35ms
2025-09-03 23:10:25,694 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 23:10:25,694 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 23:10:25,695 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 23:10:25,695 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 23:10:25,695 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 23:10:25,695 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 23:10:25,695 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 23:10:25,695 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 23:10:25,695 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 23:10:25,695 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:35:43+00:00 (UTC)
2025-09-03 23:10:25,695 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 23:10:25,695 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 23:10:25,696 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 23:10:25,696 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 23:10:25,699 - prompt_manager.app.api.v1.api - INFO - Found 10 prompts out of 10 total
2025-09-03 23:10:25,700 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 5.52ms
2025-09-03 23:10:25,700 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 23:10:25,700 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 23:10:25,700 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 23:10:26,301 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 23:10:26,302 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.83ms
2025-09-03 23:10:26,308 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 23:10:26,308 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.39ms
2025-09-03 23:10:26,310 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 23:10:26,310 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 23:10:26,310 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 23:10:26,310 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 23:10:26,310 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 23:10:26,310 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 23:10:26,310 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 23:10:26,310 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 23:10:26,310 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 23:10:26,310 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:35:43+00:00 (UTC)
2025-09-03 23:10:26,311 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 23:10:26,311 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 23:10:26,311 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 23:10:26,311 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 23:10:26,312 - prompt_manager.app.api.v1.api - INFO - Found 10 prompts out of 10 total
2025-09-03 23:10:26,313 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 3.58ms
2025-09-03 23:10:26,314 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 23:10:26,314 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 23:10:26,314 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 23:10:26,318 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/9/history?skip=0&limit=10
2025-09-03 23:10:26,318 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 23:10:26,318 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 23:10:26,319 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 23:10:26,319 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 23:10:26,319 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 23:10:26,319 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 23:10:26,319 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 23:10:26,319 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 23:10:26,319 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:35:43+00:00 (UTC)
2025-09-03 23:10:26,319 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 23:10:26,319 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 23:10:26,320 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 23:10:26,320 - prompt_manager.app.api.v1.api - INFO - Retrieving history for prompt ID: 9
2025-09-03 23:10:26,321 - prompt_manager.app.api.v1.api - INFO - Found 1 history items for prompt ID: 9
2025-09-03 23:10:26,321 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/9/history?skip=0&limit=10 Status: 200 Time: 3.39ms
2025-09-03 23:10:26,322 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 23:10:26,322 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 23:10:26,322 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 23:10:30,537 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 23:10:30,538 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.92ms
2025-09-03 23:10:30,547 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 23:10:30,547 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.58ms
2025-09-03 23:10:30,550 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 23:10:30,552 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 23:10:30,552 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 23:10:30,552 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 23:10:30,552 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 23:10:30,552 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 23:10:30,552 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 23:10:30,552 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 23:10:30,553 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 23:10:30,553 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:35:43+00:00 (UTC)
2025-09-03 23:10:30,553 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 23:10:30,553 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 23:10:30,558 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 23:10:30,558 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 23:10:30,613 - prompt_manager.app.api.v1.api - INFO - Found 10 prompts out of 10 total
2025-09-03 23:10:30,613 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 23:10:30,614 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 63.68ms
2025-09-03 23:10:30,614 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.44ms
2025-09-03 23:10:30,614 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 23:10:30,614 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 23:10:30,614 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 23:10:30,657 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 23:10:30,657 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.31ms
2025-09-03 23:10:30,658 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 23:10:30,658 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 23:10:39,479 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 23:10:51,383 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 23:10:51,387 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 23:10:51,387 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 23:10:51,387 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 23:10:51,388 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 23:10:51,388 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 23:10:51,388 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 23:10:51,388 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:35:43+00:00 (UTC)
2025-09-03 23:10:51,388 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 23:10:51,389 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 23:10:51,393 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 23:10:51,394 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 23:10:51,400 - prompt_manager.app.api.v1.api - INFO - Found 10 prompts out of 10 total
2025-09-03 23:10:51,401 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 11921.78ms
2025-09-03 23:10:51,402 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 20743.57ms
2025-09-03 23:10:51,402 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 23:10:51,402 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 23:10:51,402 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 23:10:51,491 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-03 23:10:52,682 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-03 23:10:52,682 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-03 23:10:52,682 - prompt_manager.app.main - INFO - Database URL: sqlite:////Users/prisha/Desktop/Coding/system prompt/prompts.db
2025-09-03 23:10:56,392 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 23:10:56,392 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.57ms
2025-09-03 23:11:14,552 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 23:11:14,554 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 2.74ms
2025-09-03 23:11:14,561 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-03 23:11:14,567 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 23:11:14,569 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 23:11:14,897 - prompt_manager.app.api.v1.endpoints.auth - INFO - Created access token for user: prishatank@gmail.com
2025-09-03 23:11:14,902 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 200 Time: 341.48ms
2025-09-03 23:11:14,903 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 23:11:14,903 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 23:11:14,903 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 23:11:14,946 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 23:11:14,947 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.53ms
2025-09-03 23:11:16,520 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 23:11:16,521 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.7ms
2025-09-03 23:11:16,526 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 23:11:16,526 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.34ms
2025-09-03 23:11:16,528 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 23:11:16,529 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 23:11:16,529 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 23:11:16,529 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 23:11:16,529 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 23:11:16,529 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 23:11:16,529 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 23:11:16,529 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 23:11:16,529 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 23:11:16,529 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:41:14+00:00 (UTC)
2025-09-03 23:11:16,529 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 23:11:16,529 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 23:11:16,530 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 23:11:16,530 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 23:11:16,538 - prompt_manager.app.api.v1.api - INFO - Found 10 prompts out of 10 total
2025-09-03 23:11:16,539 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 10.48ms
2025-09-03 23:11:16,539 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 23:11:16,539 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 23:11:16,539 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 23:11:22,104 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 23:11:22,105 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.78ms
2025-09-03 23:11:22,111 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 23:11:22,111 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.32ms
2025-09-03 23:11:22,112 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 23:11:22,113 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 23:11:22,113 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 23:11:22,113 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 23:11:22,113 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 23:11:22,113 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 23:11:22,113 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 23:11:22,113 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 23:11:22,113 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 23:11:22,113 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:41:14+00:00 (UTC)
2025-09-03 23:11:22,113 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 23:11:22,113 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 23:11:22,114 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 23:11:22,115 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 23:11:22,116 - prompt_manager.app.api.v1.api - INFO - Found 10 prompts out of 10 total
2025-09-03 23:11:22,117 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 4.77ms
2025-09-03 23:11:22,118 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 23:11:22,118 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 23:11:22,118 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 23:11:22,170 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-03 23:11:22,170 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.47ms
2025-09-03 23:11:22,174 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-03 23:11:22,174 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.31ms
2025-09-03 23:11:22,175 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-03 23:11:22,176 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 23:11:22,176 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 23:11:22,176 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 23:11:22,176 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 23:11:22,176 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 23:11:22,176 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 23:11:22,176 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 23:11:22,176 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 23:11:22,176 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:41:14+00:00 (UTC)
2025-09-03 23:11:22,176 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 23:11:22,176 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 23:11:22,178 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 23:11:22,179 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-03 23:11:22,182 - prompt_manager.app.api.v1.api - INFO - Found 10 prompts out of 10 total
2025-09-03 23:11:22,184 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 8.17ms
2025-09-03 23:11:22,185 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 23:11:22,186 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 23:11:22,186 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 23:11:22,190 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/10/history?skip=0&limit=10
2025-09-03 23:11:22,190 - prompt_manager.app.database - INFO - Creating new database session
2025-09-03 23:11:22,191 - prompt_manager.app.database - INFO - Yielding database session
2025-09-03 23:11:22,191 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-03 23:11:22,191 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-03 23:11:22,191 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-03 23:11:22,191 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-03 23:11:22,191 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-03 23:11:22,191 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-03 23:11:22,191 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-04 17:41:14+00:00 (UTC)
2025-09-03 23:11:22,191 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-03 23:11:22,191 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-03 23:11:22,191 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-03 23:11:22,191 - prompt_manager.app.api.v1.api - INFO - Retrieving history for prompt ID: 10
2025-09-03 23:11:22,197 - prompt_manager.app.api.v1.api - INFO - Found 2 history items for prompt ID: 10
2025-09-03 23:11:22,198 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/10/history?skip=0&limit=10 Status: 200 Time: 8.0ms
2025-09-03 23:11:22,198 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-03 23:11:22,198 - prompt_manager.app.database - INFO - Closing database session
2025-09-03 23:11:22,198 - prompt_manager.app.database - INFO - Database session closed
2025-09-03 23:11:32,767 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-04 09:57:42,824 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-04 09:57:42,824 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-04 09:57:42,824 - prompt_manager.app.main - INFO - Database URL: sqlite:////Users/prisha/Desktop/Coding/system prompt/prompts.db
2025-09-04 09:57:47,950 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 09:57:47,951 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.27ms
2025-09-04 09:58:17,006 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 09:58:17,009 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 3.44ms
2025-09-04 09:58:17,015 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-04 09:58:17,018 - prompt_manager.app.database - INFO - Creating new database session
2025-09-04 09:58:17,018 - prompt_manager.app.database - INFO - Yielding database session
2025-09-04 09:58:17,319 - prompt_manager.app.api.v1.endpoints.auth - INFO - Created access token for user: prishatank@gmail.com
2025-09-04 09:58:17,327 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 200 Time: 311.26ms
2025-09-04 09:58:17,327 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-04 09:58:17,327 - prompt_manager.app.database - INFO - Closing database session
2025-09-04 09:58:17,327 - prompt_manager.app.database - INFO - Database session closed
2025-09-04 09:58:17,364 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 09:58:17,364 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.32ms
2025-09-04 09:58:18,910 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 09:58:18,911 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.23ms
2025-09-04 09:58:23,179 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 09:58:23,180 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.87ms
2025-09-04 09:58:23,194 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-04 09:58:23,195 - prompt_manager.app.database - INFO - Creating new database session
2025-09-04 09:58:23,195 - prompt_manager.app.database - INFO - Yielding database session
2025-09-04 09:58:23,196 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-04 09:58:23,196 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-04 09:58:23,196 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-04 09:58:23,196 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-04 09:58:23,196 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-04 09:58:23,197 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-04 09:58:23,197 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-05 04:28:17+00:00 (UTC)
2025-09-04 09:58:23,197 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-04 09:58:23,197 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-04 09:58:23,199 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-04 09:58:23,199 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-04 09:58:23,209 - prompt_manager.app.api.v1.api - INFO - Found 10 prompts out of 10 total
2025-09-04 09:58:23,210 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 16.37ms
2025-09-04 09:58:23,211 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-04 09:58:23,211 - prompt_manager.app.database - INFO - Closing database session
2025-09-04 09:58:23,211 - prompt_manager.app.database - INFO - Database session closed
2025-09-04 09:58:32,886 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 09:58:32,887 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.16ms
2025-09-04 09:58:34,195 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 09:58:34,195 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.69ms
2025-09-04 09:58:34,206 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/?status=active
2025-09-04 09:58:34,207 - prompt_manager.app.database - INFO - Creating new database session
2025-09-04 09:58:34,207 - prompt_manager.app.database - INFO - Yielding database session
2025-09-04 09:58:34,207 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-04 09:58:34,207 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-04 09:58:34,207 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-04 09:58:34,207 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-04 09:58:34,207 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-04 09:58:34,208 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-04 09:58:34,208 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-05 04:28:17+00:00 (UTC)
2025-09-04 09:58:34,208 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-04 09:58:34,208 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-04 09:58:34,210 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-04 09:58:34,210 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=PromptStatus.ACTIVE, tag=None
2025-09-04 09:58:34,215 - prompt_manager.app.api.v1.api - INFO - Found 5 prompts out of 5 total
2025-09-04 09:58:34,216 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/?status=active Status: 200 Time: 9.73ms
2025-09-04 09:58:34,216 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-04 09:58:34,216 - prompt_manager.app.database - INFO - Closing database session
2025-09-04 09:58:34,217 - prompt_manager.app.database - INFO - Database session closed
2025-09-04 09:59:09,681 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 09:59:09,683 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.68ms
2025-09-04 09:59:09,734 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 09:59:09,735 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.47ms
2025-09-04 09:59:09,744 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/test-persona
2025-09-04 09:59:09,745 - prompt_manager.app.database - INFO - Creating new database session
2025-09-04 09:59:09,745 - prompt_manager.app.database - INFO - Yielding database session
2025-09-04 09:59:09,745 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-04 09:59:09,746 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-04 09:59:09,746 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-04 09:59:09,746 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-04 09:59:09,746 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-04 09:59:09,746 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-04 09:59:09,746 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-05 04:28:17+00:00 (UTC)
2025-09-04 09:59:09,746 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-04 09:59:09,746 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-04 09:59:09,747 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-04 09:59:09,747 - prompt_manager.app.api.v1.api - INFO - Testing persona with automatic prompt selection (user: prishatank@gmail.com)
2025-09-04 09:59:09,747 - prompt_manager.app.crud.crud - INFO - Finding most relevant prompt for input: I want to bake a cake, help me.
2025-09-04 09:59:09,748 - prompt_manager.app.crud.crud - INFO - Found 5 active prompts in the database
2025-09-04 09:59:09,748 - prompt_manager.app.crud.crud - INFO - Active prompt 1: ID=2, Name=coding_assistant, Status=active, is_active=True
2025-09-04 09:59:09,748 - prompt_manager.app.crud.crud - INFO - Active prompt 2: ID=5, Name=cooking_assistant, Status=active, is_active=True
2025-09-04 09:59:09,748 - prompt_manager.app.crud.crud - INFO - Active prompt 3: ID=7, Name=healthcare_advisor, Status=active, is_active=True
2025-09-04 09:59:09,748 - prompt_manager.app.crud.crud - INFO - Active prompt 4: ID=8, Name=math_tutor , Status=active, is_active=True
2025-09-04 09:59:09,748 - prompt_manager.app.crud.crud - INFO - Active prompt 5: ID=10, Name=travel_planner, Status=active, is_active=True
2025-09-04 09:59:09,748 - prompt_manager.app.crud.crud - INFO - Sending 5 prompts to LLM for analysis
2025-09-04 09:59:09,748 - prompt_manager.app.crud.crud - INFO - Initializing GROQ client...
2025-09-04 09:59:09,780 - prompt_manager.app.crud.crud - INFO - Sending request to GROQ API...
2025-09-04 09:59:10,659 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-04 09:59:10,667 - prompt_manager.app.crud.crud - INFO - Received response from GROQ API
2025-09-04 09:59:10,667 - prompt_manager.app.crud.crud - INFO - LLM raw response: 5 for input: I want to bake a cake, help me.
2025-09-04 09:59:10,667 - prompt_manager.app.crud.crud - INFO - Extracted prompt ID: 5
2025-09-04 09:59:10,669 - prompt_manager.app.crud.crud - INFO - Valid active prompt found: ID=5, Name=cooking_assistant
2025-09-04 09:59:10,669 - prompt_manager.app.api.v1.api - INFO - Testing persona for prompt ID 5 (user: prishatank@gmail.com)
2025-09-04 09:59:11,734 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-04 09:59:11,746 - prompt_manager.app.api.v1.api - INFO - Generated persona response for prompt 'cooking_assistant' with persona type 'dynamic_persona'
2025-09-04 09:59:11,747 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/test-persona Status: 200 Time: 2002.87ms
2025-09-04 09:59:11,747 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-04 09:59:11,747 - prompt_manager.app.database - INFO - Closing database session
2025-09-04 09:59:11,747 - prompt_manager.app.database - INFO - Database session closed
2025-09-04 09:59:41,549 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 09:59:41,550 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.56ms
2025-09-04 09:59:41,594 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 09:59:41,595 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.74ms
2025-09-04 09:59:41,603 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/test-persona
2025-09-04 09:59:41,605 - prompt_manager.app.database - INFO - Creating new database session
2025-09-04 09:59:41,605 - prompt_manager.app.database - INFO - Yielding database session
2025-09-04 09:59:41,605 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-04 09:59:41,605 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-04 09:59:41,605 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-04 09:59:41,605 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-04 09:59:41,605 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-04 09:59:41,607 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-04 09:59:41,607 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-05 04:28:17+00:00 (UTC)
2025-09-04 09:59:41,607 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-04 09:59:41,607 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-04 09:59:41,608 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-04 09:59:41,609 - prompt_manager.app.api.v1.api - INFO - Testing persona with automatic prompt selection (user: prishatank@gmail.com)
2025-09-04 09:59:41,609 - prompt_manager.app.crud.crud - INFO - Finding most relevant prompt for input: I have fever and headache, what should I do?
2025-09-04 09:59:41,609 - prompt_manager.app.crud.crud - INFO - Found 5 active prompts in the database
2025-09-04 09:59:41,609 - prompt_manager.app.crud.crud - INFO - Active prompt 1: ID=2, Name=coding_assistant, Status=active, is_active=True
2025-09-04 09:59:41,609 - prompt_manager.app.crud.crud - INFO - Active prompt 2: ID=5, Name=cooking_assistant, Status=active, is_active=True
2025-09-04 09:59:41,609 - prompt_manager.app.crud.crud - INFO - Active prompt 3: ID=7, Name=healthcare_advisor, Status=active, is_active=True
2025-09-04 09:59:41,609 - prompt_manager.app.crud.crud - INFO - Active prompt 4: ID=8, Name=math_tutor , Status=active, is_active=True
2025-09-04 09:59:41,609 - prompt_manager.app.crud.crud - INFO - Active prompt 5: ID=10, Name=travel_planner, Status=active, is_active=True
2025-09-04 09:59:41,610 - prompt_manager.app.crud.crud - INFO - Sending 5 prompts to LLM for analysis
2025-09-04 09:59:41,610 - prompt_manager.app.crud.crud - INFO - Initializing GROQ client...
2025-09-04 09:59:41,632 - prompt_manager.app.crud.crud - INFO - Sending request to GROQ API...
2025-09-04 09:59:42,000 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-04 09:59:42,005 - prompt_manager.app.crud.crud - INFO - Received response from GROQ API
2025-09-04 09:59:42,005 - prompt_manager.app.crud.crud - INFO - LLM raw response: 7 for input: I have fever and headache, what should I do?
2025-09-04 09:59:42,005 - prompt_manager.app.crud.crud - INFO - Extracted prompt ID: 7
2025-09-04 09:59:42,006 - prompt_manager.app.crud.crud - INFO - Valid active prompt found: ID=7, Name=healthcare_advisor
2025-09-04 09:59:42,007 - prompt_manager.app.api.v1.api - INFO - Testing persona for prompt ID 7 (user: prishatank@gmail.com)
2025-09-04 09:59:42,812 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-04 09:59:42,817 - prompt_manager.app.api.v1.api - INFO - Generated persona response for prompt 'healthcare_advisor' with persona type 'dynamic_persona'
2025-09-04 09:59:42,818 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/test-persona Status: 200 Time: 1214.9ms
2025-09-04 09:59:42,820 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-04 09:59:42,820 - prompt_manager.app.database - INFO - Closing database session
2025-09-04 09:59:42,820 - prompt_manager.app.database - INFO - Database session closed
2025-09-04 10:00:07,293 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 10:00:07,299 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 5.56ms
2025-09-04 10:00:07,345 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 10:00:07,345 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.46ms
2025-09-04 10:00:07,353 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/test-persona
2025-09-04 10:00:07,353 - prompt_manager.app.database - INFO - Creating new database session
2025-09-04 10:00:07,353 - prompt_manager.app.database - INFO - Yielding database session
2025-09-04 10:00:07,354 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-04 10:00:07,354 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-04 10:00:07,354 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-04 10:00:07,354 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-04 10:00:07,354 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-04 10:00:07,354 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-04 10:00:07,354 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-05 04:28:17+00:00 (UTC)
2025-09-04 10:00:07,354 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-04 10:00:07,354 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-04 10:00:07,355 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-04 10:00:07,356 - prompt_manager.app.api.v1.api - INFO - Testing persona with automatic prompt selection (user: prishatank@gmail.com)
2025-09-04 10:00:07,356 - prompt_manager.app.crud.crud - INFO - Finding most relevant prompt for input: I want to write a code for palindrome.
2025-09-04 10:00:07,357 - prompt_manager.app.crud.crud - INFO - Found 5 active prompts in the database
2025-09-04 10:00:07,358 - prompt_manager.app.crud.crud - INFO - Active prompt 1: ID=2, Name=coding_assistant, Status=active, is_active=True
2025-09-04 10:00:07,358 - prompt_manager.app.crud.crud - INFO - Active prompt 2: ID=5, Name=cooking_assistant, Status=active, is_active=True
2025-09-04 10:00:07,358 - prompt_manager.app.crud.crud - INFO - Active prompt 3: ID=7, Name=healthcare_advisor, Status=active, is_active=True
2025-09-04 10:00:07,358 - prompt_manager.app.crud.crud - INFO - Active prompt 4: ID=8, Name=math_tutor , Status=active, is_active=True
2025-09-04 10:00:07,358 - prompt_manager.app.crud.crud - INFO - Active prompt 5: ID=10, Name=travel_planner, Status=active, is_active=True
2025-09-04 10:00:07,358 - prompt_manager.app.crud.crud - INFO - Sending 5 prompts to LLM for analysis
2025-09-04 10:00:07,358 - prompt_manager.app.crud.crud - INFO - Initializing GROQ client...
2025-09-04 10:00:07,381 - prompt_manager.app.crud.crud - INFO - Sending request to GROQ API...
2025-09-04 10:00:08,492 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-04 10:00:08,500 - prompt_manager.app.crud.crud - INFO - Received response from GROQ API
2025-09-04 10:00:08,500 - prompt_manager.app.crud.crud - INFO - LLM raw response: 2 for input: I want to write a code for palindrome.
2025-09-04 10:00:08,500 - prompt_manager.app.crud.crud - INFO - Extracted prompt ID: 2
2025-09-04 10:00:08,502 - prompt_manager.app.crud.crud - INFO - Valid active prompt found: ID=2, Name=coding_assistant
2025-09-04 10:00:08,503 - prompt_manager.app.api.v1.api - INFO - Testing persona for prompt ID 2 (user: prishatank@gmail.com)
2025-09-04 10:00:09,528 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-04 10:00:09,535 - prompt_manager.app.api.v1.api - INFO - Generated persona response for prompt 'coding_assistant' with persona type 'dynamic_persona'
2025-09-04 10:00:09,536 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/test-persona Status: 200 Time: 2183.66ms
2025-09-04 10:00:09,537 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-04 10:00:09,537 - prompt_manager.app.database - INFO - Closing database session
2025-09-04 10:00:09,538 - prompt_manager.app.database - INFO - Database session closed
2025-09-04 10:00:23,042 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 10:00:23,043 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.83ms
2025-09-04 10:00:28,280 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 10:00:28,281 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.85ms
2025-09-04 10:00:29,268 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 10:00:29,269 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.69ms
2025-09-04 10:00:30,159 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 10:00:30,160 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.75ms
2025-09-04 10:00:44,214 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 10:00:44,216 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.44ms
2025-09-04 10:00:44,221 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-04 10:00:44,223 - prompt_manager.app.database - INFO - Creating new database session
2025-09-04 10:00:44,223 - prompt_manager.app.database - INFO - Yielding database session
2025-09-04 10:00:44,492 - prompt_manager.app.api.v1.endpoints.auth - INFO - Created access token for user: prishatank@gmail.com
2025-09-04 10:00:44,492 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 200 Time: 270.94ms
2025-09-04 10:00:44,492 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-04 10:00:44,493 - prompt_manager.app.database - INFO - Closing database session
2025-09-04 10:00:44,493 - prompt_manager.app.database - INFO - Database session closed
2025-09-04 10:00:44,517 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 10:00:44,517 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.41ms
2025-09-04 10:00:46,794 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 10:00:46,795 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.78ms
2025-09-04 10:00:54,078 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 10:00:54,079 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.12ms
2025-09-04 10:00:54,086 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-04 10:00:54,087 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.6ms
2025-09-04 10:00:54,088 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-04 10:00:54,090 - prompt_manager.app.database - INFO - Creating new database session
2025-09-04 10:00:54,090 - prompt_manager.app.database - INFO - Yielding database session
2025-09-04 10:00:54,090 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-04 10:00:54,090 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-04 10:00:54,090 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-04 10:00:54,090 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-04 10:00:54,090 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-04 10:00:54,091 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-04 10:00:54,091 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-05 04:30:44+00:00 (UTC)
2025-09-04 10:00:54,091 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-04 10:00:54,091 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-04 10:00:54,093 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-04 10:00:54,094 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-04 10:00:54,097 - prompt_manager.app.api.v1.api - INFO - Found 10 prompts out of 10 total
2025-09-04 10:00:54,098 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 9.56ms
2025-09-04 10:00:54,098 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-04 10:00:54,098 - prompt_manager.app.database - INFO - Closing database session
2025-09-04 10:00:54,099 - prompt_manager.app.database - INFO - Database session closed
2025-09-04 10:00:59,235 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 10:00:59,236 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.78ms
2025-09-04 10:00:59,242 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-04 10:00:59,243 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.38ms
2025-09-04 10:00:59,244 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-04 10:00:59,245 - prompt_manager.app.database - INFO - Creating new database session
2025-09-04 10:00:59,245 - prompt_manager.app.database - INFO - Yielding database session
2025-09-04 10:00:59,245 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-04 10:00:59,245 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-04 10:00:59,245 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-04 10:00:59,245 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-04 10:00:59,245 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-04 10:00:59,245 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-04 10:00:59,245 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-05 04:30:44+00:00 (UTC)
2025-09-04 10:00:59,245 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-04 10:00:59,245 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-04 10:00:59,246 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-04 10:00:59,246 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-04 10:00:59,247 - prompt_manager.app.api.v1.api - INFO - Found 10 prompts out of 10 total
2025-09-04 10:00:59,248 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 4.31ms
2025-09-04 10:00:59,249 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-04 10:00:59,249 - prompt_manager.app.database - INFO - Closing database session
2025-09-04 10:00:59,249 - prompt_manager.app.database - INFO - Database session closed
2025-09-04 10:01:02,561 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 10:01:02,563 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 2.88ms
2025-09-04 10:01:02,570 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-04 10:01:02,571 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.74ms
2025-09-04 10:01:02,572 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-04 10:01:02,573 - prompt_manager.app.database - INFO - Creating new database session
2025-09-04 10:01:02,574 - prompt_manager.app.database - INFO - Yielding database session
2025-09-04 10:01:02,574 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-04 10:01:02,574 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-04 10:01:02,574 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-04 10:01:02,574 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-04 10:01:02,574 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-04 10:01:02,574 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-04 10:01:02,574 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-05 04:30:44+00:00 (UTC)
2025-09-04 10:01:02,574 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-04 10:01:02,574 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-04 10:01:02,579 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-04 10:01:02,579 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-04 10:01:02,580 - prompt_manager.app.api.v1.api - INFO - Found 10 prompts out of 10 total
2025-09-04 10:01:02,581 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 8.72ms
2025-09-04 10:01:02,581 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-04 10:01:02,581 - prompt_manager.app.database - INFO - Closing database session
2025-09-04 10:01:02,582 - prompt_manager.app.database - INFO - Database session closed
2025-09-04 10:01:06,088 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 10:01:06,089 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.8ms
2025-09-04 10:01:06,095 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-04 10:01:06,096 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.52ms
2025-09-04 10:01:06,098 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-04 10:01:06,098 - prompt_manager.app.database - INFO - Creating new database session
2025-09-04 10:01:06,098 - prompt_manager.app.database - INFO - Yielding database session
2025-09-04 10:01:06,099 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-04 10:01:06,099 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-04 10:01:06,099 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-04 10:01:06,099 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-04 10:01:06,099 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-04 10:01:06,099 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-04 10:01:06,099 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-05 04:30:44+00:00 (UTC)
2025-09-04 10:01:06,099 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-04 10:01:06,099 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-04 10:01:06,100 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-04 10:01:06,100 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-04 10:01:06,101 - prompt_manager.app.api.v1.api - INFO - Found 10 prompts out of 10 total
2025-09-04 10:01:06,102 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 4.16ms
2025-09-04 10:01:06,102 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-04 10:01:06,102 - prompt_manager.app.database - INFO - Closing database session
2025-09-04 10:01:06,103 - prompt_manager.app.database - INFO - Database session closed
2025-09-04 10:01:08,084 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 10:01:08,085 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.75ms
2025-09-04 10:01:08,091 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-04 10:01:08,091 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.46ms
2025-09-04 10:01:08,093 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-04 10:01:08,094 - prompt_manager.app.database - INFO - Creating new database session
2025-09-04 10:01:08,094 - prompt_manager.app.database - INFO - Yielding database session
2025-09-04 10:01:08,094 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-04 10:01:08,094 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-04 10:01:08,094 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-04 10:01:08,094 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-04 10:01:08,094 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-04 10:01:08,094 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-04 10:01:08,094 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-05 04:30:44+00:00 (UTC)
2025-09-04 10:01:08,094 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-04 10:01:08,095 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-04 10:01:08,095 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-04 10:01:08,096 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-04 10:01:08,099 - prompt_manager.app.api.v1.api - INFO - Found 10 prompts out of 10 total
2025-09-04 10:01:08,100 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 7.31ms
2025-09-04 10:01:08,101 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-04 10:01:08,101 - prompt_manager.app.database - INFO - Closing database session
2025-09-04 10:01:08,101 - prompt_manager.app.database - INFO - Database session closed
2025-09-04 10:01:12,085 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 10:01:12,086 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.37ms
2025-09-04 10:01:14,359 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 10:01:14,360 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.71ms
2025-09-04 10:01:14,365 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/auth/me
2025-09-04 10:01:14,366 - prompt_manager.app.database - INFO - Creating new database session
2025-09-04 10:01:14,366 - prompt_manager.app.database - INFO - Yielding database session
2025-09-04 10:01:14,366 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-04 10:01:14,367 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-04 10:01:14,367 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-04 10:01:14,367 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-04 10:01:14,367 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-04 10:01:14,367 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-04 10:01:14,367 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-05 04:30:44+00:00 (UTC)
2025-09-04 10:01:14,367 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-04 10:01:14,367 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-04 10:01:14,370 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-04 10:01:14,371 - prompt_manager.app.api.v1.endpoints.auth - INFO - Current user: <prompt_manager.app.models.user.User object at 0x1050d6a90>
2025-09-04 10:01:14,371 - prompt_manager.app.api.v1.endpoints.auth - INFO - Token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJwcmlzaGF0YW5rQGdtYWlsLmNvbSIsImVtYWlsIjoicHJpc2hhdGFua0BnbWFpbC5jb20iLCJ1c2VyX2lkIjoiMSIsInNjb3BlcyI6WyJtZSJdLCJleHAiOjE3NTcwNDY2NDQsImlhdCI6MTc1Njk2MDI0NCwibmJmIjoxNzU2OTYwMjQ0LCJpc3MiOiJQcm9tcHQgTWFuYWdlbWVudCBTZXJ2aWNlIiwiYXVkIjoiUHJvbXB0IE1hbmFnZW1lbnQgU2VydmljZSJ9.NiBrFVFazY_jvHINbsuqbQf2twOr-avfQeLxPrQouO8
2025-09-04 10:01:14,371 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/auth/me Status: 200 Time: 6.0ms
2025-09-04 10:01:14,372 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-04 10:01:14,372 - prompt_manager.app.database - INFO - Closing database session
2025-09-04 10:01:14,372 - prompt_manager.app.database - INFO - Database session closed
2025-09-04 10:01:15,759 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 10:01:15,759 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.67ms
2025-09-04 10:01:15,804 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 10:01:15,804 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.41ms
2025-09-04 10:03:42,497 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 10:03:42,500 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 3.79ms
2025-09-04 10:03:42,505 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-04 10:03:42,507 - prompt_manager.app.database - INFO - Creating new database session
2025-09-04 10:03:42,507 - prompt_manager.app.database - INFO - Yielding database session
2025-09-04 10:03:42,780 - prompt_manager.app.api.v1.endpoints.auth - INFO - Created access token for user: prishatank@gmail.com
2025-09-04 10:03:42,784 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 200 Time: 279.4ms
2025-09-04 10:03:42,784 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-04 10:03:42,785 - prompt_manager.app.database - INFO - Closing database session
2025-09-04 10:03:42,785 - prompt_manager.app.database - INFO - Database session closed
2025-09-04 10:03:42,822 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 10:03:42,822 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.49ms
2025-09-04 10:03:44,476 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 10:03:44,476 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.77ms
2025-09-04 10:03:47,843 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 10:03:47,844 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.04ms
2025-09-04 10:03:47,875 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-04 10:03:47,876 - prompt_manager.app.database - INFO - Creating new database session
2025-09-04 10:03:47,876 - prompt_manager.app.database - INFO - Yielding database session
2025-09-04 10:03:47,877 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-04 10:03:47,877 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-04 10:03:47,877 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-04 10:03:47,877 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-04 10:03:47,877 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-04 10:03:47,877 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-04 10:03:47,877 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-05 04:33:42+00:00 (UTC)
2025-09-04 10:03:47,878 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-04 10:03:47,878 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-04 10:03:47,880 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-04 10:03:47,880 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-04 10:03:47,884 - prompt_manager.app.api.v1.api - INFO - Found 10 prompts out of 10 total
2025-09-04 10:03:47,885 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 9.89ms
2025-09-04 10:03:47,885 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-04 10:03:47,886 - prompt_manager.app.database - INFO - Closing database session
2025-09-04 10:03:47,886 - prompt_manager.app.database - INFO - Database session closed
2025-09-04 10:04:10,764 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 10:04:10,766 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.68ms
2025-09-04 10:04:12,375 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 10:04:12,377 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.18ms
2025-09-04 10:04:12,386 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/?status=active
2025-09-04 10:04:12,387 - prompt_manager.app.database - INFO - Creating new database session
2025-09-04 10:04:12,387 - prompt_manager.app.database - INFO - Yielding database session
2025-09-04 10:04:12,387 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-04 10:04:12,388 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-04 10:04:12,388 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-04 10:04:12,388 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-04 10:04:12,388 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-04 10:04:12,388 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-04 10:04:12,388 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-05 04:33:42+00:00 (UTC)
2025-09-04 10:04:12,388 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-04 10:04:12,388 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-04 10:04:12,389 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-04 10:04:12,389 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=PromptStatus.ACTIVE, tag=None
2025-09-04 10:04:12,391 - prompt_manager.app.api.v1.api - INFO - Found 5 prompts out of 5 total
2025-09-04 10:04:12,391 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/?status=active Status: 200 Time: 5.36ms
2025-09-04 10:04:12,392 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-04 10:04:12,392 - prompt_manager.app.database - INFO - Closing database session
2025-09-04 10:04:12,393 - prompt_manager.app.database - INFO - Database session closed
2025-09-04 10:04:32,949 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 10:04:32,950 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.43ms
2025-09-04 10:04:34,513 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 10:04:34,515 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.32ms
2025-09-04 10:04:34,554 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 10:04:34,555 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.57ms
2025-09-04 10:27:25,022 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-04 10:27:26,295 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-04 10:27:26,295 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-04 10:27:26,295 - prompt_manager.app.main - INFO - Database URL: sqlite:////Users/prisha/Desktop/Coding/system prompt/prompts.db
2025-09-04 10:27:31,222 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 10:27:31,224 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 2.16ms
2025-09-04 10:27:31,722 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 10:27:31,724 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.92ms
2025-09-04 10:27:43,282 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-04 10:28:15,260 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-04 10:28:15,260 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-04 10:28:15,260 - prompt_manager.app.main - INFO - Database URL: sqlite:////Users/prisha/Desktop/Coding/system prompt/prompts.db
2025-09-04 10:28:19,525 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 10:28:19,525 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.67ms
2025-09-04 10:30:56,054 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 10:30:56,060 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 5.91ms
2025-09-04 10:35:16,487 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 10:35:16,491 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 3.49ms
2025-09-04 10:35:16,496 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-04 10:35:16,500 - prompt_manager.app.database - INFO - Creating new database session
2025-09-04 10:35:16,500 - prompt_manager.app.database - INFO - Yielding database session
2025-09-04 10:35:16,805 - prompt_manager.app.api.v1.endpoints.auth - INFO - Created access token for user: prishatank@gmail.com
2025-09-04 10:35:16,815 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 200 Time: 318.23ms
2025-09-04 10:35:16,815 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-04 10:35:16,815 - prompt_manager.app.database - INFO - Closing database session
2025-09-04 10:35:16,815 - prompt_manager.app.database - INFO - Database session closed
2025-09-04 10:35:16,848 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 10:35:16,848 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.29ms
2025-09-04 10:35:18,856 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 10:35:18,857 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.18ms
2025-09-04 10:35:23,137 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 10:35:23,139 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.38ms
2025-09-04 10:35:23,150 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-04 10:35:23,152 - prompt_manager.app.database - INFO - Creating new database session
2025-09-04 10:35:23,152 - prompt_manager.app.database - INFO - Yielding database session
2025-09-04 10:35:23,153 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-04 10:35:23,153 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-04 10:35:23,153 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-04 10:35:23,153 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-04 10:35:23,153 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-04 10:35:23,154 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-04 10:35:23,154 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-05 05:05:16+00:00 (UTC)
2025-09-04 10:35:23,154 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-04 10:35:23,154 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-04 10:35:23,156 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-04 10:35:23,157 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-04 10:35:23,165 - prompt_manager.app.api.v1.api - INFO - Found 10 prompts out of 10 total
2025-09-04 10:35:23,166 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 15.64ms
2025-09-04 10:35:23,167 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-04 10:35:23,167 - prompt_manager.app.database - INFO - Closing database session
2025-09-04 10:35:23,167 - prompt_manager.app.database - INFO - Database session closed
2025-09-04 10:35:33,462 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 10:35:33,463 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.72ms
2025-09-04 10:35:34,686 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 10:35:34,687 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.76ms
2025-09-04 10:35:34,698 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/?status=active
2025-09-04 10:35:34,700 - prompt_manager.app.database - INFO - Creating new database session
2025-09-04 10:35:34,700 - prompt_manager.app.database - INFO - Yielding database session
2025-09-04 10:35:34,700 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-04 10:35:34,700 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-04 10:35:34,700 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-04 10:35:34,700 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-04 10:35:34,700 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-04 10:35:34,701 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-04 10:35:34,701 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-05 05:05:16+00:00 (UTC)
2025-09-04 10:35:34,701 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-04 10:35:34,701 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-04 10:35:34,703 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-04 10:35:34,703 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=PromptStatus.ACTIVE, tag=None
2025-09-04 10:35:34,707 - prompt_manager.app.api.v1.api - INFO - Found 5 prompts out of 5 total
2025-09-04 10:35:34,708 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/?status=active Status: 200 Time: 9.76ms
2025-09-04 10:35:34,708 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-04 10:35:34,709 - prompt_manager.app.database - INFO - Closing database session
2025-09-04 10:35:34,709 - prompt_manager.app.database - INFO - Database session closed
2025-09-04 10:39:31,626 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 10:39:31,628 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 2.73ms
2025-09-04 10:40:49,868 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 10:40:49,871 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 3.31ms
2025-09-04 10:40:49,875 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-04 10:40:49,877 - prompt_manager.app.database - INFO - Creating new database session
2025-09-04 10:40:49,878 - prompt_manager.app.database - INFO - Yielding database session
2025-09-04 10:40:50,158 - prompt_manager.app.api.v1.endpoints.auth - INFO - Created access token for user: prishatank@gmail.com
2025-09-04 10:40:50,162 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 200 Time: 287.57ms
2025-09-04 10:40:50,162 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-04 10:40:50,162 - prompt_manager.app.database - INFO - Closing database session
2025-09-04 10:40:50,163 - prompt_manager.app.database - INFO - Database session closed
2025-09-04 10:40:50,206 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 10:40:50,207 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.31ms
2025-09-04 10:40:51,802 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 10:40:51,803 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.39ms
2025-09-04 10:40:54,848 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 10:40:54,849 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.89ms
2025-09-04 10:40:54,857 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-04 10:40:54,857 - prompt_manager.app.database - INFO - Creating new database session
2025-09-04 10:40:54,857 - prompt_manager.app.database - INFO - Yielding database session
2025-09-04 10:40:54,857 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-04 10:40:54,857 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-04 10:40:54,857 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-04 10:40:54,857 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-04 10:40:54,857 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-04 10:40:54,858 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-04 10:40:54,858 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-05 05:10:50+00:00 (UTC)
2025-09-04 10:40:54,858 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-04 10:40:54,858 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-04 10:40:54,859 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-04 10:40:54,859 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-04 10:40:54,863 - prompt_manager.app.api.v1.api - INFO - Found 10 prompts out of 10 total
2025-09-04 10:40:54,864 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 7.21ms
2025-09-04 10:40:54,864 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-04 10:40:54,864 - prompt_manager.app.database - INFO - Closing database session
2025-09-04 10:40:54,864 - prompt_manager.app.database - INFO - Database session closed
2025-09-04 10:41:06,978 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 10:41:06,980 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.48ms
2025-09-04 10:41:08,162 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 10:41:08,162 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.66ms
2025-09-04 10:41:08,170 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/?status=active
2025-09-04 10:41:08,170 - prompt_manager.app.database - INFO - Creating new database session
2025-09-04 10:41:08,170 - prompt_manager.app.database - INFO - Yielding database session
2025-09-04 10:41:08,170 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-04 10:41:08,170 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-04 10:41:08,170 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-04 10:41:08,170 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-04 10:41:08,170 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-04 10:41:08,171 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-04 10:41:08,171 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-05 05:10:50+00:00 (UTC)
2025-09-04 10:41:08,171 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-04 10:41:08,171 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-04 10:41:08,171 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-04 10:41:08,171 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=PromptStatus.ACTIVE, tag=None
2025-09-04 10:41:08,173 - prompt_manager.app.api.v1.api - INFO - Found 5 prompts out of 5 total
2025-09-04 10:41:08,174 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/?status=active Status: 200 Time: 4.37ms
2025-09-04 10:41:08,175 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-04 10:41:08,175 - prompt_manager.app.database - INFO - Closing database session
2025-09-04 10:41:08,175 - prompt_manager.app.database - INFO - Database session closed
2025-09-04 10:41:30,347 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 10:41:30,349 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.45ms
2025-09-04 10:41:30,436 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 10:41:30,437 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.35ms
2025-09-04 10:41:30,444 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/test-persona
2025-09-04 10:41:30,445 - prompt_manager.app.database - INFO - Creating new database session
2025-09-04 10:41:30,445 - prompt_manager.app.database - INFO - Yielding database session
2025-09-04 10:41:30,445 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-04 10:41:30,445 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-04 10:41:30,445 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-04 10:41:30,445 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-04 10:41:30,445 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-04 10:41:30,445 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-04 10:41:30,445 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-05 05:10:50+00:00 (UTC)
2025-09-04 10:41:30,445 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-04 10:41:30,445 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-04 10:41:30,446 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-04 10:41:30,446 - prompt_manager.app.api.v1.api - INFO - Testing persona with automatic prompt selection (user: prishatank@gmail.com)
2025-09-04 10:41:30,446 - prompt_manager.app.crud.crud - INFO - Finding most relevant prompt for input: I want to write a palindrome code. help me
2025-09-04 10:41:30,448 - prompt_manager.app.crud.crud - INFO - Found 5 active prompts in the database
2025-09-04 10:41:30,448 - prompt_manager.app.crud.crud - INFO - Active prompt 1: ID=2, Name=coding_assistant, Status=active, is_active=True
2025-09-04 10:41:30,448 - prompt_manager.app.crud.crud - INFO - Active prompt 2: ID=5, Name=cooking_assistant, Status=active, is_active=True
2025-09-04 10:41:30,448 - prompt_manager.app.crud.crud - INFO - Active prompt 3: ID=7, Name=healthcare_advisor, Status=active, is_active=True
2025-09-04 10:41:30,448 - prompt_manager.app.crud.crud - INFO - Active prompt 4: ID=8, Name=math_tutor , Status=active, is_active=True
2025-09-04 10:41:30,448 - prompt_manager.app.crud.crud - INFO - Active prompt 5: ID=10, Name=travel_planner, Status=active, is_active=True
2025-09-04 10:41:30,448 - prompt_manager.app.crud.crud - INFO - Sending 5 prompts to LLM for analysis
2025-09-04 10:41:30,448 - prompt_manager.app.crud.crud - INFO - Initializing GROQ client...
2025-09-04 10:41:30,508 - prompt_manager.app.crud.crud - INFO - Sending request to GROQ API...
2025-09-04 10:41:31,156 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-04 10:41:31,165 - prompt_manager.app.crud.crud - INFO - Received response from GROQ API
2025-09-04 10:41:31,165 - prompt_manager.app.crud.crud - INFO - LLM raw response: 2 for input: I want to write a palindrome code. help me
2025-09-04 10:41:31,166 - prompt_manager.app.crud.crud - INFO - Extracted prompt ID: 2
2025-09-04 10:41:31,168 - prompt_manager.app.crud.crud - INFO - Valid active prompt found: ID=2, Name=coding_assistant
2025-09-04 10:41:31,169 - prompt_manager.app.api.v1.api - INFO - Testing persona for prompt ID 2 (user: prishatank@gmail.com)
2025-09-04 10:41:32,286 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-04 10:41:32,291 - prompt_manager.app.api.v1.api - INFO - Generated persona response for prompt 'coding_assistant' with persona type 'dynamic_persona'
2025-09-04 10:41:32,292 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/test-persona Status: 200 Time: 1848.03ms
2025-09-04 10:41:32,293 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-04 10:41:32,293 - prompt_manager.app.database - INFO - Closing database session
2025-09-04 10:41:32,293 - prompt_manager.app.database - INFO - Database session closed
2025-09-04 10:42:04,905 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 10:42:04,908 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 3.25ms
2025-09-04 10:42:06,667 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 10:42:06,668 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.94ms
2025-09-04 10:42:06,681 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/test-persona
2025-09-04 10:42:06,682 - prompt_manager.app.database - INFO - Creating new database session
2025-09-04 10:42:06,682 - prompt_manager.app.database - INFO - Yielding database session
2025-09-04 10:42:06,682 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-04 10:42:06,683 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-04 10:42:06,683 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-04 10:42:06,683 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-04 10:42:06,683 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-04 10:42:06,684 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-04 10:42:06,684 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-05 05:10:50+00:00 (UTC)
2025-09-04 10:42:06,684 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-04 10:42:06,684 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-04 10:42:06,688 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-04 10:42:06,689 - prompt_manager.app.api.v1.api - INFO - Testing persona with automatic prompt selection (user: prishatank@gmail.com)
2025-09-04 10:42:06,689 - prompt_manager.app.crud.crud - INFO - Finding most relevant prompt for input: I want to bake a cake, what should I do?
2025-09-04 10:42:06,689 - prompt_manager.app.crud.crud - INFO - Found 5 active prompts in the database
2025-09-04 10:42:06,689 - prompt_manager.app.crud.crud - INFO - Active prompt 1: ID=2, Name=coding_assistant, Status=active, is_active=True
2025-09-04 10:42:06,689 - prompt_manager.app.crud.crud - INFO - Active prompt 2: ID=5, Name=cooking_assistant, Status=active, is_active=True
2025-09-04 10:42:06,689 - prompt_manager.app.crud.crud - INFO - Active prompt 3: ID=7, Name=healthcare_advisor, Status=active, is_active=True
2025-09-04 10:42:06,689 - prompt_manager.app.crud.crud - INFO - Active prompt 4: ID=8, Name=math_tutor , Status=active, is_active=True
2025-09-04 10:42:06,689 - prompt_manager.app.crud.crud - INFO - Active prompt 5: ID=10, Name=travel_planner, Status=active, is_active=True
2025-09-04 10:42:06,689 - prompt_manager.app.crud.crud - INFO - Sending 5 prompts to LLM for analysis
2025-09-04 10:42:06,689 - prompt_manager.app.crud.crud - INFO - Initializing GROQ client...
2025-09-04 10:42:06,711 - prompt_manager.app.crud.crud - INFO - Sending request to GROQ API...
2025-09-04 10:42:07,530 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-04 10:42:07,535 - prompt_manager.app.crud.crud - INFO - Received response from GROQ API
2025-09-04 10:42:07,536 - prompt_manager.app.crud.crud - INFO - LLM raw response: 5 for input: I want to bake a cake, what should I do?
2025-09-04 10:42:07,536 - prompt_manager.app.crud.crud - INFO - Extracted prompt ID: 5
2025-09-04 10:42:07,537 - prompt_manager.app.crud.crud - INFO - Valid active prompt found: ID=5, Name=cooking_assistant
2025-09-04 10:42:07,538 - prompt_manager.app.api.v1.api - INFO - Testing persona for prompt ID 5 (user: prishatank@gmail.com)
2025-09-04 10:42:08,498 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-04 10:42:08,503 - prompt_manager.app.api.v1.api - INFO - Generated persona response for prompt 'cooking_assistant' with persona type 'dynamic_persona'
2025-09-04 10:42:08,503 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/test-persona Status: 200 Time: 1822.89ms
2025-09-04 10:42:08,504 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-04 10:42:08,504 - prompt_manager.app.database - INFO - Closing database session
2025-09-04 10:42:08,504 - prompt_manager.app.database - INFO - Database session closed
2025-09-04 10:47:26,502 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 10:47:26,505 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 2.97ms
2025-09-04 10:49:56,980 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 10:49:56,983 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 3.05ms
2025-09-04 10:49:56,989 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-04 10:49:56,991 - prompt_manager.app.database - INFO - Creating new database session
2025-09-04 10:49:56,991 - prompt_manager.app.database - INFO - Yielding database session
2025-09-04 10:49:57,262 - prompt_manager.app.api.v1.endpoints.auth - INFO - Created access token for user: prishatank@gmail.com
2025-09-04 10:49:57,263 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 200 Time: 273.62ms
2025-09-04 10:49:57,263 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-04 10:49:57,263 - prompt_manager.app.database - INFO - Closing database session
2025-09-04 10:49:57,263 - prompt_manager.app.database - INFO - Database session closed
2025-09-04 10:49:57,319 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 10:49:57,319 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.31ms
2025-09-04 10:49:58,993 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 10:49:58,994 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.86ms
2025-09-04 10:52:43,698 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 10:52:43,702 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 4.02ms
2025-09-04 10:52:43,708 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/
2025-09-04 10:52:43,710 - prompt_manager.app.database - INFO - Creating new database session
2025-09-04 10:52:43,710 - prompt_manager.app.database - INFO - Yielding database session
2025-09-04 10:52:43,711 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-04 10:52:43,711 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-04 10:52:43,711 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-04 10:52:43,711 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-04 10:52:43,711 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-04 10:52:43,714 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-04 10:52:43,714 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-05 05:19:57+00:00 (UTC)
2025-09-04 10:52:43,714 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-04 10:52:43,714 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-04 10:52:43,718 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-04 10:52:43,720 - prompt_manager.app.api.v1.api - INFO - Creating new prompt: fitness_coach version 1.0.0
2025-09-04 10:52:43,732 - prompt_manager.app.api.v1.api - INFO - Successfully created prompt fitness_coach v1.0.0 (ID: 11)
2025-09-04 10:52:43,732 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/ Status: 201 Time: 24.24ms
2025-09-04 10:52:43,733 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-04 10:52:43,733 - prompt_manager.app.database - INFO - Closing database session
2025-09-04 10:52:43,733 - prompt_manager.app.database - INFO - Database session closed
2025-09-04 10:53:50,125 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 10:53:50,128 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 2.56ms
2025-09-04 10:53:50,133 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/?skip=0&limit=10
2025-09-04 10:53:50,134 - prompt_manager.app.database - INFO - Creating new database session
2025-09-04 10:53:50,134 - prompt_manager.app.database - INFO - Yielding database session
2025-09-04 10:53:50,134 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-04 10:53:50,134 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-04 10:53:50,134 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-04 10:53:50,134 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-04 10:53:50,134 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-04 10:53:50,134 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-04 10:53:50,135 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-05 05:19:57+00:00 (UTC)
2025-09-04 10:53:50,135 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-04 10:53:50,135 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-04 10:53:50,136 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-04 10:53:50,137 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-04 10:53:50,138 - prompt_manager.app.api.v1.api - INFO - Found 10 prompts out of 11 total
2025-09-04 10:53:50,139 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/?skip=0&limit=10 Status: 200 Time: 5.6ms
2025-09-04 10:53:50,139 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-04 10:53:50,140 - prompt_manager.app.database - INFO - Closing database session
2025-09-04 10:53:50,140 - prompt_manager.app.database - INFO - Database session closed
2025-09-04 10:53:56,583 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 10:53:56,585 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.6ms
2025-09-04 10:53:57,656 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 10:53:57,657 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.93ms
2025-09-04 10:53:57,663 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/?skip=0&limit=10&status=active
2025-09-04 10:53:57,663 - prompt_manager.app.database - INFO - Creating new database session
2025-09-04 10:53:57,664 - prompt_manager.app.database - INFO - Yielding database session
2025-09-04 10:53:57,664 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-04 10:53:57,664 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-04 10:53:57,664 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-04 10:53:57,664 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-04 10:53:57,664 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-04 10:53:57,664 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-04 10:53:57,664 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-05 05:19:57+00:00 (UTC)
2025-09-04 10:53:57,664 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-04 10:53:57,664 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-04 10:53:57,664 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-04 10:53:57,664 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=PromptStatus.ACTIVE, tag=None
2025-09-04 10:53:57,667 - prompt_manager.app.api.v1.api - INFO - Found 5 prompts out of 5 total
2025-09-04 10:53:57,667 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/?skip=0&limit=10&status=active Status: 200 Time: 4.32ms
2025-09-04 10:53:57,668 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-04 10:53:57,668 - prompt_manager.app.database - INFO - Closing database session
2025-09-04 10:53:57,668 - prompt_manager.app.database - INFO - Database session closed
2025-09-04 10:54:24,300 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 10:54:24,302 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 2.1ms
2025-09-04 10:55:00,565 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 10:55:00,567 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.13ms
2025-09-04 10:55:00,572 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-04 10:55:00,573 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.4ms
2025-09-04 10:55:00,574 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-04 10:55:00,576 - prompt_manager.app.database - INFO - Creating new database session
2025-09-04 10:55:00,576 - prompt_manager.app.database - INFO - Yielding database session
2025-09-04 10:55:00,576 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-04 10:55:00,577 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-04 10:55:00,577 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-04 10:55:00,577 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-04 10:55:00,577 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-04 10:55:00,579 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-04 10:55:00,579 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-05 05:19:57+00:00 (UTC)
2025-09-04 10:55:00,579 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-04 10:55:00,579 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-04 10:55:00,586 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-04 10:55:00,586 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-04 10:55:00,590 - prompt_manager.app.api.v1.api - INFO - Found 11 prompts out of 11 total
2025-09-04 10:55:00,591 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 16.93ms
2025-09-04 10:55:00,591 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-04 10:55:00,591 - prompt_manager.app.database - INFO - Closing database session
2025-09-04 10:55:00,591 - prompt_manager.app.database - INFO - Database session closed
2025-09-04 10:55:05,286 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 10:55:05,286 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.71ms
2025-09-04 10:55:05,292 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-04 10:55:05,292 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.37ms
2025-09-04 10:55:05,294 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-04 10:55:05,294 - prompt_manager.app.database - INFO - Creating new database session
2025-09-04 10:55:05,294 - prompt_manager.app.database - INFO - Yielding database session
2025-09-04 10:55:05,295 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-04 10:55:05,295 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-04 10:55:05,295 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-04 10:55:05,295 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-04 10:55:05,295 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-04 10:55:05,295 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-04 10:55:05,295 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-05 05:19:57+00:00 (UTC)
2025-09-04 10:55:05,295 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-04 10:55:05,295 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-04 10:55:05,296 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-04 10:55:05,296 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-04 10:55:05,298 - prompt_manager.app.api.v1.api - INFO - Found 11 prompts out of 11 total
2025-09-04 10:55:05,299 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 5.23ms
2025-09-04 10:55:05,299 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-04 10:55:05,300 - prompt_manager.app.database - INFO - Closing database session
2025-09-04 10:55:05,300 - prompt_manager.app.database - INFO - Database session closed
2025-09-04 10:55:09,687 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 10:55:09,688 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.76ms
2025-09-04 10:55:09,695 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-04 10:55:09,695 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.56ms
2025-09-04 10:55:09,697 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-04 10:55:09,698 - prompt_manager.app.database - INFO - Creating new database session
2025-09-04 10:55:09,698 - prompt_manager.app.database - INFO - Yielding database session
2025-09-04 10:55:09,698 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-04 10:55:09,699 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-04 10:55:09,699 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-04 10:55:09,699 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-04 10:55:09,699 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-04 10:55:09,700 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-04 10:55:09,700 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-05 05:19:57+00:00 (UTC)
2025-09-04 10:55:09,700 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-04 10:55:09,700 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-04 10:55:09,701 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-04 10:55:09,701 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-04 10:55:09,703 - prompt_manager.app.api.v1.api - INFO - Found 11 prompts out of 11 total
2025-09-04 10:55:09,703 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 6.43ms
2025-09-04 10:55:09,704 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-04 10:55:09,704 - prompt_manager.app.database - INFO - Closing database session
2025-09-04 10:55:09,704 - prompt_manager.app.database - INFO - Database session closed
2025-09-04 10:55:10,381 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 10:55:10,381 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.71ms
2025-09-04 10:55:10,385 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-04 10:55:10,386 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.43ms
2025-09-04 10:55:10,387 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-04 10:55:10,389 - prompt_manager.app.database - INFO - Creating new database session
2025-09-04 10:55:10,389 - prompt_manager.app.database - INFO - Yielding database session
2025-09-04 10:55:10,389 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-04 10:55:10,390 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-04 10:55:10,390 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-04 10:55:10,390 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-04 10:55:10,390 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-04 10:55:10,390 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-04 10:55:10,390 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-05 05:19:57+00:00 (UTC)
2025-09-04 10:55:10,390 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-04 10:55:10,390 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-04 10:55:10,390 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-04 10:55:10,391 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-04 10:55:10,406 - prompt_manager.app.api.v1.api - INFO - Found 11 prompts out of 11 total
2025-09-04 10:55:10,408 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 20.19ms
2025-09-04 10:55:10,408 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-04 10:55:10,408 - prompt_manager.app.database - INFO - Closing database session
2025-09-04 10:55:10,408 - prompt_manager.app.database - INFO - Database session closed
2025-09-04 10:55:10,411 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/name/fitness_coach/version/1.0.0/activate?updated_by=system@example.com
2025-09-04 10:55:10,412 - prompt_manager.app.database - INFO - Creating new database session
2025-09-04 10:55:10,412 - prompt_manager.app.database - INFO - Yielding database session
2025-09-04 10:55:10,412 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-04 10:55:10,412 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-04 10:55:10,412 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-04 10:55:10,412 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-04 10:55:10,412 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-04 10:55:10,412 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-04 10:55:10,413 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-05 05:19:57+00:00 (UTC)
2025-09-04 10:55:10,413 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-04 10:55:10,413 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-04 10:55:10,413 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-04 10:55:10,413 - prompt_manager.app.api.v1.api - INFO - Setting active version for prompt 'fitness_coach' to version 1.0.0 (user: prishatank@gmail.com)
2025-09-04 10:55:10,414 - prompt_manager.app.api.v1.api - INFO - Setting prompt 'fitness_coach' version 1.0.0 as live version
2025-09-04 10:55:10,421 - prompt_manager.app.api.v1.api - INFO - Successfully set prompt 'fitness_coach' version 1.0.0 as live version
2025-09-04 10:55:10,422 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/name/fitness_coach/version/1.0.0/activate?updated_by=system@example.com Status: 200 Time: 10.85ms
2025-09-04 10:55:10,423 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-04 10:55:10,423 - prompt_manager.app.database - INFO - Closing database session
2025-09-04 10:55:10,423 - prompt_manager.app.database - INFO - Database session closed
2025-09-04 10:55:10,461 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 10:55:10,462 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.35ms
2025-09-04 10:55:10,465 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts
2025-09-04 10:55:10,465 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts Status: 307 Time: 0.29ms
2025-09-04 10:55:10,466 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/
2025-09-04 10:55:10,510 - prompt_manager.app.database - INFO - Creating new database session
2025-09-04 10:55:10,510 - prompt_manager.app.database - INFO - Yielding database session
2025-09-04 10:55:10,510 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-04 10:55:10,510 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-04 10:55:10,510 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-04 10:55:10,510 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-04 10:55:10,510 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-04 10:55:10,511 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-04 10:55:10,511 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-05 05:19:57+00:00 (UTC)
2025-09-04 10:55:10,511 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-04 10:55:10,511 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-04 10:55:10,511 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-04 10:55:10,511 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=None, tag=None
2025-09-04 10:55:10,512 - prompt_manager.app.api.v1.api - INFO - Found 11 prompts out of 11 total
2025-09-04 10:55:10,512 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/ Status: 200 Time: 46.24ms
2025-09-04 10:55:10,513 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-04 10:55:10,513 - prompt_manager.app.database - INFO - Closing database session
2025-09-04 10:55:10,513 - prompt_manager.app.database - INFO - Database session closed
2025-09-04 10:55:17,730 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 10:55:17,731 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.7ms
2025-09-04 10:55:24,294 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 10:55:24,296 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.36ms
2025-09-04 10:55:24,383 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 10:55:24,383 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.48ms
2025-09-04 10:55:24,391 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/6
2025-09-04 10:55:24,391 - prompt_manager.app.database - INFO - Creating new database session
2025-09-04 10:55:24,391 - prompt_manager.app.database - INFO - Yielding database session
2025-09-04 10:55:24,391 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-04 10:55:24,391 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-04 10:55:24,391 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-04 10:55:24,391 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-04 10:55:24,391 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-04 10:55:24,391 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-04 10:55:24,391 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-05 05:19:57+00:00 (UTC)
2025-09-04 10:55:24,391 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-04 10:55:24,391 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-04 10:55:24,392 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-04 10:55:24,392 - prompt_manager.app.api.v1.api - INFO - Retrieving prompt with ID: 6
2025-09-04 10:55:24,393 - prompt_manager.app.api.v1.api - INFO - Successfully retrieved prompt healthcare_advisor v1.0.0 (ID: 6)
2025-09-04 10:55:24,393 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/6 Status: 200 Time: 2.57ms
2025-09-04 10:55:24,394 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-04 10:55:24,394 - prompt_manager.app.database - INFO - Closing database session
2025-09-04 10:55:24,394 - prompt_manager.app.database - INFO - Database session closed
2025-09-04 10:55:41,480 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 10:55:41,481 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.73ms
2025-09-04 10:55:41,563 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 10:55:41,563 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.58ms
2025-09-04 10:55:41,570 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/6/update-version
2025-09-04 10:55:41,570 - prompt_manager.app.database - INFO - Creating new database session
2025-09-04 10:55:41,570 - prompt_manager.app.database - INFO - Yielding database session
2025-09-04 10:55:41,570 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-04 10:55:41,570 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-04 10:55:41,570 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-04 10:55:41,570 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-04 10:55:41,570 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-04 10:55:41,571 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-04 10:55:41,571 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-05 05:19:57+00:00 (UTC)
2025-09-04 10:55:41,571 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-04 10:55:41,571 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-04 10:55:41,571 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-04 10:55:41,571 - prompt_manager.app.api.v1.api - INFO - Auto-updating prompt ID 6 (user: prishatank@gmail.com)
2025-09-04 10:55:41,580 - prompt_manager.app.api.v1.api - INFO - Successfully auto-incremented version to '1.0.2' for prompt 'healthcare_advisor'
2025-09-04 10:55:41,581 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/6/update-version Status: 200 Time: 11.05ms
2025-09-04 10:55:41,581 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-04 10:55:41,581 - prompt_manager.app.database - INFO - Closing database session
2025-09-04 10:55:41,581 - prompt_manager.app.database - INFO - Database session closed
2025-09-04 10:56:08,559 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 10:56:08,562 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 2.64ms
2025-09-04 10:56:09,245 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 10:56:09,247 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.23ms
2025-09-04 10:56:09,253 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/api/v1/prompts/?status=active
2025-09-04 10:56:09,253 - prompt_manager.app.database - INFO - Creating new database session
2025-09-04 10:56:09,253 - prompt_manager.app.database - INFO - Yielding database session
2025-09-04 10:56:09,253 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-04 10:56:09,253 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-04 10:56:09,253 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-04 10:56:09,253 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-04 10:56:09,253 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-04 10:56:09,254 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-04 10:56:09,254 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-05 05:19:57+00:00 (UTC)
2025-09-04 10:56:09,254 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-04 10:56:09,254 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-04 10:56:09,254 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-04 10:56:09,254 - prompt_manager.app.api.v1.api - INFO - Searching prompts with filters: query=None, status=PromptStatus.ACTIVE, tag=None
2025-09-04 10:56:09,255 - prompt_manager.app.api.v1.api - INFO - Found 6 prompts out of 6 total
2025-09-04 10:56:09,256 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/api/v1/prompts/?status=active Status: 200 Time: 2.99ms
2025-09-04 10:56:09,256 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-04 10:56:09,256 - prompt_manager.app.database - INFO - Closing database session
2025-09-04 10:56:09,256 - prompt_manager.app.database - INFO - Database session closed
2025-09-04 10:56:28,179 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 10:56:28,180 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.62ms
2025-09-04 10:56:28,267 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 10:56:28,268 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.56ms
2025-09-04 10:56:28,274 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/test-persona
2025-09-04 10:56:28,275 - prompt_manager.app.database - INFO - Creating new database session
2025-09-04 10:56:28,275 - prompt_manager.app.database - INFO - Yielding database session
2025-09-04 10:56:28,276 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-04 10:56:28,276 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-04 10:56:28,276 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-04 10:56:28,276 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-04 10:56:28,276 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-04 10:56:28,276 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-04 10:56:28,276 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-05 05:19:57+00:00 (UTC)
2025-09-04 10:56:28,276 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-04 10:56:28,276 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-04 10:56:28,277 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-04 10:56:28,277 - prompt_manager.app.api.v1.api - INFO - Testing persona with automatic prompt selection (user: prishatank@gmail.com)
2025-09-04 10:56:28,278 - prompt_manager.app.crud.crud - INFO - Finding most relevant prompt for input: Write me a code for palindrome. 
2025-09-04 10:56:28,279 - prompt_manager.app.crud.crud - INFO - Found 6 active prompts in the database
2025-09-04 10:56:28,279 - prompt_manager.app.crud.crud - INFO - Active prompt 1: ID=2, Name=coding_assistant, Status=active, is_active=True
2025-09-04 10:56:28,279 - prompt_manager.app.crud.crud - INFO - Active prompt 2: ID=5, Name=cooking_assistant, Status=active, is_active=True
2025-09-04 10:56:28,279 - prompt_manager.app.crud.crud - INFO - Active prompt 3: ID=7, Name=healthcare_advisor, Status=active, is_active=True
2025-09-04 10:56:28,279 - prompt_manager.app.crud.crud - INFO - Active prompt 4: ID=8, Name=math_tutor , Status=active, is_active=True
2025-09-04 10:56:28,279 - prompt_manager.app.crud.crud - INFO - Active prompt 5: ID=10, Name=travel_planner, Status=active, is_active=True
2025-09-04 10:56:28,279 - prompt_manager.app.crud.crud - INFO - Active prompt 6: ID=11, Name=fitness_coach, Status=active, is_active=True
2025-09-04 10:56:28,279 - prompt_manager.app.crud.crud - INFO - Sending 6 prompts to LLM for analysis
2025-09-04 10:56:28,279 - prompt_manager.app.crud.crud - INFO - Initializing GROQ client...
2025-09-04 10:56:28,309 - prompt_manager.app.crud.crud - INFO - Sending request to GROQ API...
2025-09-04 10:56:29,417 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-04 10:56:29,425 - prompt_manager.app.crud.crud - INFO - Received response from GROQ API
2025-09-04 10:56:29,425 - prompt_manager.app.crud.crud - INFO - LLM raw response: 11 for input: Write me a code for palindrome. 
2025-09-04 10:56:29,425 - prompt_manager.app.crud.crud - INFO - Extracted prompt ID: 11
2025-09-04 10:56:29,426 - prompt_manager.app.crud.crud - INFO - Valid active prompt found: ID=11, Name=fitness_coach
2025-09-04 10:56:29,426 - prompt_manager.app.api.v1.api - INFO - Testing persona for prompt ID 11 (user: prishatank@gmail.com)
2025-09-04 10:56:30,248 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-04 10:56:30,255 - prompt_manager.app.api.v1.api - INFO - Generated persona response for prompt 'fitness_coach' with persona type 'dynamic_persona'
2025-09-04 10:56:30,255 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/test-persona Status: 200 Time: 1981.12ms
2025-09-04 10:56:30,256 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-04 10:56:30,256 - prompt_manager.app.database - INFO - Closing database session
2025-09-04 10:56:30,256 - prompt_manager.app.database - INFO - Database session closed
2025-09-04 10:56:54,063 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 10:56:54,063 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.62ms
2025-09-04 10:56:56,143 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 10:56:56,144 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.63ms
2025-09-04 10:56:56,156 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/test-persona
2025-09-04 10:56:56,157 - prompt_manager.app.database - INFO - Creating new database session
2025-09-04 10:56:56,157 - prompt_manager.app.database - INFO - Yielding database session
2025-09-04 10:56:56,157 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-04 10:56:56,158 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-04 10:56:56,158 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-04 10:56:56,158 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-04 10:56:56,158 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-04 10:56:56,158 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-04 10:56:56,158 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-05 05:19:57+00:00 (UTC)
2025-09-04 10:56:56,158 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-04 10:56:56,158 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-04 10:56:56,159 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-04 10:56:56,159 - prompt_manager.app.api.v1.api - INFO - Testing persona with automatic prompt selection (user: prishatank@gmail.com)
2025-09-04 10:56:56,159 - prompt_manager.app.crud.crud - INFO - Finding most relevant prompt for input: Write me a code for palindrome, what can I do?
2025-09-04 10:56:56,159 - prompt_manager.app.crud.crud - INFO - Found 6 active prompts in the database
2025-09-04 10:56:56,159 - prompt_manager.app.crud.crud - INFO - Active prompt 1: ID=2, Name=coding_assistant, Status=active, is_active=True
2025-09-04 10:57:24,727 - prompt_manager.app.crud.crud - INFO - Active prompt 2: ID=5, Name=cooking_assistant, Status=active, is_active=True
2025-09-04 10:57:24,728 - prompt_manager.app.crud.crud - INFO - Active prompt 3: ID=7, Name=healthcare_advisor, Status=active, is_active=True
2025-09-04 10:57:24,728 - prompt_manager.app.crud.crud - INFO - Active prompt 4: ID=8, Name=math_tutor , Status=active, is_active=True
2025-09-04 10:57:24,728 - prompt_manager.app.crud.crud - INFO - Active prompt 5: ID=10, Name=travel_planner, Status=active, is_active=True
2025-09-04 10:57:24,728 - prompt_manager.app.crud.crud - INFO - Active prompt 6: ID=11, Name=fitness_coach, Status=active, is_active=True
2025-09-04 10:57:24,728 - prompt_manager.app.crud.crud - INFO - Sending 6 prompts to LLM for analysis
2025-09-04 10:57:24,728 - prompt_manager.app.crud.crud - INFO - Initializing GROQ client...
2025-09-04 10:57:24,750 - prompt_manager.app.crud.crud - INFO - Sending request to GROQ API...
2025-09-04 10:57:25,753 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-04 10:57:25,760 - prompt_manager.app.crud.crud - INFO - Received response from GROQ API
2025-09-04 10:57:25,760 - prompt_manager.app.crud.crud - INFO - LLM raw response: 11 for input: Write me a code for palindrome, what can I do?
2025-09-04 10:57:25,761 - prompt_manager.app.crud.crud - INFO - Extracted prompt ID: 11
2025-09-04 10:57:25,762 - prompt_manager.app.crud.crud - INFO - Valid active prompt found: ID=11, Name=fitness_coach
2025-09-04 10:57:25,763 - prompt_manager.app.api.v1.api - INFO - Testing persona for prompt ID 11 (user: prishatank@gmail.com)
2025-09-04 10:57:26,646 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-04 10:57:26,652 - prompt_manager.app.api.v1.api - INFO - Generated persona response for prompt 'fitness_coach' with persona type 'dynamic_persona'
2025-09-04 10:57:26,655 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/test-persona Status: 200 Time: 30498.84ms
2025-09-04 10:57:26,656 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-04 10:57:26,656 - prompt_manager.app.database - INFO - Closing database session
2025-09-04 10:57:26,656 - prompt_manager.app.database - INFO - Database session closed
2025-09-04 10:57:26,756 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-04 10:57:51,099 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-04 10:57:51,099 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-04 10:57:51,099 - prompt_manager.app.main - INFO - Database URL: sqlite:////Users/prisha/Desktop/Coding/system prompt/prompts.db
2025-09-04 10:57:54,645 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 10:57:54,647 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.85ms
2025-09-04 10:58:10,192 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 10:58:10,193 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.05ms
2025-09-04 10:58:10,198 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/auth/token
2025-09-04 10:58:10,199 - prompt_manager.app.database - INFO - Creating new database session
2025-09-04 10:58:10,199 - prompt_manager.app.database - INFO - Yielding database session
2025-09-04 10:58:10,501 - prompt_manager.app.api.v1.endpoints.auth - INFO - Created access token for user: prishatank@gmail.com
2025-09-04 10:58:10,506 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/auth/token Status: 200 Time: 307.6ms
2025-09-04 10:58:10,506 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-04 10:58:10,506 - prompt_manager.app.database - INFO - Closing database session
2025-09-04 10:58:10,506 - prompt_manager.app.database - INFO - Database session closed
2025-09-04 10:58:10,532 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 10:58:10,532 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.29ms
2025-09-04 10:58:12,196 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 10:58:12,197 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.74ms
2025-09-04 10:59:04,960 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 10:59:04,965 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 4.69ms
2025-09-04 10:59:06,945 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 10:59:06,946 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.77ms
2025-09-04 10:59:06,964 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/test-persona
2025-09-04 10:59:06,967 - prompt_manager.app.database - INFO - Creating new database session
2025-09-04 10:59:06,968 - prompt_manager.app.database - INFO - Yielding database session
2025-09-04 10:59:06,968 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-04 10:59:06,968 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-04 10:59:06,968 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-04 10:59:06,968 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-04 10:59:06,968 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-04 10:59:06,970 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-04 10:59:06,970 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-05 05:28:10+00:00 (UTC)
2025-09-04 10:59:06,970 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-04 10:59:06,970 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-04 10:59:06,974 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-04 10:59:06,975 - prompt_manager.app.api.v1.api - INFO - Testing persona with automatic prompt selection (user: prishatank@gmail.com)
2025-09-04 10:59:06,975 - prompt_manager.app.crud.crud - INFO - Finding most relevant prompt for input: I want to bake a cake, help me.
2025-09-04 10:59:06,981 - prompt_manager.app.crud.crud - INFO - Found 6 active prompts in the database
2025-09-04 10:59:06,981 - prompt_manager.app.crud.crud - INFO - Active prompt 1: ID=2, Name=coding_assistant, Status=active, is_active=True
2025-09-04 10:59:06,981 - prompt_manager.app.crud.crud - INFO - Active prompt 2: ID=5, Name=cooking_assistant, Status=active, is_active=True
2025-09-04 10:59:06,981 - prompt_manager.app.crud.crud - INFO - Active prompt 3: ID=7, Name=healthcare_advisor, Status=active, is_active=True
2025-09-04 10:59:06,981 - prompt_manager.app.crud.crud - INFO - Active prompt 4: ID=8, Name=math_tutor , Status=active, is_active=True
2025-09-04 10:59:06,981 - prompt_manager.app.crud.crud - INFO - Active prompt 5: ID=10, Name=travel_planner, Status=active, is_active=True
2025-09-04 10:59:06,981 - prompt_manager.app.crud.crud - INFO - Active prompt 6: ID=11, Name=fitness_coach, Status=active, is_active=True
2025-09-04 10:59:06,981 - prompt_manager.app.crud.crud - INFO - Sending 6 prompts to LLM for analysis
2025-09-04 10:59:06,981 - prompt_manager.app.crud.crud - INFO - Initializing GROQ client...
2025-09-04 10:59:07,017 - prompt_manager.app.crud.crud - INFO - Sending request to GROQ API...
2025-09-04 10:59:08,191 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-04 10:59:08,202 - prompt_manager.app.crud.crud - INFO - Received response from GROQ API
2025-09-04 10:59:08,202 - prompt_manager.app.crud.crud - INFO - LLM raw response: 5 for input: I want to bake a cake, help me.
2025-09-04 10:59:08,203 - prompt_manager.app.crud.crud - INFO - Extracted prompt ID: 5
2025-09-04 10:59:08,206 - prompt_manager.app.crud.crud - INFO - Valid active prompt found: ID=5, Name=cooking_assistant
2025-09-04 10:59:08,208 - prompt_manager.app.api.v1.api - INFO - Testing persona for prompt ID 5 (user: prishatank@gmail.com)
2025-09-04 10:59:09,218 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-04 10:59:09,223 - prompt_manager.app.api.v1.api - INFO - Generated persona response for prompt 'cooking_assistant' with persona type 'dynamic_persona'
2025-09-04 10:59:09,224 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/test-persona Status: 200 Time: 2259.96ms
2025-09-04 10:59:09,225 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-04 10:59:09,225 - prompt_manager.app.database - INFO - Closing database session
2025-09-04 10:59:09,226 - prompt_manager.app.database - INFO - Database session closed
2025-09-04 11:04:07,863 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 11:04:07,866 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 11:04:07,867 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 3.87ms
2025-09-04 11:04:07,867 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 1.07ms
2025-09-04 11:04:07,928 - prompt_manager.app.main - INFO - Request: POST http://localhost:8000/api/v1/prompts/test-persona
2025-09-04 11:04:07,930 - prompt_manager.app.database - INFO - Creating new database session
2025-09-04 11:04:07,930 - prompt_manager.app.database - INFO - Yielding database session
2025-09-04 11:04:07,930 - prompt_manager.app.core.security - INFO - Starting get_current_user function
2025-09-04 11:04:07,930 - prompt_manager.app.core.security - INFO - Validating token for scopes: []
2025-09-04 11:04:07,930 - prompt_manager.app.core.security - INFO - Token received (first 10 chars): eyJhbGciOi...
2025-09-04 11:04:07,930 - prompt_manager.app.core.security - INFO - Using SECRET_KEY: your-...-here
2025-09-04 11:04:07,930 - prompt_manager.app.core.security - INFO - Using ALGORITHM: HS256
2025-09-04 11:04:07,931 - prompt_manager.app.core.security - INFO - Token successfully verified with basic validation
2025-09-04 11:04:07,931 - prompt_manager.app.core.security - INFO - Token expires at: 2025-09-05 05:28:10+00:00 (UTC)
2025-09-04 11:04:07,931 - prompt_manager.app.core.security - INFO - Token scopes: ['me']
2025-09-04 11:04:07,931 - prompt_manager.app.core.security - INFO - Looking up user with email: prishatank@gmail.com
2025-09-04 11:04:07,935 - prompt_manager.app.core.security - INFO - Found user: prishatank@gmail.com (ID: 1)
2025-09-04 11:04:07,935 - prompt_manager.app.api.v1.api - INFO - Testing persona with automatic prompt selection (user: prishatank@gmail.com)
2025-09-04 11:04:07,935 - prompt_manager.app.crud.crud - INFO - Finding most relevant prompt for input: I want a fitness routine to lose weight. Help me.
2025-09-04 11:04:07,937 - prompt_manager.app.crud.crud - INFO - Found 6 active prompts in the database
2025-09-04 11:04:07,937 - prompt_manager.app.crud.crud - INFO - Active prompt 1: ID=2, Name=coding_assistant, Status=active, is_active=True
2025-09-04 11:04:07,937 - prompt_manager.app.crud.crud - INFO - Active prompt 2: ID=5, Name=cooking_assistant, Status=active, is_active=True
2025-09-04 11:04:07,937 - prompt_manager.app.crud.crud - INFO - Active prompt 3: ID=7, Name=healthcare_advisor, Status=active, is_active=True
2025-09-04 11:04:07,937 - prompt_manager.app.crud.crud - INFO - Active prompt 4: ID=8, Name=math_tutor , Status=active, is_active=True
2025-09-04 11:04:07,937 - prompt_manager.app.crud.crud - INFO - Active prompt 5: ID=10, Name=travel_planner, Status=active, is_active=True
2025-09-04 11:04:07,937 - prompt_manager.app.crud.crud - INFO - Active prompt 6: ID=11, Name=fitness_coach, Status=active, is_active=True
2025-09-04 11:04:07,937 - prompt_manager.app.crud.crud - INFO - Sending 6 prompts to LLM for analysis
2025-09-04 11:04:07,937 - prompt_manager.app.crud.crud - INFO - Initializing GROQ client...
2025-09-04 11:04:07,957 - prompt_manager.app.crud.crud - INFO - Sending request to GROQ API...
2025-09-04 11:04:08,390 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-04 11:04:08,398 - prompt_manager.app.crud.crud - INFO - Received response from GROQ API
2025-09-04 11:04:08,398 - prompt_manager.app.crud.crud - INFO - LLM raw response: 11 for input: I want a fitness routine to lose weight. Help me.
2025-09-04 11:04:08,398 - prompt_manager.app.crud.crud - INFO - Extracted prompt ID: 11
2025-09-04 11:04:08,399 - prompt_manager.app.crud.crud - INFO - Valid active prompt found: ID=11, Name=fitness_coach
2025-09-04 11:04:08,399 - prompt_manager.app.api.v1.api - INFO - Testing persona for prompt ID 11 (user: prishatank@gmail.com)
2025-09-04 11:04:09,513 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-04 11:04:09,520 - prompt_manager.app.api.v1.api - INFO - Generated persona response for prompt 'fitness_coach' with persona type 'dynamic_persona'
2025-09-04 11:04:09,521 - prompt_manager.app.main - INFO - Response: POST http://localhost:8000/api/v1/prompts/test-persona Status: 200 Time: 1592.38ms
2025-09-04 11:04:09,522 - prompt_manager.app.database - INFO - Database session usage completed
2025-09-04 11:04:09,522 - prompt_manager.app.database - INFO - Closing database session
2025-09-04 11:04:09,522 - prompt_manager.app.database - INFO - Database session closed
2025-09-04 12:37:41,035 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
2025-09-04 12:37:42,276 - prompt_manager.app.main - INFO - Starting Prompt Management Service...
2025-09-04 12:37:42,276 - prompt_manager.app.main - INFO - Log level: INFO
2025-09-04 12:37:42,276 - prompt_manager.app.main - INFO - Database URL: sqlite:////Users/prisha/Desktop/Coding/system prompt/prompts.db
2025-09-04 12:37:48,064 - prompt_manager.app.main - INFO - Request: GET http://localhost:8000/health
2025-09-04 12:37:48,065 - prompt_manager.app.main - INFO - Response: GET http://localhost:8000/health Status: 200 Time: 0.89ms
2025-09-04 12:37:58,457 - prompt_manager.app.main - INFO - Shutting down Prompt Management Service...
