"""Sync database schema with models

Revision ID: 62784de296ff
Revises: 
Create Date: 2025-08-30 00:19:27.774958

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision: str = '62784de296ff'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_users_email', table_name='users')
    op.drop_index('ix_users_id', table_name='users')
    op.drop_table('users')
    op.drop_index('ix_prompt_history_id', table_name='prompt_history')
    op.drop_index('ix_prompt_history_prompt_id', table_name='prompt_history')
    op.drop_table('prompt_history')
    op.drop_index('ix_prompts_created_at', table_name='prompts')
    op.drop_index('ix_prompts_id', table_name='prompts')
    op.drop_index('ix_prompts_is_active', table_name='prompts')
    op.drop_index('ix_prompts_name', table_name='prompts')
    op.drop_index('ix_prompts_status', table_name='prompts')
    op.drop_index('ix_prompts_version', table_name='prompts')
    op.drop_table('prompts')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('prompts',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), nullable=False),
    sa.Column('version', sa.VARCHAR(length=50), nullable=False),
    sa.Column('content', sa.TEXT(), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.Column('created_by', sa.VARCHAR(length=255), nullable=False),
    sa.Column('status', sa.VARCHAR(length=10), nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), nullable=True),
    sa.Column('tags', sqlite.JSON(), nullable=True),
    sa.Column('metadata', sqlite.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_prompts_version', 'prompts', ['version'], unique=False)
    op.create_index('ix_prompts_status', 'prompts', ['status'], unique=False)
    op.create_index('ix_prompts_name', 'prompts', ['name'], unique=False)
    op.create_index('ix_prompts_is_active', 'prompts', ['is_active'], unique=False)
    op.create_index('ix_prompts_id', 'prompts', ['id'], unique=False)
    op.create_index('ix_prompts_created_at', 'prompts', ['created_at'], unique=False)
    op.create_table('prompt_history',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('prompt_id', sa.INTEGER(), nullable=False),
    sa.Column('version', sa.VARCHAR(length=50), nullable=False),
    sa.Column('changed_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('changed_by', sa.VARCHAR(length=255), nullable=False),
    sa.Column('action', sa.VARCHAR(length=50), nullable=False),
    sa.Column('changes', sqlite.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_prompt_history_prompt_id', 'prompt_history', ['prompt_id'], unique=False)
    op.create_index('ix_prompt_history_id', 'prompt_history', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('email', sa.VARCHAR(), nullable=False),
    sa.Column('hashed_password', sa.VARCHAR(), nullable=False),
    sa.Column('full_name', sa.VARCHAR(), nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_users_id', 'users', ['id'], unique=False)
    op.create_index('ix_users_email', 'users', ['email'], unique=False)
    # ### end Alembic commands ###
